-- Test coverage for MPP-5028.
drop table if exists delete_as_trunc;
NOTICE:  table "delete_as_trunc" does not exist, skipping
create table delete_as_trunc (i int, j int) partition by range(j) (start(1) end(10) every(2), default partition def);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "delete_as_trunc_1_prt_def" for table "delete_as_trunc"
NOTICE:  CREATE TABLE will create partition "delete_as_trunc_1_prt_2" for table "delete_as_trunc"
NOTICE:  CREATE TABLE will create partition "delete_as_trunc_1_prt_3" for table "delete_as_trunc"
NOTICE:  CREATE TABLE will create partition "delete_as_trunc_1_prt_4" for table "delete_as_trunc"
NOTICE:  CREATE TABLE will create partition "delete_as_trunc_1_prt_5" for table "delete_as_trunc"
NOTICE:  CREATE TABLE will create partition "delete_as_trunc_1_prt_6" for table "delete_as_trunc"
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into delete_as_trunc select j, j from generate_series(1, 20) j;
select * from delete_as_trunc;
 i  | j  
----+----
 10 | 10
 12 | 12
 14 | 14
 16 | 16
 18 | 18
 20 | 20
  2 |  2
  4 |  4
  6 |  6
  8 |  8
 11 | 11
 13 | 13
 15 | 15
 17 | 17
 19 | 19
  1 |  1
  3 |  3
  5 |  5
  7 |  7
  9 |  9
(20 rows)

delete from delete_as_trunc where j >= 1 and j < 3;
select * from delete_as_trunc;
 i  | j  
----+----
 11 | 11
 13 | 13
 15 | 15
 17 | 17
 19 | 19
  3 |  3
  5 |  5
  7 |  7
  9 |  9
 10 | 10
 12 | 12
 14 | 14
 16 | 16
 18 | 18
 20 | 20
  4 |  4
  6 |  6
  8 |  8
(18 rows)

drop table if exists delete_as_trunc;
set gp_enable_delete_as_truncate to on;
create table delete_as_trunc (i int, j int) partition by range(j) (start(1) end(10) every(2), default partition def);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "delete_as_trunc_1_prt_def" for table "delete_as_trunc"
NOTICE:  CREATE TABLE will create partition "delete_as_trunc_1_prt_2" for table "delete_as_trunc"
NOTICE:  CREATE TABLE will create partition "delete_as_trunc_1_prt_3" for table "delete_as_trunc"
NOTICE:  CREATE TABLE will create partition "delete_as_trunc_1_prt_4" for table "delete_as_trunc"
NOTICE:  CREATE TABLE will create partition "delete_as_trunc_1_prt_5" for table "delete_as_trunc"
NOTICE:  CREATE TABLE will create partition "delete_as_trunc_1_prt_6" for table "delete_as_trunc"
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into delete_as_trunc select j, j from generate_series(1, 20) j;
select * from delete_as_trunc;
 i  | j  
----+----
 10 | 10
 12 | 12
 14 | 14
 16 | 16
 18 | 18
 20 | 20
  2 |  2
  4 |  4
  6 |  6
  8 |  8
 11 | 11
 13 | 13
 15 | 15
 17 | 17
 19 | 19
  1 |  1
  3 |  3
  5 |  5
  7 |  7
  9 |  9
(20 rows)

delete from delete_as_trunc where j >= 1 and j < 3;
select * from delete_as_trunc;
 i  | j  
----+----
 11 | 11
 13 | 13
 15 | 15
 17 | 17
 19 | 19
  3 |  3
  5 |  5
  7 |  7
  9 |  9
 10 | 10
 12 | 12
 14 | 14
 16 | 16
 18 | 18
 20 | 20
  4 |  4
  6 |  6
  8 |  8
(18 rows)

drop table if exists delete_as_trunc;
