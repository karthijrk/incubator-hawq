-- @description parquet insert vary pagesize/rowgroupsize 
-- @created 2013-08-09 20:33:16
-- @modified 2013-08-09 20:33:16
-- @tags HAWQ parquet
--start_ignore
drop table if exists pTable1;
NOTICE:  table "ptable1" does not exist, skipping
drop table if exists pTable3_from;
NOTICE:  table "ptable3_from" does not exist, skipping
drop table if exists pTable3_to;
NOTICE:  table "ptable3_to" does not exist, skipping
drop table if exists pTable4_from;
NOTICE:  table "ptable4_from" does not exist, skipping
drop table if exists pTable4_to;
NOTICE:  table "ptable4_to" does not exist, skipping
drop table if exists pTable5_from;
NOTICE:  table "ptable5_from" does not exist, skipping
drop table if exists pTable5_to;
NOTICE:  table "ptable5_to" does not exist, skipping
--end_ignore
--value/record size equal to pagesize/rowgroupsize
create table pTable1 (a1 char(10485760), a2 char(10485760), a3 char(10485760), a4 char(10485760), a5 char(10485760), a6 char(10485760), a7 char(10485760), a8 char(10485760), a9 char(10485760), a10 char(10485760)) with(appendonly=true, orientation=parquet, pagesize=10485760, rowgroupsize=104857600);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into pTable1 values ( ('a'::char(10485760)), ('a'::char(10485760)), ('a'::char(10485760)), ('a'::char(10485760)), ('a'::char(10485760)), ('a'::char(10485760)), ('a'::char(10485760)), ('a'::char(10485760)), ('a'::char(10485760)), ('a'::char(10485760)) );
ERROR:  value for column "a1" exceeds pagesize 10485760!  (seg0 mal10Mac:40000 pid=33557)
--single column, one data page contains several values, one rwo group contains several groups
create table pTable3_from ( a1 text ) with(appendonly=true, orientation=parquet);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into pTable3_from values(repeat('parquet',100));
insert into pTable3_from values(repeat('parquet',20));
insert into pTable3_from values(repeat('parquet',30));
create table pTable3_to ( a1 text ) with(appendonly=true, orientation=parquet, pagesize=1024, rowgroupsize=1025);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into pTable3_to select * from pTable3_from;
select count(*) from pTable3_to;
 count 
-------
     3
(1 row)

--multiple columns, multiple rows combination
create table pTable4_from ( a1 text , a2 text) with(appendonly=true, orientation=parquet);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into pTable4_from values(repeat('parquet',200), repeat('pq',200));
insert into pTable4_from values(repeat('parquet',50), repeat('pq',200));
create table pTable4_to ( a1 text, a2 text ) with(appendonly=true, orientation=parquet, pagesize=2048, rowgroupsize=4096);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into pTable4_to select * from pTable4_from;
select count(*) from pTable4_to;
 count 
-------
     2
(1 row)

--large data insert, several column values in one page, several rows in one rowgroup
create table pTable5_from (a1 char(1048576), a2 char(2048576), a3 char(3048576), a4 char(4048576), a5 char(5048576), a6 char(6048576), a7 char(7048576), a8 char(8048576), a9 char(9048576), a10 char(9)) with(appendonly=true, orientation=parquet, pagesize=10485760, rowgroupsize=90874386);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into pTable5_from values ( ('a'::char(1048576)), ('a'::char(2048576)), ('a'::char(3048576)), ('a'::char(4048576)), ('a'::char(5048576)), ('a'::char(6048576)), ('a'::char(7048576)), ('a'::char(8048576)), ('a'::char(9048576)), ('a'::char(9)) );
create table pTable5_to (a1 char(1048576), a2 char(2048576), a3 char(3048576), a4 char(4048576), a5 char(5048576), a6 char(6048576), a7 char(7048576), a8 char(8048576), a9 char(9048576), a10 char(9)) with(appendonly=true, orientation=parquet, pagesize=10485760, rowgroupsize=17437200);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into pTable5_to select * from pTable5_from;
select count(a10) from pTable5_to;
 count 
-------
     1
(1 row)

