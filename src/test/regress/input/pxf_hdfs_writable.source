--
-- PXF writable regression suite 
--
-- Prerequisites:
--
--   Must have a running hdfs with REST service on port 50070
--   Must have HADOOP_ROOT set.

-- start_matchsubs
--
-- # create a match/subs expression to handle ip addresses that change
--
-- m/(ERROR|WARNING):.*remote component error.*\(\d+\).*from.*'\d+\.\d+\.\d+\.\d+:\d+'.*/
-- s/'\d+\.\d+\.\d+\.\d+:\d+'/'SOME_IP:SOME_PORT'/
--
-- m/(remote component error \(0\): Failed connect to @hostname@:12345; Connection refused|remote component error \(0\): couldn't connect to host).*/
-- s/(Failed connect to @hostname@:12345; Connection refused|couldn't connect to host)/CURL_CON_ERROR/
--
-- end_matchsubs
-- start_matchignore
--
-- m/.*Unable to load native-hadoop library for your platform.*/
--
-- end_matchignore

--------------------------------------------------------------------------------
-- WRITABLE
--------------------------------------------------------------------------------
--
-- 0. syntax validations
--
CREATE WRITABLE EXTERNAL TABLE pxf_out(a int, b text, c bytea)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.AvroResolver&DATA-SCHEMA=MySchema')
FORMAT 'CUSTOM' (formatter='pxfwritable_import'); -- positive

CREATE WRITABLE EXTERNAL TABLE pxf_out1(a int, b text, c bytea)
LOCATION ('pxf://@hostname@:50070/somepath/gpdb_regression_data?someuseropt=someuserval')
FORMAT 'CUSTOM' (formatter='pxfwritable_import'); -- negative

CREATE WRITABLE EXTERNAL TABLE pxf_out2(a int, b text, c bytea)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/*')
FORMAT 'CUSTOM' (formatter='pxfwritable_import'); -- negative

DROP EXTERNAL TABLE pxf_out;

--
-- Load HDFS with test data
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -mkdir /gpdb_regression_data
--
-- 1. Test writable table with TEXT format 
--
CREATE WRITABLE EXTERNAL TABLE wrtext (s1 text, 
                               		   n1 int, 
							   		   n2 int)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrtext?PROFILE=HdfsTextSimple')
FORMAT 'TEXT' (DELIMITER ',');
INSERT INTO wrtext VALUES ('first',1,11), 
                          ('second',2,22);
INSERT INTO wrtext VALUES ('third',3,33),
                          ('fourth',4,44);
INSERT INTO wrtext VALUES ('fifth',5,55),
                          ('sixth',6,66);
INSERT INTO wrtext VALUES ('seventh',7,77),
                          ('eighth',8,88);
INSERT INTO wrtext VALUES ('ninth',9,99),
                          ('tenth',10,1010);
INSERT INTO wrtext VALUES ('eleventh',11,1111),
                          ('twelfth',12,1212);
INSERT INTO wrtext VALUES ('thirteenth',13,1313),
                          ('fourteenth',14,1414), 
                          ('fifteenth',15,1515);
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/wrtext | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/wrtext | awk '{ if ($1>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du /gpdb_regression_data/writable/wrtext | awk '{if ($1<=0) print $0,": error";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE readtext (s1 text, 
                               		     n1 int, 
							   		     n2 int)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrtext?PROFILE=HdfsTextSimple')
FORMAT 'TEXT' (DELIMITER ',');
SELECT * FROM readtext ORDER BY n1;
--
-- 1.1 Insert into writable table from read table
--
INSERT INTO wrtext SELECT * FROM readtext WHERE n1<=10;
INSERT INTO wrtext SELECT * FROM readtext WHERE n2<100;
SELECT * FROM readtext ORDER BY n1;
--
-- Cleanup
--
DROP EXTERNAL TABLE wrtext;
DROP EXTERNAL TABLE readtext;
--
-- 2. Test writable table with TEXT format - compressions
--
--
-- 2.1 Gzip compression
--
CREATE WRITABLE EXTERNAL TABLE wrgzip (s1 text, 
                               		   n1 int, 
							   		   n2 int)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrgzip?ACCESSOR=com.pivotal.pxf.plugins.hdfs.LineBreakAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.StringPassResolver&COMPRESSION_CODEC=org.apache.hadoop.io.compress.GzipCodec')
FORMAT 'TEXT' (DELIMITER ',');
COPY wrgzip FROM STDIN CSV;
I,1,11
am,2,22
Gzipped,3,33
I,1,11
am,2,22
Gzipped,3,33
I,1,11
am,2,22
Gzipped,3,33
I,1,11
am,2,22
Gzipped,3,33
I,1,11
am,2,22
Gzipped,3,33
I,1,11
am,2,22
Gzipped,3,33
\.
COPY wrgzip FROM STDIN DELIMITER ':';
OOF:4:44
OOF:5:55
\.
DROP EXTERNAL TABLE wrgzip;
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/wrgzip | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/wrgzip | awk '{ if ($1>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du /gpdb_regression_data/writable/wrgzip | awk '{if ($1<=0) print $0,": error";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE readgzip (s1 text, 
                               		     n1 int, 
							   		     n2 int)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrgzip?PROFILE=HdfsTextSimple')
FORMAT 'TEXT' (DELIMITER ',');
SELECT * FROM readgzip ORDER BY n1;
DROP EXTERNAL TABLE readgzip;

--
-- 2.2 Default compression (.deflate)
--
CREATE WRITABLE EXTERNAL TABLE wrdefault (s1 text, 
                               		      n1 int, 
							   		      n2 int)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrdefault?ACCESSOR=com.pivotal.pxf.plugins.hdfs.LineBreakAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.StringPassResolver&COMPRESSION_CODEC=org.apache.hadoop.io.compress.DefaultCodec')
FORMAT 'TEXT' (DELIMITER ',');
INSERT INTO wrdefault VALUES ('I',1,11), ('am',2,22), ('deflated',3,33);
DROP EXTERNAL TABLE wrdefault;
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/wrdefault | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/wrdefault | awk '{ if ($1>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du /gpdb_regression_data/writable/wrdefault | awk '{if ($1<=0) print $0,": error";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE readdefault (s1 text, 
                               		        n1 int, 
							   		        n2 int)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrdefault?PROFILE=HdfsTextSimple')
FORMAT 'TEXT' (DELIMITER ',');
SELECT * FROM readdefault ORDER BY n1;
DROP EXTERNAL TABLE readdefault;

--
-- 2.3 BZip2 compression
--
CREATE WRITABLE EXTERNAL TABLE wrbzip2 (s1 text, 
                               		    n1 int, 
							   		    n2 int)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrbzip2?PROFILE=HdfsTextSimple&COMPRESSION_CODEC=org.apache.hadoop.io.compress.BZip2Codec')
FORMAT 'TEXT' (DELIMITER ',');
CREATE TEMP TABLE data_for_bzip2 (s1 text,
                                  n1 int,
                                  n2 int);
INSERT INTO data_for_bzip2 VALUES ('I',1,10),
                                  (' ',2,20), 
                                  ('a',3,30),
                                  ('m',4,40),
                                  (' ',5,50),
                                  ('B',6,60),
                                  ('Z',7,70),
                                  ('i',8,80),
                                  ('p',9,90),
                                  ('2',10,100), 
                                  ('!!!',11,110);
INSERT INTO wrbzip2 SELECT * FROM data_for_bzip2;
DROP TABLE data_for_bzip2;
DROP EXTERNAL TABLE wrbzip2;
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/wrbzip2 | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/wrbzip2 | awk '{ if ($1>0) print "ok";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE readbzip2 (s1 text, 
                               		      n1 int, 
							   		      n2 int)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrbzip2?PROFILE=HdfsTextSimple')
FORMAT 'TEXT' (DELIMITER ',');
SELECT * FROM readbzip2 ORDER BY n1;

DROP EXTERNAL TABLE readbzip2;

--
-- 3. Test writable table with custom format into a sequence file
--

--
-- 3.0 Test sequence file - no compression
--
CREATE WRITABLE EXTERNAL TABLE wrseq (tmp1  timestamp, 
                                      num1  integer, 
                                      num2  integer, 
                                      num3  integer, 
                                      num4  integer,
                                      t1    text, 
                                      t2    text, 
                                      t3    text, 
                                      t4    text, 
                                      t5    text, 
                                      t6    text, 
                                      dub1  double precision, 
                                      dub2  double precision, 
                                      dub3  double precision, 
                                      ft1   real, 
                                      ft2   real, 
                                      ft3   real, 
                                      ln1   bigint, 
                                      ln2   bigint, 
                                      ln3   bigint, 
                                      bt    bytea,
                                      bool1 boolean,
							          bool2 boolean,
                                      bool3 boolean)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrcustom?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable')
FORMAT 'custom' (formatter='pxfwritable_export');
COPY wrseq FROM '@abs_srcdir@/data/pxf/customwritable_data.txt';
DROP EXTERNAL TABLE wrseq;
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/wrcustom | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/wrcustom | awk '{ if ($1>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du /gpdb_regression_data/writable/wrcustom | awk '{if ($1<=0) print $0,": error";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE readseq (tmp1  timestamp, 
                                        num1  integer, 
                                        num2  integer, 
                                        num3  integer, 
                                        num4  integer,
                                        t1    text, 
                                        t2    text, 
                                        t3    text, 
                                        t4    text, 
                                        t5    text, 
                                        t6    text, 
                                        dub1  double precision, 
                                        dub2  double precision, 
                                        dub3  double precision, 
                                        ft1   real, 
                                        ft2   real, 
                                        ft3   real, 
                                        ln1   bigint, 
                                        ln2   bigint, 
                                        ln3   bigint, 
                                        bt    bytea,
                                        bool1 boolean,
							            bool2 boolean,
                                        bool3 boolean)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrcustom?FRAGMENTER=com.pivotal.pxf.plugins.hdfs.HdfsDataFragmenter&ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable')
FORMAT 'custom' (formatter='pxfwritable_import');
SELECT * FROM readseq ORDER BY num1;
DROP EXTERNAL TABLE readseq;

-- start_ignore
--
-- 3.1 Test sequence file compression - gzip codec, no compression type
--
CREATE WRITABLE EXTERNAL TABLE wrseqgzip (tmp1  timestamp, 
                                          num1  integer, 
                                          num2  integer, 
                                          num3  integer, 
                                          num4  integer,
                                          t1    text, 
                                          t2    text, 
                                          t3    text, 
                                          t4    text, 
                                          t5    text, 
                                          t6    text, 
                                          dub1  double precision, 
                                          dub2  double precision, 
                                          dub3  double precision, 
                                          ft1   real, 
                                          ft2   real, 
                                          ft3   real, 
                                          ln1   bigint, 
                                          ln2   bigint, 
                                          ln3   bigint, 
                                          bt    bytea,
                                          bool1 boolean,
							              bool2 boolean,
                                          bool3 boolean)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrseqgzip?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable&COMPRESSION_CODEC=org.apache.hadoop.io.compress.GzipCodec')
FORMAT 'custom' (formatter='pxfwritable_export');
COPY wrseqgzip FROM '@abs_srcdir@/data/pxf/customwritable_data.txt';
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/wrseqgzip | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/wrseqgzip | awk '{ if ($1>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du /gpdb_regression_data/writable/wrseqgzip | awk '{if ($1<=0) print $0,": error";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE readseqgzip (LIKE wrseqgzip)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrseqgzip?FRAGMENTER=com.pivotal.pxf.plugins.hdfs.HdfsDataFragmenter&ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable')
FORMAT 'custom' (formatter='pxfwritable_import');
SELECT * FROM readseqgzip ORDER BY num1;
DROP EXTERNAL TABLE readseqgzip;
DROP EXTERNAL TABLE wrseqgzip;

--
-- 3.2 Test sequence file compression - gzip codec, record compression
--
CREATE WRITABLE EXTERNAL TABLE wrseqgziprecord (tmp1  timestamp, 
                                                num1  integer, 
                                                num2  integer, 
                                                num3  integer, 
                                                num4  integer,
                                                t1    text, 
                                                t2    text, 
                                                t3    text, 
                                                t4    text, 
                                                t5    text, 
                                                t6    text, 
                                                dub1  double precision, 
                                                dub2  double precision, 
                                                dub3  double precision, 
                                                ft1   real, 
                                                ft2   real, 
                                                ft3   real, 
                                                ln1   bigint, 
                                                ln2   bigint, 
                                                ln3   bigint, 
                                                bt    bytea,
                                                bool1 boolean,
							                    bool2 boolean,
                                                bool3 boolean)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrseqgziprecord?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable&COMPRESSION_CODEC=org.apache.hadoop.io.compress.GzipCodec&COMPRESSION_TYPE=RECORD')
FORMAT 'custom' (formatter='pxfwritable_export');
COPY wrseqgziprecord FROM '@abs_srcdir@/data/pxf/customwritable_data.txt';
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/wrseqgziprecord | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/wrseqgziprecord | awk '{ if ($1>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du /gpdb_regression_data/writable/wrseqgziprecord | awk '{if ($1<=0) print $0,": error";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE readseqgziprecord (LIKE wrseqgziprecord)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrseqgziprecord?FRAGMENTER=com.pivotal.pxf.plugins.hdfs.HdfsDataFragmenter&ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable')
FORMAT 'custom' (formatter='pxfwritable_import');
SELECT * FROM readseqgziprecord ORDER BY num1;
DROP EXTERNAL TABLE readseqgziprecord;
DROP EXTERNAL TABLE wrseqgziprecord;

--
-- 3.3 Test sequence file compression - gzip codec, block compression
--
CREATE WRITABLE EXTERNAL TABLE wrseqgzipblock (tmp1  timestamp, 
                                               num1  integer, 
                                               num2  integer, 
                                               num3  integer, 
                                               num4  integer,
                                               t1    text, 
                                               t2    text, 
                                               t3    text, 
                                               t4    text, 
                                               t5    text, 
                                               t6    text, 
                                               dub1  double precision, 
                                               dub2  double precision, 
                                               dub3  double precision, 
                                               ft1   real, 
                                               ft2   real, 
                                               ft3   real, 
                                               ln1   bigint, 
                                               ln2   bigint, 
                                               ln3   bigint, 
                                               bt    bytea,
                                               bool1 boolean,
							                   bool2 boolean,
                                               bool3 boolean)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrseqgzipblock?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable&COMPRESSION_CODEC=org.apache.hadoop.io.compress.GzipCodec&COMPRESSION_TYPE=BLOCK')
FORMAT 'custom' (formatter='pxfwritable_export');
COPY wrseqgzipblock FROM '@abs_srcdir@/data/pxf/customwritable_data.txt';
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/wrseqgzipblock | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/wrseqgzipblock | awk '{ if ($1>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du /gpdb_regression_data/writable/wrseqgzipblock | awk '{if ($1<=0) print $0,": error";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE readseqgzipblock (LIKE wrseqgzipblock)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrseqgzipblock?FRAGMENTER=com.pivotal.pxf.plugins.hdfs.HdfsDataFragmenter&ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable')
FORMAT 'custom' (formatter='pxfwritable_import');
SELECT * FROM readseqgzipblock ORDER BY num1;
DROP EXTERNAL TABLE readseqgzipblock;
DROP EXTERNAL TABLE wrseqgzipblock;
-- end_ignore

--
-- 3.4 Test sequence file compression - deflate codec, no compression type
--
CREATE WRITABLE EXTERNAL TABLE wrseqdeflate (tmp1  timestamp, 
                                             num1  integer, 
                                             num2  integer, 
                                             num3  integer, 
                                             num4  integer,
                                             t1    text, 
                                             t2    text, 
                                             t3    text, 
                                             t4    text, 
                                             t5    text, 
                                             t6    text, 
                                             dub1  double precision, 
                                             dub2  double precision, 
                                             dub3  double precision, 
                                             ft1   real, 
                                             ft2   real, 
                                             ft3   real, 
                                             ln1   bigint, 
                                             ln2   bigint, 
                                             ln3   bigint, 
                                             bt    bytea,
                                             bool1 boolean,
							                 bool2 boolean,
                                             bool3 boolean)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrseqdeflate?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable&COMPRESSION_CODEC=org.apache.hadoop.io.compress.DefaultCodec')
FORMAT 'custom' (formatter='pxfwritable_export');
COPY wrseqdeflate FROM '@abs_srcdir@/data/pxf/customwritable_data.txt';
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/wrseqdeflate | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/wrseqdeflate | awk '{ if ($1>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du /gpdb_regression_data/writable/wrseqdeflate | awk '{if ($1<=0) print $0,": error";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE readseqdeflate (LIKE wrseqdeflate)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrseqdeflate?FRAGMENTER=com.pivotal.pxf.plugins.hdfs.HdfsDataFragmenter&ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable')
FORMAT 'custom' (formatter='pxfwritable_import');
SELECT * FROM readseqdeflate ORDER BY num1;
DROP EXTERNAL TABLE readseqdeflate;
DROP EXTERNAL TABLE wrseqdeflate;

--
-- 3.5 Test sequence file compression - deflate codec, record compression
--
CREATE WRITABLE EXTERNAL TABLE wrseqdeflaterecord (tmp1  timestamp, 
                                                   num1  integer, 
                                                   num2  integer, 
                                                   num3  integer, 
                                                   num4  integer,
                                                   t1    text, 
                                                   t2    text, 
                                                   t3    text, 
                                                   t4    text, 
                                                   t5    text, 
                                                   t6    text, 
                                                   dub1  double precision, 
                                                   dub2  double precision, 
                                                   dub3  double precision, 
                                                   ft1   real, 
                                                   ft2   real, 
                                                   ft3   real, 
                                                   ln1   bigint, 
                                                   ln2   bigint, 
                                                   ln3   bigint, 
                                                   bt    bytea,
                                                   bool1 boolean,
							                       bool2 boolean,
                                                   bool3 boolean)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrseqdeflaterecord?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable&COMPRESSION_CODEC=org.apache.hadoop.io.compress.DefaultCodec&COMPRESSION_TYPE=RECORD')
FORMAT 'custom' (formatter='pxfwritable_export');
COPY wrseqdeflaterecord FROM '@abs_srcdir@/data/pxf/customwritable_data.txt';
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/wrseqdeflaterecord | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/wrseqdeflaterecord | awk '{ if ($1>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du /gpdb_regression_data/writable/wrseqdeflaterecord | awk '{if ($1<=0) print $0,": error";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE readseqdeflaterecord (LIKE wrseqdeflaterecord)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrseqdeflaterecord?FRAGMENTER=com.pivotal.pxf.plugins.hdfs.HdfsDataFragmenter&ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable')
FORMAT 'custom' (formatter='pxfwritable_import');
SELECT * FROM readseqdeflaterecord ORDER BY num1;
DROP EXTERNAL TABLE readseqdeflaterecord;
DROP EXTERNAL TABLE wrseqdeflaterecord;

--
-- 3.6 Test sequence file compression - deflate codec, block compression
--
CREATE WRITABLE EXTERNAL TABLE wrseqdeflateblock (tmp1  timestamp, 
                                                  num1  integer, 
                                                  num2  integer, 
                                                  num3  integer, 
                                                  num4  integer,
                                                  t1    text, 
                                                  t2    text, 
                                                  t3    text, 
                                                  t4    text, 
                                                  t5    text, 
                                                  t6    text, 
                                                  dub1  double precision, 
                                                  dub2  double precision, 
                                                  dub3  double precision, 
                                                  ft1   real, 
                                                  ft2   real, 
                                                  ft3   real, 
                                                  ln1   bigint, 
                                                  ln2   bigint, 
                                                  ln3   bigint, 
                                                  bt    bytea,
                                                  bool1 boolean,
							                      bool2 boolean,
                                                  bool3 boolean)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrseqdeflateblock?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable&COMPRESSION_CODEC=org.apache.hadoop.io.compress.DefaultCodec&COMPRESSION_TYPE=BLOCK')
FORMAT 'custom' (formatter='pxfwritable_export');
COPY wrseqdeflateblock FROM '@abs_srcdir@/data/pxf/customwritable_data.txt';
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/wrseqdeflateblock | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/wrseqdeflateblock | awk '{ if ($1>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du /gpdb_regression_data/writable/wrseqdeflateblock | awk '{if ($1<=0) print $0,": error";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE readseqdeflateblock (LIKE wrseqdeflateblock)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/wrseqdeflateblock?FRAGMENTER=com.pivotal.pxf.plugins.hdfs.HdfsDataFragmenter&ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable')
FORMAT 'custom' (formatter='pxfwritable_import');
SELECT * FROM readseqdeflateblock ORDER BY num1;
DROP EXTERNAL TABLE readseqdeflateblock;
DROP EXTERNAL TABLE wrseqdeflateblock;

--
-- 4. Test error in port -- negative
--
CREATE WRITABLE EXTERNAL TABLE wr_port_err(t1 text,
                                           a1 integer)
LOCATION ('pxf://@hostname@:12345/gpdb_regression_data/writable/err?ACCESSOR=com.pivotal.pxf.plugins.hdfs.accessors.TextFileWAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.resolvers.TextWResolver')
FORMAT 'TEXT' (DELIMITER ',');
INSERT INTO wr_port_err VALUES ('first',1), ('second',2), ('third',3);
DROP EXTERNAL TABLE wr_port_err;

--
-- 5. Test error in host -- negative
--
CREATE WRITABLE EXTERNAL TABLE wr_host_err(t1 text,
                                           a1 integer)
LOCATION ('pxf://badhostname:50070/gpdb_regression_data/writable/err?ACCESSOR=com.pivotal.pxf.plugins.hdfs.accessors.TextFileWAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.resolvers.TextWResolver')
FORMAT 'TEXT' (DELIMITER ',');
INSERT INTO wr_host_err VALUES ('first',1), ('second',2), ('third',3);
DROP EXTERNAL TABLE wr_host_err;

--
-- 6. Test circle type converted to text and back
--
CREATE WRITABLE EXTERNAL TABLE wr_circle(a1 integer,
                                         c1 circle)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/circle?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritableWithCircle')
FORMAT 'custom' (formatter='pxfwritable_export');
INSERT INTO wr_circle VALUES (1, '<(3,3),9>'), (2, '<(4,4),16>');
DROP EXTERNAL TABLE wr_circle;
--
-- Test data was written
--
CREATE EXTERNAL TABLE read_circle(a1 integer,
                                           c1 circle)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/circle?FRAGMENTER=com.pivotal.pxf.plugins.hdfs.HdfsDataFragmenter&ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritableWithCircle')
FORMAT 'custom' (formatter='pxfwritable_import');
SELECT * FROM read_circle ORDER BY a1;
DROP EXTERNAL TABLE read_circle;

--
-- 7. Test unsupported type in writable resolver -- negative
--
CREATE WRITABLE EXTERNAL TABLE wr_char_err(a1 integer,
                                           c1 char)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/err?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritableWithChar')
FORMAT 'custom' (formatter='pxfwritable_export');
INSERT INTO wr_char_err VALUES (100, 'a'), (1000, 'b');
DROP EXTERNAL TABLE wr_char_err;

--
-- 8. Test ANALYZE on writable table
--
SET pxf_enable_stat_collection = true;
CREATE WRITABLE EXTERNAL TABLE writable_analyze_no_analyzer(s1 text, 
                               		                        n1 int, 
							   		                        n2 int)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/analyze/noanalyzer?ACCESSOR=com.pivotal.pxf.plugins.hdfs.LineBreakAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.StringPassResolver')
FORMAT 'TEXT';
ANALYZE writable_analyze_no_analyzer;
SELECT COUNT(*) FROM pg_class WHERE relname = 'writable_analyze_no_analyzer' AND relpages = 1 AND reltuples = 0;
INSERT INTO writable_analyze_no_analyzer VALUES ('nothing', 0, 0), ('will', 0, 0), ('happen', 0, 0);
SELECT COUNT(*) FROM pg_class WHERE relname = 'writable_analyze_no_analyzer' AND relpages = 1 AND reltuples = 0;

CREATE WRITABLE EXTERNAL TABLE writable_analyze_with_analyzer(s1 text, 
                               		                          n1 int, 
							   		                          n2 int)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/analyze/analyzer?PROFILE=HdfsTextSimple')
FORMAT 'TEXT';
ANALYZE writable_analyze_with_analyzer;
SELECT COUNT(*) FROM pg_class WHERE relname = 'writable_analyze_with_analyzer' AND relpages = 1 AND reltuples = 0;
INSERT INTO writable_analyze_with_analyzer VALUES ('nothing', 0, 0), ('will', 0, 0), ('happen', 0, 0);
SELECT COUNT(*) FROM pg_class WHERE relname = 'writable_analyze_with_analyzer' AND relpages = 1 AND reltuples = 0;

--
-- 9. Test COMPRESSION_TYPE = NONE -- negative 
--
CREATE WRITABLE EXTERNAL TABLE compress_type_none(a1 integer,
                                                  c1 char)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/err?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=SomeClass&COMPRESSION_TYPE=NONE')
FORMAT 'custom' (formatter='pxfwritable_export');
INSERT INTO compress_type_none VALUES (100, 'a'), (1000, 'b');
DROP EXTERNAL TABLE compress_type_none;

--
-- 10. Test CSV format 
--
CREATE WRITABLE EXTERNAL TABLE writable_csv(number int,
                                            name text,
                                            position char)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/csv?ACCESSOR=com.pivotal.pxf.plugins.hdfs.LineBreakAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.StringPassResolver')
FORMAT 'CSV';
INSERT INTO writable_csv VALUES (4, 'H Waldman', 'P'),
                                (6, 'Papi Turgeman', 'S'),
                                (13, 'Radisav Ćurčić', 'C'),
                                (11, 'Derrick Hamilton', 'F'),
                                (15, 'Kenny Williams', 'F');
DROP EXTERNAL TABLE writable_csv;
--
-- Test data was written
--
CREATE EXTERNAL TABLE readable_csv(number int,
                                   name text,
                                   position char)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/csv?PROFILE=HdfsTextSimple')
FORMAT 'CSV';
SELECT * FROM readable_csv ORDER BY number;
DROP EXTERNAL TABLE readable_csv;

--
-- 11. Test THREAD-SAFE parameter
--
CREATE WRITABLE EXTERNAL TABLE writable_threadsafe(number int,
                                            	   name text,
                                            	   position char)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/thread?ACCESSOR=com.pivotal.pxf.plugins.hdfs.LineBreakAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.StringPassResolver&THREAD-SAFE=FALSE')
FORMAT 'CSV';
INSERT INTO writable_threadsafe VALUES (4, 'H Waldman', 'P'),
                                       (6, 'Papi Turgeman', 'S'),
                                       (13, 'Radisav Ćurčić', 'C'),
                                       (11, 'Derrick Hamilton', 'F'),
                                       (15, 'Kenny Williams', 'F');
INSERT INTO writable_threadsafe VALUES (8, 'Doron Shefa', 'S'),
                                       (13, 'Erez Katz', 'P');
DROP EXTERNAL TABLE writable_threadsafe;
--
-- Test data was written
--
CREATE EXTERNAL TABLE readable_threadsafe(number int,
                                          name text,
                                          position char)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/thread?FRAGMENTER=com.pivotal.pxf.plugins.hdfs.HdfsDataFragmenter&ACCESSOR=com.pivotal.pxf.plugins.hdfs.LineBreakAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.StringPassResolver&THREAD-SAFE=FALSE')
FORMAT 'CSV';
SELECT * FROM readable_threadsafe ORDER BY number, name;
DROP EXTERNAL TABLE readable_threadsafe;

--
-- 12. Test recordkey for sequence file
--

--
-- 12.1 recordkey of type text
-- 
CREATE WRITABLE EXTERNAL TABLE writable_recordkey_text(recordkey text,
                                                       tmp1  timestamp, 
                                                       num1  integer, 
                                                       num2  integer, 
                                                       num3  integer, 
                                                       num4  integer,
                                                       t1    text, 
                                                       t2    text, 
                                                       t3    text, 
                                                       t4    text, 
                                                       t5    text, 
                                                       t6    text, 
                                                       dub1  double precision, 
                                                       dub2  double precision, 
                                                       dub3  double precision, 
                                                       ft1   real, 
                                                       ft2   real, 
                                                       ft3   real, 
                                                       ln1   bigint, 
                                                       ln2   bigint, 
                                                       ln3   bigint, 
                                                       bt    bytea,
                                                       bool1 boolean,
                                                       bool2 boolean,
                                                       bool3 boolean)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/recordkey_text?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable')
FORMAT 'custom' (formatter='pxfwritable_export');
COPY writable_recordkey_text FROM '@abs_srcdir@/data/pxf/customwritable_recordkey_data.txt';
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/recordkey_text | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/recordkey_text | awk '{ if ($1>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du /gpdb_regression_data/writable/recordkey_text | awk '{if ($1<=0) print $0,": error";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE read_recordkey_text (LIKE writable_recordkey_text)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/recordkey_text?FRAGMENTER=com.pivotal.pxf.plugins.hdfs.HdfsDataFragmenter&ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable')
FORMAT 'custom' (formatter='pxfwritable_import');
SELECT * FROM read_recordkey_text ORDER BY num1 LIMIT 10;
DROP EXTERNAL TABLE writable_recordkey_text;
DROP EXTERNAL TABLE read_recordkey_text;

--
-- 12.2 recordkey of type int (one row with error)
-- 
CREATE WRITABLE EXTERNAL TABLE writable_recordkey_int(recordkey int,
                                                      tmp1  timestamp, 
                                                      num1  integer, 
                                                      num2  integer, 
                                                      num3  integer, 
                                                      num4  integer,
                                                      t1    text, 
                                                      t2    text, 
                                                      t3    text, 
                                                      t4    text, 
                                                      t5    text, 
                                                      t6    text, 
                                                      dub1  double precision, 
                                                      dub2  double precision, 
                                                      dub3  double precision, 
                                                      ft1   real, 
                                                      ft2   real, 
                                                      ft3   real, 
                                                      ln1   bigint, 
                                                      ln2   bigint, 
                                                      ln3   bigint, 
                                                      bt    bytea,
                                                      bool1 boolean,
			             		    		          bool2 boolean,
                                                      bool3 boolean)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/recordkey_int?ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable')
FORMAT 'custom' (formatter='pxfwritable_export');
COPY writable_recordkey_int FROM '@abs_srcdir@/data/pxf/customwritable_recordkey_data.txt'
SEGMENT REJECT LIMIT 5 ROWS;
--
-- Test data was written
--
\! ${HADOOP_ROOT}/bin/hdfs dfs -ls /gpdb_regression_data/writable/recordkey_int | grep Found | awk '{ if ($2>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du -s /gpdb_regression_data/writable/recordkey_int | awk '{ if ($1>0) print "ok";}'
\! ${HADOOP_ROOT}/bin/hdfs dfs -du /gpdb_regression_data/writable/recordkey_int | awk '{if ($1<=0) print $0,": error";}'
--
-- Read data
--
CREATE READABLE EXTERNAL TABLE read_recordkey_int (LIKE writable_recordkey_int)
LOCATION ('pxf://@hostname@:50070/gpdb_regression_data/writable/recordkey_int?FRAGMENTER=com.pivotal.pxf.plugins.hdfs.HdfsDataFragmenter&ACCESSOR=com.pivotal.pxf.plugins.hdfs.SequenceFileAccessor&RESOLVER=com.pivotal.pxf.plugins.hdfs.WritableResolver&DATA-SCHEMA=CustomWritable')
FORMAT 'custom' (formatter='pxfwritable_import');
SELECT * FROM read_recordkey_int ORDER BY num1;
DROP EXTERNAL TABLE writable_recordkey_int;
DROP EXTERNAL TABLE read_recordkey_int;

--
-- Cleanup: delete all data that was written into hdfs
--
-- start_ignore
\! ${HADOOP_ROOT}/bin/hdfs dfs -rm -r /gpdb_regression_data
-- end_ignore
