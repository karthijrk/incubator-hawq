// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yarnsimulator.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "yarnsimulator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace yarnsimulator {

namespace {

const ::google::protobuf::Descriptor* JobContextProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JobContextProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResourceProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResourceGroupProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceGroupProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeReportProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeReportProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClusterReportProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClusterReportProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeResourceProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeResourceProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClusterResourceProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClusterResourceProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateJobRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateJobRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateJobResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateJobResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* FinishJobRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FinishJobRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* FinishJobResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FinishJobResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllocateResourcesRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllocateResourcesRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllocateResourcesResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllocateResourcesResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActiveResourcesRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActiveResourcesRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActiveResourcesResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActiveResourcesResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReleaseResourcesRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReleaseResourcesRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReleaseResourcesResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReleaseResourcesResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClusterReportRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClusterReportRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClusterReportResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClusterReportResponseProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClusterResourceRequestProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClusterResourceRequestProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClusterResourceResponseProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClusterResourceResponseProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* NodeStateProto_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_yarnsimulator_2eproto() {
  protobuf_AddDesc_yarnsimulator_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "yarnsimulator.proto");
  GOOGLE_CHECK(file != NULL);
  JobContextProto_descriptor_ = file->message_type(0);
  static const int JobContextProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobContextProto, jobid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobContextProto, jobname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobContextProto, queue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobContextProto, status_),
  };
  JobContextProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JobContextProto_descriptor_,
      JobContextProto::default_instance_,
      JobContextProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobContextProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobContextProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JobContextProto));
  ResourceProto_descriptor_ = file->message_type(1);
  static const int ResourceProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceProto, hostname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceProto, memory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceProto, cpu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceProto, status_),
  };
  ResourceProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResourceProto_descriptor_,
      ResourceProto::default_instance_,
      ResourceProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResourceProto));
  ResourceGroupProto_descriptor_ = file->message_type(2);
  static const int ResourceGroupProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceGroupProto, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceGroupProto, resources_),
  };
  ResourceGroupProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResourceGroupProto_descriptor_,
      ResourceGroupProto::default_instance_,
      ResourceGroupProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceGroupProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceGroupProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResourceGroupProto));
  NodeReportProto_descriptor_ = file->message_type(3);
  static const int NodeReportProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeReportProto, hostname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeReportProto, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeReportProto, rack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeReportProto, container_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeReportProto, memory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeReportProto, cpu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeReportProto, healthreport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeReportProto, lasthealthreporttime_),
  };
  NodeReportProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeReportProto_descriptor_,
      NodeReportProto::default_instance_,
      NodeReportProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeReportProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeReportProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeReportProto));
  ClusterReportProto_descriptor_ = file->message_type(4);
  static const int ClusterReportProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterReportProto, nodes_),
  };
  ClusterReportProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClusterReportProto_descriptor_,
      ClusterReportProto::default_instance_,
      ClusterReportProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterReportProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterReportProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClusterReportProto));
  NodeResourceProto_descriptor_ = file->message_type(5);
  static const int NodeResourceProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeResourceProto, hostname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeResourceProto, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeResourceProto, min_memory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeResourceProto, max_memory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeResourceProto, free_memory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeResourceProto, min_cpu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeResourceProto, max_cpu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeResourceProto, free_cpu_),
  };
  NodeResourceProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeResourceProto_descriptor_,
      NodeResourceProto::default_instance_,
      NodeResourceProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeResourceProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeResourceProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeResourceProto));
  ClusterResourceProto_descriptor_ = file->message_type(6);
  static const int ClusterResourceProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterResourceProto, nodes_),
  };
  ClusterResourceProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClusterResourceProto_descriptor_,
      ClusterResourceProto::default_instance_,
      ClusterResourceProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterResourceProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterResourceProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClusterResourceProto));
  CreateJobRequestProto_descriptor_ = file->message_type(7);
  static const int CreateJobRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateJobRequestProto, jobcontext_),
  };
  CreateJobRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateJobRequestProto_descriptor_,
      CreateJobRequestProto::default_instance_,
      CreateJobRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateJobRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateJobRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateJobRequestProto));
  CreateJobResponseProto_descriptor_ = file->message_type(8);
  static const int CreateJobResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateJobResponseProto, jobcontext_),
  };
  CreateJobResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateJobResponseProto_descriptor_,
      CreateJobResponseProto::default_instance_,
      CreateJobResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateJobResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateJobResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateJobResponseProto));
  FinishJobRequestProto_descriptor_ = file->message_type(9);
  static const int FinishJobRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishJobRequestProto, jobcontext_),
  };
  FinishJobRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FinishJobRequestProto_descriptor_,
      FinishJobRequestProto::default_instance_,
      FinishJobRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishJobRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishJobRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FinishJobRequestProto));
  FinishJobResponseProto_descriptor_ = file->message_type(10);
  static const int FinishJobResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishJobResponseProto, jobcontext_),
  };
  FinishJobResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FinishJobResponseProto_descriptor_,
      FinishJobResponseProto::default_instance_,
      FinishJobResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishJobResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinishJobResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FinishJobResponseProto));
  AllocateResourcesRequestProto_descriptor_ = file->message_type(11);
  static const int AllocateResourcesRequestProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResourcesRequestProto, jobid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResourcesRequestProto, resourcegroup_),
  };
  AllocateResourcesRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AllocateResourcesRequestProto_descriptor_,
      AllocateResourcesRequestProto::default_instance_,
      AllocateResourcesRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResourcesRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResourcesRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AllocateResourcesRequestProto));
  AllocateResourcesResponseProto_descriptor_ = file->message_type(12);
  static const int AllocateResourcesResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResourcesResponseProto, resourcegroup_),
  };
  AllocateResourcesResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AllocateResourcesResponseProto_descriptor_,
      AllocateResourcesResponseProto::default_instance_,
      AllocateResourcesResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResourcesResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocateResourcesResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AllocateResourcesResponseProto));
  ActiveResourcesRequestProto_descriptor_ = file->message_type(13);
  static const int ActiveResourcesRequestProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveResourcesRequestProto, jobid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveResourcesRequestProto, resourcegroup_),
  };
  ActiveResourcesRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActiveResourcesRequestProto_descriptor_,
      ActiveResourcesRequestProto::default_instance_,
      ActiveResourcesRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveResourcesRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveResourcesRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActiveResourcesRequestProto));
  ActiveResourcesResponseProto_descriptor_ = file->message_type(14);
  static const int ActiveResourcesResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveResourcesResponseProto, resourcegroup_),
  };
  ActiveResourcesResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActiveResourcesResponseProto_descriptor_,
      ActiveResourcesResponseProto::default_instance_,
      ActiveResourcesResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveResourcesResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveResourcesResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActiveResourcesResponseProto));
  ReleaseResourcesRequestProto_descriptor_ = file->message_type(15);
  static const int ReleaseResourcesRequestProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReleaseResourcesRequestProto, jobid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReleaseResourcesRequestProto, resourcegroup_),
  };
  ReleaseResourcesRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReleaseResourcesRequestProto_descriptor_,
      ReleaseResourcesRequestProto::default_instance_,
      ReleaseResourcesRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReleaseResourcesRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReleaseResourcesRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReleaseResourcesRequestProto));
  ReleaseResourcesResponseProto_descriptor_ = file->message_type(16);
  static const int ReleaseResourcesResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReleaseResourcesResponseProto, resourcegroup_),
  };
  ReleaseResourcesResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReleaseResourcesResponseProto_descriptor_,
      ReleaseResourcesResponseProto::default_instance_,
      ReleaseResourcesResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReleaseResourcesResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReleaseResourcesResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReleaseResourcesResponseProto));
  GetClusterReportRequestProto_descriptor_ = file->message_type(17);
  static const int GetClusterReportRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterReportRequestProto, state_),
  };
  GetClusterReportRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetClusterReportRequestProto_descriptor_,
      GetClusterReportRequestProto::default_instance_,
      GetClusterReportRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterReportRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterReportRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetClusterReportRequestProto));
  GetClusterReportResponseProto_descriptor_ = file->message_type(18);
  static const int GetClusterReportResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterReportResponseProto, report_),
  };
  GetClusterReportResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetClusterReportResponseProto_descriptor_,
      GetClusterReportResponseProto::default_instance_,
      GetClusterReportResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterReportResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterReportResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetClusterReportResponseProto));
  GetClusterResourceRequestProto_descriptor_ = file->message_type(19);
  static const int GetClusterResourceRequestProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterResourceRequestProto, state_),
  };
  GetClusterResourceRequestProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetClusterResourceRequestProto_descriptor_,
      GetClusterResourceRequestProto::default_instance_,
      GetClusterResourceRequestProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterResourceRequestProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterResourceRequestProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetClusterResourceRequestProto));
  GetClusterResourceResponseProto_descriptor_ = file->message_type(20);
  static const int GetClusterResourceResponseProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterResourceResponseProto, resources_),
  };
  GetClusterResourceResponseProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetClusterResourceResponseProto_descriptor_,
      GetClusterResourceResponseProto::default_instance_,
      GetClusterResourceResponseProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterResourceResponseProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterResourceResponseProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetClusterResourceResponseProto));
  NodeStateProto_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_yarnsimulator_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JobContextProto_descriptor_, &JobContextProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResourceProto_descriptor_, &ResourceProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResourceGroupProto_descriptor_, &ResourceGroupProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeReportProto_descriptor_, &NodeReportProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClusterReportProto_descriptor_, &ClusterReportProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeResourceProto_descriptor_, &NodeResourceProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClusterResourceProto_descriptor_, &ClusterResourceProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateJobRequestProto_descriptor_, &CreateJobRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateJobResponseProto_descriptor_, &CreateJobResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FinishJobRequestProto_descriptor_, &FinishJobRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FinishJobResponseProto_descriptor_, &FinishJobResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AllocateResourcesRequestProto_descriptor_, &AllocateResourcesRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AllocateResourcesResponseProto_descriptor_, &AllocateResourcesResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActiveResourcesRequestProto_descriptor_, &ActiveResourcesRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActiveResourcesResponseProto_descriptor_, &ActiveResourcesResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReleaseResourcesRequestProto_descriptor_, &ReleaseResourcesRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReleaseResourcesResponseProto_descriptor_, &ReleaseResourcesResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetClusterReportRequestProto_descriptor_, &GetClusterReportRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetClusterReportResponseProto_descriptor_, &GetClusterReportResponseProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetClusterResourceRequestProto_descriptor_, &GetClusterResourceRequestProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetClusterResourceResponseProto_descriptor_, &GetClusterResourceResponseProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_yarnsimulator_2eproto() {
  delete JobContextProto::default_instance_;
  delete JobContextProto_reflection_;
  delete ResourceProto::default_instance_;
  delete ResourceProto_reflection_;
  delete ResourceGroupProto::default_instance_;
  delete ResourceGroupProto_reflection_;
  delete NodeReportProto::default_instance_;
  delete NodeReportProto_reflection_;
  delete ClusterReportProto::default_instance_;
  delete ClusterReportProto_reflection_;
  delete NodeResourceProto::default_instance_;
  delete NodeResourceProto_reflection_;
  delete ClusterResourceProto::default_instance_;
  delete ClusterResourceProto_reflection_;
  delete CreateJobRequestProto::default_instance_;
  delete CreateJobRequestProto_reflection_;
  delete CreateJobResponseProto::default_instance_;
  delete CreateJobResponseProto_reflection_;
  delete FinishJobRequestProto::default_instance_;
  delete FinishJobRequestProto_reflection_;
  delete FinishJobResponseProto::default_instance_;
  delete FinishJobResponseProto_reflection_;
  delete AllocateResourcesRequestProto::default_instance_;
  delete AllocateResourcesRequestProto_reflection_;
  delete AllocateResourcesResponseProto::default_instance_;
  delete AllocateResourcesResponseProto_reflection_;
  delete ActiveResourcesRequestProto::default_instance_;
  delete ActiveResourcesRequestProto_reflection_;
  delete ActiveResourcesResponseProto::default_instance_;
  delete ActiveResourcesResponseProto_reflection_;
  delete ReleaseResourcesRequestProto::default_instance_;
  delete ReleaseResourcesRequestProto_reflection_;
  delete ReleaseResourcesResponseProto::default_instance_;
  delete ReleaseResourcesResponseProto_reflection_;
  delete GetClusterReportRequestProto::default_instance_;
  delete GetClusterReportRequestProto_reflection_;
  delete GetClusterReportResponseProto::default_instance_;
  delete GetClusterReportResponseProto_reflection_;
  delete GetClusterResourceRequestProto::default_instance_;
  delete GetClusterResourceRequestProto_reflection_;
  delete GetClusterResourceResponseProto::default_instance_;
  delete GetClusterResourceResponseProto_reflection_;
}

void protobuf_AddDesc_yarnsimulator_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023yarnsimulator.proto\022\ryarnsimulator\"P\n\017"
    "JobContextProto\022\r\n\005jobId\030\001 \001(\t\022\017\n\007jobNam"
    "e\030\002 \001(\t\022\r\n\005queue\030\003 \001(\t\022\016\n\006status\030\004 \001(\t\"Z"
    "\n\rResourceProto\022\n\n\002id\030\001 \001(\t\022\020\n\010hostname\030"
    "\002 \001(\t\022\016\n\006memory\030\003 \001(\005\022\013\n\003cpu\030\004 \001(\005\022\016\n\006st"
    "atus\030\005 \001(\005\"V\n\022ResourceGroupProto\022\017\n\007grou"
    "pId\030\001 \001(\t\022/\n\tresources\030\002 \003(\0132\034.yarnsimul"
    "ator.ResourceProto\"\250\001\n\017NodeReportProto\022\020"
    "\n\010hostname\030\001 \002(\t\022\r\n\005state\030\002 \002(\t\022\014\n\004rack\030"
    "\003 \002(\t\022\025\n\rcontainer_num\030\004 \002(\005\022\016\n\006memory\030\005"
    " \002(\005\022\013\n\003cpu\030\006 \002(\005\022\024\n\014healthReport\030\007 \002(\t\022"
    "\034\n\024lastHealthReportTime\030\010 \002(\003\"C\n\022Cluster"
    "ReportProto\022-\n\005nodes\030\001 \003(\0132\036.yarnsimulat"
    "or.NodeReportProto\"\242\001\n\021NodeResourceProto"
    "\022\020\n\010hostname\030\001 \002(\t\022\n\n\002ip\030\002 \002(\t\022\022\n\nmin_me"
    "mory\030\003 \002(\005\022\022\n\nmax_memory\030\004 \002(\005\022\023\n\013free_m"
    "emory\030\005 \002(\005\022\017\n\007min_cpu\030\006 \002(\005\022\017\n\007max_cpu\030"
    "\007 \002(\005\022\020\n\010free_cpu\030\010 \002(\005\"G\n\024ClusterResour"
    "ceProto\022/\n\005nodes\030\001 \003(\0132 .yarnsimulator.N"
    "odeResourceProto\"K\n\025CreateJobRequestProt"
    "o\0222\n\njobContext\030\001 \002(\0132\036.yarnsimulator.Jo"
    "bContextProto\"L\n\026CreateJobResponseProto\022"
    "2\n\njobContext\030\001 \002(\0132\036.yarnsimulator.JobC"
    "ontextProto\"K\n\025FinishJobRequestProto\0222\n\n"
    "jobContext\030\001 \002(\0132\036.yarnsimulator.JobCont"
    "extProto\"L\n\026FinishJobResponseProto\0222\n\njo"
    "bContext\030\001 \002(\0132\036.yarnsimulator.JobContex"
    "tProto\"h\n\035AllocateResourcesRequestProto\022"
    "\r\n\005jobId\030\001 \002(\t\0228\n\rresourceGroup\030\002 \002(\0132!."
    "yarnsimulator.ResourceGroupProto\"Z\n\036Allo"
    "cateResourcesResponseProto\0228\n\rresourceGr"
    "oup\030\001 \002(\0132!.yarnsimulator.ResourceGroupP"
    "roto\"f\n\033ActiveResourcesRequestProto\022\r\n\005j"
    "obId\030\001 \002(\t\0228\n\rresourceGroup\030\002 \002(\0132!.yarn"
    "simulator.ResourceGroupProto\"X\n\034ActiveRe"
    "sourcesResponseProto\0228\n\rresourceGroup\030\001 "
    "\002(\0132!.yarnsimulator.ResourceGroupProto\"g"
    "\n\034ReleaseResourcesRequestProto\022\r\n\005jobId\030"
    "\001 \002(\t\0228\n\rresourceGroup\030\002 \002(\0132!.yarnsimul"
    "ator.ResourceGroupProto\"Y\n\035ReleaseResour"
    "cesResponseProto\0228\n\rresourceGroup\030\001 \002(\0132"
    "!.yarnsimulator.ResourceGroupProto\"L\n\034Ge"
    "tClusterReportRequestProto\022,\n\005state\030\001 \002("
    "\0162\035.yarnsimulator.NodeStateProto\"R\n\035GetC"
    "lusterReportResponseProto\0221\n\006report\030\001 \002("
    "\0132!.yarnsimulator.ClusterReportProto\"N\n\036"
    "GetClusterResourceRequestProto\022,\n\005state\030"
    "\001 \002(\0162\035.yarnsimulator.NodeStateProto\"Y\n\037"
    "GetClusterResourceResponseProto\0226\n\tresou"
    "rces\030\001 \002(\0132#.yarnsimulator.ClusterResour"
    "ceProto*E\n\016NodeStateProto\022\007\n\003NEW\020\001\022\022\n\016DE"
    "COMMISSIONED\020\004\022\010\n\004LOST\020\005\022\014\n\010REBOOTED\020\0062\373"
    "\005\n\024YarnSimulatorService\022X\n\tcreateJob\022$.y"
    "arnsimulator.CreateJobRequestProto\032%.yar"
    "nsimulator.CreateJobResponseProto\022X\n\tfin"
    "ishJob\022$.yarnsimulator.FinishJobRequestP"
    "roto\032%.yarnsimulator.FinishJobResponsePr"
    "oto\022p\n\021allocateResources\022,.yarnsimulator"
    ".AllocateResourcesRequestProto\032-.yarnsim"
    "ulator.AllocateResourcesResponseProto\022j\n"
    "\017activeResources\022*.yarnsimulator.ActiveR"
    "esourcesRequestProto\032+.yarnsimulator.Act"
    "iveResourcesResponseProto\022m\n\020releaseReso"
    "urces\022+.yarnsimulator.ReleaseResourcesRe"
    "questProto\032,.yarnsimulator.ReleaseResour"
    "cesResponseProto\022m\n\020getClusterReport\022+.y"
    "arnsimulator.GetClusterReportRequestProt"
    "o\032,.yarnsimulator.GetClusterReportRespon"
    "seProto\022s\n\022getClusterResource\022-.yarnsimu"
    "lator.GetClusterResourceRequestProto\032..y"
    "arnsimulator.GetClusterResourceResponseP"
    "rotoB\003\220\001\001", 2849);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "yarnsimulator.proto", &protobuf_RegisterTypes);
  JobContextProto::default_instance_ = new JobContextProto();
  ResourceProto::default_instance_ = new ResourceProto();
  ResourceGroupProto::default_instance_ = new ResourceGroupProto();
  NodeReportProto::default_instance_ = new NodeReportProto();
  ClusterReportProto::default_instance_ = new ClusterReportProto();
  NodeResourceProto::default_instance_ = new NodeResourceProto();
  ClusterResourceProto::default_instance_ = new ClusterResourceProto();
  CreateJobRequestProto::default_instance_ = new CreateJobRequestProto();
  CreateJobResponseProto::default_instance_ = new CreateJobResponseProto();
  FinishJobRequestProto::default_instance_ = new FinishJobRequestProto();
  FinishJobResponseProto::default_instance_ = new FinishJobResponseProto();
  AllocateResourcesRequestProto::default_instance_ = new AllocateResourcesRequestProto();
  AllocateResourcesResponseProto::default_instance_ = new AllocateResourcesResponseProto();
  ActiveResourcesRequestProto::default_instance_ = new ActiveResourcesRequestProto();
  ActiveResourcesResponseProto::default_instance_ = new ActiveResourcesResponseProto();
  ReleaseResourcesRequestProto::default_instance_ = new ReleaseResourcesRequestProto();
  ReleaseResourcesResponseProto::default_instance_ = new ReleaseResourcesResponseProto();
  GetClusterReportRequestProto::default_instance_ = new GetClusterReportRequestProto();
  GetClusterReportResponseProto::default_instance_ = new GetClusterReportResponseProto();
  GetClusterResourceRequestProto::default_instance_ = new GetClusterResourceRequestProto();
  GetClusterResourceResponseProto::default_instance_ = new GetClusterResourceResponseProto();
  JobContextProto::default_instance_->InitAsDefaultInstance();
  ResourceProto::default_instance_->InitAsDefaultInstance();
  ResourceGroupProto::default_instance_->InitAsDefaultInstance();
  NodeReportProto::default_instance_->InitAsDefaultInstance();
  ClusterReportProto::default_instance_->InitAsDefaultInstance();
  NodeResourceProto::default_instance_->InitAsDefaultInstance();
  ClusterResourceProto::default_instance_->InitAsDefaultInstance();
  CreateJobRequestProto::default_instance_->InitAsDefaultInstance();
  CreateJobResponseProto::default_instance_->InitAsDefaultInstance();
  FinishJobRequestProto::default_instance_->InitAsDefaultInstance();
  FinishJobResponseProto::default_instance_->InitAsDefaultInstance();
  AllocateResourcesRequestProto::default_instance_->InitAsDefaultInstance();
  AllocateResourcesResponseProto::default_instance_->InitAsDefaultInstance();
  ActiveResourcesRequestProto::default_instance_->InitAsDefaultInstance();
  ActiveResourcesResponseProto::default_instance_->InitAsDefaultInstance();
  ReleaseResourcesRequestProto::default_instance_->InitAsDefaultInstance();
  ReleaseResourcesResponseProto::default_instance_->InitAsDefaultInstance();
  GetClusterReportRequestProto::default_instance_->InitAsDefaultInstance();
  GetClusterReportResponseProto::default_instance_->InitAsDefaultInstance();
  GetClusterResourceRequestProto::default_instance_->InitAsDefaultInstance();
  GetClusterResourceResponseProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_yarnsimulator_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_yarnsimulator_2eproto {
  StaticDescriptorInitializer_yarnsimulator_2eproto() {
    protobuf_AddDesc_yarnsimulator_2eproto();
  }
} static_descriptor_initializer_yarnsimulator_2eproto_;
const ::google::protobuf::EnumDescriptor* NodeStateProto_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeStateProto_descriptor_;
}
bool NodeStateProto_IsValid(int value) {
  switch(value) {
    case 1:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int JobContextProto::kJobIdFieldNumber;
const int JobContextProto::kJobNameFieldNumber;
const int JobContextProto::kQueueFieldNumber;
const int JobContextProto::kStatusFieldNumber;
#endif  // !_MSC_VER

JobContextProto::JobContextProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JobContextProto::InitAsDefaultInstance() {
}

JobContextProto::JobContextProto(const JobContextProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JobContextProto::SharedCtor() {
  _cached_size_ = 0;
  jobid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  jobname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  queue_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  status_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JobContextProto::~JobContextProto() {
  SharedDtor();
}

void JobContextProto::SharedDtor() {
  if (jobid_ != &::google::protobuf::internal::kEmptyString) {
    delete jobid_;
  }
  if (jobname_ != &::google::protobuf::internal::kEmptyString) {
    delete jobname_;
  }
  if (queue_ != &::google::protobuf::internal::kEmptyString) {
    delete queue_;
  }
  if (status_ != &::google::protobuf::internal::kEmptyString) {
    delete status_;
  }
  if (this != default_instance_) {
  }
}

void JobContextProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobContextProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JobContextProto_descriptor_;
}

const JobContextProto& JobContextProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

JobContextProto* JobContextProto::default_instance_ = NULL;

JobContextProto* JobContextProto::New() const {
  return new JobContextProto;
}

void JobContextProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_jobid()) {
      if (jobid_ != &::google::protobuf::internal::kEmptyString) {
        jobid_->clear();
      }
    }
    if (has_jobname()) {
      if (jobname_ != &::google::protobuf::internal::kEmptyString) {
        jobname_->clear();
      }
    }
    if (has_queue()) {
      if (queue_ != &::google::protobuf::internal::kEmptyString) {
        queue_->clear();
      }
    }
    if (has_status()) {
      if (status_ != &::google::protobuf::internal::kEmptyString) {
        status_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JobContextProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string jobId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jobid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->jobid().data(), this->jobid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_jobName;
        break;
      }

      // optional string jobName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_jobName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jobname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->jobname().data(), this->jobname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_queue;
        break;
      }

      // optional string queue = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_queue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_queue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->queue().data(), this->queue().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_status;
        break;
      }

      // optional string status = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->status().data(), this->status().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JobContextProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jobid().data(), this->jobid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->jobid(), output);
  }

  // optional string jobName = 2;
  if (has_jobname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jobname().data(), this->jobname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->jobname(), output);
  }

  // optional string queue = 3;
  if (has_queue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->queue().data(), this->queue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->queue(), output);
  }

  // optional string status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JobContextProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jobid().data(), this->jobid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->jobid(), target);
  }

  // optional string jobName = 2;
  if (has_jobname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jobname().data(), this->jobname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->jobname(), target);
  }

  // optional string queue = 3;
  if (has_queue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->queue().data(), this->queue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->queue(), target);
  }

  // optional string status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JobContextProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string jobId = 1;
    if (has_jobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jobid());
    }

    // optional string jobName = 2;
    if (has_jobname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jobname());
    }

    // optional string queue = 3;
    if (has_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->queue());
    }

    // optional string status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobContextProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JobContextProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JobContextProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JobContextProto::MergeFrom(const JobContextProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobid()) {
      set_jobid(from.jobid());
    }
    if (from.has_jobname()) {
      set_jobname(from.jobname());
    }
    if (from.has_queue()) {
      set_queue(from.queue());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JobContextProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobContextProto::CopyFrom(const JobContextProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobContextProto::IsInitialized() const {

  return true;
}

void JobContextProto::Swap(JobContextProto* other) {
  if (other != this) {
    std::swap(jobid_, other->jobid_);
    std::swap(jobname_, other->jobname_);
    std::swap(queue_, other->queue_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JobContextProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JobContextProto_descriptor_;
  metadata.reflection = JobContextProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResourceProto::kIdFieldNumber;
const int ResourceProto::kHostnameFieldNumber;
const int ResourceProto::kMemoryFieldNumber;
const int ResourceProto::kCpuFieldNumber;
const int ResourceProto::kStatusFieldNumber;
#endif  // !_MSC_VER

ResourceProto::ResourceProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResourceProto::InitAsDefaultInstance() {
}

ResourceProto::ResourceProto(const ResourceProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResourceProto::SharedCtor() {
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  hostname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  memory_ = 0;
  cpu_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceProto::~ResourceProto() {
  SharedDtor();
}

void ResourceProto::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (hostname_ != &::google::protobuf::internal::kEmptyString) {
    delete hostname_;
  }
  if (this != default_instance_) {
  }
}

void ResourceProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceProto_descriptor_;
}

const ResourceProto& ResourceProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

ResourceProto* ResourceProto::default_instance_ = NULL;

ResourceProto* ResourceProto::New() const {
  return new ResourceProto;
}

void ResourceProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    if (has_hostname()) {
      if (hostname_ != &::google::protobuf::internal::kEmptyString) {
        hostname_->clear();
      }
    }
    memory_ = 0;
    cpu_ = 0;
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResourceProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_hostname;
        break;
      }

      // optional string hostname = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hostname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->hostname().data(), this->hostname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_memory;
        break;
      }

      // optional int32 memory = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_memory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &memory_)));
          set_has_memory();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_cpu;
        break;
      }

      // optional int32 cpu = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cpu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cpu_)));
          set_has_cpu();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_status;
        break;
      }

      // optional int32 status = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResourceProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(), output);
  }

  // optional string hostname = 2;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->hostname(), output);
  }

  // optional int32 memory = 3;
  if (has_memory()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->memory(), output);
  }

  // optional int32 cpu = 4;
  if (has_cpu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cpu(), output);
  }

  // optional int32 status = 5;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResourceProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string hostname = 2;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hostname(), target);
  }

  // optional int32 memory = 3;
  if (has_memory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->memory(), target);
  }

  // optional int32 cpu = 4;
  if (has_cpu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cpu(), target);
  }

  // optional int32 status = 5;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResourceProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string hostname = 2;
    if (has_hostname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hostname());
    }

    // optional int32 memory = 3;
    if (has_memory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->memory());
    }

    // optional int32 cpu = 4;
    if (has_cpu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cpu());
    }

    // optional int32 status = 5;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResourceProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResourceProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResourceProto::MergeFrom(const ResourceProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_hostname()) {
      set_hostname(from.hostname());
    }
    if (from.has_memory()) {
      set_memory(from.memory());
    }
    if (from.has_cpu()) {
      set_cpu(from.cpu());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResourceProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceProto::CopyFrom(const ResourceProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceProto::IsInitialized() const {

  return true;
}

void ResourceProto::Swap(ResourceProto* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(hostname_, other->hostname_);
    std::swap(memory_, other->memory_);
    std::swap(cpu_, other->cpu_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResourceProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceProto_descriptor_;
  metadata.reflection = ResourceProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResourceGroupProto::kGroupIdFieldNumber;
const int ResourceGroupProto::kResourcesFieldNumber;
#endif  // !_MSC_VER

ResourceGroupProto::ResourceGroupProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResourceGroupProto::InitAsDefaultInstance() {
}

ResourceGroupProto::ResourceGroupProto(const ResourceGroupProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResourceGroupProto::SharedCtor() {
  _cached_size_ = 0;
  groupid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceGroupProto::~ResourceGroupProto() {
  SharedDtor();
}

void ResourceGroupProto::SharedDtor() {
  if (groupid_ != &::google::protobuf::internal::kEmptyString) {
    delete groupid_;
  }
  if (this != default_instance_) {
  }
}

void ResourceGroupProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceGroupProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceGroupProto_descriptor_;
}

const ResourceGroupProto& ResourceGroupProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

ResourceGroupProto* ResourceGroupProto::default_instance_ = NULL;

ResourceGroupProto* ResourceGroupProto::New() const {
  return new ResourceGroupProto;
}

void ResourceGroupProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_groupid()) {
      if (groupid_ != &::google::protobuf::internal::kEmptyString) {
        groupid_->clear();
      }
    }
  }
  resources_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResourceGroupProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string groupId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->groupid().data(), this->groupid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_resources;
        break;
      }

      // repeated .yarnsimulator.ResourceProto resources = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resources:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resources()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_resources;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResourceGroupProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string groupId = 1;
  if (has_groupid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->groupid().data(), this->groupid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->groupid(), output);
  }

  // repeated .yarnsimulator.ResourceProto resources = 2;
  for (int i = 0; i < this->resources_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resources(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResourceGroupProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string groupId = 1;
  if (has_groupid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->groupid().data(), this->groupid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->groupid(), target);
  }

  // repeated .yarnsimulator.ResourceProto resources = 2;
  for (int i = 0; i < this->resources_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->resources(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResourceGroupProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string groupId = 1;
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->groupid());
    }

  }
  // repeated .yarnsimulator.ResourceProto resources = 2;
  total_size += 1 * this->resources_size();
  for (int i = 0; i < this->resources_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resources(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceGroupProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResourceGroupProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResourceGroupProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResourceGroupProto::MergeFrom(const ResourceGroupProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  resources_.MergeFrom(from.resources_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_groupid()) {
      set_groupid(from.groupid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResourceGroupProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceGroupProto::CopyFrom(const ResourceGroupProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceGroupProto::IsInitialized() const {

  return true;
}

void ResourceGroupProto::Swap(ResourceGroupProto* other) {
  if (other != this) {
    std::swap(groupid_, other->groupid_);
    resources_.Swap(&other->resources_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResourceGroupProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceGroupProto_descriptor_;
  metadata.reflection = ResourceGroupProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NodeReportProto::kHostnameFieldNumber;
const int NodeReportProto::kStateFieldNumber;
const int NodeReportProto::kRackFieldNumber;
const int NodeReportProto::kContainerNumFieldNumber;
const int NodeReportProto::kMemoryFieldNumber;
const int NodeReportProto::kCpuFieldNumber;
const int NodeReportProto::kHealthReportFieldNumber;
const int NodeReportProto::kLastHealthReportTimeFieldNumber;
#endif  // !_MSC_VER

NodeReportProto::NodeReportProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NodeReportProto::InitAsDefaultInstance() {
}

NodeReportProto::NodeReportProto(const NodeReportProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NodeReportProto::SharedCtor() {
  _cached_size_ = 0;
  hostname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  state_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rack_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  container_num_ = 0;
  memory_ = 0;
  cpu_ = 0;
  healthreport_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  lasthealthreporttime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeReportProto::~NodeReportProto() {
  SharedDtor();
}

void NodeReportProto::SharedDtor() {
  if (hostname_ != &::google::protobuf::internal::kEmptyString) {
    delete hostname_;
  }
  if (state_ != &::google::protobuf::internal::kEmptyString) {
    delete state_;
  }
  if (rack_ != &::google::protobuf::internal::kEmptyString) {
    delete rack_;
  }
  if (healthreport_ != &::google::protobuf::internal::kEmptyString) {
    delete healthreport_;
  }
  if (this != default_instance_) {
  }
}

void NodeReportProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeReportProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeReportProto_descriptor_;
}

const NodeReportProto& NodeReportProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

NodeReportProto* NodeReportProto::default_instance_ = NULL;

NodeReportProto* NodeReportProto::New() const {
  return new NodeReportProto;
}

void NodeReportProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_hostname()) {
      if (hostname_ != &::google::protobuf::internal::kEmptyString) {
        hostname_->clear();
      }
    }
    if (has_state()) {
      if (state_ != &::google::protobuf::internal::kEmptyString) {
        state_->clear();
      }
    }
    if (has_rack()) {
      if (rack_ != &::google::protobuf::internal::kEmptyString) {
        rack_->clear();
      }
    }
    container_num_ = 0;
    memory_ = 0;
    cpu_ = 0;
    if (has_healthreport()) {
      if (healthreport_ != &::google::protobuf::internal::kEmptyString) {
        healthreport_->clear();
      }
    }
    lasthealthreporttime_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeReportProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string hostname = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->hostname().data(), this->hostname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_state;
        break;
      }

      // required string state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->state().data(), this->state().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rack;
        break;
      }

      // required string rack = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rack()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rack().data(), this->rack().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_container_num;
        break;
      }

      // required int32 container_num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_container_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &container_num_)));
          set_has_container_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_memory;
        break;
      }

      // required int32 memory = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_memory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &memory_)));
          set_has_memory();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_cpu;
        break;
      }

      // required int32 cpu = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cpu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cpu_)));
          set_has_cpu();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_healthReport;
        break;
      }

      // required string healthReport = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_healthReport:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_healthreport()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->healthreport().data(), this->healthreport().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_lastHealthReportTime;
        break;
      }

      // required int64 lastHealthReportTime = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lastHealthReportTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lasthealthreporttime_)));
          set_has_lasthealthreporttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NodeReportProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string hostname = 1;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->hostname(), output);
  }

  // required string state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->state(), output);
  }

  // required string rack = 3;
  if (has_rack()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rack().data(), this->rack().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->rack(), output);
  }

  // required int32 container_num = 4;
  if (has_container_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->container_num(), output);
  }

  // required int32 memory = 5;
  if (has_memory()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->memory(), output);
  }

  // required int32 cpu = 6;
  if (has_cpu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cpu(), output);
  }

  // required string healthReport = 7;
  if (has_healthreport()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->healthreport().data(), this->healthreport().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->healthreport(), output);
  }

  // required int64 lastHealthReportTime = 8;
  if (has_lasthealthreporttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->lasthealthreporttime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NodeReportProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string hostname = 1;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hostname(), target);
  }

  // required string state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->state(), target);
  }

  // required string rack = 3;
  if (has_rack()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rack().data(), this->rack().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rack(), target);
  }

  // required int32 container_num = 4;
  if (has_container_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->container_num(), target);
  }

  // required int32 memory = 5;
  if (has_memory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->memory(), target);
  }

  // required int32 cpu = 6;
  if (has_cpu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cpu(), target);
  }

  // required string healthReport = 7;
  if (has_healthreport()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->healthreport().data(), this->healthreport().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->healthreport(), target);
  }

  // required int64 lastHealthReportTime = 8;
  if (has_lasthealthreporttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->lasthealthreporttime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NodeReportProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string hostname = 1;
    if (has_hostname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hostname());
    }

    // required string state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // required string rack = 3;
    if (has_rack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rack());
    }

    // required int32 container_num = 4;
    if (has_container_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->container_num());
    }

    // required int32 memory = 5;
    if (has_memory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->memory());
    }

    // required int32 cpu = 6;
    if (has_cpu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cpu());
    }

    // required string healthReport = 7;
    if (has_healthreport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->healthreport());
    }

    // required int64 lastHealthReportTime = 8;
    if (has_lasthealthreporttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lasthealthreporttime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeReportProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeReportProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeReportProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeReportProto::MergeFrom(const NodeReportProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hostname()) {
      set_hostname(from.hostname());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_rack()) {
      set_rack(from.rack());
    }
    if (from.has_container_num()) {
      set_container_num(from.container_num());
    }
    if (from.has_memory()) {
      set_memory(from.memory());
    }
    if (from.has_cpu()) {
      set_cpu(from.cpu());
    }
    if (from.has_healthreport()) {
      set_healthreport(from.healthreport());
    }
    if (from.has_lasthealthreporttime()) {
      set_lasthealthreporttime(from.lasthealthreporttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeReportProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeReportProto::CopyFrom(const NodeReportProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeReportProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void NodeReportProto::Swap(NodeReportProto* other) {
  if (other != this) {
    std::swap(hostname_, other->hostname_);
    std::swap(state_, other->state_);
    std::swap(rack_, other->rack_);
    std::swap(container_num_, other->container_num_);
    std::swap(memory_, other->memory_);
    std::swap(cpu_, other->cpu_);
    std::swap(healthreport_, other->healthreport_);
    std::swap(lasthealthreporttime_, other->lasthealthreporttime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeReportProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeReportProto_descriptor_;
  metadata.reflection = NodeReportProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClusterReportProto::kNodesFieldNumber;
#endif  // !_MSC_VER

ClusterReportProto::ClusterReportProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClusterReportProto::InitAsDefaultInstance() {
}

ClusterReportProto::ClusterReportProto(const ClusterReportProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClusterReportProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClusterReportProto::~ClusterReportProto() {
  SharedDtor();
}

void ClusterReportProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClusterReportProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterReportProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClusterReportProto_descriptor_;
}

const ClusterReportProto& ClusterReportProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

ClusterReportProto* ClusterReportProto::default_instance_ = NULL;

ClusterReportProto* ClusterReportProto::New() const {
  return new ClusterReportProto;
}

void ClusterReportProto::Clear() {
  nodes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClusterReportProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .yarnsimulator.NodeReportProto nodes = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_nodes;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClusterReportProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .yarnsimulator.NodeReportProto nodes = 1;
  for (int i = 0; i < this->nodes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClusterReportProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .yarnsimulator.NodeReportProto nodes = 1;
  for (int i = 0; i < this->nodes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->nodes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClusterReportProto::ByteSize() const {
  int total_size = 0;

  // repeated .yarnsimulator.NodeReportProto nodes = 1;
  total_size += 1 * this->nodes_size();
  for (int i = 0; i < this->nodes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nodes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterReportProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClusterReportProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClusterReportProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClusterReportProto::MergeFrom(const ClusterReportProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  nodes_.MergeFrom(from.nodes_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClusterReportProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterReportProto::CopyFrom(const ClusterReportProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterReportProto::IsInitialized() const {

  for (int i = 0; i < nodes_size(); i++) {
    if (!this->nodes(i).IsInitialized()) return false;
  }
  return true;
}

void ClusterReportProto::Swap(ClusterReportProto* other) {
  if (other != this) {
    nodes_.Swap(&other->nodes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClusterReportProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClusterReportProto_descriptor_;
  metadata.reflection = ClusterReportProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NodeResourceProto::kHostnameFieldNumber;
const int NodeResourceProto::kIpFieldNumber;
const int NodeResourceProto::kMinMemoryFieldNumber;
const int NodeResourceProto::kMaxMemoryFieldNumber;
const int NodeResourceProto::kFreeMemoryFieldNumber;
const int NodeResourceProto::kMinCpuFieldNumber;
const int NodeResourceProto::kMaxCpuFieldNumber;
const int NodeResourceProto::kFreeCpuFieldNumber;
#endif  // !_MSC_VER

NodeResourceProto::NodeResourceProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NodeResourceProto::InitAsDefaultInstance() {
}

NodeResourceProto::NodeResourceProto(const NodeResourceProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NodeResourceProto::SharedCtor() {
  _cached_size_ = 0;
  hostname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  min_memory_ = 0;
  max_memory_ = 0;
  free_memory_ = 0;
  min_cpu_ = 0;
  max_cpu_ = 0;
  free_cpu_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeResourceProto::~NodeResourceProto() {
  SharedDtor();
}

void NodeResourceProto::SharedDtor() {
  if (hostname_ != &::google::protobuf::internal::kEmptyString) {
    delete hostname_;
  }
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (this != default_instance_) {
  }
}

void NodeResourceProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeResourceProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeResourceProto_descriptor_;
}

const NodeResourceProto& NodeResourceProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

NodeResourceProto* NodeResourceProto::default_instance_ = NULL;

NodeResourceProto* NodeResourceProto::New() const {
  return new NodeResourceProto;
}

void NodeResourceProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_hostname()) {
      if (hostname_ != &::google::protobuf::internal::kEmptyString) {
        hostname_->clear();
      }
    }
    if (has_ip()) {
      if (ip_ != &::google::protobuf::internal::kEmptyString) {
        ip_->clear();
      }
    }
    min_memory_ = 0;
    max_memory_ = 0;
    free_memory_ = 0;
    min_cpu_ = 0;
    max_cpu_ = 0;
    free_cpu_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeResourceProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string hostname = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->hostname().data(), this->hostname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_ip;
        break;
      }

      // required string ip = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_min_memory;
        break;
      }

      // required int32 min_memory = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_memory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_memory_)));
          set_has_min_memory();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_max_memory;
        break;
      }

      // required int32 max_memory = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_memory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_memory_)));
          set_has_max_memory();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_free_memory;
        break;
      }

      // required int32 free_memory = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_free_memory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_memory_)));
          set_has_free_memory();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_min_cpu;
        break;
      }

      // required int32 min_cpu = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_cpu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_cpu_)));
          set_has_min_cpu();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_max_cpu;
        break;
      }

      // required int32 max_cpu = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_cpu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_cpu_)));
          set_has_max_cpu();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_free_cpu;
        break;
      }

      // required int32 free_cpu = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_free_cpu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_cpu_)));
          set_has_free_cpu();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NodeResourceProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string hostname = 1;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->hostname(), output);
  }

  // required string ip = 2;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->ip(), output);
  }

  // required int32 min_memory = 3;
  if (has_min_memory()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->min_memory(), output);
  }

  // required int32 max_memory = 4;
  if (has_max_memory()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_memory(), output);
  }

  // required int32 free_memory = 5;
  if (has_free_memory()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->free_memory(), output);
  }

  // required int32 min_cpu = 6;
  if (has_min_cpu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->min_cpu(), output);
  }

  // required int32 max_cpu = 7;
  if (has_max_cpu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->max_cpu(), output);
  }

  // required int32 free_cpu = 8;
  if (has_free_cpu()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->free_cpu(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NodeResourceProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string hostname = 1;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hostname(), target);
  }

  // required string ip = 2;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // required int32 min_memory = 3;
  if (has_min_memory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->min_memory(), target);
  }

  // required int32 max_memory = 4;
  if (has_max_memory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_memory(), target);
  }

  // required int32 free_memory = 5;
  if (has_free_memory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->free_memory(), target);
  }

  // required int32 min_cpu = 6;
  if (has_min_cpu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->min_cpu(), target);
  }

  // required int32 max_cpu = 7;
  if (has_max_cpu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->max_cpu(), target);
  }

  // required int32 free_cpu = 8;
  if (has_free_cpu()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->free_cpu(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NodeResourceProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string hostname = 1;
    if (has_hostname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hostname());
    }

    // required string ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // required int32 min_memory = 3;
    if (has_min_memory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_memory());
    }

    // required int32 max_memory = 4;
    if (has_max_memory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_memory());
    }

    // required int32 free_memory = 5;
    if (has_free_memory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_memory());
    }

    // required int32 min_cpu = 6;
    if (has_min_cpu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_cpu());
    }

    // required int32 max_cpu = 7;
    if (has_max_cpu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_cpu());
    }

    // required int32 free_cpu = 8;
    if (has_free_cpu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_cpu());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeResourceProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeResourceProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeResourceProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeResourceProto::MergeFrom(const NodeResourceProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hostname()) {
      set_hostname(from.hostname());
    }
    if (from.has_ip()) {
      set_ip(from.ip());
    }
    if (from.has_min_memory()) {
      set_min_memory(from.min_memory());
    }
    if (from.has_max_memory()) {
      set_max_memory(from.max_memory());
    }
    if (from.has_free_memory()) {
      set_free_memory(from.free_memory());
    }
    if (from.has_min_cpu()) {
      set_min_cpu(from.min_cpu());
    }
    if (from.has_max_cpu()) {
      set_max_cpu(from.max_cpu());
    }
    if (from.has_free_cpu()) {
      set_free_cpu(from.free_cpu());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeResourceProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeResourceProto::CopyFrom(const NodeResourceProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeResourceProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void NodeResourceProto::Swap(NodeResourceProto* other) {
  if (other != this) {
    std::swap(hostname_, other->hostname_);
    std::swap(ip_, other->ip_);
    std::swap(min_memory_, other->min_memory_);
    std::swap(max_memory_, other->max_memory_);
    std::swap(free_memory_, other->free_memory_);
    std::swap(min_cpu_, other->min_cpu_);
    std::swap(max_cpu_, other->max_cpu_);
    std::swap(free_cpu_, other->free_cpu_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeResourceProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeResourceProto_descriptor_;
  metadata.reflection = NodeResourceProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClusterResourceProto::kNodesFieldNumber;
#endif  // !_MSC_VER

ClusterResourceProto::ClusterResourceProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClusterResourceProto::InitAsDefaultInstance() {
}

ClusterResourceProto::ClusterResourceProto(const ClusterResourceProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClusterResourceProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClusterResourceProto::~ClusterResourceProto() {
  SharedDtor();
}

void ClusterResourceProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClusterResourceProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterResourceProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClusterResourceProto_descriptor_;
}

const ClusterResourceProto& ClusterResourceProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

ClusterResourceProto* ClusterResourceProto::default_instance_ = NULL;

ClusterResourceProto* ClusterResourceProto::New() const {
  return new ClusterResourceProto;
}

void ClusterResourceProto::Clear() {
  nodes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClusterResourceProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .yarnsimulator.NodeResourceProto nodes = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nodes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_nodes;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClusterResourceProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .yarnsimulator.NodeResourceProto nodes = 1;
  for (int i = 0; i < this->nodes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClusterResourceProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .yarnsimulator.NodeResourceProto nodes = 1;
  for (int i = 0; i < this->nodes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->nodes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClusterResourceProto::ByteSize() const {
  int total_size = 0;

  // repeated .yarnsimulator.NodeResourceProto nodes = 1;
  total_size += 1 * this->nodes_size();
  for (int i = 0; i < this->nodes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nodes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterResourceProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClusterResourceProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClusterResourceProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClusterResourceProto::MergeFrom(const ClusterResourceProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  nodes_.MergeFrom(from.nodes_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClusterResourceProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterResourceProto::CopyFrom(const ClusterResourceProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterResourceProto::IsInitialized() const {

  for (int i = 0; i < nodes_size(); i++) {
    if (!this->nodes(i).IsInitialized()) return false;
  }
  return true;
}

void ClusterResourceProto::Swap(ClusterResourceProto* other) {
  if (other != this) {
    nodes_.Swap(&other->nodes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClusterResourceProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClusterResourceProto_descriptor_;
  metadata.reflection = ClusterResourceProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateJobRequestProto::kJobContextFieldNumber;
#endif  // !_MSC_VER

CreateJobRequestProto::CreateJobRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CreateJobRequestProto::InitAsDefaultInstance() {
  jobcontext_ = const_cast< ::yarnsimulator::JobContextProto*>(&::yarnsimulator::JobContextProto::default_instance());
}

CreateJobRequestProto::CreateJobRequestProto(const CreateJobRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CreateJobRequestProto::SharedCtor() {
  _cached_size_ = 0;
  jobcontext_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateJobRequestProto::~CreateJobRequestProto() {
  SharedDtor();
}

void CreateJobRequestProto::SharedDtor() {
  if (this != default_instance_) {
    delete jobcontext_;
  }
}

void CreateJobRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateJobRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateJobRequestProto_descriptor_;
}

const CreateJobRequestProto& CreateJobRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

CreateJobRequestProto* CreateJobRequestProto::default_instance_ = NULL;

CreateJobRequestProto* CreateJobRequestProto::New() const {
  return new CreateJobRequestProto;
}

void CreateJobRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_jobcontext()) {
      if (jobcontext_ != NULL) jobcontext_->::yarnsimulator::JobContextProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateJobRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .yarnsimulator.JobContextProto jobContext = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_jobcontext()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CreateJobRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .yarnsimulator.JobContextProto jobContext = 1;
  if (has_jobcontext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->jobcontext(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CreateJobRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .yarnsimulator.JobContextProto jobContext = 1;
  if (has_jobcontext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->jobcontext(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CreateJobRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .yarnsimulator.JobContextProto jobContext = 1;
    if (has_jobcontext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->jobcontext());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateJobRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateJobRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateJobRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateJobRequestProto::MergeFrom(const CreateJobRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobcontext()) {
      mutable_jobcontext()->::yarnsimulator::JobContextProto::MergeFrom(from.jobcontext());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateJobRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateJobRequestProto::CopyFrom(const CreateJobRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateJobRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateJobRequestProto::Swap(CreateJobRequestProto* other) {
  if (other != this) {
    std::swap(jobcontext_, other->jobcontext_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateJobRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateJobRequestProto_descriptor_;
  metadata.reflection = CreateJobRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateJobResponseProto::kJobContextFieldNumber;
#endif  // !_MSC_VER

CreateJobResponseProto::CreateJobResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CreateJobResponseProto::InitAsDefaultInstance() {
  jobcontext_ = const_cast< ::yarnsimulator::JobContextProto*>(&::yarnsimulator::JobContextProto::default_instance());
}

CreateJobResponseProto::CreateJobResponseProto(const CreateJobResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CreateJobResponseProto::SharedCtor() {
  _cached_size_ = 0;
  jobcontext_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateJobResponseProto::~CreateJobResponseProto() {
  SharedDtor();
}

void CreateJobResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete jobcontext_;
  }
}

void CreateJobResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateJobResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateJobResponseProto_descriptor_;
}

const CreateJobResponseProto& CreateJobResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

CreateJobResponseProto* CreateJobResponseProto::default_instance_ = NULL;

CreateJobResponseProto* CreateJobResponseProto::New() const {
  return new CreateJobResponseProto;
}

void CreateJobResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_jobcontext()) {
      if (jobcontext_ != NULL) jobcontext_->::yarnsimulator::JobContextProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateJobResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .yarnsimulator.JobContextProto jobContext = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_jobcontext()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CreateJobResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .yarnsimulator.JobContextProto jobContext = 1;
  if (has_jobcontext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->jobcontext(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CreateJobResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .yarnsimulator.JobContextProto jobContext = 1;
  if (has_jobcontext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->jobcontext(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CreateJobResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .yarnsimulator.JobContextProto jobContext = 1;
    if (has_jobcontext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->jobcontext());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateJobResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateJobResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateJobResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateJobResponseProto::MergeFrom(const CreateJobResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobcontext()) {
      mutable_jobcontext()->::yarnsimulator::JobContextProto::MergeFrom(from.jobcontext());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateJobResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateJobResponseProto::CopyFrom(const CreateJobResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateJobResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateJobResponseProto::Swap(CreateJobResponseProto* other) {
  if (other != this) {
    std::swap(jobcontext_, other->jobcontext_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreateJobResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateJobResponseProto_descriptor_;
  metadata.reflection = CreateJobResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FinishJobRequestProto::kJobContextFieldNumber;
#endif  // !_MSC_VER

FinishJobRequestProto::FinishJobRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FinishJobRequestProto::InitAsDefaultInstance() {
  jobcontext_ = const_cast< ::yarnsimulator::JobContextProto*>(&::yarnsimulator::JobContextProto::default_instance());
}

FinishJobRequestProto::FinishJobRequestProto(const FinishJobRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FinishJobRequestProto::SharedCtor() {
  _cached_size_ = 0;
  jobcontext_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FinishJobRequestProto::~FinishJobRequestProto() {
  SharedDtor();
}

void FinishJobRequestProto::SharedDtor() {
  if (this != default_instance_) {
    delete jobcontext_;
  }
}

void FinishJobRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishJobRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FinishJobRequestProto_descriptor_;
}

const FinishJobRequestProto& FinishJobRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

FinishJobRequestProto* FinishJobRequestProto::default_instance_ = NULL;

FinishJobRequestProto* FinishJobRequestProto::New() const {
  return new FinishJobRequestProto;
}

void FinishJobRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_jobcontext()) {
      if (jobcontext_ != NULL) jobcontext_->::yarnsimulator::JobContextProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FinishJobRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .yarnsimulator.JobContextProto jobContext = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_jobcontext()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FinishJobRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .yarnsimulator.JobContextProto jobContext = 1;
  if (has_jobcontext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->jobcontext(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FinishJobRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .yarnsimulator.JobContextProto jobContext = 1;
  if (has_jobcontext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->jobcontext(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FinishJobRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .yarnsimulator.JobContextProto jobContext = 1;
    if (has_jobcontext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->jobcontext());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishJobRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FinishJobRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FinishJobRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FinishJobRequestProto::MergeFrom(const FinishJobRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobcontext()) {
      mutable_jobcontext()->::yarnsimulator::JobContextProto::MergeFrom(from.jobcontext());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FinishJobRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishJobRequestProto::CopyFrom(const FinishJobRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishJobRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FinishJobRequestProto::Swap(FinishJobRequestProto* other) {
  if (other != this) {
    std::swap(jobcontext_, other->jobcontext_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FinishJobRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FinishJobRequestProto_descriptor_;
  metadata.reflection = FinishJobRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FinishJobResponseProto::kJobContextFieldNumber;
#endif  // !_MSC_VER

FinishJobResponseProto::FinishJobResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FinishJobResponseProto::InitAsDefaultInstance() {
  jobcontext_ = const_cast< ::yarnsimulator::JobContextProto*>(&::yarnsimulator::JobContextProto::default_instance());
}

FinishJobResponseProto::FinishJobResponseProto(const FinishJobResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FinishJobResponseProto::SharedCtor() {
  _cached_size_ = 0;
  jobcontext_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FinishJobResponseProto::~FinishJobResponseProto() {
  SharedDtor();
}

void FinishJobResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete jobcontext_;
  }
}

void FinishJobResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinishJobResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FinishJobResponseProto_descriptor_;
}

const FinishJobResponseProto& FinishJobResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

FinishJobResponseProto* FinishJobResponseProto::default_instance_ = NULL;

FinishJobResponseProto* FinishJobResponseProto::New() const {
  return new FinishJobResponseProto;
}

void FinishJobResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_jobcontext()) {
      if (jobcontext_ != NULL) jobcontext_->::yarnsimulator::JobContextProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FinishJobResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .yarnsimulator.JobContextProto jobContext = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_jobcontext()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FinishJobResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .yarnsimulator.JobContextProto jobContext = 1;
  if (has_jobcontext()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->jobcontext(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FinishJobResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .yarnsimulator.JobContextProto jobContext = 1;
  if (has_jobcontext()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->jobcontext(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FinishJobResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .yarnsimulator.JobContextProto jobContext = 1;
    if (has_jobcontext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->jobcontext());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinishJobResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FinishJobResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FinishJobResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FinishJobResponseProto::MergeFrom(const FinishJobResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobcontext()) {
      mutable_jobcontext()->::yarnsimulator::JobContextProto::MergeFrom(from.jobcontext());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FinishJobResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinishJobResponseProto::CopyFrom(const FinishJobResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinishJobResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FinishJobResponseProto::Swap(FinishJobResponseProto* other) {
  if (other != this) {
    std::swap(jobcontext_, other->jobcontext_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FinishJobResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FinishJobResponseProto_descriptor_;
  metadata.reflection = FinishJobResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AllocateResourcesRequestProto::kJobIdFieldNumber;
const int AllocateResourcesRequestProto::kResourceGroupFieldNumber;
#endif  // !_MSC_VER

AllocateResourcesRequestProto::AllocateResourcesRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AllocateResourcesRequestProto::InitAsDefaultInstance() {
  resourcegroup_ = const_cast< ::yarnsimulator::ResourceGroupProto*>(&::yarnsimulator::ResourceGroupProto::default_instance());
}

AllocateResourcesRequestProto::AllocateResourcesRequestProto(const AllocateResourcesRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AllocateResourcesRequestProto::SharedCtor() {
  _cached_size_ = 0;
  jobid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  resourcegroup_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AllocateResourcesRequestProto::~AllocateResourcesRequestProto() {
  SharedDtor();
}

void AllocateResourcesRequestProto::SharedDtor() {
  if (jobid_ != &::google::protobuf::internal::kEmptyString) {
    delete jobid_;
  }
  if (this != default_instance_) {
    delete resourcegroup_;
  }
}

void AllocateResourcesRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocateResourcesRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllocateResourcesRequestProto_descriptor_;
}

const AllocateResourcesRequestProto& AllocateResourcesRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

AllocateResourcesRequestProto* AllocateResourcesRequestProto::default_instance_ = NULL;

AllocateResourcesRequestProto* AllocateResourcesRequestProto::New() const {
  return new AllocateResourcesRequestProto;
}

void AllocateResourcesRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_jobid()) {
      if (jobid_ != &::google::protobuf::internal::kEmptyString) {
        jobid_->clear();
      }
    }
    if (has_resourcegroup()) {
      if (resourcegroup_ != NULL) resourcegroup_->::yarnsimulator::ResourceGroupProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AllocateResourcesRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string jobId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jobid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->jobid().data(), this->jobid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_resourceGroup;
        break;
      }

      // required .yarnsimulator.ResourceGroupProto resourceGroup = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resourceGroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resourcegroup()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AllocateResourcesRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jobid().data(), this->jobid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->jobid(), output);
  }

  // required .yarnsimulator.ResourceGroupProto resourceGroup = 2;
  if (has_resourcegroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resourcegroup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AllocateResourcesRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jobid().data(), this->jobid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->jobid(), target);
  }

  // required .yarnsimulator.ResourceGroupProto resourceGroup = 2;
  if (has_resourcegroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->resourcegroup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AllocateResourcesRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string jobId = 1;
    if (has_jobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jobid());
    }

    // required .yarnsimulator.ResourceGroupProto resourceGroup = 2;
    if (has_resourcegroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resourcegroup());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocateResourcesRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AllocateResourcesRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AllocateResourcesRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AllocateResourcesRequestProto::MergeFrom(const AllocateResourcesRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobid()) {
      set_jobid(from.jobid());
    }
    if (from.has_resourcegroup()) {
      mutable_resourcegroup()->::yarnsimulator::ResourceGroupProto::MergeFrom(from.resourcegroup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AllocateResourcesRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocateResourcesRequestProto::CopyFrom(const AllocateResourcesRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocateResourcesRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AllocateResourcesRequestProto::Swap(AllocateResourcesRequestProto* other) {
  if (other != this) {
    std::swap(jobid_, other->jobid_);
    std::swap(resourcegroup_, other->resourcegroup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AllocateResourcesRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllocateResourcesRequestProto_descriptor_;
  metadata.reflection = AllocateResourcesRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AllocateResourcesResponseProto::kResourceGroupFieldNumber;
#endif  // !_MSC_VER

AllocateResourcesResponseProto::AllocateResourcesResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AllocateResourcesResponseProto::InitAsDefaultInstance() {
  resourcegroup_ = const_cast< ::yarnsimulator::ResourceGroupProto*>(&::yarnsimulator::ResourceGroupProto::default_instance());
}

AllocateResourcesResponseProto::AllocateResourcesResponseProto(const AllocateResourcesResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AllocateResourcesResponseProto::SharedCtor() {
  _cached_size_ = 0;
  resourcegroup_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AllocateResourcesResponseProto::~AllocateResourcesResponseProto() {
  SharedDtor();
}

void AllocateResourcesResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete resourcegroup_;
  }
}

void AllocateResourcesResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocateResourcesResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllocateResourcesResponseProto_descriptor_;
}

const AllocateResourcesResponseProto& AllocateResourcesResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

AllocateResourcesResponseProto* AllocateResourcesResponseProto::default_instance_ = NULL;

AllocateResourcesResponseProto* AllocateResourcesResponseProto::New() const {
  return new AllocateResourcesResponseProto;
}

void AllocateResourcesResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_resourcegroup()) {
      if (resourcegroup_ != NULL) resourcegroup_->::yarnsimulator::ResourceGroupProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AllocateResourcesResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .yarnsimulator.ResourceGroupProto resourceGroup = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resourcegroup()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AllocateResourcesResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .yarnsimulator.ResourceGroupProto resourceGroup = 1;
  if (has_resourcegroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->resourcegroup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AllocateResourcesResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .yarnsimulator.ResourceGroupProto resourceGroup = 1;
  if (has_resourcegroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->resourcegroup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AllocateResourcesResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .yarnsimulator.ResourceGroupProto resourceGroup = 1;
    if (has_resourcegroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resourcegroup());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocateResourcesResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AllocateResourcesResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AllocateResourcesResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AllocateResourcesResponseProto::MergeFrom(const AllocateResourcesResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resourcegroup()) {
      mutable_resourcegroup()->::yarnsimulator::ResourceGroupProto::MergeFrom(from.resourcegroup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AllocateResourcesResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocateResourcesResponseProto::CopyFrom(const AllocateResourcesResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocateResourcesResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AllocateResourcesResponseProto::Swap(AllocateResourcesResponseProto* other) {
  if (other != this) {
    std::swap(resourcegroup_, other->resourcegroup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AllocateResourcesResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllocateResourcesResponseProto_descriptor_;
  metadata.reflection = AllocateResourcesResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActiveResourcesRequestProto::kJobIdFieldNumber;
const int ActiveResourcesRequestProto::kResourceGroupFieldNumber;
#endif  // !_MSC_VER

ActiveResourcesRequestProto::ActiveResourcesRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActiveResourcesRequestProto::InitAsDefaultInstance() {
  resourcegroup_ = const_cast< ::yarnsimulator::ResourceGroupProto*>(&::yarnsimulator::ResourceGroupProto::default_instance());
}

ActiveResourcesRequestProto::ActiveResourcesRequestProto(const ActiveResourcesRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActiveResourcesRequestProto::SharedCtor() {
  _cached_size_ = 0;
  jobid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  resourcegroup_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActiveResourcesRequestProto::~ActiveResourcesRequestProto() {
  SharedDtor();
}

void ActiveResourcesRequestProto::SharedDtor() {
  if (jobid_ != &::google::protobuf::internal::kEmptyString) {
    delete jobid_;
  }
  if (this != default_instance_) {
    delete resourcegroup_;
  }
}

void ActiveResourcesRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActiveResourcesRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActiveResourcesRequestProto_descriptor_;
}

const ActiveResourcesRequestProto& ActiveResourcesRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

ActiveResourcesRequestProto* ActiveResourcesRequestProto::default_instance_ = NULL;

ActiveResourcesRequestProto* ActiveResourcesRequestProto::New() const {
  return new ActiveResourcesRequestProto;
}

void ActiveResourcesRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_jobid()) {
      if (jobid_ != &::google::protobuf::internal::kEmptyString) {
        jobid_->clear();
      }
    }
    if (has_resourcegroup()) {
      if (resourcegroup_ != NULL) resourcegroup_->::yarnsimulator::ResourceGroupProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActiveResourcesRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string jobId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jobid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->jobid().data(), this->jobid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_resourceGroup;
        break;
      }

      // required .yarnsimulator.ResourceGroupProto resourceGroup = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resourceGroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resourcegroup()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ActiveResourcesRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jobid().data(), this->jobid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->jobid(), output);
  }

  // required .yarnsimulator.ResourceGroupProto resourceGroup = 2;
  if (has_resourcegroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resourcegroup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActiveResourcesRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jobid().data(), this->jobid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->jobid(), target);
  }

  // required .yarnsimulator.ResourceGroupProto resourceGroup = 2;
  if (has_resourcegroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->resourcegroup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActiveResourcesRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string jobId = 1;
    if (has_jobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jobid());
    }

    // required .yarnsimulator.ResourceGroupProto resourceGroup = 2;
    if (has_resourcegroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resourcegroup());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActiveResourcesRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActiveResourcesRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActiveResourcesRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActiveResourcesRequestProto::MergeFrom(const ActiveResourcesRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobid()) {
      set_jobid(from.jobid());
    }
    if (from.has_resourcegroup()) {
      mutable_resourcegroup()->::yarnsimulator::ResourceGroupProto::MergeFrom(from.resourcegroup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActiveResourcesRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActiveResourcesRequestProto::CopyFrom(const ActiveResourcesRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActiveResourcesRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ActiveResourcesRequestProto::Swap(ActiveResourcesRequestProto* other) {
  if (other != this) {
    std::swap(jobid_, other->jobid_);
    std::swap(resourcegroup_, other->resourcegroup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActiveResourcesRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActiveResourcesRequestProto_descriptor_;
  metadata.reflection = ActiveResourcesRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActiveResourcesResponseProto::kResourceGroupFieldNumber;
#endif  // !_MSC_VER

ActiveResourcesResponseProto::ActiveResourcesResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActiveResourcesResponseProto::InitAsDefaultInstance() {
  resourcegroup_ = const_cast< ::yarnsimulator::ResourceGroupProto*>(&::yarnsimulator::ResourceGroupProto::default_instance());
}

ActiveResourcesResponseProto::ActiveResourcesResponseProto(const ActiveResourcesResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActiveResourcesResponseProto::SharedCtor() {
  _cached_size_ = 0;
  resourcegroup_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActiveResourcesResponseProto::~ActiveResourcesResponseProto() {
  SharedDtor();
}

void ActiveResourcesResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete resourcegroup_;
  }
}

void ActiveResourcesResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActiveResourcesResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActiveResourcesResponseProto_descriptor_;
}

const ActiveResourcesResponseProto& ActiveResourcesResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

ActiveResourcesResponseProto* ActiveResourcesResponseProto::default_instance_ = NULL;

ActiveResourcesResponseProto* ActiveResourcesResponseProto::New() const {
  return new ActiveResourcesResponseProto;
}

void ActiveResourcesResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_resourcegroup()) {
      if (resourcegroup_ != NULL) resourcegroup_->::yarnsimulator::ResourceGroupProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActiveResourcesResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .yarnsimulator.ResourceGroupProto resourceGroup = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resourcegroup()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ActiveResourcesResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .yarnsimulator.ResourceGroupProto resourceGroup = 1;
  if (has_resourcegroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->resourcegroup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActiveResourcesResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .yarnsimulator.ResourceGroupProto resourceGroup = 1;
  if (has_resourcegroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->resourcegroup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActiveResourcesResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .yarnsimulator.ResourceGroupProto resourceGroup = 1;
    if (has_resourcegroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resourcegroup());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActiveResourcesResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActiveResourcesResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActiveResourcesResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActiveResourcesResponseProto::MergeFrom(const ActiveResourcesResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resourcegroup()) {
      mutable_resourcegroup()->::yarnsimulator::ResourceGroupProto::MergeFrom(from.resourcegroup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActiveResourcesResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActiveResourcesResponseProto::CopyFrom(const ActiveResourcesResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActiveResourcesResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ActiveResourcesResponseProto::Swap(ActiveResourcesResponseProto* other) {
  if (other != this) {
    std::swap(resourcegroup_, other->resourcegroup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActiveResourcesResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActiveResourcesResponseProto_descriptor_;
  metadata.reflection = ActiveResourcesResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReleaseResourcesRequestProto::kJobIdFieldNumber;
const int ReleaseResourcesRequestProto::kResourceGroupFieldNumber;
#endif  // !_MSC_VER

ReleaseResourcesRequestProto::ReleaseResourcesRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReleaseResourcesRequestProto::InitAsDefaultInstance() {
  resourcegroup_ = const_cast< ::yarnsimulator::ResourceGroupProto*>(&::yarnsimulator::ResourceGroupProto::default_instance());
}

ReleaseResourcesRequestProto::ReleaseResourcesRequestProto(const ReleaseResourcesRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReleaseResourcesRequestProto::SharedCtor() {
  _cached_size_ = 0;
  jobid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  resourcegroup_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReleaseResourcesRequestProto::~ReleaseResourcesRequestProto() {
  SharedDtor();
}

void ReleaseResourcesRequestProto::SharedDtor() {
  if (jobid_ != &::google::protobuf::internal::kEmptyString) {
    delete jobid_;
  }
  if (this != default_instance_) {
    delete resourcegroup_;
  }
}

void ReleaseResourcesRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReleaseResourcesRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReleaseResourcesRequestProto_descriptor_;
}

const ReleaseResourcesRequestProto& ReleaseResourcesRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

ReleaseResourcesRequestProto* ReleaseResourcesRequestProto::default_instance_ = NULL;

ReleaseResourcesRequestProto* ReleaseResourcesRequestProto::New() const {
  return new ReleaseResourcesRequestProto;
}

void ReleaseResourcesRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_jobid()) {
      if (jobid_ != &::google::protobuf::internal::kEmptyString) {
        jobid_->clear();
      }
    }
    if (has_resourcegroup()) {
      if (resourcegroup_ != NULL) resourcegroup_->::yarnsimulator::ResourceGroupProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReleaseResourcesRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string jobId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jobid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->jobid().data(), this->jobid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_resourceGroup;
        break;
      }

      // required .yarnsimulator.ResourceGroupProto resourceGroup = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resourceGroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resourcegroup()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReleaseResourcesRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jobid().data(), this->jobid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->jobid(), output);
  }

  // required .yarnsimulator.ResourceGroupProto resourceGroup = 2;
  if (has_resourcegroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resourcegroup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReleaseResourcesRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string jobId = 1;
  if (has_jobid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jobid().data(), this->jobid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->jobid(), target);
  }

  // required .yarnsimulator.ResourceGroupProto resourceGroup = 2;
  if (has_resourcegroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->resourcegroup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReleaseResourcesRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string jobId = 1;
    if (has_jobid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jobid());
    }

    // required .yarnsimulator.ResourceGroupProto resourceGroup = 2;
    if (has_resourcegroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resourcegroup());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReleaseResourcesRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReleaseResourcesRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReleaseResourcesRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReleaseResourcesRequestProto::MergeFrom(const ReleaseResourcesRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jobid()) {
      set_jobid(from.jobid());
    }
    if (from.has_resourcegroup()) {
      mutable_resourcegroup()->::yarnsimulator::ResourceGroupProto::MergeFrom(from.resourcegroup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReleaseResourcesRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReleaseResourcesRequestProto::CopyFrom(const ReleaseResourcesRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReleaseResourcesRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ReleaseResourcesRequestProto::Swap(ReleaseResourcesRequestProto* other) {
  if (other != this) {
    std::swap(jobid_, other->jobid_);
    std::swap(resourcegroup_, other->resourcegroup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReleaseResourcesRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReleaseResourcesRequestProto_descriptor_;
  metadata.reflection = ReleaseResourcesRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReleaseResourcesResponseProto::kResourceGroupFieldNumber;
#endif  // !_MSC_VER

ReleaseResourcesResponseProto::ReleaseResourcesResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ReleaseResourcesResponseProto::InitAsDefaultInstance() {
  resourcegroup_ = const_cast< ::yarnsimulator::ResourceGroupProto*>(&::yarnsimulator::ResourceGroupProto::default_instance());
}

ReleaseResourcesResponseProto::ReleaseResourcesResponseProto(const ReleaseResourcesResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ReleaseResourcesResponseProto::SharedCtor() {
  _cached_size_ = 0;
  resourcegroup_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReleaseResourcesResponseProto::~ReleaseResourcesResponseProto() {
  SharedDtor();
}

void ReleaseResourcesResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete resourcegroup_;
  }
}

void ReleaseResourcesResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReleaseResourcesResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReleaseResourcesResponseProto_descriptor_;
}

const ReleaseResourcesResponseProto& ReleaseResourcesResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

ReleaseResourcesResponseProto* ReleaseResourcesResponseProto::default_instance_ = NULL;

ReleaseResourcesResponseProto* ReleaseResourcesResponseProto::New() const {
  return new ReleaseResourcesResponseProto;
}

void ReleaseResourcesResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_resourcegroup()) {
      if (resourcegroup_ != NULL) resourcegroup_->::yarnsimulator::ResourceGroupProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReleaseResourcesResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .yarnsimulator.ResourceGroupProto resourceGroup = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resourcegroup()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ReleaseResourcesResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .yarnsimulator.ResourceGroupProto resourceGroup = 1;
  if (has_resourcegroup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->resourcegroup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ReleaseResourcesResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .yarnsimulator.ResourceGroupProto resourceGroup = 1;
  if (has_resourcegroup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->resourcegroup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ReleaseResourcesResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .yarnsimulator.ResourceGroupProto resourceGroup = 1;
    if (has_resourcegroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resourcegroup());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReleaseResourcesResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReleaseResourcesResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReleaseResourcesResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReleaseResourcesResponseProto::MergeFrom(const ReleaseResourcesResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resourcegroup()) {
      mutable_resourcegroup()->::yarnsimulator::ResourceGroupProto::MergeFrom(from.resourcegroup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReleaseResourcesResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReleaseResourcesResponseProto::CopyFrom(const ReleaseResourcesResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReleaseResourcesResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReleaseResourcesResponseProto::Swap(ReleaseResourcesResponseProto* other) {
  if (other != this) {
    std::swap(resourcegroup_, other->resourcegroup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReleaseResourcesResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReleaseResourcesResponseProto_descriptor_;
  metadata.reflection = ReleaseResourcesResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetClusterReportRequestProto::kStateFieldNumber;
#endif  // !_MSC_VER

GetClusterReportRequestProto::GetClusterReportRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetClusterReportRequestProto::InitAsDefaultInstance() {
}

GetClusterReportRequestProto::GetClusterReportRequestProto(const GetClusterReportRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetClusterReportRequestProto::SharedCtor() {
  _cached_size_ = 0;
  state_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetClusterReportRequestProto::~GetClusterReportRequestProto() {
  SharedDtor();
}

void GetClusterReportRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetClusterReportRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterReportRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClusterReportRequestProto_descriptor_;
}

const GetClusterReportRequestProto& GetClusterReportRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

GetClusterReportRequestProto* GetClusterReportRequestProto::default_instance_ = NULL;

GetClusterReportRequestProto* GetClusterReportRequestProto::New() const {
  return new GetClusterReportRequestProto;
}

void GetClusterReportRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    state_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetClusterReportRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .yarnsimulator.NodeStateProto state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::yarnsimulator::NodeStateProto_IsValid(value)) {
            set_state(static_cast< ::yarnsimulator::NodeStateProto >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetClusterReportRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .yarnsimulator.NodeStateProto state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetClusterReportRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .yarnsimulator.NodeStateProto state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetClusterReportRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .yarnsimulator.NodeStateProto state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterReportRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetClusterReportRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetClusterReportRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetClusterReportRequestProto::MergeFrom(const GetClusterReportRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetClusterReportRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterReportRequestProto::CopyFrom(const GetClusterReportRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterReportRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetClusterReportRequestProto::Swap(GetClusterReportRequestProto* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetClusterReportRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClusterReportRequestProto_descriptor_;
  metadata.reflection = GetClusterReportRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetClusterReportResponseProto::kReportFieldNumber;
#endif  // !_MSC_VER

GetClusterReportResponseProto::GetClusterReportResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetClusterReportResponseProto::InitAsDefaultInstance() {
  report_ = const_cast< ::yarnsimulator::ClusterReportProto*>(&::yarnsimulator::ClusterReportProto::default_instance());
}

GetClusterReportResponseProto::GetClusterReportResponseProto(const GetClusterReportResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetClusterReportResponseProto::SharedCtor() {
  _cached_size_ = 0;
  report_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetClusterReportResponseProto::~GetClusterReportResponseProto() {
  SharedDtor();
}

void GetClusterReportResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete report_;
  }
}

void GetClusterReportResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterReportResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClusterReportResponseProto_descriptor_;
}

const GetClusterReportResponseProto& GetClusterReportResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

GetClusterReportResponseProto* GetClusterReportResponseProto::default_instance_ = NULL;

GetClusterReportResponseProto* GetClusterReportResponseProto::New() const {
  return new GetClusterReportResponseProto;
}

void GetClusterReportResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_report()) {
      if (report_ != NULL) report_->::yarnsimulator::ClusterReportProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetClusterReportResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .yarnsimulator.ClusterReportProto report = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_report()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetClusterReportResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .yarnsimulator.ClusterReportProto report = 1;
  if (has_report()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->report(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetClusterReportResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .yarnsimulator.ClusterReportProto report = 1;
  if (has_report()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->report(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetClusterReportResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .yarnsimulator.ClusterReportProto report = 1;
    if (has_report()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->report());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterReportResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetClusterReportResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetClusterReportResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetClusterReportResponseProto::MergeFrom(const GetClusterReportResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_report()) {
      mutable_report()->::yarnsimulator::ClusterReportProto::MergeFrom(from.report());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetClusterReportResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterReportResponseProto::CopyFrom(const GetClusterReportResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterReportResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_report()) {
    if (!this->report().IsInitialized()) return false;
  }
  return true;
}

void GetClusterReportResponseProto::Swap(GetClusterReportResponseProto* other) {
  if (other != this) {
    std::swap(report_, other->report_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetClusterReportResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClusterReportResponseProto_descriptor_;
  metadata.reflection = GetClusterReportResponseProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetClusterResourceRequestProto::kStateFieldNumber;
#endif  // !_MSC_VER

GetClusterResourceRequestProto::GetClusterResourceRequestProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetClusterResourceRequestProto::InitAsDefaultInstance() {
}

GetClusterResourceRequestProto::GetClusterResourceRequestProto(const GetClusterResourceRequestProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetClusterResourceRequestProto::SharedCtor() {
  _cached_size_ = 0;
  state_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetClusterResourceRequestProto::~GetClusterResourceRequestProto() {
  SharedDtor();
}

void GetClusterResourceRequestProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetClusterResourceRequestProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterResourceRequestProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClusterResourceRequestProto_descriptor_;
}

const GetClusterResourceRequestProto& GetClusterResourceRequestProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

GetClusterResourceRequestProto* GetClusterResourceRequestProto::default_instance_ = NULL;

GetClusterResourceRequestProto* GetClusterResourceRequestProto::New() const {
  return new GetClusterResourceRequestProto;
}

void GetClusterResourceRequestProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    state_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetClusterResourceRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .yarnsimulator.NodeStateProto state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::yarnsimulator::NodeStateProto_IsValid(value)) {
            set_state(static_cast< ::yarnsimulator::NodeStateProto >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetClusterResourceRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .yarnsimulator.NodeStateProto state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetClusterResourceRequestProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .yarnsimulator.NodeStateProto state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetClusterResourceRequestProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .yarnsimulator.NodeStateProto state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterResourceRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetClusterResourceRequestProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetClusterResourceRequestProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetClusterResourceRequestProto::MergeFrom(const GetClusterResourceRequestProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetClusterResourceRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterResourceRequestProto::CopyFrom(const GetClusterResourceRequestProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterResourceRequestProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetClusterResourceRequestProto::Swap(GetClusterResourceRequestProto* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetClusterResourceRequestProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClusterResourceRequestProto_descriptor_;
  metadata.reflection = GetClusterResourceRequestProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetClusterResourceResponseProto::kResourcesFieldNumber;
#endif  // !_MSC_VER

GetClusterResourceResponseProto::GetClusterResourceResponseProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetClusterResourceResponseProto::InitAsDefaultInstance() {
  resources_ = const_cast< ::yarnsimulator::ClusterResourceProto*>(&::yarnsimulator::ClusterResourceProto::default_instance());
}

GetClusterResourceResponseProto::GetClusterResourceResponseProto(const GetClusterResourceResponseProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetClusterResourceResponseProto::SharedCtor() {
  _cached_size_ = 0;
  resources_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetClusterResourceResponseProto::~GetClusterResourceResponseProto() {
  SharedDtor();
}

void GetClusterResourceResponseProto::SharedDtor() {
  if (this != default_instance_) {
    delete resources_;
  }
}

void GetClusterResourceResponseProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterResourceResponseProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClusterResourceResponseProto_descriptor_;
}

const GetClusterResourceResponseProto& GetClusterResourceResponseProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_yarnsimulator_2eproto();
  return *default_instance_;
}

GetClusterResourceResponseProto* GetClusterResourceResponseProto::default_instance_ = NULL;

GetClusterResourceResponseProto* GetClusterResourceResponseProto::New() const {
  return new GetClusterResourceResponseProto;
}

void GetClusterResourceResponseProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_resources()) {
      if (resources_ != NULL) resources_->::yarnsimulator::ClusterResourceProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetClusterResourceResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .yarnsimulator.ClusterResourceProto resources = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resources()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetClusterResourceResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .yarnsimulator.ClusterResourceProto resources = 1;
  if (has_resources()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->resources(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetClusterResourceResponseProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .yarnsimulator.ClusterResourceProto resources = 1;
  if (has_resources()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->resources(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetClusterResourceResponseProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .yarnsimulator.ClusterResourceProto resources = 1;
    if (has_resources()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resources());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterResourceResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetClusterResourceResponseProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetClusterResourceResponseProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetClusterResourceResponseProto::MergeFrom(const GetClusterResourceResponseProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resources()) {
      mutable_resources()->::yarnsimulator::ClusterResourceProto::MergeFrom(from.resources());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetClusterResourceResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterResourceResponseProto::CopyFrom(const GetClusterResourceResponseProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetClusterResourceResponseProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_resources()) {
    if (!this->resources().IsInitialized()) return false;
  }
  return true;
}

void GetClusterResourceResponseProto::Swap(GetClusterResourceResponseProto* other) {
  if (other != this) {
    std::swap(resources_, other->resources_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetClusterResourceResponseProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClusterResourceResponseProto_descriptor_;
  metadata.reflection = GetClusterResourceResponseProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace yarnsimulator

// @@protoc_insertion_point(global_scope)
