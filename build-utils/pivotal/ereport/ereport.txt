aaaaa GP_IGNORE: aaag: aocsam - ./backend/access/aocs/aocsam.c
aaag: aocsam:00000749:  ereport(ERROR, 
aaag: aocsam:00000750:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
aaag: aocsam:00000751:  errmsg("append-only column-oriented tables do not support rows with OIDs"))); 
aaaaa GP_IGNORE: aabc: aocssegfiles - ./backend/access/aocs/aocssegfiles.c
aabc: aocssegfiles:00000525:  elog(ERROR, "Should already have the (transaction-scope) write-lock on Append-Only segment file #%d, " 
aabc: aocssegfiles:00000526:  "relation %s", segno, 
aabc: aocssegfiles:00000527:  RelationGetRelationName(prel)); 
aabc: aocssegfiles:00000552:  ereport(ERROR, (errcode(ERRCODE_UNDEFINED_OBJECT), 
aabc: aocssegfiles:00000553:  errmsg("AOCS table \"%s\" file segment \"%d\" does not exist", 
aabc: aocssegfiles:00000554:  RelationGetRelationName(prel), segno) 
aabc: aocssegfiles:00000555:  )); 
aabc: aocssegfiles:00000637:  elog(ERROR, "Should already have the (transaction-scope) write-lock on Append-Only segment file #%d, " 
aabc: aocssegfiles:00000638:  "relation %s", segno, RelationGetRelationName(prel)); 
aabc: aocssegfiles:00000667:  ereport(ERROR, (errcode(ERRCODE_UNDEFINED_OBJECT), 
aabc: aocssegfiles:00000668:  errmsg("AOCS table \"%s\" file segment \"%d\" does not exist", 
aabc: aocssegfiles:00000669:  RelationGetRelationName(prel), segno) 
aabc: aocssegfiles:00000670:  )); 
aabc: aocssegfiles:00000712:  ereport(ERROR, (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aabc: aocssegfiles:00000713:  errmsg("invalid entry for decoding aocsvpinfo") 
aabc: aocssegfiles:00000714:  )); 
aabc: aocssegfiles:00000717:  ereport(ERROR, (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aabc: aocssegfiles:00000718:  errmsg("invalid entry for decoding aocsvpinfo") 
aabc: aocssegfiles:00000719:  )); 
aabc: aocssegfiles:00000763:  ereport(ERROR, 
aabc: aocssegfiles:00000764:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
aabc: aocssegfiles:00000765:  errmsg("gp_aocsseg cannot be called on segments."))); 
aabc: aocssegfiles:00000815:  ereport(ERROR, 
aabc: aocssegfiles:00000816:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aabc: aocssegfiles:00000817:  errmsg("'%s' is not an append-only columnar relation", 
aabc: aocssegfiles:00000818:  RelationGetRelationName(aocsRel)))); 
aabc: aocssegfiles:00000945:  ereport(ERROR, 
aabc: aocssegfiles:00000946:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
aabc: aocssegfiles:00000947:  errmsg("gp_aocsseg_history cannot be called on segments."))); 
aabc: aocssegfiles:00001017:  ereport(ERROR, 
aabc: aocssegfiles:00001018:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aabc: aocssegfiles:00001019:  errmsg("'%s' is not an append-only columnar relation", 
aabc: aocssegfiles:00001020:  RelationGetRelationName(aocsRel)))); 
aabc: aocssegfiles:00001141:  elog(ERROR, "failed to get relname for AO file segment"); 
aabc: aocssegfiles:00001157:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
aabc: aocssegfiles:00001158:  errmsg("Unable to obtain AO relation information from segment databases."), 
aabc: aocssegfiles:00001159:  errdetail("SPI_connect failed in gp_update_ao_master_stats"))); 
aabc: aocssegfiles:00001323:  elog(ERROR, "failed to get relname for AO file segment"); 
aabc: aocssegfiles:00001345:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
aabc: aocssegfiles:00001346:  errmsg("Unable to obtain AO relation information from segment databases."), 
aabc: aocssegfiles:00001347:  errdetail("SPI_connect failed in get_ao_compression_ratio"))); 
aaaaa GP_IGNORE: aaae: aomd - ./backend/access/appendonly/aomd.c
aaae: aomd:00000151:  elog(ERROR, "Did not find gp_relation_node entry for relation name %s, relation id %u, relfilenode %u, segment file #%d, logical eof " INT64_FORMAT, 
aaae: aomd:00000152:  rel->rd_rel->relname.data, 
aaae: aomd:00000153:  rel->rd_id, 
aaae: aomd:00000154:  rel->rd_node.relNode, 
aaae: aomd:00000155:  segmentFileNum, 
aaae: aomd:00000156:  logicalEof); 
aaae: aomd:00000172:  ereport(ERROR, 
aaae: aomd:00000173:  (errcode_for_file_access(), 
aaae: aomd:00000174:  errmsg("Could not open Append-Only segment file '%s': %s", 
aaae: aomd:00000175:  filepathname, 
aaae: aomd:00000176:  strerror(primaryError)))); 
aaaaa GP_IGNORE: aaba: aosegfiles - ./backend/access/appendonly/aosegfiles.c
aaba: aosegfiles:00000113:  elog(ERROR, "failed to build AO file segment tuple"); 
aaba: aosegfiles:00000206:  ereport(ERROR, 
aaba: aosegfiles:00000207:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaba: aosegfiles:00000208:  errmsg("got invalid eof value: NULL"))); 
aaba: aosegfiles:00000214:  ereport(ERROR, 
aaba: aosegfiles:00000215:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaba: aosegfiles:00000216:  errmsg("got invalid tupcount value: NULL"))); 
aaba: aosegfiles:00000222:  ereport(ERROR, 
aaba: aosegfiles:00000223:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaba: aosegfiles:00000224:  errmsg("got invalid varblockcount value: NULL"))); 
aaba: aosegfiles:00000256:  ereport(ERROR, 
aaba: aosegfiles:00000257:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
aaba: aosegfiles:00000258:  errmsg("Invalid eof " INT64_FORMAT " for relation %s", 
aaba: aosegfiles:00000259:  fsinfo->eof, RelationGetRelationName(parentrel)))); 
aaba: aosegfiles:00000501:  elog(ERROR, "Should already have the (transaction-scope) write-lock on Append-Only segment file #%d, " 
aaba: aosegfiles:00000502:  "relation %s", segno, RelationGetRelationName(parentrel)); 
aaba: aosegfiles:00000527:  ereport(ERROR, 
aaba: aosegfiles:00000528:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaba: aosegfiles:00000529:  errmsg("append-only table \"%s\" file segment \"%d\" entry " 
aaba: aosegfiles:00000530:  "does not exist", RelationGetRelationName(parentrel), 
aaba: aosegfiles:00000531:  segno))); 
aaba: aosegfiles:00000544:  ereport(ERROR, 
aaba: aosegfiles:00000545:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaba: aosegfiles:00000546:  errmsg("got invalid pg_aoseg filetupcount value: NULL"))); 
aaba: aosegfiles:00000560:  ereport(ERROR, 
aaba: aosegfiles:00000561:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaba: aosegfiles:00000562:  errmsg("got invalid pg_aoseg varblockcount value: NULL"))); 
aaba: aosegfiles:00000747:  ereport(ERROR, 
aaba: aosegfiles:00000748:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
aaba: aosegfiles:00000749:  errmsg("gp_aoseg_history cannot be called on segments."))); 
aaba: aosegfiles:00000815:  ereport(ERROR, 
aaba: aosegfiles:00000816:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaba: aosegfiles:00000817:  errmsg("'%s' is not an append-only row relation", 
aaba: aosegfiles:00000818:  RelationGetRelationName(aocsRel)))); 
aaba: aosegfiles:00000916:  elog(ERROR, "failed to get relname for AO file segment"); 
aaba: aosegfiles:00000932:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
aaba: aosegfiles:00000933:  errmsg("Unable to obtain AO relation information from segment databases."), 
aaba: aosegfiles:00000934:  errdetail("SPI_connect failed in gp_update_ao_master_stats"))); 
aaba: aosegfiles:00001090:  ereport(ERROR, 
aaba: aosegfiles:00001091:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaba: aosegfiles:00001092:  errmsg("'%s' is not an append-only relation", 
aaba: aosegfiles:00001093:  RelationGetRelationName(parentrel)))); 
aaba: aosegfiles:00001120:  ereport(ERROR, 
aaba: aosegfiles:00001121:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaba: aosegfiles:00001122:  errmsg("function gp_update_ao_master_stats not supported"), 
aaba: aosegfiles:00001123:  errOmitLocation(true))); 
aaba: aosegfiles:00001148:  ereport(ERROR, 
aaba: aosegfiles:00001149:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaba: aosegfiles:00001150:  errmsg("function gp_update_ao_master_stats not supported"), 
aaba: aosegfiles:00001151:  errOmitLocation(true))); 
aaba: aosegfiles:00001223:  ereport(ERROR, 
aaba: aosegfiles:00001224:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaba: aosegfiles:00001225:  errmsg("'%s' is not an append-only relation", 
aaba: aosegfiles:00001226:  RelationGetRelationName(parentrel)))); 
aaba: aosegfiles:00001237:  elog(ERROR, "failed to get relname for AO file segment"); 
aaba: aosegfiles:00001264:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
aaba: aosegfiles:00001265:  errmsg("Unable to obtain AO relation information from segment databases."), 
aaba: aosegfiles:00001266:  errdetail("SPI_connect failed in get_ao_distribution"))); 
aaba: aosegfiles:00001412:  ereport(ERROR, 
aaba: aosegfiles:00001413:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaba: aosegfiles:00001414:  errmsg("'%s' is not an append-only relation", 
aaba: aosegfiles:00001415:  RelationGetRelationName(parentrel)))); 
aaba: aosegfiles:00001427:  elog(ERROR, "failed to get relname for AO file segment"); 
aaba: aosegfiles:00001442:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
aaba: aosegfiles:00001443:  errmsg("Unable to obtain AO relation information from segment databases."), 
aaba: aosegfiles:00001444:  errdetail("SPI_connect failed in get_ao_distribution"))); 
aaba: aosegfiles:00001603:  elog(ERROR, "failed to get relname for AO file segment"); 
aaba: aosegfiles:00001623:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
aaba: aosegfiles:00001624:  errmsg("Unable to obtain AO relation information from segment databases."), 
aaba: aosegfiles:00001625:  errdetail("SPI_connect failed in get_ao_compression_ratio"))); 
aaba: aosegfiles:00001719:  ereport(ERROR, 
aaba: aosegfiles:00001720:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaba: aosegfiles:00001721:  errmsg("'%s' is not an append-only relation", 
aaba: aosegfiles:00001722:  RelationGetRelationName(parentrel)))); 
aaaaa GP_IGNORE: aabc: appendonlyam - ./backend/access/appendonly/appendonlyam.c
aabc: appendonlyam:00000684:  ereport(ERROR, 
aabc: appendonlyam:00000685:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
aabc: appendonlyam:00000686:  errmsg("VarBlock is not valid. " 
aabc: appendonlyam:00000687:  "Valid block check error %d, detail '%s'", 
aabc: appendonlyam:00000688:  varBlockCheckError, 
aabc: appendonlyam:00000689:  VarBlockGetCheckErrorStr()), 
aabc: appendonlyam:00000690:  errdetail_appendonly_read_storage_content_header(executorReadBlock->storageRead), 
aabc: appendonlyam:00000691:  errcontext_appendonly_read_storage_block(executorReadBlock->storageRead))); 
aabc: appendonlyam:00000706:  ereport(ERROR, 
aabc: appendonlyam:00000707:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
aabc: appendonlyam:00000708:  errmsg("Row count %d in append-only storage header does not match VarBlock item count %d", 
aabc: appendonlyam:00000709:  executorReadBlock->rowCount, 
aabc: appendonlyam:00000710:  executorReadBlock->readerItemCount), 
aabc: appendonlyam:00000711:  errdetail_appendonly_read_storage_content_header(executorReadBlock->storageRead), 
aabc: appendonlyam:00000712:  errcontext_appendonly_read_storage_block(executorReadBlock->storageRead))); 
aabc: appendonlyam:00000727:  ereport(ERROR, 
aabc: appendonlyam:00000728:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
aabc: appendonlyam:00000729:  errmsg("Row count %d in append-only storage header is not 1 for single row", 
aabc: appendonlyam:00000730:  executorReadBlock->rowCount), 
aabc: appendonlyam:00000731:  errdetail_appendonly_read_storage_content_header(executorReadBlock->storageRead), 
aabc: appendonlyam:00000732:  errcontext_appendonly_read_storage_block(executorReadBlock->storageRead))); 
aabc: appendonlyam:00000746:  elog(ERROR, "Unrecognized append-only executor block kind: %d", 
aabc: appendonlyam:00000747:  executorReadBlock->executorBlockKind); 
aabc: appendonlyam:00000994:  elog(NOTICE, "Varblock mismatch: Reader count %d, found %d items\n", 
aabc: appendonlyam:00000995:  executorReadBlock->readerItemCount, 
aabc: appendonlyam:00000996:  executorReadBlock->currentItemCount); 
aabc: appendonlyam:00001036:  elog(ERROR, "Unrecognized append-only executor block kind: %d", 
aabc: appendonlyam:00001037:  executorReadBlock->executorBlockKind); 
aabc: appendonlyam:00001116:  elog(ERROR, "Unrecognized append-only executor block kind: %d", 
aabc: appendonlyam:00001117:  executorReadBlock->executorBlockKind); 
aabc: appendonlyam:00001371:  ereport(ERROR, 
aabc: appendonlyam:00001372:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
aabc: appendonlyam:00001373:  errmsg("Verify block during write found VarBlock is not valid. " 
aabc: appendonlyam:00001374:  "Valid block check error %d, detail '%s'", 
aabc: appendonlyam:00001375:  varBlockCheckError, 
aabc: appendonlyam:00001376:  VarBlockGetCheckErrorStr()), 
aabc: appendonlyam:00001377:  errdetail_appendonly_insert_block_header(aoInsertDesc), 
aabc: appendonlyam:00001378:  errcontext_appendonly_insert_block(aoInsertDesc))); 
aabc: appendonlyam:00002124:  ereport(WARNING, 
aabc: appendonlyam:00002125:  (errmsg("Append-only fetch requires scan prior segment file: " 
aabc: appendonlyam:00002126:  "segmentFileNum %d, rowNum " INT64_FORMAT 
aabc: appendonlyam:00002127:  ", currentSegmentFileNum %d", 
aabc: appendonlyam:00002128:  segmentFileNum, rowNum, aoFetchDesc->currentSegmentFile.num))); 
aabc: appendonlyam:00002583:  ereport(ERROR, 
aabc: appendonlyam:00002584:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aabc: appendonlyam:00002585:  errmsg("Item too long (check #1): length %d, maxBufferLen %d", 
aabc: appendonlyam:00002586:  itemLen, aoInsertDesc->varBlockMaker.maxBufferLen), 
aabc: appendonlyam:00002587:  errcontext_appendonly_insert_block_user_limit(aoInsertDesc))); 
aabc: appendonlyam:00002625:  ereport(ERROR, 
aabc: appendonlyam:00002626:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aabc: appendonlyam:00002627:  errmsg("Item too long (check #2): length %d, maxBufferLen %d", 
aabc: appendonlyam:00002628:  itemLen, aoInsertDesc->varBlockMaker.maxBufferLen), 
aabc: appendonlyam:00002629:  errcontext_appendonly_insert_block_user_limit(aoInsertDesc))); 
aaaaa GP_IGNORE: aace: appendonlyblockdirectory - ./backend/access/appendonly/appendonlyblockdirectory.c
aace: appendonlyblockdirectory:00000415:  ereport(ERROR, 
aace: appendonlyblockdirectory:00000416:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
aace: appendonlyblockdirectory:00000417:  errmsg("Block directory for append-only relation '%s' does not exist", 
aace: appendonlyblockdirectory:00000418:  RelationGetRelationName(blockDirectory->aoRel)))); 
aaaaa GP_IGNORE: aabd: appendonlytid - ./backend/access/appendonly/appendonlytid.c
aabd: appendonlytid:00000058:  ereport(ERROR, 
aabd: appendonlytid:00000059:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aabd: appendonlytid:00000060:  errmsg("invalid input syntax for type gpaotid: \"%s\"", 
aabd: appendonlytid:00000061:  str))); 
aabd: appendonlytid:00000070:  ereport(ERROR, 
aabd: appendonlytid:00000071:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aabd: appendonlytid:00000072:  errmsg("invalid input syntax for type gpaotid: \"%s\"", 
aabd: appendonlytid:00000073:  str))); 
aabd: appendonlytid:00000078:  ereport(ERROR, 
aabd: appendonlytid:00000079:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aabd: appendonlytid:00000080:  errmsg("invalid input syntax for type gpaotid: \"%s\"", 
aabd: appendonlytid:00000081:  str))); 
aaaaa GP_IGNORE: aabg: appendonlywriter - ./backend/access/appendonly/appendonlywriter.c
aabg: appendonlywriter:00000099:  ereport(FATAL, 
aabg: appendonlywriter:00000100:  (errcode(ERRCODE_OUT_OF_MEMORY), 
aabg: appendonlywriter:00000101:  errmsg("not enough shared memory for append only writer"))); 
aabg: appendonlywriter:00000339:  ereport(ERROR, (errmsg("expected an AO hash entry for relid %d but " 
aabg: appendonlywriter:00000340:  "found none", relid))); 
aabg: appendonlywriter:00000465:  ereport(ERROR, 
aabg: appendonlywriter:00000466:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
aabg: appendonlywriter:00000467:  errmsg("int64 out of range"))); 
aabg: appendonlywriter:00000656:  ereport(ERROR, (errmsg("can't have more than %d different append-only " 
aabg: appendonlywriter:00000657:  "tables open for writing data at the same time. " 
aabg: appendonlywriter:00000658:  "if tables are heavily partitioned or if your " 
aabg: appendonlywriter:00000659:  "workload requires, increase the value of " 
aabg: appendonlywriter:00000660:  "max_appendonly_tables and retry", 
aabg: appendonlywriter:00000661:  MaxAppendOnlyTables))); 
aabg: appendonlywriter:00000734:  ereport(ERROR, (errmsg("could not find segment file to use for " 
aabg: appendonlywriter:00000735:  "inserting into relation %s (%d).", 
aabg: appendonlywriter:00000736:  get_rel_name(relid), relid))); 
aabg: appendonlywriter:00000842:  ereport(ERROR, 
aabg: appendonlywriter:00000843:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
aabg: appendonlywriter:00000844:  errmsg("int64 out of range (" INT64_FORMAT ")", (int64) tupcount))); 
aaaaa GP_IGNORE: baag: bitmap - ./backend/access/bitmap/bitmap.c
baag: bitmap:00000075:  elog(ERROR, "CONCURRENTLY is not supported when creating bitmap indexes"); 
baag: bitmap:00000079:  ereport (ERROR, 
baag: bitmap:00000080:  (errcode(ERRCODE_INDEX_CORRUPTED), 
baag: bitmap:00000081:  errmsg("index \"%s\" already contains data", 
baag: bitmap:00000082:  RelationGetRelationName(index)), 
baag: bitmap:00000083:  errSendAlert(true))); 
baag: bitmap:00000096:  ereport(ERROR, 
baag: bitmap:00000097:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
baag: bitmap:00000098:  errmsg("oids for bitmap index \"%s\" do not exist", 
baag: bitmap:00000099:  RelationGetRelationName(index)))); 
baag: bitmap:00000271:  elog(ERROR, "non stream bitmap"); 
baag: bitmap:00000753:  elog(ERROR, "scan position uninitialized"); 
aaaaa GP_IGNORE: babc: bitmapinsert - ./backend/access/bitmap/bitmapinsert.c
babc: bitmapinsert:00000723:  elog(ERROR, "Found incorrect bitmap words in LOV block %d offset %d. " 
babc: bitmapinsert:00000724:  "Please reindex", 
babc: bitmapinsert:00000725:  BufferGetBlockNumber(lovBuffer), lovOffset); 
babc: bitmapinsert:00000813:  elog(ERROR, "The header bit should be 1."); 
babc: bitmapinsert:00000924:  elog(ERROR, "the header bit should be 1."); 
babc: bitmapinsert:00001067:  elog(ERROR, "Can not find the bitmap page containing tid=" INT64_FORMAT 
babc: bitmapinsert:00001068:  ", nextBlockNo=%d" 
babc: bitmapinsert:00001069:  ", lov_head=%d, lov_tail=%d" 
babc: bitmapinsert:00001070:  ", firstTidNumber=" INT64_FORMAT 
babc: bitmapinsert:00001071:  ", bm_last_tid_location=" INT64_FORMAT 
babc: bitmapinsert:00001072:  ", bm_last_setbit=" INT64_FORMAT 
babc: bitmapinsert:00001073:  ", last_compword=" INT64_FORMAT 
babc: bitmapinsert:00001074:  ", last_word=" INT64_FORMAT 
babc: bitmapinsert:00001075:  ", headerbits=%d. Please reindex", 
babc: bitmapinsert:00001076:  tidnum, nextBlockNo, lovitem->bm_lov_head, lovitem->bm_lov_tail, 
babc: bitmapinsert:00001077:  *firstTidNumberP, lovitem->bm_last_tid_location, lovitem->bm_last_setbit, 
babc: bitmapinsert:00001078:  lovitem->bm_last_compword, lovitem->bm_last_word, lovitem->lov_words_header); 
babc: bitmapinsert:00001122:  elog(ERROR, "bm_last_tid_location=" INT64_FORMAT ", tidnum=" INT64_FORMAT, 
babc: bitmapinsert:00001123:  bitmapOpaque->bm_last_tid_location, tidnum); 
babc: bitmapinsert:00001639:  ereport(ERROR, 
babc: bitmapinsert:00001640:  (errcode(ERRCODE_INTERNAL_ERROR), 
babc: bitmapinsert:00001641:  errmsg("failed to add LOV item to \"%s\"", 
babc: bitmapinsert:00001642:  RelationGetRelationName(rel)))); 
babc: bitmapinsert:00001796:  ereport(ERROR, 
babc: bitmapinsert:00001797:  (errcode(ERRCODE_INTERNAL_ERROR), 
babc: bitmapinsert:00001798:  errmsg("tids are not in order when building the bitmap index: " 
babc: bitmapinsert:00001799:  "new tidnum " INT64_FORMAT ", last tidnum " INT64_FORMAT, 
babc: bitmapinsert:00001800:  tidnum, buf->last_tid))); 
aaaaa GP_IGNORE: babb: bitmappages - ./backend/access/bitmap/bitmappages.c
babb: bitmappages:00000378:  ereport(ERROR, 
babb: bitmappages:00000379:  (errcode(ERRCODE_INDEX_CORRUPTED), 
babb: bitmappages:00000380:  errmsg("cannot initialize non-empty bitmap index \"%s\"", 
babb: bitmappages:00000381:  RelationGetRelationName(rel)), 
babb: bitmappages:00000382:  errSendAlert(true))); 
babb: bitmappages:00000435:  ereport(ERROR, 
babb: bitmappages:00000436:  (errcode(ERRCODE_INTERNAL_ERROR), 
babb: bitmappages:00000437:  errmsg("failed to add LOV item to \"%s\"", 
babb: bitmappages:00000438:  RelationGetRelationName(rel)))); 
aaaaa GP_IGNORE: baba: bitmaputil - ./backend/access/bitmap/bitmaputil.c
baba: bitmaputil:00000098:  ereport(ERROR, 
baba: bitmaputil:00000099:  (0, 
baba: bitmaputil:00000100:  errmsg("The disk format for %s is not valid for this version of " 
baba: bitmaputil:00000101:  "Greenplum Database. Use REINDEX %s to update this index", 
baba: bitmaputil:00000102:  RelationGetRelationName(rel), RelationGetRelationName(rel)))); 
aaaaa GP_IGNORE: baba: bitmapxlog - ./backend/access/bitmap/bitmapxlog.c
baba: bitmapxlog:00000226:  ereport(ERROR, 
baba: bitmapxlog:00000227:  (errcode(ERRCODE_INTERNAL_ERROR), 
baba: bitmapxlog:00000228:  errmsg("_bitmap_xlog_insert_lovitem: failed to add LOV " 
baba: bitmapxlog:00000229:  "item to \"%s\"", 
baba: bitmapxlog:00000230:  RelationGetRelationName(reln)))); 
aaaaa GP_IGNORE: haaj: heaptuple - ./backend/access/common/heaptuple.c
haaj: heaptuple:00000295:  elog(ERROR, "invalid attnum: %d", attnum); 
haaj: heaptuple:00000618:  elog(ERROR, "Invalid reference to \"tableoid\" system attribute"); 
haaj: heaptuple:00000626:  elog(ERROR, "invalid attnum: %d", attnum); 
haaj: heaptuple:00000720:  ereport(ERROR, 
haaj: heaptuple:00000721:  (errcode(ERRCODE_TOO_MANY_COLUMNS), 
haaj: heaptuple:00000722:  errmsg("number of columns (%d) exceeds limit (%d)", 
haaj: heaptuple:00000723:  numberOfAttributes, MaxTupleAttributeNumber))); 
haaj: heaptuple:00001227:  elog(ERROR, "invalid attribute number %d", attnum); 
haaj: heaptuple:00001235:  elog(ERROR, "cannot extract attribute from empty tuple slot"); 
aaaaa GP_IGNORE: iaba: indextuple - ./backend/access/common/indextuple.c
iaba: indextuple:00000054:  ereport(ERROR, 
iaba: indextuple:00000055:  (errcode(ERRCODE_TOO_MANY_COLUMNS), 
iaba: indextuple:00000056:  errmsg("number of index columns (%d) exceeds limit (%d)", 
iaba: indextuple:00000057:  numberOfAttributes, INDEX_MAX_KEYS))); 
iaba: indextuple:00000164:  ereport(ERROR, 
iaba: indextuple:00000165:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
iaba: indextuple:00000166:  errmsg("index row requires %lu bytes, maximum size is %lu", 
iaba: indextuple:00000167:  (unsigned long) size, 
iaba: indextuple:00000168:  (unsigned long) INDEX_SIZE_MASK))); 
aaaaa GP_IGNORE: paai: printtup - ./backend/access/common/printtup.c
paai: printtup:00000266:  ereport(ERROR, 
paai: printtup:00000267:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paai: printtup:00000268:  errmsg("unsupported format code: %d", format))); 
aaaaa GP_IGNORE: raba: reloptions - ./backend/access/common/reloptions.c
raba: reloptions:00000117:  ereport(ERROR, 
raba: reloptions:00000118:  (errcode(ERRCODE_SYNTAX_ERROR), 
raba: reloptions:00000119:  errmsg("RESET must not include values for parameters"))); 
raba: reloptions:00000258:  ereport(ERROR, 
raba: reloptions:00000259:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000260:  errmsg("duplicate parameter \"%s\"", 
raba: reloptions:00000261:  keywords[j]))); 
raba: reloptions:00000279:  ereport(ERROR, 
raba: reloptions:00000280:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000281:  errmsg("unrecognized parameter \"%s\"", s), 
raba: reloptions:00000282:  errOmitLocation(true))); 
raba: reloptions:00000330:  ereport(ERROR, 
raba: reloptions:00000331:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000332:  errmsg("fillfactor=%d is out of range (should " 
raba: reloptions:00000333:  "be between %d and 100)", 
raba: reloptions:00000334:  fillfactor, minFillfactor), 
raba: reloptions:00000335:  errOmitLocation(true))); 
raba: reloptions:00000345:  ereport(ERROR, 
raba: reloptions:00000346:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000347:  errmsg("usage of parameter \"appendonly\" in a non relation object is not supported"), 
raba: reloptions:00000348:  errOmitLocation(false))); 
raba: reloptions:00000353:  ereport(ERROR, 
raba: reloptions:00000354:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000355:  errmsg("invalid parameter value for \"appendonly\": \"%s\"", 
raba: reloptions:00000356:  values[1]), 
raba: reloptions:00000357:  errOmitLocation(true))); 
raba: reloptions:00000367:  ereport(ERROR, 
raba: reloptions:00000368:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000369:  errmsg("usage of parameter \"blocksize\" in a non relation object is not supported"), 
raba: reloptions:00000370:  errOmitLocation(false))); 
raba: reloptions:00000373:  ereport(ERROR, 
raba: reloptions:00000374:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
raba: reloptions:00000375:  errmsg("invalid option \'blocksize\' for base relation. " 
raba: reloptions:00000376:  "Only valid for Append Only relations"), 
raba: reloptions:00000377:  errOmitLocation(true))); 
raba: reloptions:00000385:  ereport(ERROR, 
raba: reloptions:00000386:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000387:  errmsg("block size must be between 8KB and 2MB and " 
raba: reloptions:00000388:  "be an 8KB multiple. Got %d", blocksize), 
raba: reloptions:00000389:  errOmitLocation(true))); 
raba: reloptions:00000400:  ereport(ERROR, 
raba: reloptions:00000401:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000402:  errmsg("usage of parameter \"compresstype\" in a non relation object is not supported"), 
raba: reloptions:00000403:  errOmitLocation(false))); 
raba: reloptions:00000406:  ereport(ERROR, 
raba: reloptions:00000407:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
raba: reloptions:00000408:  errmsg("invalid option \'compresstype\' for base relation. " 
raba: reloptions:00000409:  "Only valid for Append Only relations"), 
raba: reloptions:00000410:  errOmitLocation(true))); 
raba: reloptions:00000415:  ereport(ERROR, 
raba: reloptions:00000416:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
raba: reloptions:00000417:  errmsg("unknown compresstype \"%s\"", compresstype), 
raba: reloptions:00000418:  errOmitLocation(true))); 
raba: reloptions:00000425:  ereport(ERROR, 
raba: reloptions:00000426:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000427:  errmsg("usage of parameter \"compresslevel\" in a non relation object is not supported"), 
raba: reloptions:00000428:  errOmitLocation(false))); 
raba: reloptions:00000431:  ereport(ERROR, 
raba: reloptions:00000432:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
raba: reloptions:00000433:  errmsg("invalid option \'compresslevel\' for base relation. " 
raba: reloptions:00000434:  "Only valid for Append Only relations"), 
raba: reloptions:00000435:  errOmitLocation(true))); 
raba: reloptions:00000441:  ereport(ERROR, 
raba: reloptions:00000442:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000443:  errmsg("compresstype can\'t be used with compresslevel 0"), 
raba: reloptions:00000444:  errOmitLocation(true))); 
raba: reloptions:00000448:  ereport(ERROR, 
raba: reloptions:00000449:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000450:  errmsg("compresslevel=%d is out of range (should be " 
raba: reloptions:00000451:  "between 0 and 9)", 
raba: reloptions:00000452:  compresslevel), 
raba: reloptions:00000453:  errOmitLocation(true))); 
raba: reloptions:00000473:  ereport(ERROR, 
raba: reloptions:00000474:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000475:  errmsg("compresslevel=%d is out of range for quicklz " 
raba: reloptions:00000476:  "(should be 1)", compresslevel), 
raba: reloptions:00000477:  errOmitLocation(true))); 
raba: reloptions:00000487:  ereport(ERROR, 
raba: reloptions:00000488:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000489:  errmsg("compresslevel=%d is out of range for rle_type " 
raba: reloptions:00000490:  "(should be in the range 1 to 4)", compresslevel), 
raba: reloptions:00000491:  errOmitLocation(true))); 
raba: reloptions:00000505:  ereport(ERROR, 
raba: reloptions:00000506:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000507:  errmsg("usage of parameter \"checksum\" in a non relation object is not supported"), 
raba: reloptions:00000508:  errOmitLocation(false))); 
raba: reloptions:00000511:  ereport(ERROR, 
raba: reloptions:00000512:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
raba: reloptions:00000513:  errmsg("invalid option \'checksum\' for base relation. " 
raba: reloptions:00000514:  "Only valid for Append Only relations"), 
raba: reloptions:00000515:  errOmitLocation(true))); 
raba: reloptions:00000521:  ereport(ERROR, 
raba: reloptions:00000522:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000523:  errmsg("invalid parameter value for \"checksum\": \"%s\"", 
raba: reloptions:00000524:  values[5]), 
raba: reloptions:00000525:  errOmitLocation(true))); 
raba: reloptions:00000534:  ereport(ERROR, 
raba: reloptions:00000535:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000536:  errmsg("usage of parameter \"orientation\" in a non relation object is not supported"), 
raba: reloptions:00000537:  errOmitLocation(false))); 
raba: reloptions:00000540:  ereport(ERROR, 
raba: reloptions:00000541:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
raba: reloptions:00000542:  errmsg("invalid option \"orientation\" for base relation. " 
raba: reloptions:00000543:  "Only valid for Append Only relations"), 
raba: reloptions:00000544:  errOmitLocation(true))); 
raba: reloptions:00000550:  ereport(ERROR, 
raba: reloptions:00000551:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000552:  errmsg("invalid parameter value for \"orientation\": \"%s\"", 
raba: reloptions:00000553:  values[6]), 
raba: reloptions:00000554:  errOmitLocation(true))); 
raba: reloptions:00000564:  ereport(ERROR, 
raba: reloptions:00000565:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000566:  errmsg("%s cannot be used with Append Only relations row orientation", 
raba: reloptions:00000567:  compresstype), 
raba: reloptions:00000568:  errOmitLocation(true))); 
raba: reloptions:00000576:  ereport(ERROR, 
raba: reloptions:00000577:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000578:  errmsg("usage of parameter \"errortable\" in a non relation object is not supported"), 
raba: reloptions:00000579:  errOmitLocation(false))); 
raba: reloptions:00000582:  ereport(ERROR, 
raba: reloptions:00000583:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
raba: reloptions:00000584:  errmsg("invalid option \"errortable\" for base relation. " 
raba: reloptions:00000585:  "Only valid for heap relations"), 
raba: reloptions:00000586:  errOmitLocation(true))); 
raba: reloptions:00000591:  ereport(ERROR, 
raba: reloptions:00000592:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000593:  errmsg("invalid parameter value for \"errortable\": \"%s\"", 
raba: reloptions:00000594:  values[7]), 
raba: reloptions:00000595:  errOmitLocation(true))); 
raba: reloptions:00000794:  ereport(ERROR, 
raba: reloptions:00000795:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
raba: reloptions:00000796:  errmsg("appendonly may only be specified for base relations"))); 
raba: reloptions:00000799:  ereport(ERROR, 
raba: reloptions:00000800:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
raba: reloptions:00000801:  errmsg("checksum may only be specified for base relations"))); 
raba: reloptions:00000804:  ereport(ERROR, 
raba: reloptions:00000805:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
raba: reloptions:00000806:  errmsg("compresstype may only be specified for base relations"))); 
raba: reloptions:00000818:  ereport(ERROR, 
raba: reloptions:00000819:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000820:  errmsg("%s cannot be used with Append Only relations row orientation", 
raba: reloptions:00000821:  comptype))); 
raba: reloptions:00000825:  ereport(ERROR, 
raba: reloptions:00000826:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000827:  errmsg("compresstype cannot be used with compresslevel 0"))); 
raba: reloptions:00000830:  ereport(ERROR, 
raba: reloptions:00000831:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000832:  errmsg("compresslevel=%d is out of range (should be between 0 and 9)", 
raba: reloptions:00000833:  complevel))); 
raba: reloptions:00000841:  ereport(ERROR, 
raba: reloptions:00000842:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000843:  errmsg("compresslevel=%d is out of range for quicklz " 
raba: reloptions:00000844:  "(should be 1)", complevel))); 
raba: reloptions:00000850:  ereport(ERROR, 
raba: reloptions:00000851:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000852:  errmsg("compresslevel=%d is out of range for rle_type " 
raba: reloptions:00000853:  "(should be in the range 1 to 4)", complevel))); 
raba: reloptions:00000859:  ereport(ERROR, 
raba: reloptions:00000860:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000861:  errmsg("block size must be between 8KB and 2MB and " 
raba: reloptions:00000862:  "be an 8KB multiple, Got %d", blocksize))); 
raba: reloptions:00000865:  ereport(ERROR, 
raba: reloptions:00000866:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000867:  errmsg("safefswrite size must be less than 8MB and " 
raba: reloptions:00000868:  "be a multiple of 8"))); 
raba: reloptions:00000871:  ereport(ERROR, 
raba: reloptions:00000872:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raba: reloptions:00000873:  errmsg("block size (%d) is smaller gp_safefswritesize (%d). " 
raba: reloptions:00000874:  "increase blocksize or decrease gp_safefswritesize if it " 
raba: reloptions:00000875:  "is safe to do so on this file system", 
raba: reloptions:00000876:  blocksize, gp_safefswritesize))); 
aaaaa GP_IGNORE: taah: tupdesc - ./backend/access/common/tupdesc.c
taah: tupdesc:00000497:  elog(ERROR, "cache lookup failed for type %u", oidtypeid); 
taah: tupdesc:00000558:  ereport(ERROR, 
taah: tupdesc:00000559:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taah: tupdesc:00000560:  errmsg("column \"%s\" cannot be declared SETOF", 
taah: tupdesc:00000561:  attname))); 
aaaaa GP_IGNORE: faag: fileam - ./backend/access/external/fileam.c
faag: fileam:00000551:  ereport(ERROR, 
faag: fileam:00000552:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
faag: fileam:00000553:  errmsg("External table has more URLs then available primary " 
faag: fileam:00000554:  "segments that can write into them"))); 
faag: fileam:00000561:  /*elog(NOTICE, "seg %d got url number %d: %s", segindex, my_url, uri_str);*/ 
faag: fileam:00000562:  } 
faag: fileam:00000563:  
faag: fileam:00000564:  /* 
faag: fileam:00000565:  * Allocate and init our structure that keeps track of data parsing state 
faag: fileam:00000566:  */ 
faag: fileam:00000567:  extInsertDesc->ext_pstate = (CopyStateData *) palloc0(sizeof(CopyStateData)); 
faag: fileam:00000675:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
faag: fileam:00000841:  ereport(ERROR, \ 
faag: fileam:00000842:  (errcode(ERRCODE_T_R_GP_REJECT_LIMIT_REACHED), \ 
faag: fileam:00000843:  (errmsg("%s", finalmsg) \ 
faag: fileam:00000844:  ),errOmitLocation(true))); \ 
faag: fileam:00000845: } 
faag: fileam:00000846:  
faag: fileam:00000847: /* 
faag: fileam:00000848:  * parse_next_line 
faag: fileam:00000849:  * 
faag: fileam:00000850:  * Given a buffer of data, extract the next data line from it and parse it 
faag: fileam:00000851:  * to attributes according to the data format specifications. 
faag: fileam:00000852:  * 
faag: fileam:00000853:  * Returns: 
faag: fileam:00000854:  * LINE_OK - line parsed successfully. 
faag: fileam:00000855:  * LINE_ERROR - line was mal-formatted. error caught and handled. 
faag: fileam:00000856:  * NEED_MORE_DATA - line not parsed all the way through. need more data. 
faag: fileam:00000857:  * END_MARKER - saw line end marker. skip attr parsing, we're done. 
faag: fileam:00000858:  */ 
faag: fileam:00000859: static DataLineStatus parse_next_line(FileScanDesc scan) 
faag: fileam:00000860: { 
faag: fileam:00000861:  CopyState pstate = scan->fs_pstate; 
faag: fileam:00001092:  elog(ERROR, "header line in custom format is not yet supported"); 
faag: fileam:00001189:  elog(ERROR, "unsupported formatter notification (%d)", 
faag: fileam:00001190:  formatter->fmt_notification); 
faag: fileam:00001287:  ereport(ERROR, (errcode(ERRCODE_UNDEFINED_FUNCTION), 
faag: fileam:00001288:  errmsg("formatter function %s of type %s was not found.", 
faag: fileam:00001289:  formatter_name, 
faag: fileam:00001290:  (iswritable ? "writable" : "readable")), 
faag: fileam:00001291:  errhint("Create it with CREATE FUNCTION."), 
faag: fileam:00001292:  errOmitLocation(true))); 
faag: fileam:00001296:  ereport(ERROR, (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
faag: fileam:00001297:  errmsg("formatter function %s of type %s has an incorrect return type", 
faag: fileam:00001298:  formatter_name, 
faag: fileam:00001299:  (iswritable ? "writable" : "readable")), 
faag: fileam:00001300:  errOmitLocation(true))); 
faag: fileam:00001304:  ereport(ERROR, 
faag: fileam:00001305:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
faag: fileam:00001306:  errmsg("formatter function %s is not declared STABLE.", 
faag: fileam:00001307:  formatter_name), 
faag: fileam:00001308:  errOmitLocation(true))); 
faag: fileam:00001393:  ereport(ERROR, (errcode(ERRCODE_UNDEFINED_TABLE), 
faag: fileam:00001394:  errmsg("The specified error table for this " 
faag: fileam:00001395:  "external table doesn't appear to " 
faag: fileam:00001396:  "exist in the database. It may have " 
faag: fileam:00001397:  "been dropped."), 
faag: fileam:00001398:  errhint("Refresh your external table definition."))); 
faag: fileam:00001459:  ereport(ERROR, 
faag: fileam:00001460:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
faag: fileam:00001461:  errmsg("No formatter function defined for this external table."))); 
faag: fileam:00001651:  ereport(ERROR, 
faag: fileam:00001652:  (errcode_for_file_access(), 
faag: fileam:00001653:  errmsg("could not open \"%s\" for reading: %d %s", 
faag: fileam:00001654:  scan->fs_uri, response_code, response_string), 
faag: fileam:00001655:  errOmitLocation(true))); 
faag: fileam:00001703:  ereport(ERROR, 
faag: fileam:00001704:  (errcode_for_file_access(), 
faag: fileam:00001705:  errmsg("could not open \"%s\" for writing: %d %s", 
faag: fileam:00001706:  extInsertDesc->ext_uri, response_code, response_string))); 
faag: fileam:00001765:  ereport(ERROR, 
faag: fileam:00001766:  (errcode_for_file_access(), 
faag: fileam:00001767:  errmsg("could not read from external file: %m"))); 
faag: fileam:00001789:  ereport(ERROR, 
faag: fileam:00001790:  (errcode_for_file_access(), 
faag: fileam:00001791:  strlen(ebuf) > 0 ? errmsg("could not write to external resource:\n%s",ebuf) : 
faag: fileam:00001792:  errmsg("could not write to external resource: %m"))); 
faag: fileam:00001915:  elog(NOTICE,"gfile_printf_then_putc_newline vsnprintf failed."); 
faag: fileam:00001917:  elog(NOTICE,"gfile_printf_then_putc_newline palloc failed."); 
faag: fileam:00001923:  elog(NOTICE,"%s",a); 
faag: fileam:00002522:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
faag: fileam:00002523:  errmsg("external table internal parse error: " 
faag: fileam:00002524:  "no formatter function name found"))); 
faag: fileam:00002530:  elog(NOTICE, "delim %s null %s escape %s quote %s %s %s", pstate->delim, 
faag: fileam:00002531:  pstate->null_print, pstate->escape, pstate->quote, (pstate->header_line 
faag: fileam:00002532:  ? "header" : ""), (pstate->fill_missing ? "fill missing fields" : "")); 
faag: fileam:00002539:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
faag: fileam:00002540:  errmsg("external table internal parse error at \"%s\"", 
faag: fileam:00002541:  token))); 
faag: fileam:00002543:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
faag: fileam:00002544:  errmsg("external table internal parse error at end of " 
faag: fileam:00002545:  "line"))); 
aaaaa GP_IGNORE: habb: hdxworkxmgr - ./backend/access/external/hd_work_mgr.c
habb: hdxworkxmgr:00000169:  ereport(ERROR, 
habb: hdxworkxmgr:00000170:  (errcode(ERRCODE_INTERNAL_ERROR), 
habb: hdxworkxmgr:00000171:  errmsg("invalid parameter relation"))); 
habb: hdxworkxmgr:00000365:  ereport(ERROR, 
habb: hdxworkxmgr:00000366:  (errcode(ERRCODE_SYNTAX_ERROR), 
habb: hdxworkxmgr:00000367:  errmsg("No value assigned to the FRAGMENTER option in " 
habb: hdxworkxmgr:00000368:  "the pxf uri: %s", hadoop_uri->uri))); 
habb: hdxworkxmgr:00000372:  ereport(ERROR, 
habb: hdxworkxmgr:00000373:  (errcode(ERRCODE_SYNTAX_ERROR), 
habb: hdxworkxmgr:00000374:  errmsg("Missing FRAGMENTER option in the pxf uri: %s", 
habb: hdxworkxmgr:00000375:  hadoop_uri->uri))); 
habb: hdxworkxmgr:00001046:  ereport(ERROR, 
habb: hdxworkxmgr:00001047:  (errcode(ERRCODE_DATA_CORRUPTED), 
habb: hdxworkxmgr:00001048:  errmsg("Couldn't find the REST server on the data-node: %s", host))); 
aaaaa GP_IGNORE: laai: libchurl - ./backend/access/external/libchurl.c
laai: libchurl:00000413:  elog(ERROR, "internal error: curl_easy_init failed"); 
laai: libchurl:00000420:  elog(ERROR, "internal error: curl_easy_setopt %d error (%d - %s)", 
laai: libchurl:00000421:  option, curl_error, curl_easy_strerror(curl_error)); 
laai: libchurl:00000450:  elog(ERROR, "internal error: curl_multi_init failed"); 
laai: libchurl:00000456:  elog(ERROR, "internal error: curl_multi_add_handle failed (%d - %s)", 
laai: libchurl:00000457:  curl_error, curl_easy_strerror(curl_error)); 
laai: libchurl:00000475:  elog(ERROR, "internal error: curl_multi_perform failed (%d - %s)", 
laai: libchurl:00000476:  curl_error, curl_easy_strerror(curl_error)); 
laai: libchurl:00000501:  elog(ERROR, "failed sending to remote component"); 
laai: libchurl:00000615:  elog(ERROR, "internal error: curl_multi_fdset failed (%d - %s)", 
laai: libchurl:00000616:  curl_error, curl_easy_strerror(curl_error)); 
laai: libchurl:00000628:  elog(ERROR, "internal error: select failed on curl_multi_fdset (maxfd %d) (%d - %s)", 
laai: libchurl:00000629:  maxfd, errno, strerror(errno)); 
laai: libchurl:00000657:  elog(ERROR, "internal error: curl_easy_getinfo failed(%d - %s)", 
laai: libchurl:00000658:  curl_error, curl_easy_strerror(curl_error)); 
laai: libchurl:00000694:  elog(ERROR, "%s", err.data); 
laai: libchurl:00000892:  elog(ERROR, "GPHD component not found"); 
aaaaa GP_IGNORE: pabc: pxfuriparser - ./backend/access/external/pxfuriparser.c
pabc: pxfuriparser:00000128:  ereport(ERROR, 
pabc: pxfuriparser:00000129:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: pxfuriparser:00000130:  errmsg("Invalid URI %s", uri->uri))); 
pabc: pxfuriparser:00000136:  ereport(ERROR, 
pabc: pxfuriparser:00000137:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: pxfuriparser:00000138:  errmsg("invalid URI %s : unsupported protocol '%s'", 
pabc: pxfuriparser:00000139:  uri->uri, uri->protocol))); 
pabc: pxfuriparser:00000165:  ereport(ERROR, 
pabc: pxfuriparser:00000166:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: pxfuriparser:00000167:  errmsg("invalid URI %s : missing authority section", 
pabc: pxfuriparser:00000168:  uri->uri))); 
pabc: pxfuriparser:00000176:  ereport(ERROR, 
pabc: pxfuriparser:00000177:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: pxfuriparser:00000178:  errmsg("invalid URI %s : missing authority section", 
pabc: pxfuriparser:00000179:  uri->uri))); 
pabc: pxfuriparser:00000275:  ereport(ERROR, 
pabc: pxfuriparser:00000276:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: pxfuriparser:00000277:  errmsg("invalid URI %s: missing options section", 
pabc: pxfuriparser:00000278:  uri->uri))); 
pabc: pxfuriparser:00000285:  ereport(ERROR, 
pabc: pxfuriparser:00000286:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: pxfuriparser:00000287:  errmsg("invalid URI %s: invalid option after '?'", 
pabc: pxfuriparser:00000288:  uri->uri))); 
pabc: pxfuriparser:00000325:  ereport(ERROR, 
pabc: pxfuriparser:00000326:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: pxfuriparser:00000327:  errmsg("Invalid URI %s: option '%s' missing '='", uri, pair))); 
pabc: pxfuriparser:00000332:  ereport(ERROR, 
pabc: pxfuriparser:00000333:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: pxfuriparser:00000334:  errmsg("Invalid URI %s: option '%s' missing key before '='", uri, pair))); 
pabc: pxfuriparser:00000371:  elog(NOTICE, 
pabc: pxfuriparser:00000372:  "URI: %s, Host: %s, Port: %s, Data Path: %s", 
pabc: pxfuriparser:00000373:  uri->uri, 
pabc: pxfuriparser:00000374:  uri->host, 
pabc: pxfuriparser:00000375:  uri->port, 
pabc: pxfuriparser:00000376:  uri->data); 
pabc: pxfuriparser:00000393:  elog(NOTICE, "options section data: "); 
pabc: pxfuriparser:00000397:  elog(NOTICE, 
pabc: pxfuriparser:00000398:  "%u: key: %s, value: %s", 
pabc: pxfuriparser:00000399:  count, data->key, data->value); 
pabc: pxfuriparser:00000415:  elog(NOTICE, "segwork section data: "); 
pabc: pxfuriparser:00000421:  elog(NOTICE, 
pabc: pxfuriparser:00000422:  "%u: authority: %s, index %s, user data: %s", 
pabc: pxfuriparser:00000423:  count, data->authority, data->index, data->user_data); 
pabc: pxfuriparser:00000427:  elog(NOTICE, 
pabc: pxfuriparser:00000428:  "%u: authority: %s, index %s", 
pabc: pxfuriparser:00000429:  count, data->authority, data->index); 
aaaaa GP_IGNORE: uaad: url - ./backend/access/external/url.c
uaad: url:00000159:  // elog(NOTICE, "X-GP-PROTO: %s (%d)", buf, url->u.curl.gp_proto); 
uaad: url:00000188:  //elog(NOTICE, "write_callback %d", nbytes); 
uaad: url:00000214:  elog(ERROR, "out of memory (curl write_callback)"); 
uaad: url:00000219:  // elog(NOTICE, "max now at %d", n); 
uaad: url:00000275:  ereport(ERROR, (errcode(ERRCODE_CONNECTION_FAILURE), 
uaad: url:00000276:  errmsg("connection with gpfdist failed for %s. " 
uaad: url:00000277:  "effective url: %s. %s", file->url, effective_url, 
uaad: url:00000278:  (oserrno != 0 ? connmsg : "")), 
uaad: url:00000279:  errOmitLocation(true))); 
uaad: url:00000290:  elog(ERROR, "http response code %ld from gpfdist (%s): %s", 
uaad: url:00000291:  response_code, file->url, 
uaad: url:00000292:  file->u.curl.http_response ? file->u.curl.http_response : "?"); 
uaad: url:00000321:  /* elog(NOTICE, "= still_running %d, bot %d, top %d, want %d", 
uaad: url:00000322:  file->u.curl.still_running, curl->in.bot, curl->in.top, want); 
uaad: url:00000341:  elog(ERROR, "internal error: curl_multi_fdset failed (%d - %s)", 
uaad: url:00000342:  e, curl_easy_strerror(e)); 
uaad: url:00000355:  elog(ERROR, "internal error: select failed on curl_multi_fdset (maxfd %d) (%d - %s)", 
uaad: url:00000356:  maxfd, errno, strerror(errno)); 
uaad: url:00000370:  elog(ERROR, "internal error: curl_multi_perform failed (%d - %s)", 
uaad: url:00000371:  e, curl_easy_strerror(e)); 
uaad: url:00000375:  /* elog(NOTICE, "- still_running %d, bot %d, top %d, want %d", 
uaad: url:00000376:  file->u.curl.still_running, curl->in.bot, curl->in.top, want); 
uaad: url:00000392:  elog(ERROR, "set_httpheader name/value is too long. name = %s, value=%s", name, value); 
uaad: url:00000524:  elog(ERROR, "illegal url '%s'", url); 
uaad: url:00000547:  ereport(ERROR, 
uaad: url:00000548:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
uaad: url:00000549:  errmsg("<port> substring size must not exceed %d characters", 8))); 
uaad: url:00000571:  ereport(ERROR, 
uaad: url:00000572:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
uaad: url:00000573:  errmsg("<port> substring size must not exceed %d characters", 8))); 
uaad: url:00000582:  ereport(ERROR, 
uaad: url:00000583:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
uaad: url:00000584:  errmsg("<port> substring must contain only digits"))); 
uaad: url:00000588:  elog(ERROR, "hostname too long for url '%s'", url); 
uaad: url:00000675:  elog(ERROR, "out of memory"); 
uaad: url:00000714:  ereport(ERROR, 
uaad: url:00000715:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
uaad: url:00000716:  errmsg("cannot start external table command: %m"), 
uaad: url:00000717:  errdetail("Command: %s", cmd), 
uaad: url:00000718:  errOmitLocation(true))); 
uaad: url:00000782:  elog(ERROR, "out of memory"); 
uaad: url:00000802:  elog(ERROR, "External Table error opening file: '%s', invalid " 
uaad: url:00000803:  "file path", url); 
uaad: url:00000844:  elog(ERROR, "illegal URL: %s", url_cpy); 
uaad: url:00000871:  elog(ERROR, "internal error: curl_easy_init failed"); 
uaad: url:00000878:  elog(ERROR, "internal error: curl_easy_setopt CURLOPT_URL error (%d - %s)", 
uaad: url:00000879:  e, curl_easy_strerror(e)); 
uaad: url:00000884:  elog(ERROR, "internal error: curl_easy_setopt CURLOPT_VERBOSE error (%d - %s)", 
uaad: url:00000885:  e, curl_easy_strerror(e)); 
uaad: url:00000891:  elog(ERROR, "internal error: curl_easy_setopt CURLOPT_HEADERFUNCTION error (%d - %s)", 
uaad: url:00000892:  e, curl_easy_strerror(e)); 
uaad: url:00000898:  elog(ERROR, "internal error: curl_easy_setopt CURLOPT_WRITEHEADER error (%d - %s)", 
uaad: url:00000899:  e, curl_easy_strerror(e)); 
uaad: url:00000905:  elog(ERROR, "internal error: curl_easy_setopt CURLOPT_WRITEFUNCTION error (%d - %s)", 
uaad: url:00000906:  e, curl_easy_strerror(e)); 
uaad: url:00000912:  elog(ERROR, "internal error: curl_easy_setopt CURLOPT_WRITEDATA error (%d - %s)", 
uaad: url:00000913:  e, curl_easy_strerror(e)); 
uaad: url:00000923:  elog(ERROR, "internal error: curl_easy_setopt CURLOPT_IPRESOLVE error (%d - %s)", 
uaad: url:00000924:  e, curl_easy_strerror(e)); 
uaad: url:00000952:  elog(ERROR, "internal error: some header value is too long"); 
uaad: url:00000962:  elog(ERROR, "internal error: some header value is too long"); 
uaad: url:00000980:  elog(ERROR, "internal error: some header value is too long"); 
uaad: url:00000995:  elog(ERROR, "internal error: X-GP-TRANSFORM header value is too long"); 
uaad: url:00001003:  elog(ERROR, "internal error: curl_easy_setopt CURLOPT_HTTPHEADER error (%d - %s)", 
uaad: url:00001004:  e, curl_easy_strerror(e)); 
uaad: url:00001012:  elog(ERROR, "internal error: curl_multi_init failed"); 
uaad: url:00001021:  elog(ERROR, "internal error: curl_multi_add_handle failed (%d - %s)", 
uaad: url:00001022:  e, curl_easy_strerror(e)); 
uaad: url:00001040:  elog(ERROR, "internal error: curl_multi_perform failed (%d - %s)", 
uaad: url:00001041:  e, curl_easy_strerror(e)); 
uaad: url:00001053:  elog(ERROR, "internal error: curl_easy_setopt CURLOPT_POSTFIELDS error (%d - %s)", 
uaad: url:00001054:  e, curl_easy_strerror(e)); 
uaad: url:00001061:  elog(ERROR, "error: %s", 
uaad: url:00001062:  curl_easy_strerror(e)); 
uaad: url:00001268:  ereport(ERROR, 
uaad: url:00001269:  (errcode(ERRCODE_INTERNAL_ERROR), 
uaad: url:00001270:  errmsg_internal("external table type not implemented: %d", type))); 
uaad: url:00001411:  elog(ERROR, "gpfdist error: server closed connection.\n"); 
uaad: url:00001417:  elog(ERROR, "gpfdist error: incomplete packet - packet len %d\n", n); 
uaad: url:00001431:  elog(ERROR, "gpfdist error: bad packet type %d len %d", 
uaad: url:00001432:  type, len); 
uaad: url:00001436:  /* elog(NOTICE, "HEADER %c %d, bot %d, top %d", type, len, 
uaad: url:00001437:  curl->in.bot, curl->in.top); 
uaad: url:00001458:  elog(ERROR, "gpfdist error - %s%c", &curl->in.ptr[curl->in.bot], x); 
uaad: url:00001463:  elog(ERROR, "gpfdist error: please check gpfdist log messages."); 
uaad: url:00001478:  elog(ERROR, "gpfdist error: filename too long (%d)", len); 
uaad: url:00001483:  elog(ERROR, "gpfdist error: stream ends suddenly"); 
uaad: url:00001512:  elog(ERROR, "gpfdist error: offset not of length 8 (%d)", len); 
uaad: url:00001517:  elog(ERROR, "gpfdist error: stream ends suddenly"); 
uaad: url:00001533:  elog(ERROR, "gpfdist error: line number not of length 8 (%d)", len); 
uaad: url:00001538:  elog(ERROR, "gpfdist error: stream ends suddenly"); 
uaad: url:00001560:  // elog(NOTICE, "D %d", curl->block.datalen); 
uaad: url:00001564:  elog(ERROR, "gpfdist error: unknown meta type %d", type); 
uaad: url:00001581:  elog(ERROR, "gpfdist server closed connection.\n"); 
uaad: url:00001590:  // elog(NOTICE, "returning %d bytes, %d bytes left \n", n, curl->block.datalen); 
uaad: url:00001615:  elog(ERROR, "internal error: curl_easy_setopt CURLOPT_POSTFIELDS error (%d - %s)", 
uaad: url:00001616:  e, curl_easy_strerror(e)); 
uaad: url:00001620:  elog(ERROR, "internal error: curl_easy_setopt CURLOPT_POSTFIELDSIZE error (%d - %s)", 
uaad: url:00001621:  e, curl_easy_strerror(e)); 
uaad: url:00001625:  elog(ERROR, "%s error (%d - %s)", 
uaad: url:00001626:  file->u.curl.curl_url, 
uaad: url:00001627:  e, curl_easy_strerror(e)); 
uaad: url:00001631:  elog(ERROR, "error while writing data to gpfdist on %s (code %d, msg %s)", 
uaad: url:00001632:  file->u.curl.curl_url, response_code, response_string); 
uaad: url:00001648:  elog(ERROR, "internal error: curl_easy_setopt CURLOPT_POSTFIELDS %s error (%d - %s)", 
uaad: url:00001649:  file->u.curl.curl_url, 
uaad: url:00001650:  e, curl_easy_strerror(e)); 
uaad: url:00001656:  elog(ERROR, "%s error: %s", 
uaad: url:00001657:  file->u.curl.curl_url, 
uaad: url:00001658:  curl_easy_strerror(e)); 
uaad: url:00001673:  elog(ERROR, "unknown gp protocol %d", curl->gp_proto); 
uaad: url:00001684:  //elog(NOTICE, "curl_fread %d bytes", n); 
uaad: url:00001699:  elog(ERROR, "unknown gp protocol %d", curl->gp_proto); 
uaad: url:00001745:  elog(ERROR, "out of memory (curl_fwrite)"); 
uaad: url:00001831:  elog(ERROR, "CFTYPE_FILE not yet supported in url.c"); 
uaad: url:00001871:  elog(ERROR, "CFTYPE_FILE not yet supported in url.c"); 
uaad: url:00001925:  elog(ERROR, "rewind support not yet implemented in custom protocol"); 
uaad: url:00002317:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
aaaaa GP_IGNORE: gabc: ginarrayproc - ./backend/access/gin/ginarrayproc.c
gabc: ginarrayproc:00000028:  ereport(ERROR, \ 
gabc: ginarrayproc:00000029:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), \ 
gabc: ginarrayproc:00000030:  errmsg("array must not contain null values"))); \ 
gabc: ginarrayproc:00000031: } while(0) 
gabc: ginarrayproc:00000032:  
gabc: ginarrayproc:00000033:  
gabc: ginarrayproc:00000034: /* 
gabc: ginarrayproc:00000035:  * Function used as extractValue and extractQuery both 
gabc: ginarrayproc:00000036:  */ 
gabc: ginarrayproc:00000037: Datum 
gabc: ginarrayproc:00000038: ginarrayextract(PG_FUNCTION_ARGS) 
gabc: ginarrayproc:00000039: { 
gabc: ginarrayproc:00000040:  ArrayType *array; 
gabc: ginarrayproc:00000098:  elog(ERROR, "ginarrayconsistent: unknown strategy number: %d", 
gabc: ginarrayproc:00000099:  strategy); 
aaaaa GP_IGNORE: gaai: ginbtree - ./backend/access/gin/ginbtree.c
gaai: ginbtree:00000242:  elog(ERROR, "Lost path"); 
aaaaa GP_IGNORE: gabb: gindatapage - ./backend/access/gin/gindatapage.c
gabb: gindatapage:00000634:  elog(ERROR, "item pointer (%u,%d) already exists", 
gabb: gindatapage:00000635:  ItemPointerGetBlockNumber(gdi->btree.items + gdi->btree.curitem), 
gabb: gindatapage:00000636:  ItemPointerGetOffsetNumber(gdi->btree.items + gdi->btree.curitem)); 
aaaaa GP_IGNORE: gabc: ginentrypage - ./backend/access/gin/ginentrypage.c
gabc: ginentrypage:00000364:  elog(ERROR, "failed to add item to index page in \"%s\"", 
gabc: ginentrypage:00000365:  RelationGetRelationName(btree->index)); 
gabc: ginentrypage:00000515:  elog(ERROR, "failed to add item to index page in \"%s\"", 
gabc: ginentrypage:00000516:  RelationGetRelationName(btree->index)); 
gabc: ginentrypage:00000579:  elog(ERROR, "failed to add item to index root page"); 
gabc: ginentrypage:00000583:  elog(ERROR, "failed to add item to index root page"); 
aaaaa GP_IGNORE: gaag: ginget - ./backend/access/gin/ginget.c
gaag: ginget:00000506:  elog(ERROR, "Gin doesn't support other scan directions than forward"); 
aaaaa GP_IGNORE: gaaj: gininsert - ./backend/access/gin/gininsert.c
gaaj: gininsert:00000188:  elog(ERROR, "huge tuple"); 
gaaj: gininsert:00000281:  elog(ERROR, "index \"%s\" already contains data", 
gaaj: gininsert:00000282:  RelationGetRelationName(index)); 
aaaaa GP_IGNORE: gaah: ginscan - ./backend/access/gin/ginscan.c
gaah: ginscan:00000147:  ereport(ERROR, 
gaah: ginscan:00000148:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaah: ginscan:00000149:  errmsg("GIN indexes do not support whole-index scans"))); 
gaah: ginscan:00000157:  elog(ERROR, "Gin doesn't support NULL as scan key"); 
gaah: ginscan:00000180:  ereport(ERROR, 
gaah: ginscan:00000181:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaah: ginscan:00000182:  errmsg("GIN index does not support search with void query"))); 
aaaaa GP_IGNORE: gaah: ginutil - ./backend/access/gin/ginutil.c
gaah: ginutil:00000027:  elog(ERROR, "numberOfAttributes %d != 1", 
gaah: ginutil:00000028:  index->rd_att->natts); 
aaaaa GP_IGNORE: gaaj: ginvacuum - ./backend/access/gin/ginvacuum.c
gaaj: ginvacuum:00000567:  elog(ERROR, "failed to add item to index page in \"%s\"", 
gaaj: ginvacuum:00000568:  RelationGetRelationName(gvs->index)); 
aaaaa GP_IGNORE: gaah: ginxlog - ./backend/access/gin/ginxlog.c
gaah: ginxlog:00000236:  elog(ERROR, "failed to add item to index page in %u/%u/%u", 
gaah: ginxlog:00000237:  data->node.spcNode, data->node.dbNode, data->node.relNode); 
gaah: ginxlog:00000334:  elog(ERROR, "failed to add item to index page in %u/%u/%u", 
gaah: ginxlog:00000335:  data->node.spcNode, data->node.dbNode, data->node.relNode); 
gaah: ginxlog:00000342:  elog(ERROR, "failed to add item to index page in %u/%u/%u", 
gaah: ginxlog:00000343:  data->node.spcNode, data->node.dbNode, data->node.relNode); 
gaah: ginxlog:00000438:  elog(ERROR, "failed to add item to index page in %u/%u/%u", 
gaah: ginxlog:00000439:  data->node.spcNode, data->node.dbNode, data->node.relNode); 
gaah: ginxlog:00000622:  * elog(NOTICE,"ginContinueSplit root:%u l:%u r:%u", split->rootBlkno, 
gaah: ginxlog:00000623:  * split->leftBlkno, split->rightBlkno); 
aaaaa GP_IGNORE: gaae: gist - ./backend/access/gist/gist.c
gaae: gist:00000104:  elog(ERROR, "index \"%s\" already contains data", 
gaae: gist:00000105:  RelationGetRelationName(index)); 
gaae: gist:00000387:  elog(ERROR, "failed to add item to index page in \"%s\"", RelationGetRelationName(state->r)); 
gaae: gist:00001064:  elog(ERROR, "numberOfAttributes %d > %d", 
gaae: gist:00001065:  index->rd_att->natts, INDEX_MAX_KEYS); 
aaaaa GP_IGNORE: gaai: gistutil - ./backend/access/gist/gistutil.c
gaai: gistutil:00000052:  elog(ERROR, "failed to add item to index page in \"%s\"", 
gaai: gistutil:00000053:  RelationGetRelationName(r)); 
gaai: gistutil:00000588:  ereport(ERROR, 
gaai: gistutil:00000589:  (errcode(ERRCODE_INDEX_CORRUPTED), 
gaai: gistutil:00000590:  errmsg("index \"%s\" contains unexpected zero page at block %u", 
gaai: gistutil:00000591:  RelationGetRelationName(rel), 
gaai: gistutil:00000592:  BufferGetBlockNumber(buf)), 
gaai: gistutil:00000593:  errhint("Please REINDEX it."), 
gaai: gistutil:00000594:  errSendAlert(true))); 
gaai: gistutil:00000601:  ereport(ERROR, 
gaai: gistutil:00000602:  (errcode(ERRCODE_INDEX_CORRUPTED), 
gaai: gistutil:00000603:  errmsg("index \"%s\" contains corrupted page at block %u", 
gaai: gistutil:00000604:  RelationGetRelationName(rel), 
gaai: gistutil:00000605:  BufferGetBlockNumber(buf)), 
gaai: gistutil:00000606:  errhint("Please REINDEX it."), 
gaai: gistutil:00000607:  errSendAlert(true))); 
aaaaa GP_IGNORE: gaba: gistvacuum - ./backend/access/gist/gistvacuum.c
gaba: gistvacuum:00000217:  elog(ERROR, "failed to add item to index page in \"%s\"", RelationGetRelationName(gv->index)); 
gaba: gistvacuum:00000591:  ereport(NOTICE, 
gaba: gistvacuum:00000592:  (errmsg("index \"%s\" needs VACUUM FULL or REINDEX to finish crash recovery", 
gaba: gistvacuum:00000593:  RelationGetRelationName(rel)))); 
aaaaa GP_IGNORE: gaai: gistxlog - ./backend/access/gist/gistxlog.c
gaai: gistxlog:00000609:  elog(ERROR, "lost parent for block %u", insert->origblkno); 
aaaaa GP_IGNORE: haae: hash - ./backend/access/hash/hash.c
haae: hash:00000060:  elog(ERROR, "index \"%s\" already contains data", 
haae: hash:00000061:  RelationGetRelationName(index)); 
haae: hash:00000564:  elog(ERROR, "hash index has active scan during VACUUM"); 
aaaaa GP_IGNORE: haba: hashinsert - ./backend/access/hash/hashinsert.c
haba: hashinsert:00000057:  elog(ERROR, "hash indexes support only one index key"); 
haba: hashinsert:00000088:  ereport(ERROR, 
haba: hashinsert:00000089:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
haba: hashinsert:00000090:  errmsg("index row size %lu exceeds hash maximum %lu", 
haba: hashinsert:00000091:  (unsigned long) itemsz, 
haba: hashinsert:00000092:  (unsigned long) HashMaxItemSize((Page) metap)), 
haba: hashinsert:00000093:  errhint("Values larger than a buffer page cannot be indexed."))); 
haba: hashinsert:00000219:  elog(ERROR, "failed to add index item to \"%s\"", 
haba: hashinsert:00000220:  RelationGetRelationName(rel)); 
aaaaa GP_IGNORE: haai: hashovfl - ./backend/access/hash/hashovfl.c
haai: hashovfl:00000074:  elog(ERROR, "invalid overflow block number %u", ovflblkno); 
haai: hashovfl:00000358:  elog(ERROR, "firstfreebit found no free bit"); 
haai: hashovfl:00000455:  elog(ERROR, "invalid overflow bit number %u", ovflbitno); 
haai: hashovfl:00000541:  ereport(ERROR, 
haai: hashovfl:00000542:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
haai: hashovfl:00000543:  errmsg("out of overflow pages in hash index \"%s\"", 
haai: hashovfl:00000544:  RelationGetRelationName(rel)))); 
haai: hashovfl:00000675:  elog(ERROR, "failed to add index item to \"%s\"", 
haai: hashovfl:00000676:  RelationGetRelationName(rel)); 
aaaaa GP_IGNORE: haai: hashpage - ./backend/access/hash/hashpage.c
haai: hashpage:00000124:  elog(ERROR, "hash AM does not use P_NEW"); 
haai: hashpage:00000161:  elog(ERROR, "hash AM does not use P_NEW"); 
haai: hashpage:00000163:  elog(ERROR, "access to noncontiguous page in hash index \"%s\"", 
haai: hashpage:00000164:  RelationGetRelationName(rel)); 
haai: hashpage:00000171:  elog(ERROR, "unexpected hash relation size: %u, should be %u", 
haai: hashpage:00000172:  BufferGetBlockNumber(buf), blkno); 
haai: hashpage:00000284:  elog(ERROR, "cannot initialize non-empty hash index \"%s\"", 
haai: hashpage:00000285:  RelationGetRelationName(rel)); 
haai: hashpage:00000505:  elog(ERROR, "scan in progress on supposedly new bucket"); 
haai: hashpage:00000508:  elog(ERROR, "could not get lock on supposedly new bucket"); 
haai: hashpage:00000824:  elog(ERROR, "failed to add index item to \"%s\"", 
haai: hashpage:00000825:  RelationGetRelationName(rel)); 
aaaaa GP_IGNORE: haai: hashscan - ./backend/access/hash/hashscan.c
haai: hashscan:00000119:  elog(ERROR, "hash scan list trashed; can't find 0x%p", (void *) scan); 
aaaaa GP_IGNORE: haba: hashsearch - ./backend/access/hash/hashsearch.c
haba: hashsearch:00000157:  ereport(ERROR, 
haba: hashsearch:00000158:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
haba: hashsearch:00000159:  errmsg("hash indexes do not support whole-index scans"))); 
aaaaa GP_IGNORE: haai: hashutil - ./backend/access/hash/hashutil.c
haai: hashutil:00000124:  ereport(ERROR, 
haai: hashutil:00000125:  (errcode(ERRCODE_INDEX_CORRUPTED), 
haai: hashutil:00000126:  errmsg("index \"%s\" contains unexpected zero page at block %u", 
haai: hashutil:00000127:  RelationGetRelationName(rel), 
haai: hashutil:00000128:  BufferGetBlockNumber(buf)), 
haai: hashutil:00000129:  errhint("Please REINDEX it."), 
haai: hashutil:00000130:  errSendAlert(true))); 
haai: hashutil:00000137:  ereport(ERROR, 
haai: hashutil:00000138:  (errcode(ERRCODE_INDEX_CORRUPTED), 
haai: hashutil:00000139:  errmsg("index \"%s\" contains corrupted page at block %u", 
haai: hashutil:00000140:  RelationGetRelationName(rel), 
haai: hashutil:00000141:  BufferGetBlockNumber(buf)), 
haai: hashutil:00000142:  errhint("Please REINDEX it."), 
haai: hashutil:00000143:  errSendAlert(true))); 
haai: hashutil:00000150:  ereport(ERROR, 
haai: hashutil:00000151:  (errcode(ERRCODE_INDEX_CORRUPTED), 
haai: hashutil:00000152:  errmsg("index \"%s\" contains corrupted page at block %u", 
haai: hashutil:00000153:  RelationGetRelationName(rel), 
haai: hashutil:00000154:  BufferGetBlockNumber(buf)), 
haai: hashutil:00000155:  errhint("Please REINDEX it."), 
haai: hashutil:00000156:  errSendAlert(true))); 
haai: hashutil:00000167:  ereport(ERROR, 
haai: hashutil:00000168:  (errcode(ERRCODE_INDEX_CORRUPTED), 
haai: hashutil:00000169:  errmsg("index \"%s\" is not a hash index", 
haai: hashutil:00000170:  RelationGetRelationName(rel)))); 
haai: hashutil:00000173:  ereport(ERROR, 
haai: hashutil:00000174:  (errcode(ERRCODE_INDEX_CORRUPTED), 
haai: hashutil:00000175:  errmsg("index \"%s\" has wrong hash version", 
haai: hashutil:00000176:  RelationGetRelationName(rel)), 
haai: hashutil:00000177:  errhint("Please REINDEX it."), 
haai: hashutil:00000178:  errSendAlert(true))); 
aaaaa GP_IGNORE: haag: heapam - ./backend/access/heap/heapam.c
haag: heapam:00000212:  ereport(ERROR, 
haag: heapam:00000213:  (errcode(ERRCODE_INTERNAL_ERROR), 
haag: heapam:00000214:  errmsg("page number mismatch, expect %d, but got %d", 
haag: heapam:00000215:  page, scan->rs_rahead[ri].block))); 
haag: heapam:00000887:  elog(ERROR, "could not open relation with OID %u", relationId); 
haag: heapam:00000935:  ereport(ERROR, 
haag: heapam:00000936:  (errcode(ERRCODE_LOCK_NOT_AVAILABLE), 
haag: heapam:00000937:  errmsg("could not obtain lock on relation \"%s\"", 
haag: heapam:00000938:  relname))); 
haag: heapam:00000964:  elog(ERROR, "could not open relation with OID %u", relationId); 
haag: heapam:00001036:  elog(ERROR, "relation \"%s\" concurrently updated", 
haag: heapam:00001037:  RelationGetRelationName(rel)); 
haag: heapam:00001057:  elog(ERROR, "could not open relation with OID %u", relid); 
haag: heapam:00001084:  ereport(ERROR, 
haag: heapam:00001085:  (errcode(ERRCODE_UNDEFINED_TABLE), 
haag: heapam:00001086:  errmsg("relation \"%s.%s\" does not exist", 
haag: heapam:00001087:  relation->schemaname, relation->relname), 
haag: heapam:00001088:  errOmitLocation(true))); 
haag: heapam:00001092:  ereport(ERROR, 
haag: heapam:00001093:  (errcode(ERRCODE_UNDEFINED_TABLE), 
haag: heapam:00001094:  errmsg("relation \"%s\" does not exist", 
haag: heapam:00001095:  relation->relname), 
haag: heapam:00001096:  errOmitLocation(true))); 
haag: heapam:00001129:  ereport(ERROR, 
haag: heapam:00001130:  (errcode(ERRCODE_LOCK_NOT_AVAILABLE), 
haag: heapam:00001131:  errmsg("could not obtain lock on relation \"%s\"", 
haag: heapam:00001132:  relname))); 
haag: heapam:00001134:  ereport(ERROR, 
haag: heapam:00001135:  (errcode(ERRCODE_LOCK_NOT_AVAILABLE), 
haag: heapam:00001136:  errmsg("could not obtain lock on relation with OID %u", 
haag: heapam:00001137:  relationId))); 
haag: heapam:00001145:  elog(ERROR, "could not open relation with OID %u", relationId); 
haag: heapam:00001191:  ereport(ERROR, 
haag: heapam:00001192:  (errcode(ERRCODE_UNDEFINED_TABLE), 
haag: heapam:00001193:  errmsg("relation \"%s.%s\" does not exist", 
haag: heapam:00001194:  relation->schemaname, relation->relname), 
haag: heapam:00001195:  errOmitLocation(true))); 
haag: heapam:00001199:  ereport(ERROR, 
haag: heapam:00001200:  (errcode(ERRCODE_UNDEFINED_TABLE), 
haag: heapam:00001201:  errmsg("relation \"%s\" does not exist", 
haag: heapam:00001202:  relation->relname), 
haag: heapam:00001203:  errOmitLocation(true))); 
haag: heapam:00001290:  ereport(ERROR, 
haag: heapam:00001291:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
haag: heapam:00001292:  errmsg("\"%s\" is an index", 
haag: heapam:00001293:  RelationGetRelationName(r)))); 
haag: heapam:00001295:  ereport(ERROR, 
haag: heapam:00001296:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
haag: heapam:00001297:  errmsg("\"%s\" is a composite type", 
haag: heapam:00001298:  RelationGetRelationName(r)))); 
haag: heapam:00001320:  ereport(ERROR, 
haag: heapam:00001321:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
haag: heapam:00001322:  errmsg("\"%s\" is an index", 
haag: heapam:00001323:  RelationGetRelationName(r)))); 
haag: heapam:00001325:  ereport(ERROR, 
haag: heapam:00001326:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
haag: heapam:00001327:  errmsg("\"%s\" is a composite type", 
haag: heapam:00001328:  RelationGetRelationName(r)))); 
haag: heapam:00001348:  ereport(ERROR, 
haag: heapam:00001349:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
haag: heapam:00001350:  errmsg("\"%s\" is an index", 
haag: heapam:00001351:  RelationGetRelationName(r)))); 
haag: heapam:00001353:  ereport(ERROR, 
haag: heapam:00001354:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
haag: heapam:00001355:  errmsg("\"%s\" is a composite type", 
haag: heapam:00001356:  RelationGetRelationName(r)))); 
haag: heapam:00001378:  ereport(ERROR, 
haag: heapam:00001379:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
haag: heapam:00001380:  errmsg("\"%s\" is an index", 
haag: heapam:00001381:  RelationGetRelationName(r)))); 
haag: heapam:00001383:  ereport(ERROR, 
haag: heapam:00001384:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
haag: heapam:00001385:  errmsg("\"%s\" is a composite type", 
haag: heapam:00001386:  RelationGetRelationName(r)))); 
haag: heapam:00001604:  ereport(ERROR, 
haag: heapam:00001605:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
haag: heapam:00001606:  errmsg("illegal value in tdatacnt"))); 
haag: heapam:00001915:  elog(ERROR, "block number %u is out of range for relation \"%s\"", 
haag: heapam:00001916:  blk, RelationGetRelationName(relation)); 
haag: heapam:00002130:  elog(ERROR, "heap_insert() is not allowed on segments"); 
haag: heapam:00002170:  elog(ERROR, "tuple has oid, but schema does not"); 
haag: heapam:00002285:  elog(ERROR, "frozen_heap_insert() is not allowed on segments"); 
haag: heapam:00002308:  elog(ERROR, "frozen_heap_insert_directed() is not allowed on segments"); 
haag: heapam:00002387:  elog(ERROR, "heap_delete() is not allowed on segments"); 
haag: heapam:00002403:  ereport(ERROR, 
haag: heapam:00002404:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
haag: heapam:00002405:  errmsg("Append-only tables are not updatable. Operation not permitted."), 
haag: heapam:00002406:  errOmitLocation(true))); 
haag: heapam:00002434:  elog(ERROR, "attempted to delete invisible tuple"); 
haag: heapam:00002683:  elog(ERROR, "tuple already updated by self"); 
haag: heapam:00002691:  elog(ERROR, "tuple concurrently updated"); 
haag: heapam:00002695:  elog(ERROR, "unrecognized heap_delete status: %u", result); 
haag: heapam:00002710:  elog(ERROR, "heap_update_internal() is not allowed on segments"); 
haag: heapam:00002735:  ereport(ERROR, 
haag: heapam:00002736:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
haag: heapam:00002737:  errmsg("Append-only tables are not updatable. Operation not permitted."), 
haag: heapam:00002738:  errOmitLocation(true))); 
haag: heapam:00002769:  elog(ERROR, "attempted to update invisible tuple"); 
haag: heapam:00003213:  elog(ERROR, "simple_heap_update() is not allowed on segments"); 
haag: heapam:00003233:  elog(ERROR, "tuple already updated by self"); 
haag: heapam:00003241:  elog(ERROR, "tuple concurrently updated"); 
haag: heapam:00003245:  elog(ERROR, "unrecognized heap_update status: %u", result); 
haag: heapam:00003364:  elog(ERROR, "attempted to lock invisible tuple"); 
haag: heapam:00003419:  ereport(ERROR, 
haag: heapam:00003420:  (errcode(ERRCODE_LOCK_NOT_AVAILABLE), 
haag: heapam:00003421:  errmsg("could not obtain lock on row in relation \"%s\"", 
haag: heapam:00003422:  RelationGetRelationName(relation)))); 
haag: heapam:00003459:  ereport(ERROR, 
haag: heapam:00003460:  (errcode(ERRCODE_LOCK_NOT_AVAILABLE), 
haag: heapam:00003461:  errmsg("could not obtain lock on row in relation \"%s\"", 
haag: heapam:00003462:  RelationGetRelationName(relation)))); 
haag: heapam:00003502:  ereport(ERROR, 
haag: heapam:00003503:  (errcode(ERRCODE_LOCK_NOT_AVAILABLE), 
haag: heapam:00003504:  errmsg("could not obtain lock on row in relation \"%s\"", 
haag: heapam:00003505:  RelationGetRelationName(relation)))); 
haag: heapam:00003810:  elog(ERROR, "heap_inplace_update: invalid lp"); 
haag: heapam:00003817:  elog(ERROR, "heap_inplace_update: wrong tuple length"); 
haag: heapam:00003930:  elog(ERROR, "heap_inplace_frozen_delete_internal: invalid lp"); 
haag: heapam:00003937:  elog(ERROR, "heap_inplace_frozen_delete_internal: wrong tuple length"); 
haag: heapam:00003998:  elog(ERROR, "frozen_heap_inplace_update() is not allowed on segments"); 
haag: heapam:00004013:  elog(ERROR, "frozen_heap_inplace_delete() is not allowed on segments"); 
haag: heapam:00004028:  elog(ERROR, "heap_inplace_update() is not allowed on segments"); 
aaaaa GP_IGNORE: haad: hio - ./backend/access/heap/hio.c
haad: hio:00000125:  ereport(ERROR, 
haad: hio:00000126:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
haad: hio:00000127:  errmsg("row is too big: size %lu, maximum size %lu", 
haad: hio:00000128:  (unsigned long) len, 
haad: hio:00000129:  (unsigned long) MaxHeapTupleSize))); 
haad: hio:00000311:  elog(ERROR, "page %u of relation \"%s\" should be empty but is not", 
haad: hio:00000312:  BufferGetBlockNumber(buffer), 
haad: hio:00000313:  RelationGetRelationName(relation)); 
aaaaa GP_IGNORE: taba: tuptoaster - ./backend/access/heap/tuptoaster.c
taba: tuptoaster:00001391:  elog(ERROR, "failed to build TOAST tuple"); 
taba: tuptoaster:00001581:  elog(ERROR, "found toasted toast chunk?"); 
taba: tuptoaster:00001590:  elog(ERROR, "unexpected chunk number %d (expected %d) for toast value %u", 
taba: tuptoaster:00001591:  residx, nextidx, 
taba: tuptoaster:00001592:  ((varattrib *)attr)->va_external.va_valueid); 
taba: tuptoaster:00001596:  elog(ERROR, "unexpected chunk size %d in chunk %d of %d for toast value %u (expected %d)", 
taba: tuptoaster:00001597:  chunksize, residx, 
taba: tuptoaster:00001598:  ((varattrib *)attr)->va_external.va_valueid, numchunks-1, 
taba: tuptoaster:00001599:  (int)TOAST_MAX_CHUNK_SIZE); 
taba: tuptoaster:00001604:  elog(ERROR, "unexpected chunk size %d in final chunk %d for toast value %u (expected %d)", 
taba: tuptoaster:00001605:  chunksize, residx, 
taba: tuptoaster:00001606:  ((varattrib *)attr)->va_external.va_valueid, 
taba: tuptoaster:00001607:  ressize - residx*(int)TOAST_MAX_CHUNK_SIZE); 
taba: tuptoaster:00001610:  elog(ERROR, "unexpected chunk number %d for toast value %u (expected in %d..%d)", 
taba: tuptoaster:00001611:  residx, 
taba: tuptoaster:00001612:  ((varattrib *)attr)->va_external.va_valueid, 
taba: tuptoaster:00001613:  0, numchunks-1); 
taba: tuptoaster:00001629:  elog(ERROR, "missing chunk number %d for toast value %u", 
taba: tuptoaster:00001630:  nextidx, 
taba: tuptoaster:00001631:  ((varattrib *)attr)->va_external.va_valueid); 
taba: tuptoaster:00001766:  elog(ERROR, "found toasted toast chunk?"); 
taba: tuptoaster:00001775:  elog(ERROR, "unexpected chunk number %d (expected %d) for toast value %u", 
taba: tuptoaster:00001776:  residx, nextidx, 
taba: tuptoaster:00001777:  ((varattrib *)attr)->va_external.va_valueid); 
taba: tuptoaster:00001781:  elog(ERROR, "unexpected chunk size %d in chunk %d for toast value %u of %d when fetching slice (expected %d)", 
taba: tuptoaster:00001782:  chunksize, residx, 
taba: tuptoaster:00001783:  ((varattrib *)attr)->va_external.va_valueid, totalchunks-1, 
taba: tuptoaster:00001784:  (int)TOAST_MAX_CHUNK_SIZE); 
taba: tuptoaster:00001789:  elog(ERROR, "unexpected chunk size %d in chunk %d for final toast value %u when fetching slice (expected %d)", 
taba: tuptoaster:00001790:  chunksize, residx, 
taba: tuptoaster:00001791:  ((varattrib *)attr)->va_external.va_valueid, 
taba: tuptoaster:00001792:  attrsize - residx * (int)TOAST_MAX_CHUNK_SIZE); 
taba: tuptoaster:00001796:  elog(ERROR, "unexpected chunk"); 
taba: tuptoaster:00001822:  elog(ERROR, "missing chunk number %d for toast value %u", 
taba: tuptoaster:00001823:  nextidx, 
taba: tuptoaster:00001824:  ((varattrib *)attr)->va_external.va_valueid); 
aaaaa GP_IGNORE: caai: catquery - ./backend/access/index/catquery.c
caai: catquery:00018269:  elog(ERROR, "invalid catalog access on segments (catalog relid: %d)", 
caai: catquery:00018270:  pCtx->cq_relationId); 
caai: catquery:00018286:  elog(ERROR, "invalid pg_attribute access on segments"); 
caai: catquery:00018418:  ereport(ERROR, 
caai: catquery:00018419:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caai: catquery:00018420:  errmsg( 
caai: catquery:00018421:  "Invalid or undefined CaQL string" 
caai: catquery:00018422:  ), 
caai: catquery:00018423:  errOmitLocation(true))); 
caai: catquery:00018518:  ereport(ERROR, 
caai: catquery:00018519:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caai: catquery:00018520:  errmsg( 
caai: catquery:00018521:  "bind parameter out of range (1-5)" 
caai: catquery:00018522:  ), 
caai: catquery:00018523:  errOmitLocation(true))); 
caai: catquery:00018525:  ereport(ERROR, 
caai: catquery:00018526:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caai: catquery:00018527:  errmsg( 
caai: catquery:00018528:  "missing bind parameter before :%d, or out of sequence", 
caai: catquery:00018529:  badbind 
caai: catquery:00018530:  ), 
caai: catquery:00018531:  errOmitLocation(true))); 
caai: catquery:00018555:  elog(ERROR, "invalid caql string: %s\nfile: %s, line %d", 
caai: catquery:00018556:  caql_str, filenam, lineno); 
caai: catquery:00018641:  elog(ERROR, "invalid caql string: %s\nfile: %s, line %d", 
caai: catquery:00018642:  caql_str, filenam, lineno); 
caai: catquery:00018747:  elog(ERROR, "invalid caql string: %s\nfile: %s, line %d", 
caai: catquery:00018748:  caql_str, filenam, lineno); 
caai: catquery:00018800:  elog(ERROR, "invalid caql string: %s\nfile: %s, line %d", 
caai: catquery:00018801:  caql_str, filenam, lineno); 
caai: catquery:00018804:  elog(ERROR, 
caai: catquery:00018805:  "Cannot scan: %s -- COUNTing or DELETing\nfile: %s, line %d", 
caai: catquery:00018806:  caql_str, filenam, lineno); 
caai: catquery:00019299:  elog(ERROR, "invalid caql string: %s\nfile: %s, line %d", 
caai: catquery:00019300:  caql_str, filenam, lineno); 
caai: catquery:00019362:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019363:  caql_str, filenam, lineno); 
caai: catquery:00019381:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019382:  caql_str, filenam, lineno); 
caai: catquery:00019449:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019450:  caql_str, filenam, lineno); 
caai: catquery:00019552:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019553:  caql_str, filenam, lineno); 
caai: catquery:00019585:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019586:  caql_str, filenam, lineno); 
caai: catquery:00019618:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019619:  caql_str, filenam, lineno); 
caai: catquery:00019689:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019690:  caql_str, filenam, lineno); 
caai: catquery:00019708:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019709:  caql_str, filenam, lineno); 
caai: catquery:00019734:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019735:  caql_str, filenam, lineno); 
caai: catquery:00019753:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019754:  caql_str, filenam, lineno); 
caai: catquery:00019786:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019787:  caql_str, filenam, lineno); 
caai: catquery:00019805:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019806:  caql_str, filenam, lineno); 
caai: catquery:00019830:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019831:  caql_str, filenam, lineno); 
caai: catquery:00019863:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019864:  caql_str, filenam, lineno); 
caai: catquery:00019945:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00019946:  caql_str, filenam, lineno); 
caai: catquery:00019999:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020000:  caql_str, filenam, lineno); 
caai: catquery:00020039:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020040:  caql_str, filenam, lineno); 
caai: catquery:00020072:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020073:  caql_str, filenam, lineno); 
caai: catquery:00020112:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020113:  caql_str, filenam, lineno); 
caai: catquery:00020152:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020153:  caql_str, filenam, lineno); 
caai: catquery:00020178:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020179:  caql_str, filenam, lineno); 
caai: catquery:00020242:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020243:  caql_str, filenam, lineno); 
caai: catquery:00020274:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020275:  caql_str, filenam, lineno); 
caai: catquery:00020300:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020301:  caql_str, filenam, lineno); 
caai: catquery:00020319:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020320:  caql_str, filenam, lineno); 
caai: catquery:00020345:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020346:  caql_str, filenam, lineno); 
caai: catquery:00020371:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020372:  caql_str, filenam, lineno); 
caai: catquery:00020397:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020398:  caql_str, filenam, lineno); 
caai: catquery:00020423:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020424:  caql_str, filenam, lineno); 
caai: catquery:00020449:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020450:  caql_str, filenam, lineno); 
caai: catquery:00020475:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020476:  caql_str, filenam, lineno); 
caai: catquery:00020494:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020495:  caql_str, filenam, lineno); 
caai: catquery:00020513:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020514:  caql_str, filenam, lineno); 
caai: catquery:00020560:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020561:  caql_str, filenam, lineno); 
caai: catquery:00020670:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020671:  caql_str, filenam, lineno); 
caai: catquery:00020689:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020690:  caql_str, filenam, lineno); 
caai: catquery:00020708:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020709:  caql_str, filenam, lineno); 
caai: catquery:00020754:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020755:  caql_str, filenam, lineno); 
caai: catquery:00020794:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020795:  caql_str, filenam, lineno); 
caai: catquery:00020820:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020821:  caql_str, filenam, lineno); 
caai: catquery:00020839:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020840:  caql_str, filenam, lineno); 
caai: catquery:00020858:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020859:  caql_str, filenam, lineno); 
caai: catquery:00020905:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020906:  caql_str, filenam, lineno); 
caai: catquery:00020931:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020932:  caql_str, filenam, lineno); 
caai: catquery:00020964:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020965:  caql_str, filenam, lineno); 
caai: catquery:00020997:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00020998:  caql_str, filenam, lineno); 
caai: catquery:00021044:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00021045:  caql_str, filenam, lineno); 
caai: catquery:00021076:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00021077:  caql_str, filenam, lineno); 
caai: catquery:00021109:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00021110:  caql_str, filenam, lineno); 
caai: catquery:00021191:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00021192:  caql_str, filenam, lineno); 
caai: catquery:00021210:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00021211:  caql_str, filenam, lineno); 
caai: catquery:00021236:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00021237:  caql_str, filenam, lineno); 
caai: catquery:00021283:  elog(ERROR, "column not an oid: %s\nfile: %s, line %d", 
caai: catquery:00021284:  caql_str, filenam, lineno); 
caai: catquery:00021290:  elog(ERROR, "could not get column for relation: %s\nfile: %s, line %d", 
caai: catquery:00021291:  caql_str, filenam, lineno); 
caai: catquery:00021338:  elog(ERROR, "invalid caql string: %s\nfile: %s, line %d", 
caai: catquery:00021339:  caql_str, filenam, lineno); 
caai: catquery:00021412:  elog(ERROR, "invalid caql string: %s\nfile: %s, line %d", 
caai: catquery:00021413:  caql_str, filenam, lineno); 
caai: catquery:00021485:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021486:  caql_str, filenam, lineno); 
caai: catquery:00021511:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021512:  caql_str, filenam, lineno); 
caai: catquery:00021530:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021531:  caql_str, filenam, lineno); 
caai: catquery:00021556:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021557:  caql_str, filenam, lineno); 
caai: catquery:00021596:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021597:  caql_str, filenam, lineno); 
caai: catquery:00021615:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021616:  caql_str, filenam, lineno); 
caai: catquery:00021641:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021642:  caql_str, filenam, lineno); 
caai: catquery:00021688:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021689:  caql_str, filenam, lineno); 
caai: catquery:00021721:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021722:  caql_str, filenam, lineno); 
caai: catquery:00021740:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021741:  caql_str, filenam, lineno); 
caai: catquery:00021787:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021788:  caql_str, filenam, lineno); 
caai: catquery:00021806:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021807:  caql_str, filenam, lineno); 
caai: catquery:00021839:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021840:  caql_str, filenam, lineno); 
caai: catquery:00021865:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021866:  caql_str, filenam, lineno); 
caai: catquery:00021891:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021892:  caql_str, filenam, lineno); 
caai: catquery:00021945:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021946:  caql_str, filenam, lineno); 
caai: catquery:00021964:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021965:  caql_str, filenam, lineno); 
caai: catquery:00021990:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00021991:  caql_str, filenam, lineno); 
caai: catquery:00022023:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022024:  caql_str, filenam, lineno); 
caai: catquery:00022084:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022085:  caql_str, filenam, lineno); 
caai: catquery:00022110:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022111:  caql_str, filenam, lineno); 
caai: catquery:00022150:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022151:  caql_str, filenam, lineno); 
caai: catquery:00022169:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022170:  caql_str, filenam, lineno); 
caai: catquery:00022188:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022189:  caql_str, filenam, lineno); 
caai: catquery:00022207:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022208:  caql_str, filenam, lineno); 
caai: catquery:00022226:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022227:  caql_str, filenam, lineno); 
caai: catquery:00022252:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022253:  caql_str, filenam, lineno); 
caai: catquery:00022341:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022342:  caql_str, filenam, lineno); 
caai: catquery:00022402:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022403:  caql_str, filenam, lineno); 
caai: catquery:00022449:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022450:  caql_str, filenam, lineno); 
caai: catquery:00022496:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022497:  caql_str, filenam, lineno); 
caai: catquery:00022515:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022516:  caql_str, filenam, lineno); 
caai: catquery:00022541:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022542:  caql_str, filenam, lineno); 
caai: catquery:00022588:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022589:  caql_str, filenam, lineno); 
caai: catquery:00022614:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022615:  caql_str, filenam, lineno); 
caai: catquery:00022654:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022655:  caql_str, filenam, lineno); 
caai: catquery:00022694:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022695:  caql_str, filenam, lineno); 
caai: catquery:00022762:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022763:  caql_str, filenam, lineno); 
caai: catquery:00022823:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022824:  caql_str, filenam, lineno); 
caai: catquery:00022849:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022850:  caql_str, filenam, lineno); 
caai: catquery:00022896:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022897:  caql_str, filenam, lineno); 
caai: catquery:00022922:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022923:  caql_str, filenam, lineno); 
caai: catquery:00022948:  elog(ERROR, "column not a cstring: %s\nfile: %s, line %d", 
caai: catquery:00022949:  caql_str, filenam, lineno); 
caai: catquery:00022955:  elog(ERROR, "could not get column for relation: %s\nfile: %s, line %d", 
caai: catquery:00022956:  caql_str, filenam, lineno); 
aaaaa GP_IGNORE: gaaf: genam - ./backend/access/index/genam.c
gaaf: genam:00000208:  elog(ERROR, "initialize an in-memory only system catalog scan of %s relid %u " 
gaaf: genam:00000209:  "but in-memory table cannot be found.", 
gaaf: genam:00000210:  heapRelation->rd_rel->relname.data, heapRelation->rd_id); 
gaaf: genam:00000283:  elog(ERROR, "systable_getprev() is not allowed on segments"); 
gaaf: genam:00000342:  elog(ERROR, "cannot do ordered scan on index \"%s\", because it is the current REINDEX target", 
gaaf: genam:00000343:  RelationGetRelationName(indexRelation)); 
gaaf: genam:00000346:  elog(WARNING, "using index \"%s\" despite IgnoreSystemIndexes", 
gaaf: genam:00000347:  RelationGetRelationName(indexRelation)); 
gaaf: genam:00000368:  elog(ERROR, "column is not in index"); 
gaaf: genam:00000390:  // elog(ERROR, "system catalog scans with lossy index conditions are not implemented"); 
aaaaa GP_IGNORE: iaah: indexam - ./backend/access/index/indexam.c
iaah: indexam:00000103:  elog(ERROR, "invalid %s regproc", CppAsString(pname)); \ 
iaah: indexam:00000104:  fmgr_info_cxt(procOid, procedure, indexRelation->rd_indexcxt); \ 
iaah: indexam:00000105:  } \ 
iaah: indexam:00000106: } while(0) 
iaah: indexam:00000107:  
iaah: indexam:00000108: #define GET_SCAN_PROCEDURE(pname) \ 
iaah: indexam:00000109: do { \ 
iaah: indexam:00000110:  procedure = &scan->indexRelation->rd_aminfo->pname; \ 
iaah: indexam:00000111:  if (!OidIsValid(procedure->fn_oid)) \ 
iaah: indexam:00000112:  { \ 
iaah: indexam:00000113:  RegProcedure procOid = scan->indexRelation->rd_am->pname; \ 
iaah: indexam:00000114:  if (!RegProcedureIsValid(procOid)) \ 
iaah: indexam:00000115:  elog(ERROR, "invalid %s regproc", CppAsString(pname)); \ 
iaah: indexam:00000116:  fmgr_info_cxt(procOid, procedure, scan->indexRelation->rd_indexcxt); \ 
iaah: indexam:00000117:  } \ 
iaah: indexam:00000118: } while(0) 
iaah: indexam:00000119:  
iaah: indexam:00000120: static IndexScanDesc index_beginscan_internal(Relation indexRelation, 
iaah: indexam:00000121:  int nkeys, ScanKey key); 
iaah: indexam:00000151:  ereport(ERROR, 
iaah: indexam:00000152:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
iaah: indexam:00000153:  errmsg("\"%s\" is not an index", 
iaah: indexam:00000154:  RelationGetRelationName(r)))); 
iaah: indexam:00000725:  elog(ERROR, "missing support function %d for attribute %d of index \"%s\"", 
iaah: indexam:00000726:  procnum, attnum, RelationGetRelationName(irel)); 
aaaaa GP_IGNORE: naaj: nbtinsert - ./backend/access/nbtree/nbtinsert.c
naaj: nbtinsert:00000197:  ereport(ERROR, 
naaj: nbtinsert:00000198:  (errcode(ERRCODE_UNIQUE_VIOLATION), 
naaj: nbtinsert:00000199:  errmsg("duplicate key violates unique constraint \"%s\"", 
naaj: nbtinsert:00000200:  RelationGetRelationName(rel)), 
naaj: nbtinsert:00000201:  errOmitLocation(true))); 
naaj: nbtinsert:00000228:  ereport(ERROR, 
naaj: nbtinsert:00000229:  (errcode(ERRCODE_UNIQUE_VIOLATION), 
naaj: nbtinsert:00000230:  errmsg("duplicate key violates unique constraint \"%s\"", 
naaj: nbtinsert:00000231:  RelationGetRelationName(rel)), 
naaj: nbtinsert:00000232:  errOmitLocation(true))); 
naaj: nbtinsert:00000384:  elog(ERROR, "failed to fetch tuple being inserted"); 
naaj: nbtinsert:00000387:  ereport(ERROR, 
naaj: nbtinsert:00000388:  (errcode(ERRCODE_UNIQUE_VIOLATION), 
naaj: nbtinsert:00000389:  errmsg("duplicate key violates unique constraint \"%s\"", 
naaj: nbtinsert:00000390:  RelationGetRelationName(rel)), 
naaj: nbtinsert:00000391:  errOmitLocation(true))); 
naaj: nbtinsert:00000442:  elog(ERROR, "fell off the end of index \"%s\"", 
naaj: nbtinsert:00000443:  RelationGetRelationName(rel)); 
naaj: nbtinsert:00000539:  ereport(ERROR, 
naaj: nbtinsert:00000540:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
naaj: nbtinsert:00000541:  errmsg("index row size %lu exceeds btree maximum, %lu", 
naaj: nbtinsert:00000542:  (unsigned long) itemsz, 
naaj: nbtinsert:00000543:  (unsigned long) BTMaxItemSize(page)), 
naaj: nbtinsert:00000544:  errhint("Values larger than 1/3 of a buffer page cannot be indexed.\n" 
naaj: nbtinsert:00000545:  "Consider a function index of an MD5 hash of the value, " 
naaj: nbtinsert:00000546:  "or use full text indexing."))); 
naaj: nbtinsert:00000619:  elog(ERROR, "fell off the end of index \"%s\"", 
naaj: nbtinsert:00000620:  RelationGetRelationName(rel)); 
naaj: nbtinsert:00001309:  elog(ERROR, "could not find a feasible split point for index \"%s\"", 
naaj: nbtinsert:00001310:  RelationGetRelationName(rel)); 
naaj: nbtinsert:00001481:  elog(ERROR, "failed to re-find parent key in index \"%s\" for split pages %u/%u", 
naaj: nbtinsert:00001482:  RelationGetRelationName(rel), bknum, rbknum); 
aaaaa GP_IGNORE: naah: nbtpage - ./backend/access/nbtree/nbtpage.c
naah: nbtpage:00000196:  ereport(ERROR, 
naah: nbtpage:00000197:  (errcode(ERRCODE_INDEX_CORRUPTED), 
naah: nbtpage:00000198:  errmsg("index \"%s\" is not a btree", 
naah: nbtpage:00000199:  RelationGetRelationName(rel)))); 
naah: nbtpage:00000202:  ereport(ERROR, 
naah: nbtpage:00000203:  (errcode(ERRCODE_INDEX_CORRUPTED), 
naah: nbtpage:00000204:  errmsg("version mismatch in index \"%s\": file version %d, code version %d", 
naah: nbtpage:00000205:  RelationGetRelationName(rel), 
naah: nbtpage:00000206:  metad->btm_version, BTREE_VERSION))); 
naah: nbtpage:00000340:  elog(ERROR, "no live root page found in index \"%s\"", 
naah: nbtpage:00000341:  RelationGetRelationName(rel)); 
naah: nbtpage:00000347:  elog(ERROR, "root page %u of index \"%s\" has level %u, expected %u", 
naah: nbtpage:00000348:  rootblkno, RelationGetRelationName(rel), 
naah: nbtpage:00000349:  rootopaque->btpo.level, rootlevel); 
naah: nbtpage:00000405:  ereport(ERROR, 
naah: nbtpage:00000406:  (errcode(ERRCODE_INDEX_CORRUPTED), 
naah: nbtpage:00000407:  errmsg("index \"%s\" is not a btree", 
naah: nbtpage:00000408:  RelationGetRelationName(rel)))); 
naah: nbtpage:00000411:  ereport(ERROR, 
naah: nbtpage:00000412:  (errcode(ERRCODE_INDEX_CORRUPTED), 
naah: nbtpage:00000413:  errmsg("version mismatch in index \"%s\": file version %d, code version %d", 
naah: nbtpage:00000414:  RelationGetRelationName(rel), 
naah: nbtpage:00000415:  metad->btm_version, BTREE_VERSION))); 
naah: nbtpage:00000444:  elog(ERROR, "no live root page found in index \"%s\"", 
naah: nbtpage:00000445:  RelationGetRelationName(rel)); 
naah: nbtpage:00000451:  elog(ERROR, "root page %u of index \"%s\" has level %u, expected %u", 
naah: nbtpage:00000452:  rootblkno, RelationGetRelationName(rel), 
naah: nbtpage:00000453:  rootopaque->btpo.level, rootlevel); 
naah: nbtpage:00000473:  ereport(ERROR, 
naah: nbtpage:00000474:  (errcode(ERRCODE_INDEX_CORRUPTED), 
naah: nbtpage:00000475:  errmsg("index \"%s\" contains unexpected zero page at block %u", 
naah: nbtpage:00000476:  RelationGetRelationName(rel), 
naah: nbtpage:00000477:  BufferGetBlockNumber(buf)), 
naah: nbtpage:00000478:  errhint("Please REINDEX it."))); 
naah: nbtpage:00000485:  ereport(ERROR, 
naah: nbtpage:00000486:  (errcode(ERRCODE_INDEX_CORRUPTED), 
naah: nbtpage:00000487:  errmsg("index \"%s\" contains corrupted page at block %u", 
naah: nbtpage:00000488:  RelationGetRelationName(rel), 
naah: nbtpage:00000489:  BufferGetBlockNumber(buf)), 
naah: nbtpage:00000490:  errhint("Please REINDEX it."), 
naah: nbtpage:00000491:  errSendAlert(true))); 
naah: nbtpage:00000826:  elog(ERROR, "failed to re-find parent key in index \"%s\" for deletion target page %u", 
naah: nbtpage:00000827:  RelationGetRelationName(rel), target); 
naah: nbtpage:00000991:  elog(ERROR, "not enough stack items"); 
naah: nbtpage:00001089:  elog(ERROR, "left link changed unexpectedly in block %u of index \"%s\"", 
naah: nbtpage:00001090:  target, RelationGetRelationName(rel)); 
naah: nbtpage:00001105:  elog(ERROR, "failed to re-find parent key in index \"%s\" for deletion target page %u", 
naah: nbtpage:00001106:  RelationGetRelationName(rel), target); 
naah: nbtpage:00001126:  elog(ERROR, "failed to delete rightmost child %u of block %u in index \"%s\"", 
naah: nbtpage:00001127:  target, parent, RelationGetRelationName(rel)); 
aaaaa GP_IGNORE: naag: nbtree - ./backend/access/nbtree/nbtree.c
naag: nbtree:00000112:  elog(ERROR, "index \"%s\" already contains data", 
naag: nbtree:00000113:  RelationGetRelationName(index)); 
aaaaa GP_IGNORE: naaj: nbtsearch - ./backend/access/nbtree/nbtsearch.c
naaj: nbtsearch:00000203:  elog(ERROR, "fell off the end of index \"%s\"", 
naaj: nbtsearch:00000204:  RelationGetRelationName(rel)); 
naaj: nbtsearch:00000823:  elog(ERROR, "unrecognized strat_total: %d", (int) strat_total); 
naaj: nbtsearch:00001329:  elog(ERROR, "fell off the end of index \"%s\"", 
naaj: nbtsearch:00001330:  RelationGetRelationName(rel)); 
naaj: nbtsearch:00001352:  elog(ERROR, "could not find left sibling of block %u in index \"%s\"", 
naaj: nbtsearch:00001353:  obknum, RelationGetRelationName(rel)); 
naaj: nbtsearch:00001413:  elog(ERROR, "fell off the end of index \"%s\"", 
naaj: nbtsearch:00001414:  RelationGetRelationName(rel)); 
naaj: nbtsearch:00001424:  elog(ERROR, "btree level %u not found in index \"%s\"", 
naaj: nbtsearch:00001425:  level, RelationGetRelationName(rel)); 
naaj: nbtsearch:00001506:  elog(ERROR, "invalid scan direction: %d", (int) dir); 
aaaaa GP_IGNORE: naah: nbtsort - ./backend/access/nbtree/nbtsort.c
naah: nbtsort:00000436:  elog(ERROR, "failed to add item to the index page"); 
naah: nbtsort:00000507:  ereport(ERROR, 
naah: nbtsort:00000508:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
naah: nbtsort:00000509:  errmsg("index row size %lu exceeds btree maximum, %lu", 
naah: nbtsort:00000510:  (unsigned long) itupsz, 
naah: nbtsort:00000511:  (unsigned long) BTMaxItemSize(npage)), 
naah: nbtsort:00000512:  errhint("Values larger than 1/3 of a buffer page cannot be indexed.\n" 
naah: nbtsort:00000513:  "Consider a function index of an MD5 hash of the value, " 
naah: nbtsort:00000514:  "or use full text indexing."))); 
aaaaa GP_IGNORE: naai: nbtutils - ./backend/access/nbtree/nbtutils.c
naai: nbtutils:00000246:  elog(ERROR, "btree index keys must be ordered by attribute"); 
naai: nbtutils:00000318:  elog(ERROR, "btree index keys must be ordered by attribute"); 
naai: nbtutils:00000497:  elog(ERROR, "unrecognized StrategyNumber: %d", 
naai: nbtutils:00000498:  (int) skey->sk_strategy); 
naai: nbtutils:00000789:  elog(ERROR, "unrecognized RowCompareType: %d", 
naai: nbtutils:00000790:  (int) subkey->sk_strategy); 
naai: nbtutils:00001030:  elog(ERROR, "multiple active vacuums for index \"%s\"", 
naai: nbtutils:00001031:  RelationGetRelationName(rel)); 
naai: nbtutils:00001039:  elog(ERROR, "out of btvacinfo slots"); 
aaaaa GP_IGNORE: caae: clog - ./backend/access/transam/clog.c
caae: clog:00000128:  elog(FATAL,"TransactionIdSetStatus invalid for transaction %u current status '%s' (0x%x) and new status '%s' (0x%x)", 
caae: clog:00000129:  xid, 
caae: clog:00000130:  XidStatus_Name(debugStatus), 
caae: clog:00000131:  debugStatus, 
caae: clog:00000132:  XidStatus_Name(status), 
caae: clog:00000133:  status); 
aaaaa GP_IGNORE: dabe: distributedlog - ./backend/access/transam/distributedlog.c
dabe: distributedlog:00000137:  elog(ERROR, 
dabe: distributedlog:00000138:  "Current distributed timestamp = %u does not match input timestamp = %u for local xid = %u in distributed log (page = %d, entryno = %d)", 
dabe: distributedlog:00000139:  ptr->distribTimeStamp, distribTimeStamp, localXid, page, entryno); 
dabe: distributedlog:00000142:  elog(ERROR, 
dabe: distributedlog:00000143:  "Current distributed xid = %u does not match input distributed xid = %u for local xid = %u in distributed log (page = %d, entryno = %d)", 
dabe: distributedlog:00000144:  ptr->distribXid, distribXid, localXid, page, entryno); 
dabe: distributedlog:00000252:  elog(ERROR, "Found zero timestamp for local xid = %u in distributed log (distributed xid = %u, page = %d, entryno = %d)", 
dabe: distributedlog:00000253:  localXid, *distribXid, page, entryno); 
dabe: distributedlog:00000255:  elog(ERROR, "Found zero distributed xid for local xid = %u in distributed log (dtx start time = %u, page = %d, entryno = %d)", 
dabe: distributedlog:00000256:  localXid, *distribTimeStamp, page, entryno); 
dabe: distributedlog:00000401:  elog(FATAL, "could not initialize Distributed Log shared memory"); 
dabe: distributedlog:00000486:  ereport(ERROR, (errmsg("cannot form path: %s", distributedLogDir))); 
dabe: distributedlog:00000494:  elog(ERROR, "Could not open directory \"%s\": %m", path); 
dabe: distributedlog:00000497:  elog(ERROR, 
dabe: distributedlog:00000498:  "The directory \"%s\" is missing indicating we are upgrading to 3.1.1.5, but the system was not cleanly shutdown", 
dabe: distributedlog:00000499:  path); 
dabe: distributedlog:00000502:  elog(ERROR,"Could not create directory \"%s\": %m\n", 
dabe: distributedlog:00000503:  path); 
aaaaa GP_IGNORE: gacb: gpxchangetrackingxlog - ./backend/access/transam/gp_changetracking_log.c
gacb: gpxchangetrackingxlog:00000056:  elog(ERROR, "Unexpected partial page read of %d bytes", (int) nread); 
gacb: gpxchangetrackingxlog:00000087:  elog(ERROR, "gp_changetracking_log currently supports storage version 1 only"); 
gacb: gpxchangetrackingxlog:00000155:  elog(ERROR, "invalid log file descriptor specified (%d). " 
gacb: gpxchangetrackingxlog:00000156:  "valid values are %d (full), %d (compact), or %d (transient). ", 
gacb: gpxchangetrackingxlog:00000157:  ftype, CTF_LOG_FULL, CTF_LOG_COMPACT, CTF_LOG_TRANSIENT); 
gacb: gpxchangetrackingxlog:00000161:  ereport(ERROR, 
gacb: gpxchangetrackingxlog:00000162:  (errcode_for_file_access(), 
gacb: gpxchangetrackingxlog:00000163:  errmsg("gp_changetracking_log couldn't open %s file on segment %d dbid %d", 
gacb: gpxchangetrackingxlog:00000164:  ChangeTracking_FtypeToString(ftype), Gp_segment, GpIdentity.dbid))); 
aaaaa GP_IGNORE: gabi: gpxtransactionxlog - ./backend/access/transam/gp_transaction_log.c
gabi: gpxtransactionxlog:00000122:  elog(ERROR, "Unexpected transaction status %d", 
gabi: gpxtransactionxlog:00000123:  status); 
aaaaa GP_IGNORE: paca: persistentendxactrec - ./backend/access/transam/persistentendxactrec.c
paca: persistentendxactrec:00000065:  elog(ERROR, "Unexpected persistent end transaction file-system action: %d", 
paca: persistentendxactrec:00000066:  action); 
paca: persistentendxactrec:00000168:  elog(ERROR, "Unexpected persistent transaction object kind: %d", 
paca: persistentendxactrec:00000169:  objKind); 
paca: persistentendxactrec:00000237:  elog(ERROR, "Persistent file-system action is invalid (%d) (index %d, transaction kind '%s')", 
paca: persistentendxactrec:00000238:  fileSysActionInfos[i].action, 
paca: persistentendxactrec:00000239:  i, 
paca: persistentendxactrec:00000240:  EndXactRecKind_Name(endXactRecKind)); 
paca: persistentendxactrec:00000243:  elog(ERROR, "Persistent file-system object type is invalid (%d) (index %d, transaction kind '%s')", 
paca: persistentendxactrec:00000244:  fileSysActionInfos[i].fsObjName.type, 
paca: persistentendxactrec:00000245:  i, 
paca: persistentendxactrec:00000246:  EndXactRecKind_Name(endXactRecKind)); 
paca: persistentendxactrec:00000249:  elog(ERROR, "TID for persistent '%s' tuple is invalid (0,0) (index %d, transaction kind '%s')", 
paca: persistentendxactrec:00000250:  PersistentFileSysObjName_TypeAndObjectName(&fileSysActionInfos[i].fsObjName), 
paca: persistentendxactrec:00000251:  i, 
paca: persistentendxactrec:00000252:  EndXactRecKind_Name(endXactRecKind)); 
paca: persistentendxactrec:00000261:  elog(ERROR, "Shouldn't being trying to verify persistent TID before persistence work"); 
paca: persistentendxactrec:00000299:  elog(ERROR, "Unexpected persistent file-system TID is known result: %d", 
paca: persistentendxactrec:00000300:  persistentTidIsKnownResult); 
paca: persistentendxactrec:00000304:  elog(ERROR, "Persistent '%s' serial number is invalid (0) (index %d, transaction kind '%s')", 
paca: persistentendxactrec:00000305:  PersistentFileSysObjName_TypeAndObjectName(&fileSysActionInfos[i].fsObjName), 
paca: persistentendxactrec:00000306:  i, 
paca: persistentendxactrec:00000307:  EndXactRecKind_Name(endXactRecKind)); 
paca: persistentendxactrec:00000311:  elog(ERROR, "Persistent '%s' relation storage manager has invalid value (%d) (index %d, transaction kind '%s')", 
paca: persistentendxactrec:00000312:  PersistentFileSysObjName_TypeAndObjectName(&fileSysActionInfos[i].fsObjName), 
paca: persistentendxactrec:00000313:  fileSysActionInfos[i].relStorageMgr, 
paca: persistentendxactrec:00000314:  i, 
paca: persistentendxactrec:00000315:  EndXactRecKind_Name(endXactRecKind)); 
paca: persistentendxactrec:00000379:  elog(ERROR, "Unexpected persistent transaction object kind: %d", 
paca: persistentendxactrec:00000380:  objKind); 
paca: persistentendxactrec:00000421:  elog(ERROR, "Unexpected persistent transaction object kind: %d", 
paca: persistentendxactrec:00000422:  objKind); 
paca: persistentendxactrec:00000557:  elog(ERROR, "Persistent end transaction serialize length mismatch (actual %d, supplied %d)", 
paca: persistentendxactrec:00000558:  currentLen, bufferLen); 
aaaaa GP_IGNORE: pace: persistentfilesysobjname - ./backend/access/transam/persistentfilesysobjname.c
pace: persistentfilesysobjname:00000105:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
pace: persistentfilesysobjname:00000106:  name->type); 
pace: persistentfilesysobjname:00000177:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
pace: persistentfilesysobjname:00000178:  name1->type); 
aaaaa GP_IGNORE: saae: slru - ./backend/access/transam/slru.c
saae: slru:00000826:  ereport(ERROR, 
saae: slru:00000827:  (errcode_for_file_access(), 
saae: slru:00000828:  errmsg("could not access status of transaction %u", xid), 
saae: slru:00000829:  errdetail("Could not open file \"%s\": %m.", path))); 
saae: slru:00000832:  ereport(ERROR, 
saae: slru:00000833:  (errcode_for_file_access(), 
saae: slru:00000834:  errmsg("could not access status of transaction %u", xid), 
saae: slru:00000835:  errdetail("Could not seek in file \"%s\" to offset %u: %m.", 
saae: slru:00000836:  path, offset))); 
saae: slru:00000841:  ereport(ERROR, 
saae: slru:00000842:  (errcode_for_file_access(), 
saae: slru:00000843:  errmsg("could not access status of transaction %u", xid), 
saae: slru:00000844:  errdetail("Could not read from file \"%s\" at offset %u: %m.", 
saae: slru:00000845:  path, offset))); 
saae: slru:00000849:  ereport(ERROR, 
saae: slru:00000850:  (errcode_for_file_access(), 
saae: slru:00000851:  errmsg("could not access status of transaction %u", xid), 
saae: slru:00000852:  errdetail("Could not read from file \"%s\" at offset %u: End of file.", 
saae: slru:00000853:  path, offset))); 
saae: slru:00000858:  ereport(ERROR, 
saae: slru:00000859:  (errcode_for_file_access(), 
saae: slru:00000860:  errmsg("could not access status of transaction %u", xid), 
saae: slru:00000861:  errdetail("Could not write to file \"%s\" at offset %u: %m.", 
saae: slru:00000862:  path, offset))); 
saae: slru:00000865:  ereport(ERROR, 
saae: slru:00000866:  (errcode_for_file_access(), 
saae: slru:00000867:  errmsg("could not access status of transaction %u", xid), 
saae: slru:00000868:  errdetail("Could not fsync file \"%s\": %m.", 
saae: slru:00000869:  path))); 
saae: slru:00000872:  ereport(ERROR, 
saae: slru:00000873:  (errcode_for_file_access(), 
saae: slru:00000874:  errmsg("could not access status of transaction %u", xid), 
saae: slru:00000875:  errdetail("Could not close file \"%s\": %m.", 
saae: slru:00000876:  path))); 
saae: slru:00000880:  elog(ERROR, "unrecognized SimpleLru error cause: %d", 
saae: slru:00000881:  (int) slru_errcause); 
saae: slru:00001204:  ereport(ERROR, (errmsg("cannot form path %s/%s", dir, clde->d_name))); 
aaaaa GP_IGNORE: taah: transam - ./backend/access/transam/transam.c
taah: transam:00000192:  elog(WARNING, "no pg_subtrans entry for subcommitted XID %u", 
taah: transam:00000193:  transactionId); 
taah: transam:00000241:  elog(WARNING, "no pg_subtrans entry for subcommitted XID %u", 
taah: transam:00000242:  transactionId); 
aaaaa GP_IGNORE: taai: twophase - ./backend/access/transam/twophase.c
taai: twophase:00000443:  ereport(ERROR, 
taai: twophase:00000444:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taai: twophase:00000445:  errmsg("transaction identifier \"%s\" is too long (%d > %d max)", 
taai: twophase:00000446:  gid, idlen, GIDSIZE))); 
taai: twophase:00000480:  ereport(ERROR, 
taai: twophase:00000481:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taai: twophase:00000482:  errmsg("transaction identifier \"%s\" is already in use", 
taai: twophase:00000483:  gid))); 
taai: twophase:00000489:  ereport(ERROR, 
taai: twophase:00000490:  (errcode(ERRCODE_OUT_OF_MEMORY), 
taai: twophase:00000491:  errmsg("maximum number of prepared transactions reached"), 
taai: twophase:00000492:  errhint("Increase max_prepared_transactions (currently %d).", 
taai: twophase:00000493:  max_prepared_xacts))); 
taai: twophase:00000644:  ereport(ERROR, 
taai: twophase:00000645:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
taai: twophase:00000646:  errmsg("prepared transaction with identifier \"%s\" is busy", 
taai: twophase:00000647:  gid))); 
taai: twophase:00000656:  ereport(ERROR, 
taai: twophase:00000657:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taai: twophase:00000658:  errmsg("permission denied to finish prepared transaction"), 
taai: twophase:00000659:  errhint("Must be superuser or the user that prepared the transaction."))); 
taai: twophase:00000671:  ereport(ERROR, 
taai: twophase:00000672:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taai: twophase:00000673:  errmsg("prepared transaction belongs to another database"), 
taai: twophase:00000674:  errhint("Connect to the database where the transaction was prepared to finish it."))); 
taai: twophase:00000692:  ereport(ERROR, 
taai: twophase:00000693:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taai: twophase:00000694:  errmsg("prepared transaction with identifier \"%s\" does not exist", 
taai: twophase:00000695:  gid))); 
taai: twophase:00000729:  ereport(ERROR, 
taai: twophase:00000730:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taai: twophase:00000731:  errmsg("prepared transaction with identifier \"%s\" does not exist", 
taai: twophase:00000732:  gid))); 
taai: twophase:00000780:  elog(ERROR, "failed to find %p in GlobalTransaction array", (void *)gxact); 
taai: twophase:00000959:  elog(ERROR, "failed to find dummy PGPROC for xid %u (%d entries)", xid, TwoPhaseState->numPrepXacts); 
taai: twophase:00001374:  elog( ERROR, "FinishPreparedTransaction: Did not find xid = %d in TwoPhaseState" 
taai: twophase:00001375:  , xid 
taai: twophase:00001376:  ); 
taai: twophase:00001388:  ereport(WARNING, 
taai: twophase:00001389:  (errmsg("primary failure, " 
taai: twophase:00001390:  "xlog record is invalid, " 
taai: twophase:00001391:  "failover requested"), 
taai: twophase:00001392:  errhint("run gprecoverseg to re-establish mirror connectivity"))); 
taai: twophase:00001396:  ereport(ERROR, 
taai: twophase:00001397:  (errcode(ERRCODE_DATA_CORRUPTED), 
taai: twophase:00001398:  errmsg("xlog record is invalid"), 
taai: twophase:00001399:  errSendAlert(true))); 
taai: twophase:00001405:  ereport(ERROR, 
taai: twophase:00001406:  (errcode(ERRCODE_DATA_CORRUPTED), 
taai: twophase:00001407:  errmsg("two-phase state information for transaction %u is corrupt", 
taai: twophase:00001408:  xid), 
taai: twophase:00001409:  errSendAlert(true))); 
aaaaa GP_IGNORE: vaag: varsup - ./backend/access/transam/varsup.c
vaag: varsup:00000093:  ereport(ERROR, 
vaag: varsup:00000094:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
vaag: varsup:00000095:  errmsg("database is not accepting commands to avoid wraparound data loss in database \"%s\"", 
vaag: varsup:00000096:  NameStr(ShmemVariableCache->limit_datname)), 
vaag: varsup:00000097:  errhint("Stop the postmaster and use a standalone backend to vacuum database \"%s\".", 
vaag: varsup:00000098:  NameStr(ShmemVariableCache->limit_datname)))); 
vaag: varsup:00000100:  ereport(WARNING, 
vaag: varsup:00000101:  (errmsg("database \"%s\" must be vacuumed within %u transactions", 
vaag: varsup:00000102:  NameStr(ShmemVariableCache->limit_datname), 
vaag: varsup:00000103:  ShmemVariableCache->xidWrapLimit - xid), 
vaag: varsup:00000104:  errhint("To avoid a database shutdown, execute a full-database VACUUM in \"%s\".", 
vaag: varsup:00000105:  NameStr(ShmemVariableCache->limit_datname)))); 
vaag: varsup:00000309:  ereport(WARNING, 
vaag: varsup:00000310:  (errmsg("database \"%s\" must be vacuumed within %u transactions", 
vaag: varsup:00000311:  NameStr(*oldest_datname), 
vaag: varsup:00000312:  xidWrapLimit - curXid), 
vaag: varsup:00000313:  errhint("To avoid a database shutdown, execute a full-database VACUUM in \"%s\".", 
vaag: varsup:00000314:  NameStr(*oldest_datname)))); 
aaaaa GP_IGNORE: xaae: xact - ./backend/access/transam/xact.c
xaae: xact:00000834:  ereport(ERROR, 
xaae: xact:00000835:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
xaae: xact:00000836:  errmsg("cannot have more than 2^32-1 commands in a transaction"))); 
xaae: xact:00001067:  ereport(ERROR, 
xaae: xact:00001068:  (errmsg("Reader qExec had local changes to commit! (MyXactMadeXLogEntry = %s, MyXactMadeTempRelUpdate = %s, nrels = %d)", 
xaae: xact:00001069:  (MyXactMadeXLogEntry ? "true" : "false"), (MyXactMadeTempRelUpdate ? "true" : "false"), nrels), 
xaae: xact:00001070:  errdetail("A Reader qExec tried to commit local changes. " 
xaae: xact:00001071:  "Only the single Writer qExec can do so. "), 
xaae: xact:00001072:  errhint("This is most likely the result of a feature being turned " 
xaae: xact:00001073:  "on that violates the single WRITER principle"))); 
xaae: xact:00001534:  elog(FATAL, "Unexpected segment distribute transaction context: '%s'", 
xaae: xact:00001535:  DtxContextToString(DistributedTransactionContext)); 
xaae: xact:00002158:  elog(FATAL, "Unexpected distributed transaction context: '%s'", 
xaae: xact:00002159:  DtxContextToString(DistributedTransactionContext)); 
xaae: xact:00002386:  elog(ERROR, "Error in reading subtransaction file."); 
xaae: xact:00002532:  elog(ERROR, "Error in saving subtransaction ids"); 
xaae: xact:00002651:  elog(ERROR, "Error in Reading Subtransaction file."); 
xaae: xact:00002761:  elog(ERROR, 
xaae: xact:00002762:  "Error in Opening Subtransaction file."); 
xaae: xact:00002787:  elog(ERROR, 
xaae: xact:00002788:  "Error in Reading Subtransaction file."); 
xaae: xact:00002827:  elog(ERROR, 
xaae: xact:00002828:  "Error in Opening Subtransaction file for showing."); 
xaae: xact:00002848:  elog(ERROR, "Error in Reading Subtransaction file."); 
xaae: xact:00002900:  elog(WARNING, "StartTransaction while in %s state", 
xaae: xact:00002901:  TransStateAsString(s->state)); 
xaae: xact:00003213:  ereport(ERROR, 
xaae: xact:00003214:  (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
xaae: xact:00003215:  errmsg("StartTransaction timed out waiting for Writer to set the shared snapshot."), 
xaae: xact:00003216:  errdetail("We are waiting for the shared snapshot to have XID: %d/%u but the value " 
xaae: xact:00003217:  "is currently: %d/%u. Our slotindex is: %d our writer-pid %d\n" 
xaae: xact:00003218:  "DistributedTransactionContext = %s." 
xaae: xact:00003219:  "Dump of all sharedsnapshots in shmem: %s", 
xaae: xact:00003220:  QEDtxContextInfo.distributedXid, QEDtxContextInfo.segmateSync, 
xaae: xact:00003221:  SharedLocalSnapshotSlot->QDxid, SharedLocalSnapshotSlot->segmateSync, 
xaae: xact:00003222:  SharedLocalSnapshotSlot->slotindex, (int)SharedLocalSnapshotSlot->pid, 
xaae: xact:00003223:  DtxContextToString(DistributedTransactionContext), 
xaae: xact:00003224:  SharedSnapshotDump()))); 
xaae: xact:00003248:  elog(FATAL, "Unexpected segment distribute transaction context: '%s'", 
xaae: xact:00003249:  DtxContextToString(DistributedTransactionContext)); 
xaae: xact:00003343:  elog(WARNING, "CommitTransaction while in %s state", 
xaae: xact:00003344:  TransStateAsString(s->state)); 
xaae: xact:00003427:  elog(ERROR,"Raise an error as directed by Debug_abort_after_distributed_prepared"); 
xaae: xact:00003728:  elog(WARNING, "PrepareTransaction while in %s state", 
xaae: xact:00003729:  TransStateAsString(s->state)); 
xaae: xact:00004259:  elog(FATAL, "CleanupTransaction: unexpected state %s", 
xaae: xact:00004260:  TransStateAsString(s->state)); 
xaae: xact:00004394:  elog(ERROR, "StartTransactionCommand: unexpected s[tate %s", 
xaae: xact:00004395:  BlockStateAsString(s->blockState)); 
xaae: xact:00004427:  elog(FATAL, "CommitTransactionCommand: unexpected state %s", 
xaae: xact:00004428:  BlockStateAsString(s->blockState)); 
xaae: xact:00004813:  ereport(ERROR, 
xaae: xact:00004814:  (errcode(ERRCODE_ACTIVE_SQL_TRANSACTION), 
xaae: xact:00004815:  /* translator: %s represents an SQL statement name */ 
xaae: xact:00004816:  errmsg("%s cannot run inside a transaction block", 
xaae: xact:00004817:  stmtType), 
xaae: xact:00004818:  errOmitLocation(true))); 
xaae: xact:00004824:  ereport(ERROR, 
xaae: xact:00004825:  (errcode(ERRCODE_ACTIVE_SQL_TRANSACTION), 
xaae: xact:00004826:  /* translator: %s represents an SQL statement name */ 
xaae: xact:00004827:  errmsg("%s cannot run inside a subtransaction", 
xaae: xact:00004828:  stmtType), 
xaae: xact:00004829:  errOmitLocation(true))); 
xaae: xact:00004837:  ereport(ERROR, 
xaae: xact:00004838:  (errcode(ERRCODE_ACTIVE_SQL_TRANSACTION), 
xaae: xact:00004839:  /* translator: %s represents an SQL statement name */ 
xaae: xact:00004840:  errmsg("%s cannot be executed from a function", stmtType), 
xaae: xact:00004841:  errOmitLocation(true))); 
xaae: xact:00004846:  elog(FATAL, "cannot prevent transaction chain"); 
xaae: xact:00004889:  ereport(ERROR, 
xaae: xact:00004890:  (errcode(ERRCODE_NO_ACTIVE_SQL_TRANSACTION), 
xaae: xact:00004891:  /* translator: %s represents an SQL statement name */ 
xaae: xact:00004892:  errmsg("%s may only be used in transaction blocks", 
xaae: xact:00004893:  stmtType))); 
xaae: xact:00005129:  ereport(WARNING, 
xaae: xact:00005130:  (errcode(ERRCODE_ACTIVE_SQL_TRANSACTION), 
xaae: xact:00005131:  errmsg("there is already a transaction in progress"))); 
xaae: xact:00005147:  elog(FATAL, "BeginTransactionBlock: unexpected state %s", 
xaae: xact:00005148:  BlockStateAsString(s->blockState)); 
xaae: xact:00005251:  elog(FATAL, "EndTransactionBlock: unexpected state %s", 
xaae: xact:00005252:  BlockStateAsString(s->blockState)); 
xaae: xact:00005258:  elog(FATAL, "EndTransactionBlock: unexpected state %s", 
xaae: xact:00005259:  BlockStateAsString(s->blockState)); 
xaae: xact:00005276:  elog(FATAL, "EndTransactionBlock: unexpected state %s", 
xaae: xact:00005277:  BlockStateAsString(s->blockState)); 
xaae: xact:00005285:  elog(FATAL, "EndTransactionBlock: unexpected state %s", 
xaae: xact:00005286:  BlockStateAsString(s->blockState)); 
xaae: xact:00005303:  ereport(WARNING, 
xaae: xact:00005304:  (errcode(ERRCODE_NO_ACTIVE_SQL_TRANSACTION), 
xaae: xact:00005305:  errmsg("there is no transaction in progress"))); 
xaae: xact:00005322:  elog(FATAL, "EndTransactionBlock: unexpected state %s", 
xaae: xact:00005323:  BlockStateAsString(s->blockState)); 
xaae: xact:00005375:  elog(FATAL, "UserAbortTransactionBlock: unexpected state %s", 
xaae: xact:00005376:  BlockStateAsString(s->blockState)); 
xaae: xact:00005384:  elog(FATAL, "UserAbortTransactionBlock: unexpected state %s", 
xaae: xact:00005385:  BlockStateAsString(s->blockState)); 
xaae: xact:00005402:  ereport(WARNING, 
xaae: xact:00005403:  (errcode(ERRCODE_NO_ACTIVE_SQL_TRANSACTION), 
xaae: xact:00005404:  errmsg("there is no transaction in progress"))); 
xaae: xact:00005421:  elog(FATAL, "UserAbortTransactionBlock: unexpected state %s", 
xaae: xact:00005422:  BlockStateAsString(s->blockState)); 
xaae: xact:00005435:  elog(FATAL, "DefineSavepoint: unexpected state %s", 
xaae: xact:00005436:  BlockStateAsString(s->blockState)); 
xaae: xact:00005484:  elog(FATAL, "DefineSavepoint: unexpected state %s", 
xaae: xact:00005485:  BlockStateAsString(s->blockState)); 
xaae: xact:00005512:  ereport(ERROR, 
xaae: xact:00005513:  (errcode(ERRCODE_S_E_INVALID_SPECIFICATION), 
xaae: xact:00005514:  errmsg("no such savepoint"), 
xaae: xact:00005515:  errOmitLocation(true))); 
xaae: xact:00005541:  elog(FATAL, "ReleaseSavepoint: unexpected state %s", 
xaae: xact:00005542:  BlockStateAsString(s->blockState)); 
xaae: xact:00005563:  ereport(ERROR, 
xaae: xact:00005564:  (errcode(ERRCODE_S_E_INVALID_SPECIFICATION), 
xaae: xact:00005565:  errmsg("no such savepoint"))); 
xaae: xact:00005569:  ereport(ERROR, 
xaae: xact:00005570:  (errcode(ERRCODE_S_E_INVALID_SPECIFICATION), 
xaae: xact:00005571:  errmsg("no such savepoint"))); 
xaae: xact:00005613:  ereport(ERROR, 
xaae: xact:00005614:  (errcode(ERRCODE_S_E_INVALID_SPECIFICATION), 
xaae: xact:00005615:  errmsg("no such savepoint"))); 
xaae: xact:00005639:  elog(FATAL, "RollbackToSavepoint: unexpected state %s", 
xaae: xact:00005640:  BlockStateAsString(s->blockState)); 
xaae: xact:00005661:  ereport(ERROR, 
xaae: xact:00005662:  (errcode(ERRCODE_S_E_INVALID_SPECIFICATION), 
xaae: xact:00005663:  errmsg("no such savepoint"))); 
xaae: xact:00005667:  ereport(ERROR, 
xaae: xact:00005668:  (errcode(ERRCODE_S_E_INVALID_SPECIFICATION), 
xaae: xact:00005669:  errmsg("no such savepoint"))); 
xaae: xact:00005686:  elog(FATAL, "RollbackToSavepoint: unexpected state %s", 
xaae: xact:00005687:  BlockStateAsString(xact->blockState)); 
xaae: xact:00005698:  elog(FATAL, "RollbackToSavepoint: unexpected state %s", 
xaae: xact:00005699:  BlockStateAsString(xact->blockState)); 
xaae: xact:00005748:  elog(FATAL, "BeginInternalSubTransaction: unexpected state %s", 
xaae: xact:00005749:  BlockStateAsString(s->blockState)); 
xaae: xact:00005770:  elog(ERROR, "ReleaseCurrentSubTransaction: unexpected state %s", 
xaae: xact:00005771:  BlockStateAsString(s->blockState)); 
xaae: xact:00005814:  elog(FATAL, "RollbackAndReleaseCurrentSubTransaction: unexpected state %s", 
xaae: xact:00005815:  BlockStateAsString(s->blockState)); 
xaae: xact:00006008:  elog(FATAL, "invalid transaction block state: %s", 
xaae: xact:00006009:  BlockStateAsString(s->blockState)); 
xaae: xact:00006053:  elog(WARNING, "StartSubTransaction while in %s state", 
xaae: xact:00006054:  TransStateAsString(s->state)); 
xaae: xact:00006094:  elog(WARNING, "CommitSubTransaction while in %s state", 
xaae: xact:00006095:  TransStateAsString(s->state)); 
xaae: xact:00006223:  elog(WARNING, "AbortSubTransaction while in %s state", 
xaae: xact:00006224:  TransStateAsString(s->state)); 
xaae: xact:00006319:  elog(WARNING, "CleanupSubTransaction while in %s state", 
xaae: xact:00006320:  TransStateAsString(s->state)); 
xaae: xact:00006357:  ereport(WARNING, 
xaae: xact:00006358:  (errmsg("Using too many subtransactions in one transaction."), 
xaae: xact:00006359:  errhint("Close open transactions soon to avoid wraparound " 
xaae: xact:00006360:  "problems."))); 
xaae: xact:00006378:  ereport(ERROR, 
xaae: xact:00006379:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
xaae: xact:00006380:  errmsg("cannot have more than 2^32-1 subtransactions in a transaction"))); 
xaae: xact:00006430:  elog(WARNING, "PopTransaction while in %s state", 
xaae: xact:00006431:  TransStateAsString(s->state)); 
xaae: xact:00006434:  elog(FATAL, "PopTransaction with no parent"); 
xaae: xact:00006738:  elog(ERROR, 
xaae: xact:00006739:  "Distributed xid %u does not match %u in distributed commit redo record", 
xaae: xact:00006740:  gxact_log->gxid, distribXid); 
aaaaa GP_IGNORE: xaae: xlog - ./backend/access/transam/xlog.c
xaae: xlog:00000831:  ereport(ERROR, 
xaae: xlog:00000832:  (errmsg("Reader qExec had local changes to commit! (rmid = %u)", 
xaae: xlog:00000833:  rmid), 
xaae: xlog:00000834:  errdetail("A Reader qExec tried to commit local changes. " 
xaae: xlog:00000835:  "Only the single Writer qExec can do so. "), 
xaae: xlog:00000836:  errhint("This is most likely the result of a feature being turned " 
xaae: xlog:00000837:  "on that violates the single WRITER principle"))); 
xaae: xlog:00001423:  elog(WARNING, 
xaae: xlog:00001424:  "ChangeTracking_PrintRelationChangeInfo hang skipIssue %s", 
xaae: xlog:00001425:  (skipIssue ? "true" : "false")); 
xaae: xlog:00001878:  ereport(ERROR, (errmsg("could not generate xlog filename (%s/%s)", xlogDir, fname))); 
xaae: xlog:00001886:  ereport(ERROR, 
xaae: xlog:00001887:  (errcode_for_file_access(), 
xaae: xlog:00001888:  errmsg("could not open transaction log file for catch-up purposes -- it has been reclaimed (\"%s\")", 
xaae: xlog:00001889:  path))); 
xaae: xlog:00001891:  ereport(ERROR, 
xaae: xlog:00001892:  (errcode_for_file_access(), 
xaae: xlog:00001893:  errmsg("could not open transaction log file for catch-up purposes (\"%s\"): %m", 
xaae: xlog:00001894:  path))); 
xaae: xlog:00001904:  ereport(ERROR, 
xaae: xlog:00001905:  (errcode_for_file_access(), 
xaae: xlog:00001906:  errmsg("could not seek to end of file \"%s\" (log file %u, segment %u): %m", 
xaae: xlog:00001907:  path, logId, seg))); 
xaae: xlog:00001914:  ereport(ERROR, 
xaae: xlog:00001915:  (errcode_for_file_access(), 
xaae: xlog:00001916:  errmsg("could not seek to offset %u file \"%s\" (log file %u, segment %u): %m", 
xaae: xlog:00001917:  offset, path, logId, seg))); 
xaae: xlog:00001935:  ereport(ERROR, 
xaae: xlog:00001936:  (errcode_for_file_access(), 
xaae: xlog:00001937:  errmsg("could not read at offset %u file \"%s\" (log file %u, segment %u): %m", 
xaae: xlog:00001938:  offset, path, logId, seg))); 
xaae: xlog:00001942:  elog(ERROR,"XLogCatchupQDSegment: short read (request %d, actual %d)", 
xaae: xlog:00001943:  requestLen, readLen); 
xaae: xlog:00001952:  elog(ERROR, "XLogCatchupQDSegment: error formatting command to mirror 'xlog %d %d %d %d' (insufficient space)", logId, seg, offset, requestLen); 
xaae: xlog:00002059:  elog(ERROR,"response returned not OK"); 
xaae: xlog:00002824:  ereport(ERROR, 
xaae: xlog:00002825:  (errcode_for_file_access(), 
xaae: xlog:00002826:  errmsg("could not open file \"%s\" (log file %u, segment %u): %m", 
xaae: xlog:00002827:  path, log, seg))); 
xaae: xlog:00002843:  ereport(ERROR, (errmsg("could not generate filename xlogtemp.%d", (int)getpid()))); 
xaae: xlog:00002848:  ereport(ERROR, (errmsg("could not generate filename %s/%s", xlogDir, tmpsimple))); 
xaae: xlog:00002902:  ereport(ERROR, 
xaae: xlog:00002903:  (errcode_for_file_access(), 
xaae: xlog:00002904:  errmsg("could not write to file \"%s\": %m", tmppath))); 
xaae: xlog:00002984:  ereport(ERROR, 
xaae: xlog:00002985:  (errcode_for_file_access(), 
xaae: xlog:00002986:  errmsg("could not open file \"%s\": %m", path))); 
xaae: xlog:00002994:  ereport(ERROR, (errmsg("could not generate filename %s/xlogtemp.%d", xlogDir, (int) getpid()))); 
xaae: xlog:00003006:  ereport(ERROR, 
xaae: xlog:00003007:  (errcode_for_file_access(), 
xaae: xlog:00003008:  errmsg("could not create file \"%s\": %m", tmppath))); 
xaae: xlog:00003019:  ereport(ERROR, 
xaae: xlog:00003020:  (errcode_for_file_access(), 
xaae: xlog:00003021:  errmsg("could not read file \"%s\": %m", path))); 
xaae: xlog:00003023:  ereport(ERROR, 
xaae: xlog:00003024:  (errmsg("not enough data in file \"%s\"", path))); 
xaae: xlog:00003038:  ereport(ERROR, 
xaae: xlog:00003039:  (errcode_for_file_access(), 
xaae: xlog:00003040:  errmsg("could not write to file \"%s\": %m", tmppath))); 
xaae: xlog:00003045:  ereport(ERROR, 
xaae: xlog:00003046:  (errcode_for_file_access(), 
xaae: xlog:00003047:  errmsg("could not fsync file \"%s\": %m", tmppath))); 
xaae: xlog:00003050:  ereport(ERROR, 
xaae: xlog:00003051:  (errcode_for_file_access(), 
xaae: xlog:00003052:  errmsg("could not close file \"%s\": %m", tmppath))); 
xaae: xlog:00003060:  elog(ERROR, "InstallXLogFileSegment should not have failed"); 
xaae: xlog:00003168:  ereport(ERROR, 
xaae: xlog:00003169:  (errcode_for_file_access(), 
xaae: xlog:00003170:  errmsg("could not link file \"%s\" to \"%s\" (initialization of log file %u, segment %u): %m", 
xaae: xlog:00003171:  tmppath, path, *log, *seg))); 
xaae: xlog:00003211:  ereport(ERROR, 
xaae: xlog:00003212:  (errcode_for_file_access(), 
xaae: xlog:00003213:  errmsg("could not rename file \"%s\" to \"%s\" (initialization of log file %u, segment %u): %m", 
xaae: xlog:00003214:  tmppath, path, *log, *seg))); 
xaae: xlog:00003424:  ereport(ERROR, (errmsg("cannot generate filename %s/%s", xlogDir, recovername))); 
xaae: xlog:00003433:  ereport(FATAL, 
xaae: xlog:00003434:  (errcode_for_file_access(), 
xaae: xlog:00003435:  errmsg("could not stat file \"%s\": %m", 
xaae: xlog:00003436:  xlogpath))); 
xaae: xlog:00003441:  ereport(FATAL, 
xaae: xlog:00003442:  (errcode_for_file_access(), 
xaae: xlog:00003443:  errmsg("could not remove file \"%s\": %m", 
xaae: xlog:00003444:  xlogpath))); 
xaae: xlog:00003517:  ereport(FATAL, 
xaae: xlog:00003518:  (errmsg("archive file \"%s\" has wrong size: %lu instead of %lu", 
xaae: xlog:00003519:  xlogfname, 
xaae: xlog:00003520:  (unsigned long) stat_buf.st_size, 
xaae: xlog:00003521:  (unsigned long) expectedSize))); 
xaae: xlog:00003535:  ereport(FATAL, 
xaae: xlog:00003536:  (errcode_for_file_access(), 
xaae: xlog:00003537:  errmsg("could not stat file \"%s\": %m", 
xaae: xlog:00003538:  xlogpath))); 
xaae: xlog:00003577:  ereport(ERROR, (errmsg("cannot generate filename %s/%s", xlogDir, xlogfname))); 
xaae: xlog:00003646:  ereport(ERROR, 
xaae: xlog:00003647:  (errcode_for_file_access(), 
xaae: xlog:00003648:  errmsg("could not open transaction log directory \"%s\": %m", 
xaae: xlog:00003649:  xlogDir))); 
xaae: xlog:00003674:  ereport(ERROR, (errmsg("cannot generate filename %s/%s", xlogDir, xlde->d_name))); 
xaae: xlog:00003743:  ereport(ERROR, 
xaae: xlog:00003744:  (errcode_for_file_access(), 
xaae: xlog:00003745:  errmsg("QDSYNC: could not open standby transaction log directory \"%s\": %m", 
xaae: xlog:00003746:  xlogDir))); 
xaae: xlog:00003769:  ereport(ERROR, (errmsg("cannot generate filename %s/%s", xlogDir, xlde->d_name))); 
xaae: xlog:00003774:  ereport(WARNING, 
xaae: xlog:00003775:  (errcode_for_file_access(), 
xaae: xlog:00003776:  errmsg("QDSYNC: could not unlink standby transaction log file \"%s\": %m", 
xaae: xlog:00003777:  xlde->d_name))); 
xaae: xlog:00003810:  ereport(ERROR, 
xaae: xlog:00003811:  (errcode_for_file_access(), 
xaae: xlog:00003812:  errmsg("could not open transaction log directory \"%s\": %m", 
xaae: xlog:00003813:  xlogDir))); 
xaae: xlog:00003848:  ereport(ERROR, 
xaae: xlog:00003849:  (errcode_for_file_access(), 
xaae: xlog:00003850:  errmsg("could not open transaction log directory \"%s\": %m", 
xaae: xlog:00003851:  xlogDir))); 
xaae: xlog:00004625:  ereport(FATAL, 
xaae: xlog:00004626:  (errcode_for_file_access(), 
xaae: xlog:00004627:  errmsg("could not open file \"%s\": %m", path))); 
xaae: xlog:00004655:  ereport(FATAL, 
xaae: xlog:00004656:  (errmsg("syntax error in history file: %s", fline), 
xaae: xlog:00004657:  errhint("Expected a numeric timeline ID."))); 
xaae: xlog:00004661:  ereport(FATAL, 
xaae: xlog:00004662:  (errmsg("invalid data in history file: %s", fline), 
xaae: xlog:00004663:  errhint("Timeline IDs must be in increasing sequence."))); 
xaae: xlog:00004675:  ereport(FATAL, 
xaae: xlog:00004676:  (errmsg("invalid data in history file \"%s\"", path), 
xaae: xlog:00004677:  errhint("Timeline IDs must be less than child timeline's ID."))); 
xaae: xlog:00004715:  ereport(FATAL, 
xaae: xlog:00004716:  (errcode_for_file_access(), 
xaae: xlog:00004717:  errmsg("could not open file \"%s\": %m", path))); 
xaae: xlog:00004790:  ereport(ERROR, (errmsg("cannot generate filename %s/xlogtemp.%d", xlogDir, (int) getpid()))); 
xaae: xlog:00004799:  ereport(ERROR, 
xaae: xlog:00004800:  (errcode_for_file_access(), 
xaae: xlog:00004801:  errmsg("could not create file \"%s\": %m", tmppath))); 
xaae: xlog:00004818:  ereport(ERROR, 
xaae: xlog:00004819:  (errcode_for_file_access(), 
xaae: xlog:00004820:  errmsg("could not open file \"%s\": %m", path))); 
xaae: xlog:00004830:  ereport(ERROR, 
xaae: xlog:00004831:  (errcode_for_file_access(), 
xaae: xlog:00004832:  errmsg("could not read file \"%s\": %m", path))); 
xaae: xlog:00004851:  ereport(ERROR, 
xaae: xlog:00004852:  (errcode_for_file_access(), 
xaae: xlog:00004853:  errmsg("could not write to file \"%s\": %m", tmppath))); 
xaae: xlog:00004889:  ereport(ERROR, 
xaae: xlog:00004890:  (errcode_for_file_access(), 
xaae: xlog:00004891:  errmsg("could not write to file \"%s\": %m", tmppath))); 
xaae: xlog:00004895:  ereport(ERROR, 
xaae: xlog:00004896:  (errcode_for_file_access(), 
xaae: xlog:00004897:  errmsg("could not fsync file \"%s\": %m", tmppath))); 
xaae: xlog:00004900:  ereport(ERROR, 
xaae: xlog:00004901:  (errcode_for_file_access(), 
xaae: xlog:00004902:  errmsg("could not close file \"%s\": %m", tmppath))); 
xaae: xlog:00004917:  ereport(ERROR, 
xaae: xlog:00004918:  (errcode_for_file_access(), 
xaae: xlog:00004919:  errmsg("could not link file \"%s\" to \"%s\": %m", 
xaae: xlog:00004920:  tmppath, path))); 
xaae: xlog:00004924:  ereport(ERROR, 
xaae: xlog:00004925:  (errcode_for_file_access(), 
xaae: xlog:00004926:  errmsg("could not rename file \"%s\" to \"%s\": %m", 
xaae: xlog:00004927:  tmppath, path))); 
xaae: xlog:00005128:  ereport(FATAL, 
xaae: xlog:00005129:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005130:  errdetail("The database cluster was initialized with PG_CONTROL_VERSION %d," 
xaae: xlog:00005131:  " but the server was compiled with PG_CONTROL_VERSION %d.", 
xaae: xlog:00005132:  ControlFile->pg_control_version, PG_CONTROL_VERSION), 
xaae: xlog:00005133:  errhint("It looks like you need to initdb."))); 
xaae: xlog:00005150:  ereport(FATAL, 
xaae: xlog:00005151:  (errmsg("incorrect checksum in control file"))); 
xaae: xlog:00005168:  ereport(FATAL, 
xaae: xlog:00005169:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005170:  errdetail("The database cluster was initialized with CATALOG_VERSION_NO %d," 
xaae: xlog:00005171:  " but the server was compiled with CATALOG_VERSION_NO %d.", 
xaae: xlog:00005172:  ControlFile->catalog_version_no, CATALOG_VERSION_NO), 
xaae: xlog:00005173:  errhint("It looks like you need to initdb."))); 
xaae: xlog:00005175:  ereport(FATAL, 
xaae: xlog:00005176:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005177:  errdetail("The database cluster was initialized with MAXALIGN %d," 
xaae: xlog:00005178:  " but the server was compiled with MAXALIGN %d.", 
xaae: xlog:00005179:  ControlFile->maxAlign, MAXIMUM_ALIGNOF), 
xaae: xlog:00005180:  errhint("It looks like you need to initdb."))); 
xaae: xlog:00005182:  ereport(FATAL, 
xaae: xlog:00005183:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005184:  errdetail("The database cluster appears to use a different floating-point number format than the server executable."), 
xaae: xlog:00005185:  errhint("It looks like you need to initdb."))); 
xaae: xlog:00005187:  ereport(FATAL, 
xaae: xlog:00005188:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005189:  errdetail("The database cluster was initialized with BLCKSZ %d," 
xaae: xlog:00005190:  " but the server was compiled with BLCKSZ %d.", 
xaae: xlog:00005191:  ControlFile->blcksz, BLCKSZ), 
xaae: xlog:00005192:  errhint("It looks like you need to recompile or initdb."))); 
xaae: xlog:00005194:  ereport(FATAL, 
xaae: xlog:00005195:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005196:  errdetail("The database cluster was initialized with RELSEG_SIZE %d," 
xaae: xlog:00005197:  " but the server was compiled with RELSEG_SIZE %d.", 
xaae: xlog:00005198:  ControlFile->relseg_size, RELSEG_SIZE), 
xaae: xlog:00005199:  errhint("It looks like you need to recompile or initdb."))); 
xaae: xlog:00005201:  ereport(FATAL, 
xaae: xlog:00005202:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005203:  errdetail("The database cluster was initialized with XLOG_BLCKSZ %d," 
xaae: xlog:00005204:  " but the server was compiled with XLOG_BLCKSZ %d.", 
xaae: xlog:00005205:  ControlFile->xlog_blcksz, XLOG_BLCKSZ), 
xaae: xlog:00005206:  errhint("It looks like you need to recompile or initdb."))); 
xaae: xlog:00005208:  ereport(FATAL, 
xaae: xlog:00005209:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005210:  errdetail("The database cluster was initialized with XLOG_SEG_SIZE %d," 
xaae: xlog:00005211:  " but the server was compiled with XLOG_SEG_SIZE %d.", 
xaae: xlog:00005212:  ControlFile->xlog_seg_size, XLOG_SEG_SIZE), 
xaae: xlog:00005213:  errhint("It looks like you need to recompile or initdb."))); 
xaae: xlog:00005215:  ereport(FATAL, 
xaae: xlog:00005216:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005217:  errdetail("The database cluster was initialized with NAMEDATALEN %d," 
xaae: xlog:00005218:  " but the server was compiled with NAMEDATALEN %d.", 
xaae: xlog:00005219:  ControlFile->nameDataLen, NAMEDATALEN), 
xaae: xlog:00005220:  errhint("It looks like you need to recompile or initdb."))); 
xaae: xlog:00005222:  ereport(FATAL, 
xaae: xlog:00005223:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005224:  errdetail("The database cluster was initialized with INDEX_MAX_KEYS %d," 
xaae: xlog:00005225:  " but the server was compiled with INDEX_MAX_KEYS %d.", 
xaae: xlog:00005226:  ControlFile->indexMaxKeys, INDEX_MAX_KEYS), 
xaae: xlog:00005227:  errhint("It looks like you need to recompile or initdb."))); 
xaae: xlog:00005231:  ereport(FATAL, 
xaae: xlog:00005232:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005233:  errdetail("The database cluster was initialized without HAVE_INT64_TIMESTAMP" 
xaae: xlog:00005234:  " but the server was compiled with HAVE_INT64_TIMESTAMP."), 
xaae: xlog:00005235:  errhint("It looks like you need to recompile or initdb."))); 
xaae: xlog:00005238:  ereport(FATAL, 
xaae: xlog:00005239:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005240:  errdetail("The database cluster was initialized with HAVE_INT64_TIMESTAMP" 
xaae: xlog:00005241:  " but the server was compiled without HAVE_INT64_TIMESTAMP."), 
xaae: xlog:00005242:  errhint("It looks like you need to recompile or initdb."))); 
xaae: xlog:00005246:  ereport(FATAL, 
xaae: xlog:00005247:  (errmsg("database files are incompatible with server"), 
xaae: xlog:00005248:  errdetail("The database cluster was initialized with LOCALE_NAME_BUFLEN %d," 
xaae: xlog:00005249:  " but the server was compiled with LOCALE_NAME_BUFLEN %d.", 
xaae: xlog:00005250:  ControlFile->localeBuflen, LOCALE_NAME_BUFLEN), 
xaae: xlog:00005251:  errhint("It looks like you need to recompile or initdb."))); 
xaae: xlog:00005253:  ereport(FATAL, 
xaae: xlog:00005254:  (errmsg("database files are incompatible with operating system"), 
xaae: xlog:00005255:  errdetail("The database cluster was initialized with LC_COLLATE \"%s\"," 
xaae: xlog:00005256:  " which is not recognized by setlocale().", 
xaae: xlog:00005257:  ControlFile->lc_collate), 
xaae: xlog:00005258:  errhint("It looks like you need to initdb or install locale support."))); 
xaae: xlog:00005260:  ereport(FATAL, 
xaae: xlog:00005261:  (errmsg("database files are incompatible with operating system"), 
xaae: xlog:00005262:  errdetail("The database cluster was initialized with LC_CTYPE \"%s\"," 
xaae: xlog:00005263:  " which is not recognized by setlocale().", 
xaae: xlog:00005264:  ControlFile->lc_ctype), 
xaae: xlog:00005265:  errhint("It looks like you need to initdb or install locale support."))); 
xaae: xlog:00005693:  ereport(FATAL, 
xaae: xlog:00005694:  (errcode_for_file_access(), 
xaae: xlog:00005695:  errmsg("could not open recovery command file \"%s\": %m", 
xaae: xlog:00005696:  RECOVERY_COMMAND_FILE))); 
xaae: xlog:00005714:  ereport(FATAL, 
xaae: xlog:00005715:  (errcode_for_file_access(), 
xaae: xlog:00005716:  errmsg("could not rename file \"%s\" to \"%s\": %m", 
xaae: xlog:00005717:  RECOVERY_COMMAND_FILE, RECOVERY_COMMAND_DONE))); 
xaae: xlog:00005745:  ereport(FATAL, 
xaae: xlog:00005746:  (errcode_for_file_access(), 
xaae: xlog:00005747:  errmsg("could not open recovery command file \"%s\": %m", 
xaae: xlog:00005748:  RECOVERY_COMMAND_FILE))); 
xaae: xlog:00005810:  ereport(FATAL, 
xaae: xlog:00005811:  (errmsg("recovery_target_timeline is not a valid number: \"%s\"", 
xaae: xlog:00005812:  tok2))); 
xaae: xlog:00005826:  ereport(FATAL, 
xaae: xlog:00005827:  (errmsg("recovery_target_xid is not a valid number: \"%s\"", 
xaae: xlog:00005828:  tok2))); 
xaae: xlog:00005875:  ereport(FATAL, 
xaae: xlog:00005876:  (errmsg("unrecognized recovery parameter \"%s\"", 
xaae: xlog:00005877:  tok1))); 
xaae: xlog:00005883:  ereport(FATAL, 
xaae: xlog:00005884:  (errmsg("syntax error in recovery command file: %s", 
xaae: xlog:00005885:  cmdline), 
xaae: xlog:00005886:  errhint("Lines should have the format parameter = 'value'."))); 
xaae: xlog:00005890:  ereport(FATAL, 
xaae: xlog:00005891:  (errmsg("recovery command file \"%s\" did not specify restore_command", 
xaae: xlog:00005892:  RECOVERY_COMMAND_FILE))); 
xaae: xlog:00005909:  ereport(FATAL, 
xaae: xlog:00005910:  (errmsg("recovery_target_timeline %u does not exist", 
xaae: xlog:00005911:  rtli))); 
xaae: xlog:00005970:  ereport(ERROR, (errmsg("cannot generate path %s/RECOVERYXLOG", xlogDir))); 
xaae: xlog:00005981:  ereport(FATAL, 
xaae: xlog:00005982:  (errcode_for_file_access(), 
xaae: xlog:00005983:  errmsg("could not rename file \"%s\" to \"%s\": %m", 
xaae: xlog:00005984:  recoveryPath, xlogpath))); 
xaae: xlog:00006015:  ereport(ERROR, (errmsg("cannot generate path %s/RECOVERYHISTORY", xlogDir))); 
xaae: xlog:00006025:  ereport(FATAL, 
xaae: xlog:00006026:  (errcode_for_file_access(), 
xaae: xlog:00006027:  errmsg("could not rename file \"%s\" to \"%s\": %m", 
xaae: xlog:00006028:  RECOVERY_COMMAND_FILE, RECOVERY_COMMAND_DONE))); 
xaae: xlog:00006416:  ereport(FATAL, 
xaae: xlog:00006417:  (errmsg("control file contains invalid data"))); 
xaae: xlog:00006428:  ereport(LOG, 
xaae: xlog:00006429:  (errmsg("database system was interrupted while in recovery at %s", 
xaae: xlog:00006430:  str_time(ControlFile->time)), 
xaae: xlog:00006431:  errhint("This probably means that some data is corrupted and" 
xaae: xlog:00006432:  " you will have to use the last backup for recovery."), 
xaae: xlog:00006433:  errSendAlert(true))); 
xaae: xlog:00006435:  ereport(LOG, 
xaae: xlog:00006436:  (errmsg("database system was interrupted while in recovery at log time %s", 
xaae: xlog:00006437:  str_time(ControlFile->checkPointCopy.time)), 
xaae: xlog:00006438:  errhint("If this has occurred more than once some data may be corrupted" 
xaae: xlog:00006439:  " and you may need to choose an earlier recovery target."), 
xaae: xlog:00006440:  errSendAlert(true))); 
xaae: xlog:00006480:  ereport(FATAL, 
xaae: xlog:00006481:  (errmsg("requested timeline %u is not a child of database system timeline %u", 
xaae: xlog:00006482:  recoveryTargetTLI, 
xaae: xlog:00006483:  ControlFile->checkPointCopy.ThisTimeLineID))); 
xaae: xlog:00006697:  ereport(FATAL, 
xaae: xlog:00006698:  (errmsg("Database must be shutdown cleanly when using single backend start"))); 
xaae: xlog:00006703:  ereport(FATAL, 
xaae: xlog:00006704:  (errmsg("Database must be shutdown cleanly when using gp_before_persistence_work = on"))); 
xaae: xlog:00006759:  ereport(FATAL, 
xaae: xlog:00006760:  (errcode_for_file_access(), 
xaae: xlog:00006761:  errmsg("could not rename file \"%s\" to \"%s\": %m", 
xaae: xlog:00006762:  BACKUP_LABEL_FILE, BACKUP_LABEL_OLD))); 
xaae: xlog:00006898:  ereport(FATAL, 
xaae: xlog:00006899:  (errmsg("requested recovery stop point is before end time of backup dump"))); 
xaae: xlog:00006901:  ereport(FATAL, 
xaae: xlog:00006902:  (errmsg("WAL ends before end time of backup dump"))); 
xaae: xlog:00007148:  ereport(ERROR, (errmsg("cannot generate pathname %s/RedoRelationFile", xlogDir))); 
xaae: xlog:00007165:  ereport(ERROR, 
xaae: xlog:00007166:  (errcode_for_file_access(), 
xaae: xlog:00007167:  errmsg("could not create redo relation file \"%s\"", 
xaae: xlog:00007168:  path))); 
xaae: xlog:00007186:  ereport(ERROR, 
xaae: xlog:00007187:  (errcode_for_file_access(), 
xaae: xlog:00007188:  errmsg("could not open redo relation file \"%s\"", 
xaae: xlog:00007189:  path))); 
xaae: xlog:00007203:  ereport(ERROR, 
xaae: xlog:00007204:  (errcode_for_file_access(), 
xaae: xlog:00007205:  errmsg("could not unlink redo relation file \"%s\": %m", path))); 
xaae: xlog:00007234:  ereport(FATAL, 
xaae: xlog:00007235:  (errmsg("Startup Pass 2: control file contains invalid data"))); 
xaae: xlog:00007350:  ereport(FATAL, 
xaae: xlog:00007351:  (errmsg("Startup Pass 2: control file contains invalid data"))); 
xaae: xlog:00007591:  ereport(FATAL, 
xaae: xlog:00007592:  (errmsg("%s: control file contains invalid data", callerStr))); 
xaae: xlog:00007641:  ereport(ERROR, 
xaae: xlog:00007642:  (errmsg("%s: could not locate a valid checkpoint record", callerStr))); 
xaae: xlog:00007667:  ereport(ERROR, 
xaae: xlog:00007668:  (errmsg("%s: invalid redo in checkpoint record", callerStr))); 
xaae: xlog:00007679:  ereport(ERROR, 
xaae: xlog:00007680:  (errmsg("%s: first redo record before checkpoint not found at %s", 
xaae: xlog:00007681:  callerStr, XLogLocationToString(&checkPoint.redo)))); 
xaae: xlog:00007728:  elog(ERROR,"QDSYNC: couldn't read start location %s", 
xaae: xlog:00007729:  XLogLocationToString(startLoc)); 
xaae: xlog:00007825:  elog(ERROR,"QDSYNC: could not find first redo record %s", 
xaae: xlog:00007826:  XLogLocationToString(&redoCheckPoint->redo)); 
xaae: xlog:00007842:  elog(ERROR,"QDSYNC: could not find the checkpoint record %s", 
xaae: xlog:00007843:  XLogLocationToString(redoCheckpointLoc)); 
xaae: xlog:00007882:  elog(ERROR,"QDSYNC: read past specified last record location %s (record location %s)", 
xaae: xlog:00007883:  XLogLocationToString(lastRecordLoc), 
xaae: xlog:00007884:  XLogLocationToString2(&ReadRecPtr)); 
xaae: xlog:00007948:  elog(ERROR,"QDSYNC: hit end of WAL before finding %s (previous record %s)", 
xaae: xlog:00007949:  XLogLocationToString(lastRecordLoc), 
xaae: xlog:00007950:  XLogLocationToString2(&prevReadLoc)); 
xaae: xlog:00008287:  elog(WARNING,"UnpackCheckPointRecord: The checkpoint at %s appears to be a 4.0 checkpoint", XLogLocationToString(location)); 
xaae: xlog:00008414:  ereport(LOG, 
xaae: xlog:00008415:  (errmsg("database system is shut down"), 
xaae: xlog:00008416:  errSendAlert(true),errOmitLocation(true))); 
xaae: xlog:00009509:  ereport(ERROR, 
xaae: xlog:00009510:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
xaae: xlog:00009511:  (errmsg("must be superuser to run a backup")))); 
xaae: xlog:00009514:  ereport(ERROR, 
xaae: xlog:00009515:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
xaae: xlog:00009516:  (errmsg("WAL archiving is not active"), 
xaae: xlog:00009517:  (errhint("archive_command must be defined before " 
xaae: xlog:00009518:  "online backups can be made safely."))))); 
xaae: xlog:00009544:  ereport(ERROR, 
xaae: xlog:00009545:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
xaae: xlog:00009546:  errmsg("a backup is already in progress"), 
xaae: xlog:00009547:  errhint("Run pg_stop_backup() and try again."))); 
xaae: xlog:00009592:  ereport(ERROR, 
xaae: xlog:00009593:  (errcode_for_file_access(), 
xaae: xlog:00009594:  errmsg("could not stat file \"%s\": %m", 
xaae: xlog:00009595:  BACKUP_LABEL_FILE))); 
xaae: xlog:00009598:  ereport(ERROR, 
xaae: xlog:00009599:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
xaae: xlog:00009600:  errmsg("a backup is already in progress"), 
xaae: xlog:00009601:  errhint("If you're sure there is no backup in progress, remove file \"%s\" and try again.", 
xaae: xlog:00009602:  BACKUP_LABEL_FILE))); 
xaae: xlog:00009609:  ereport(ERROR, 
xaae: xlog:00009610:  (errcode_for_file_access(), 
xaae: xlog:00009611:  errmsg("could not create file \"%s\": %m", 
xaae: xlog:00009612:  BACKUP_LABEL_FILE))); 
xaae: xlog:00009620:  ereport(ERROR, 
xaae: xlog:00009621:  (errcode_for_file_access(), 
xaae: xlog:00009622:  errmsg("could not write file \"%s\": %m", 
xaae: xlog:00009623:  BACKUP_LABEL_FILE))); 
xaae: xlog:00009675:  ereport(ERROR, 
xaae: xlog:00009676:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
xaae: xlog:00009677:  (errmsg("must be superuser to run a backup")))); 
xaae: xlog:00009709:  ereport(ERROR, 
xaae: xlog:00009710:  (errcode_for_file_access(), 
xaae: xlog:00009711:  errmsg("could not read file \"%s\": %m", 
xaae: xlog:00009712:  BACKUP_LABEL_FILE))); 
xaae: xlog:00009713:  ereport(ERROR, 
xaae: xlog:00009714:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
xaae: xlog:00009715:  errmsg("a backup is not in progress"))); 
xaae: xlog:00009725:  ereport(ERROR, 
xaae: xlog:00009726:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
xaae: xlog:00009727:  errmsg("invalid data in file \"%s\"", BACKUP_LABEL_FILE))); 
xaae: xlog:00009737:  ereport(ERROR, 
xaae: xlog:00009738:  (errcode_for_file_access(), 
xaae: xlog:00009739:  errmsg("could not create file \"%s\": %m", 
xaae: xlog:00009740:  histfilepath))); 
xaae: xlog:00009750:  ereport(ERROR, 
xaae: xlog:00009751:  (errcode_for_file_access(), 
xaae: xlog:00009752:  errmsg("could not write file \"%s\": %m", 
xaae: xlog:00009753:  histfilepath))); 
xaae: xlog:00009759:  ereport(ERROR, 
xaae: xlog:00009760:  (errcode_for_file_access(), 
xaae: xlog:00009761:  errmsg("could not read file \"%s\": %m", 
xaae: xlog:00009762:  BACKUP_LABEL_FILE))); 
xaae: xlog:00009764:  ereport(ERROR, 
xaae: xlog:00009765:  (errcode_for_file_access(), 
xaae: xlog:00009766:  errmsg("could not remove file \"%s\": %m", 
xaae: xlog:00009767:  BACKUP_LABEL_FILE))); 
xaae: xlog:00009797:  ereport(ERROR, 
xaae: xlog:00009798:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
xaae: xlog:00009799:  (errmsg("must be superuser to switch transaction log files")))); 
xaae: xlog:00009905:  ereport(ERROR, 
xaae: xlog:00009906:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
xaae: xlog:00009907:  errmsg("could not parse transaction log location \"%s\"", 
xaae: xlog:00009908:  locationstr))); 
xaae: xlog:00009974:  ereport(ERROR, 
xaae: xlog:00009975:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
xaae: xlog:00009976:  errmsg("could not parse transaction log location \"%s\"", 
xaae: xlog:00009977:  locationstr))); 
xaae: xlog:00010034:  ereport(FATAL, 
xaae: xlog:00010035:  (errcode_for_file_access(), 
xaae: xlog:00010036:  errmsg("could not read file \"%s\": %m", 
xaae: xlog:00010037:  BACKUP_LABEL_FILE))); 
xaae: xlog:00010049:  ereport(FATAL, 
xaae: xlog:00010050:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
xaae: xlog:00010051:  errmsg("invalid data in file \"%s\"", BACKUP_LABEL_FILE))); 
xaae: xlog:00010055:  ereport(FATAL, 
xaae: xlog:00010056:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
xaae: xlog:00010057:  errmsg("invalid data in file \"%s\"", BACKUP_LABEL_FILE))); 
xaae: xlog:00010059:  ereport(FATAL, 
xaae: xlog:00010060:  (errcode_for_file_access(), 
xaae: xlog:00010061:  errmsg("could not read file \"%s\": %m", 
xaae: xlog:00010062:  BACKUP_LABEL_FILE))); 
xaae: xlog:00010086:  ereport(FATAL, 
xaae: xlog:00010087:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
xaae: xlog:00010088:  errmsg("invalid data in file \"%s\"", histfilename))); 
xaae: xlog:00010092:  ereport(FATAL, 
xaae: xlog:00010093:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
xaae: xlog:00010094:  errmsg("invalid data in file \"%s\"", histfilename))); 
xaae: xlog:00010097:  ereport(FATAL, 
xaae: xlog:00010098:  (errcode_for_file_access(), 
xaae: xlog:00010099:  errmsg("could not read file \"%s\": %m", 
xaae: xlog:00010100:  histfilepath))); 
xaae: xlog:00010361:  elog(FATAL, "setsid() failed: %m"); 
xaae: xlog:00010447:  ereport(FATAL, (errcode(ERRCODE_UNDEFINED_DATABASE), 
xaae: xlog:00010448:  errmsg("database 'postgres' does not exist"))); 
xaae: xlog:00010474:  elog(FATAL, "bad backend id: %d", MyBackendId); 
xaae: xlog:00010577:  elog(WARNING," couldn't read start location %s", 
xaae: xlog:00010578:  XLogLocationToString(&startLoc)); 
xaae: xlog:00010693:  ereport(WARNING, 
xaae: xlog:00010694:  (errcode_for_file_access(), 
xaae: xlog:00010695:  errmsg("could not allocate path, path too long \"%s/%s\"", 
xaae: xlog:00010696:  xlogDir, fname))); 
xaae: xlog:00010703:  ereport(WARNING, 
xaae: xlog:00010704:  (errcode_for_file_access(), 
xaae: xlog:00010705:  errmsg("could not open xlog file \"%s\" : %m", 
xaae: xlog:00010706:  path))); 
xaae: xlog:00010711:  ereport(WARNING, 
xaae: xlog:00010712:  (errcode_for_file_access(), 
xaae: xlog:00010713:  errmsg("could not truncate xlog file \"%s\" to position \"%d\" : %m", 
xaae: xlog:00010714:  path, startOffset))); 
xaae: xlog:00010720:  ereport(WARNING, 
xaae: xlog:00010721:  (errcode_for_file_access(), 
xaae: xlog:00010722:  errmsg("could not seek xlog file \"%s\" to position \"%d\" : %m", 
xaae: xlog:00010723:  path, startOffset))); 
xaae: xlog:00010753:  ereport(WARNING, 
xaae: xlog:00010754:  (errcode_for_file_access(), 
xaae: xlog:00010755:  errmsg("could not write to file \"%s\": %m", path))); 
xaae: xlog:00010766:  ereport(WARNING, 
xaae: xlog:00010767:  (errcode_for_file_access(), 
xaae: xlog:00010768:  errmsg("could not fsync file \"%s\": %m", path))); 
xaae: xlog:00010775:  ereport(WARNING, 
xaae: xlog:00010776:  (errcode_for_file_access(), 
xaae: xlog:00010777:  errmsg("could not close file \"%s\": %m", path))); 
xaae: xlog:00010988:  elog(ERROR," couldn't read start location %s", 
xaae: xlog:00010989:  XLogLocationToString(&startLoc)); 
xaae: xlog:00011168:  ereport(ERROR, 
xaae: xlog:00011169:  (errcode(ERRCODE_OUT_OF_MEMORY), 
xaae: xlog:00011170:  (errmsg("could not allocate memory for mirrored aligned buffer")))); 
aaaaa GP_IGNORE: xaah: xlogxmm - ./backend/access/transam/xlog_mm.c
xaah: xlogxmm:00000109:  elog(WARNING, "could not unlink %s: %m", path); 
xaah: xlogxmm:00000153:  elog(ERROR, "The object's path can not be constructed based on the xlog record. " 
xaah: xlogxmm:00000154:  "The dbid in the xlog record, master %u and mirror %u, does no match the current dbid %u.", 
xaah: xlogxmm:00000155:  GpIdentity.dbid, xlrec->u.dbid.master, xlrec->u.dbid.mirror); 
xaah: xlogxmm:00000233:  elog(ERROR, "could not create directory \"%s\": %m", 
xaah: xlogxmm:00000234:  path); 
xaah: xlogxmm:00000291:  elog(ERROR, "Master mirroring hash table for filespaces not initialized"); 
xaah: xlogxmm:00000298:  elog(ERROR, 
xaah: xlogxmm:00000299:  "Master mirroring hash table entry for filespace %u not found", 
xaah: xlogxmm:00000300:  xlrec->filespace); 
xaah: xlogxmm:00000305:  elog(ERROR, "Master mirroring hash table for tablespaces not initialized"); 
xaah: xlogxmm:00000312:  elog(ERROR, 
xaah: xlogxmm:00000313:  "Master mirroring hash table entry for tablespace %u not found", 
xaah: xlogxmm:00000314:  xlrec->tablespace); 
xaah: xlogxmm:00000353:  elog(WARNING, "could open open file %s: %m", path); 
xaah: xlogxmm:00000425:  elog(ERROR, "Unexpected tablespace filespace fetch result: %d", 
xaah: xlogxmm:00000426:  tablespaceGetFilespaces); 
xaah: xlogxmm:00000510:  elog(ERROR, "The object's path can not be constructed based on the xlog record. " 
xaah: xlogxmm:00000511:  "The dbid in the xlog record, master %u and mirror %u, does no match the current dbid %u.", 
xaah: xlogxmm:00000512:  GpIdentity.dbid, xlrec->u.dbid.master, xlrec->u.dbid.mirror); 
xaah: xlogxmm:00001054:  elog(ERROR, "Corrupted filespace hashtable"); 
xaah: xlogxmm:00001099:  elog(ERROR, "Corrupted tablespace hashtable"); 
xaah: xlogxmm:00001870:  elog(WARNING,"mmxlog_get_checkpoint_info: The checkpoint at %s appears to be a 4.0 checkpoint", XLogLocationToString(beginLoc)); 
xaah: xlogxmm:00001964:  elog(ERROR, "bad filespace checkpoint information for entry %d", i); 
xaah: xlogxmm:00001984:  elog(ERROR, "could not create filespace directory \"%s\": %m", 
xaah: xlogxmm:00001985:  fmap[i].path2); 
xaah: xlogxmm:00002007:  elog(ERROR, "bad tablespace checkpoint information for entry %d", i); 
xaah: xlogxmm:00002015:  elog(ERROR, "cannot find filespace path for filespace OID %u (tablespace %u)", 
xaah: xlogxmm:00002016:  m->filespaceoid, m->tablespaceoid); 
xaah: xlogxmm:00002036:  elog(ERROR, "could not create tablespace directory \"%s\": %m", 
xaah: xlogxmm:00002037:  path); 
xaah: xlogxmm:00002061:  elog(ERROR, "bad database directory checkpoint information for entry %d", i); 
xaah: xlogxmm:00002066:  elog(ERROR, "should not have the global tablespace in the database directory entries"); 
xaah: xlogxmm:00002077:  elog(ERROR, "cannot find filespace OID for tablespace %u", 
xaah: xlogxmm:00002078:  m->tablespaceoid); 
xaah: xlogxmm:00002084:  elog(ERROR, "cannot find filespace path for filespace OID %u (tablespace %u)", 
xaah: xlogxmm:00002085:  filespaceoid, m->tablespaceoid); 
xaah: xlogxmm:00002107:  elog(ERROR, "could not create database directory \"%s\": %m", 
xaah: xlogxmm:00002108:  path); 
aaaaa GP_IGNORE: xaah: xlogloc - ./backend/access/transam/xlogloc.c
xaah: xlogloc:00000060:  ereport(ERROR, 
xaah: xlogloc:00000061:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
xaah: xlogloc:00000062:  errmsg("invalid input syntax for type gpxlogloc: \"%s\"", 
xaah: xlogloc:00000063:  str))); 
xaah: xlogloc:00000068:  ereport(ERROR, 
xaah: xlogloc:00000069:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
xaah: xlogloc:00000070:  errmsg("invalid input syntax for type gpxlogloc: \"%s\"", 
xaah: xlogloc:00000071:  str))); 
xaah: xlogloc:00000075:  ereport(ERROR, 
xaah: xlogloc:00000076:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
xaah: xlogloc:00000077:  errmsg("invalid input syntax for type gpxlogloc: \"%s\"", 
xaah: xlogloc:00000078:  str))); 
aaaaa GP_IGNORE: xaaj: xlogutils - ./backend/access/transam/xlogutils.c
xaaj: xlogutils:00000167:  elog(ERROR, "hash table corrupted"); 
xaaj: xlogutils:00000203:  elog(ERROR, "hash table corrupted"); 
xaaj: xlogutils:00000228:  elog(WARNING, "page %u of relation %u/%u/%u was uninitialized", 
xaaj: xlogutils:00000229:  hentry->key.blkno, hentry->key.node.spcNode, 
xaaj: xlogutils:00000230:  hentry->key.node.dbNode, hentry->key.node.relNode); 
xaaj: xlogutils:00000232:  elog(WARNING, "page %u of relation %u/%u/%u did not exist", 
xaaj: xlogutils:00000233:  hentry->key.blkno, hentry->key.node.spcNode, 
xaaj: xlogutils:00000234:  hentry->key.node.dbNode, hentry->key.node.relNode); 
xaaj: xlogutils:00000356:  elog(ERROR,"could not allocate memory for light-weight relation cache"); 
xaaj: xlogutils:00000360:  elog(ERROR,"could not allocate memory for light-weight relation cache"); 
xaaj: xlogutils:00000504:  elog(ERROR, "Empty primary filespace directory location"); 
xaaj: xlogutils:00000544:  elog(ERROR, "could not create database directory \"%s\": %m", 
xaaj: xlogutils:00000545:  dbPath); 
aaaaa GP_IGNORE: baaj: bootparse - ./backend/bootstrap/bootparse.c
baaj: bootparse:00001825:  elog(ERROR, "incorrect number of columns in row (expected %d, got %d)", 
baaj: bootparse:00001826:  numattr, num_columns_read); 
baaj: bootparse:00001828:  elog(FATAL, "relation not open"); 
baaj: bootparse:00001947:  elog(FATAL, "too many columns"); 
aaaaa GP_IGNORE: aaag: aclchk - ./backend/catalog/aclchk.c
aaag: aclchk:00000139:  ereport(ERROR, 
aaag: aclchk:00000140:  (errcode(ERRCODE_INVALID_GRANT_OPERATION), 
aaag: aclchk:00000141:  errmsg("grant options can only be granted to roles"))); 
aaag: aclchk:00000215:  elog(ERROR, "unrecognized object kind: %d", objkind); 
aaag: aclchk:00000252:  ereport(WARNING, 
aaag: aclchk:00000253:  (errcode(ERRCODE_WARNING_PRIVILEGE_NOT_GRANTED), 
aaag: aclchk:00000254:  errmsg("no privileges were granted for \"%s\"", objname))); 
aaag: aclchk:00000256:  ereport(WARNING, 
aaag: aclchk:00000257:  (errcode(ERRCODE_WARNING_PRIVILEGE_NOT_GRANTED), 
aaag: aclchk:00000258:  errmsg("not all privileges were granted for \"%s\"", objname))); 
aaag: aclchk:00000263:  ereport(WARNING, 
aaag: aclchk:00000264:  (errcode(ERRCODE_WARNING_PRIVILEGE_NOT_REVOKED), 
aaag: aclchk:00000265:  errmsg("no privileges could be revoked for \"%s\"", objname))); 
aaag: aclchk:00000267:  ereport(WARNING, 
aaag: aclchk:00000268:  (errcode(ERRCODE_WARNING_PRIVILEGE_NOT_REVOKED), 
aaag: aclchk:00000269:  errmsg("not all privileges could be revoked for \"%s\"", objname))); 
aaag: aclchk:00000450:  elog(ERROR, "unrecognized GrantStmt.objtype: %d", 
aaag: aclchk:00000451:  (int) stmt->objtype); 
aaag: aclchk:00000475:  ereport(ERROR, 
aaag: aclchk:00000476:  (errcode(ERRCODE_INVALID_GRANT_OPERATION), 
aaag: aclchk:00000477:  errmsg(errormsg, 
aaag: aclchk:00000478:  privilege_to_string(priv)))); 
aaag: aclchk:00000518:  ereport(ERROR, 
aaag: aclchk:00000519:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support GRANT/REVOKE on FOREIGN DATA WRAPPER statement") )); 
aaag: aclchk:00000527:  ereport(ERROR, 
aaag: aclchk:00000528:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support GRANT/REVOKE on FOREIGN SERVER statement") )); 
aaag: aclchk:00000536:  ereport(ERROR, 
aaag: aclchk:00000537:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support GRANT/REVOKE on FUNCTION statement") )); 
aaag: aclchk:00000545:  ereport(ERROR, 
aaag: aclchk:00000546:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support GRANT/REVOKE on LANGUAGE statement") )); 
aaag: aclchk:00000557:  ereport(ERROR, 
aaag: aclchk:00000558:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support GRANT/REVOKE on TABLESPACE statement") )); 
aaag: aclchk:00000566:  elog(ERROR, "unrecognized GrantStmt.objtype: %d", 
aaag: aclchk:00000567:  (int) istmt->objtype); 
aaag: aclchk:00000605:  ereport(ERROR, 
aaag: aclchk:00000606:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
aaag: aclchk:00000607:  errmsg("database \"%s\" does not exist", 
aaag: aclchk:00000608:  dbname))); 
aaag: aclchk:00000639:  ereport(ERROR, 
aaag: aclchk:00000640:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00000641:  errmsg("language \"%s\" does not exist", 
aaag: aclchk:00000642:  langname))); 
aaag: aclchk:00000663:  ereport(ERROR, 
aaag: aclchk:00000664:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
aaag: aclchk:00000665:  errmsg("schema \"%s\" does not exist", 
aaag: aclchk:00000666:  nspname))); 
aaag: aclchk:00000687:  ereport(ERROR, 
aaag: aclchk:00000688:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00000689:  errmsg("tablespace \"%s\" does not exist", spcname))); 
aaag: aclchk:00000722:  elog(ERROR, "unrecognized GrantStmt.objtype: %d", 
aaag: aclchk:00000723:  (int) objtype); 
aaag: aclchk:00000777:  elog(ERROR, "cache lookup failed for relation %u", relOid); 
aaag: aclchk:00000783:  ereport(ERROR, 
aaag: aclchk:00000784:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
aaag: aclchk:00000785:  errmsg("\"%s\" is an index", 
aaag: aclchk:00000786:  NameStr(pg_class_tuple->relname)))); 
aaag: aclchk:00000790:  ereport(ERROR, 
aaag: aclchk:00000791:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
aaag: aclchk:00000792:  errmsg("\"%s\" is a composite type", 
aaag: aclchk:00000793:  NameStr(pg_class_tuple->relname)))); 
aaag: aclchk:00000798:  ereport(ERROR, 
aaag: aclchk:00000799:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
aaag: aclchk:00000800:  errmsg("\"%s\" is not a sequence", 
aaag: aclchk:00000801:  NameStr(pg_class_tuple->relname)))); 
aaag: aclchk:00000874:  ereport(WARNING, 
aaag: aclchk:00000875:  (errcode(ERRCODE_INVALID_GRANT_OPERATION), 
aaag: aclchk:00000876:  errmsg("sequence \"%s\" only supports USAGE, SELECT, and UPDATE", 
aaag: aclchk:00000877:  NameStr(pg_class_tuple->relname)))); 
aaag: aclchk:00000891:  ereport(ERROR, 
aaag: aclchk:00000892:  (errcode(ERRCODE_INVALID_GRANT_OPERATION), 
aaag: aclchk:00000893:  errmsg("invalid privilege type USAGE for table"))); 
aaag: aclchk:00001044:  elog(ERROR, "cache lookup failed for database %u", datId); 
aaag: aclchk:00001174:  elog(ERROR, "cache lookup failed for foreign-data wrapper %u", fdwid); 
aaag: aclchk:00001297:  elog(ERROR, "cache lookup failed for foreign server %u", srvid); 
aaag: aclchk:00001420:  elog(ERROR, "cache lookup failed for function %u", funcId); 
aaag: aclchk:00001541:  elog(ERROR, "cache lookup failed for language %u", langId); 
aaag: aclchk:00001546:  ereport(ERROR, 
aaag: aclchk:00001547:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
aaag: aclchk:00001548:  errmsg("language \"%s\" is not trusted", 
aaag: aclchk:00001549:  NameStr(pg_language_tuple->lanname)), 
aaag: aclchk:00001550:  errhint("Only superusers may use untrusted languages."))); 
aaag: aclchk:00001672:  elog(ERROR, "cache lookup failed for namespace %u", nspid); 
aaag: aclchk:00001803:  elog(ERROR, "cache lookup failed for tablespace %u", tblId); 
aaag: aclchk:00001938:  elog(ERROR, "lookup failed for external protocol %u", ptcid); 
aaag: aclchk:00001946:  ereport(ERROR, 
aaag: aclchk:00001947:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00001948:  errmsg("protocol '%u' has no owner defined", 
aaag: aclchk:00001949:  ptcid))); 
aaag: aclchk:00001975:  ereport(ERROR, 
aaag: aclchk:00001976:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00001977:  errmsg("internal error: protocol '%u' has no name defined", 
aaag: aclchk:00001978:  ptcid))); 
aaag: aclchk:00001988:  ereport(ERROR, 
aaag: aclchk:00001989:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
aaag: aclchk:00001990:  errmsg("protocol \"%s\" is not trusted", 
aaag: aclchk:00001991:  NameStr(*ptcname)), 
aaag: aclchk:00001992:  errhint("Only superusers may use untrusted protocols."))); 
aaag: aclchk:00002084:  ereport(ERROR, 
aaag: aclchk:00002085:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaag: aclchk:00002086:  errmsg("unrecognized privilege type \"%s\"", privname))); 
aaag: aclchk:00002118:  elog(ERROR, "unrecognized privilege: %d", (int) privilege); 
aaag: aclchk:00002213:  ereport(ERROR, 
aaag: aclchk:00002214:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
aaag: aclchk:00002215:  errmsg(no_priv_msg[objectkind], objectname), 
aaag: aclchk:00002216:  errOmitLocation(true))); 
aaag: aclchk:00002219:  ereport(ERROR, 
aaag: aclchk:00002220:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
aaag: aclchk:00002221:  errmsg(not_owner_msg[objectkind], objectname), 
aaag: aclchk:00002222:  errOmitLocation(true))); 
aaag: aclchk:00002225:  elog(ERROR, "unrecognized AclResult: %d", (int) aclerr); 
aaag: aclchk:00002250:  ereport(ERROR, 
aaag: aclchk:00002251:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00002252:  errmsg("role with OID %u does not exist", roleid))); 
aaag: aclchk:00002290:  elog(ERROR, "unrecognized objkind: %d", 
aaag: aclchk:00002291:  (int) objkind); 
aaag: aclchk:00002333:  ereport(ERROR, 
aaag: aclchk:00002334:  (errcode(ERRCODE_UNDEFINED_TABLE), 
aaag: aclchk:00002335:  errmsg("relation with OID %u does not exist", 
aaag: aclchk:00002336:  table_oid))); 
aaag: aclchk:00002480:  ereport(ERROR, 
aaag: aclchk:00002481:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
aaag: aclchk:00002482:  errmsg("database with OID %u does not exist", db_oid))); 
aaag: aclchk:00002542:  ereport(ERROR, 
aaag: aclchk:00002543:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
aaag: aclchk:00002544:  errmsg("function with OID %u does not exist", proc_oid))); 
aaag: aclchk:00002604:  ereport(ERROR, 
aaag: aclchk:00002605:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00002606:  errmsg("language with OID %u does not exist", lang_oid))); 
aaag: aclchk:00002695:  ereport(ERROR, 
aaag: aclchk:00002696:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
aaag: aclchk:00002697:  errmsg("schema with OID %u does not exist", nsp_oid))); 
aaag: aclchk:00002772:  ereport(ERROR, 
aaag: aclchk:00002773:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00002774:  errmsg("tablespace with OID %u does not exist", spc_oid))); 
aaag: aclchk:00002839:  ereport(ERROR, 
aaag: aclchk:00002840:  (errmsg("foreign-data wrapper with OID %u does not exist", 
aaag: aclchk:00002841:  fdw_oid))); 
aaag: aclchk:00002908:  ereport(ERROR, 
aaag: aclchk:00002909:  (errmsg("foreign server with OID %u does not exist", 
aaag: aclchk:00002910:  srv_oid))); 
aaag: aclchk:00002978:  elog(ERROR, "protocol %u could not be found", ptcOid); 
aaag: aclchk:00002986:  ereport(ERROR, 
aaag: aclchk:00002987:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00002988:  errmsg("got invalid extprotocol owner value: NULL"))); 
aaag: aclchk:00003061:  elog(ERROR, "filesystem %u could not be found", fsysOid); 
aaag: aclchk:00003069:  ereport(ERROR, 
aaag: aclchk:00003070:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00003071:  errmsg("got invalid filesystem owner value: NULL"))); 
aaag: aclchk:00003254:  ereport(ERROR, 
aaag: aclchk:00003255:  (errcode(ERRCODE_UNDEFINED_TABLE), 
aaag: aclchk:00003256:  errmsg("relation with OID %u does not exist", class_oid))); 
aaag: aclchk:00003282:  ereport(ERROR, 
aaag: aclchk:00003283:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00003284:  errmsg("type with OID %u does not exist", type_oid))); 
aaag: aclchk:00003310:  ereport(ERROR, 
aaag: aclchk:00003311:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
aaag: aclchk:00003312:  errmsg("operator with OID %u does not exist", oper_oid))); 
aaag: aclchk:00003339:  ereport(ERROR, 
aaag: aclchk:00003340:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
aaag: aclchk:00003341:  errmsg("function with OID %u does not exist", proc_oid))); 
aaag: aclchk:00003367:  ereport(ERROR, 
aaag: aclchk:00003368:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
aaag: aclchk:00003369:  errmsg("schema with OID %u does not exist", nsp_oid))); 
aaag: aclchk:00003395:  ereport(ERROR, 
aaag: aclchk:00003396:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00003397:  errmsg("tablespace with OID %u does not exist", spc_oid))); 
aaag: aclchk:00003423:  ereport(ERROR, 
aaag: aclchk:00003424:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00003425:  errmsg("filepace with OID %u does not exist", fsoid))); 
aaag: aclchk:00003464:  elog(ERROR, "filesystem %u could not be found", fsysOid); 
aaag: aclchk:00003472:  ereport(ERROR, 
aaag: aclchk:00003473:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00003474:  errmsg("got invalid filesystem owner value: NULL"))); 
aaag: aclchk:00003507:  ereport(ERROR, 
aaag: aclchk:00003508:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00003509:  errmsg("operator class with OID %u does not exist", 
aaag: aclchk:00003510:  opc_oid))); 
aaag: aclchk:00003536:  ereport(ERROR, 
aaag: aclchk:00003537:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00003538:  errmsg("foreign server with OID %u does not exist", 
aaag: aclchk:00003539:  srv_oid))); 
aaag: aclchk:00003565:  ereport(ERROR, 
aaag: aclchk:00003566:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
aaag: aclchk:00003567:  errmsg("database with OID %u does not exist", db_oid))); 
aaag: aclchk:00003593:  ereport(ERROR, 
aaag: aclchk:00003594:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00003595:  errmsg("conversion with OID %u does not exist", conv_oid))); 
aaag: aclchk:00003623:  elog(ERROR, "protocol %u could not be found", protOid); 
aaag: aclchk:00003627:  ereport(ERROR, 
aaag: aclchk:00003628:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaag: aclchk:00003629:  errmsg("got invalid extprotocol owner value: NULL"))); 
aaaaa GP_IGNORE: aaai: aoblkdir - ./backend/catalog/aoblkdir.c
aaai: aoblkdir:00000119:  ereport(ERROR, 
aaai: aoblkdir:00000120:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
aaai: aoblkdir:00000121:  errmsg("shared tables cannot have block directory after initdb"))); 
aaaaa GP_IGNORE: cabb: caqlanalyze - ./backend/catalog/caql/caqlanalyze.c
cabb: caqlanalyze:00000100:  elog(ERROR, "could not find relation \"%s\" in %s at %s:%d", 
cabb: caqlanalyze:00000101:  node->from, str, pcql->filename, pcql->lineno); 
cabb: caqlanalyze:00000115:  elog(ERROR, "could not find attribute \"%s\" in %s at %s:%d", 
cabb: caqlanalyze:00000116:  attname, str, pcql->filename, pcql->lineno); 
cabb: caqlanalyze:00000131:  elog(ERROR, "could not find relation \"%s\" in %s at %s:%d", 
cabb: caqlanalyze:00000132:  node->into, str, pcql->filename, pcql->lineno); 
cabb: caqlanalyze:00000144:  elog(ERROR, "could not find relation \"%s\" in %s at %s:%d", 
cabb: caqlanalyze:00000145:  node->from, str, pcql->filename, pcql->lineno); 
cabb: caqlanalyze:00000390:  elog(ERROR, "unexpected node type(%d)", nodeTag(query)); 
cabb: caqlanalyze:00000437:  elog(ERROR, "invalid parameter number(%d) in %s", 
cabb: caqlanalyze:00000438:  expr->right, pchn->name); 
cabb: caqlanalyze:00000442:  elog(ERROR, "could not find attribute \"%s\" in %s", 
cabb: caqlanalyze:00000443:  attname, pchn->name); 
cabb: caqlanalyze:00000474:  elog(ERROR, "could not find operator \"%s\" in %s", 
cabb: caqlanalyze:00000475:  expr->op, pchn->name); 
cabb: caqlanalyze:00000478:  elog(ERROR, "could not find btree operator for type \"%d\" in %s", 
cabb: caqlanalyze:00000479:  typ->typid, pchn->name); 
cabb: caqlanalyze:00000549:  elog(ERROR, "could not find attribute \"%s\" in %s", 
cabb: caqlanalyze:00000550:  sortcol, pchn->name); 
aaaaa GP_IGNORE: saae: scan - ./backend/catalog/caql/scan.c
saae: scan:00001930: #define fprintf(file, fmt, msg) ereport(ERROR, (errmsg_internal("%s", msg))) 
saae: scan:00001931:  
saae: scan:00001932: static int xcdepth = 0; /* depth of nesting in slash-star comments */ 
saae: scan:00001933:  
saae: scan:00001934:  
saae: scan:00001935: static void addlit(char *ytext, int yleng, caql_scanner_t yyscanner); 
saae: scan:00003760:  ereport(ERROR, 
saae: scan:00003761:  (errcode(ERRCODE_SYNTAX_ERROR), 
saae: scan:00003762:  /* translator: %s is typically the translation of "syntax error" */ 
saae: scan:00003763:  errmsg("%s at end of input", _(message)), 
saae: scan:00003764:  errhint("%s (%s:%d)", 
saae: scan:00003765:  extra->scanbuf, extra->file, extra->line), 
saae: scan:00003766:  *caql_yyget_lloc(yyscanner))); 
saae: scan:00003770:  ereport(ERROR, 
saae: scan:00003771:  (errcode(ERRCODE_SYNTAX_ERROR), 
saae: scan:00003772:  /* translator: first %s is typically the translation of "syntax error" */ 
saae: scan:00003773:  errmsg("%s at or near \"%s\"", _(message), loc), 
saae: scan:00003774:  errhint("%s (%s:%d)", 
saae: scan:00003775:  extra->scanbuf, extra->file, extra->line), 
saae: scan:00003776:  *caql_yyget_lloc(yyscanner))); 
saae: scan:00003792:  elog(ERROR, "caql_yylex_init() failed: %m"); 
aaaaa GP_IGNORE: caah: catalog - ./backend/catalog/catalog.c
caah: catalog:00000111:  ereport(ERROR, 
caah: catalog:00000112:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caah: catalog:00000113:  errmsg("Unable to find entry for tablespace OID = %u when forming file-system path", 
caah: catalog:00000114:  tablespaceOid))); 
caah: catalog:00000118:  ereport(ERROR, 
caah: catalog:00000119:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caah: catalog:00000120:  errmsg("Unable to find entry for filespace OID = %u when forming file-system path for tablespace OID = %u", 
caah: catalog:00000121:  filespaceOid, 
caah: catalog:00000122:  tablespaceOid))); 
caah: catalog:00000130:  elog(ERROR, "Unexpected tablespace filespace fetch result: %d", 
caah: catalog:00000131:  tablespaceGetFilespaces); 
caah: catalog:00000256:  elog(ERROR, "CopyRelPath formatting error"); 
caah: catalog:00000263:  elog(ERROR, "CopyRelPath formatting result length %d exceeded the maximum length %d", 
caah: catalog:00000264:  snprintfResult, 
caah: catalog:00000265:  targetMaxLen); 
caah: catalog:00000385:  elog(ERROR, "CopyDatabasePath formatting error"); 
caah: catalog:00000392:  elog(ERROR, "CopyDatabasePath formatting result length %d exceeded the maximum length %d", 
caah: catalog:00000393:  snprintfResult, 
caah: catalog:00000394:  targetMaxLen); 
caah: catalog:00000440:  elog(ERROR, "CopyDatabasePath formatting error"); 
caah: catalog:00000447:  elog(ERROR, "CopyDatabasePath formatting result length %d exceeded the maximum length %d", 
caah: catalog:00000448:  snprintfResult, 
caah: catalog:00000449:  targetMaxLen); 
caah: catalog:00000490:  elog(ERROR, "FormTablespacePath formatting error"); 
caah: catalog:00000497:  elog(ERROR, "FormTablespacePath formatting result length %d exceeded the maximum length %d", 
caah: catalog:00000498:  snprintfResult, 
caah: catalog:00000499:  targetMaxLen); 
caah: catalog:00000537:  elog(ERROR, "FormRelationPath formatting error"); 
caah: catalog:00000544:  elog(ERROR, "FormRelationPath formatting result length %d exceeded the maximum length %d", 
caah: catalog:00000545:  snprintfResult, 
caah: catalog:00000546:  targetMaxLen); 
caah: catalog:00000982:  elog(WARNING, "generating possibly-non-unique OID for \"%s\"", 
caah: catalog:00000983:  RelationGetRelationName(relation)); 
caah: catalog:00001196:  elog(ERROR, "relfilenode %d already in use in \"pg_class\"", 
caah: catalog:00001197:  newOid); 
caah: catalog:00001229:  elog(ERROR, "oid %d already in use", newOid); 
aaaaa GP_IGNORE: daba: dependency - ./backend/catalog/dependency.c
daba: dependency:00000199:  ereport(ERROR, 
daba: dependency:00000200:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
daba: dependency:00000201:  errmsg("cannot drop %s because other objects depend on it", 
daba: dependency:00000202:  objDescription), 
daba: dependency:00000203:  errhint("Use DROP ... CASCADE to drop the dependent objects too."), 
daba: dependency:00000204:  errOmitLocation(true))); 
daba: dependency:00000253:  ereport(ERROR, 
daba: dependency:00000254:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
daba: dependency:00000255:  errmsg("cannot drop %s because other objects depend on it", 
daba: dependency:00000256:  objDescription), 
daba: dependency:00000257:  errhint("Use DROP ... CASCADE to drop the dependent objects too."), 
daba: dependency:00000258:  errOmitLocation(true))); 
daba: dependency:00000387:  ereport(ERROR, 
daba: dependency:00000388:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
daba: dependency:00000389:  errmsg("failed to drop all objects depending on %s", 
daba: dependency:00000390:  objDescription))); 
daba: dependency:00000488:  ereport(ERROR, 
daba: dependency:00000489:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
daba: dependency:00000490:  errmsg("cannot drop %s because it is required by the database system", 
daba: dependency:00000491:  getObjectDescription(object)))); 
daba: dependency:00000494:  elog(ERROR, "unrecognized dependency type '%c' for %s", 
daba: dependency:00000495:  foundDep->deptype, getObjectDescription(object)); 
daba: dependency:00000633:  ereport(ERROR, 
daba: dependency:00000634:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
daba: dependency:00000635:  errmsg("cannot drop %s because %s requires it", 
daba: dependency:00000636:  objDescription, otherObjDesc), 
daba: dependency:00000637:  errhint("You may drop %s instead.", 
daba: dependency:00000638:  otherObjDesc), 
daba: dependency:00000639:  errOmitLocation(true))); 
daba: dependency:00000663:  elog(ERROR, "multiple INTERNAL dependencies for %s", 
daba: dependency:00000664:  objDescription); 
daba: dependency:00000675:  elog(ERROR, "incorrect use of PIN dependency with %s", 
daba: dependency:00000676:  objDescription); 
daba: dependency:00000679:  elog(ERROR, "unrecognized dependency type '%c' for %s", 
daba: dependency:00000680:  foundDep->deptype, objDescription); 
daba: dependency:00000946:  ereport(ERROR, 
daba: dependency:00000947:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
daba: dependency:00000948:  errmsg("cannot drop %s because it is required by the database system", 
daba: dependency:00000949:  objDescription))); 
daba: dependency:00000952:  elog(ERROR, "unrecognized dependency type '%c' for %s", 
daba: dependency:00000953:  foundDep->deptype, objDescription); 
daba: dependency:00001070:  elog(NOTICE, "dependency: not yet implemented!"); 
daba: dependency:00001074:  elog(ERROR, "unrecognized object class: %u", 
daba: dependency:00001075:  object->classId); 
daba: dependency:00001234:  elog(ERROR, "invalid varlevelsup %d", var->varlevelsup); 
daba: dependency:00001237:  elog(ERROR, "invalid varno %d", var->varno); 
daba: dependency:00001263:  elog(ERROR, "invalid varattno %d", var->varattno); 
daba: dependency:00001405:  elog(ERROR, "already-planned subqueries not supported"); 
daba: dependency:00001802:  elog(ERROR, "unrecognized object class: %u", object->classId); 
daba: dependency:00001850:  elog(ERROR, "could not find tuple for cast %u", 
daba: dependency:00001851:  object->objectId); 
daba: dependency:00001877:  elog(ERROR, "could not find tuple for constraint %u", 
daba: dependency:00001878:  object->objectId); 
daba: dependency:00001911:  elog(ERROR, "cache lookup failed for conversion %u", 
daba: dependency:00001912:  object->objectId); 
daba: dependency:00001934:  elog(ERROR, "could not find tuple for attrdef %u", 
daba: dependency:00001935:  object->objectId); 
daba: dependency:00001963:  elog(ERROR, "cache lookup failed for language %u", 
daba: dependency:00001964:  object->objectId); 
daba: dependency:00001994:  elog(ERROR, "cache lookup failed for opclass %u", 
daba: dependency:00001995:  object->objectId); 
daba: dependency:00002007:  elog(ERROR, "cache lookup failed for access method %u", 
daba: dependency:00002008:  opcForm->opcamid); 
daba: dependency:00002039:  elog(ERROR, "could not find tuple for rule %u", 
daba: dependency:00002040:  object->objectId); 
daba: dependency:00002065:  elog(ERROR, "could not find tuple for trigger %u", 
daba: dependency:00002066:  object->objectId); 
daba: dependency:00002083:  elog(ERROR, "cache lookup failed for namespace %u", 
daba: dependency:00002084:  object->objectId); 
daba: dependency:00002102:  elog(ERROR, "cache lookup failed for database %u", 
daba: dependency:00002103:  object->objectId); 
daba: dependency:00002114:  elog(ERROR, "cache lookup failed for tablespace %u", 
daba: dependency:00002115:  object->objectId); 
daba: dependency:00002144:  elog(ERROR, "cache lookup failed for filespace %u", 
daba: dependency:00002145:  object->objectId); 
daba: dependency:00002156:  elog(ERROR, "cache lookup failed for filesystem %u", 
daba: dependency:00002157:  object->objectId); 
daba: dependency:00002177:  elog(ERROR, "cache lookup failed for user mapping %u", 
daba: dependency:00002178:  object->objectId); 
daba: dependency:00002197:  elog(NOTICE, "NOT YET IMPLEMENTED"); 
daba: dependency:00002232:  elog(ERROR, "cache lookup failed for relation %u", relid); 
aaaaa GP_IGNORE: gabf: gpxfastsequence - ./backend/catalog/gp_fastsequence.c
gabf: gpxfastsequence:00000204:  elog(ERROR, "cannot find in-memory table: %s", 
gabf: gpxfastsequence:00000205:  RelationGetRelationName(gp_fastsequence_rel)); 
gabf: gpxfastsequence:00000266:  elog(ERROR, "gp_fastsequence should be dispatched to QE, " 
gabf: gpxfastsequence:00000267:  "objid = %u, objmod = "INT64_FORMAT", minseq = "INT64_FORMAT", numseq = "INT64_FORMAT", contentid = %d", 
gabf: gpxfastsequence:00000268:  objid, objmod, minSequence, numSequences, GpIdentity.segindex); 
gabf: gpxfastsequence:00000280:  ereport(ERROR, 
gabf: gpxfastsequence:00000281:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
gabf: gpxfastsequence:00000282:  errmsg("got an invalid lastsequence number: NULL"))); 
gabf: gpxfastsequence:00000338:  ereport(ERROR, 
gabf: gpxfastsequence:00000339:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
gabf: gpxfastsequence:00000340:  errmsg("got an invalid lastsequence number: NULL"))); 
gabf: gpxfastsequence:00000345:  ereport(ERROR, 
gabf: gpxfastsequence:00000346:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
gabf: gpxfastsequence:00000347:  errmsg("got an invalid objid: NULL"))); 
gabf: gpxfastsequence:00000352:  ereport(ERROR, 
gabf: gpxfastsequence:00000353:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
gabf: gpxfastsequence:00000354:  errmsg("got an invalid objmod: NULL"))); 
aaaaa GP_IGNORE: gabd: gpxpersistent - ./backend/catalog/gp_persistent.c
gabd: gpxpersistent:00000207:  elog(ERROR, "Invalid value for relation storage manager (%d)", 
gabd: gpxpersistent:00000208:  relationStorageManager); 
gabd: gpxpersistent:00000478:  elog(ERROR, "Expected filespace location 1 to be %d characters and found %d", 
gabd: gpxpersistent:00000479:  FilespaceLocationBlankPaddedWithNullTermLen - 1, 
gabd: gpxpersistent:00000480:  locationLen); 
gabd: gpxpersistent:00000489:  elog(ERROR, "Expected filespace location 2 to be %d characters and found %d", 
gabd: gpxpersistent:00000490:  FilespaceLocationBlankPaddedWithNullTermLen - 1, 
gabd: gpxpersistent:00000491:  locationLen); 
gabd: gpxpersistent:00000535:  elog(ERROR, "Expected filespace location 1 to be %d characters and found %d", 
gabd: gpxpersistent:00000536:  FilespaceLocationBlankPaddedWithNullTermLen - 1, 
gabd: gpxpersistent:00000537:  locationLen); 
gabd: gpxpersistent:00000541:  elog(ERROR, "Expected filespace location 2 to be %d characters and found %d", 
gabd: gpxpersistent:00000542:  FilespaceLocationBlankPaddedWithNullTermLen - 1, 
gabd: gpxpersistent:00000543:  locationLen); 
gabd: gpxpersistent:00000754:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
gabd: gpxpersistent:00000755:  fsObjType); 
aaaaa GP_IGNORE: haae: heap - ./backend/catalog/heap.c
haae: heap:00000209:  elog(ERROR, "invalid system attribute number %d", attno); 
haae: heap:00000211:  elog(ERROR, "invalid system attribute number %d", attno); 
haae: heap:00000279:  ereport(ERROR, 
haae: heap:00000280:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
haae: heap:00000281:  errmsg("permission denied to create \"%s.%s\"", 
haae: heap:00000282:  get_namespace_name(relnamespace), relname), 
haae: heap:00000283:  errdetail("System catalog modifications are currently disallowed."), 
haae: heap:00000284:  errOmitLocation(true))); 
haae: heap:00000447:  elog(ERROR, 
haae: heap:00000448:  "setNewRelfilenodeCommon has invalid TID (0,0) into relation %u/%u/%u '%s', serial number " INT64_FORMAT, 
haae: heap:00000449:  rel->rd_node.spcNode, 
haae: heap:00000450:  rel->rd_node.dbNode, 
haae: heap:00000451:  rel->rd_node.relNode, 
haae: heap:00000452:  NameStr(rel->rd_rel->relname), 
haae: heap:00000453:  rel->rd_segfile0_relationnodeinfos[0].persistentSerialNum); 
haae: heap:00000516:  ereport(ERROR, 
haae: heap:00000517:  (errcode(ERRCODE_TOO_MANY_COLUMNS), 
haae: heap:00000518:  errmsg("tables can have at most %d columns", 
haae: heap:00000519:  MaxHeapAttributeNumber))); 
haae: heap:00000533:  ereport(ERROR, 
haae: heap:00000534:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
haae: heap:00000535:  errmsg("column name \"%s\" conflicts with a system column name", 
haae: heap:00000536:  NameStr(tupdesc->attrs[i]->attname)))); 
haae: heap:00000549:  ereport(ERROR, 
haae: heap:00000550:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
haae: heap:00000551:  errmsg("column name \"%s\" is duplicated", 
haae: heap:00000552:  NameStr(tupdesc->attrs[j]->attname)), 
haae: heap:00000553:  errOmitLocation(true))); 
haae: heap:00000589:  ereport(WARNING, 
haae: heap:00000590:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
haae: heap:00000591:  errmsg("column \"%s\" has type \"unknown\"", attname), 
haae: heap:00000592:  errdetail("Proceeding with relation creation anyway."), 
haae: heap:00000593:  errOmitLocation(true))); 
haae: heap:00000598:  ereport(ERROR, 
haae: heap:00000599:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
haae: heap:00000600:  errmsg("column \"%s\" has pseudo-type %s", 
haae: heap:00000601:  attname, format_type_be(atttypid)), 
haae: heap:00000602:  errOmitLocation(true))); 
haae: heap:00001221:  elog(ERROR, 
haae: heap:00001222:  "Inserting with invalid TID (0,0) into relation id %u '%s', relfilenode %u, segment file #%d, contentid %d, serial number " INT64_FORMAT, 
haae: heap:00001223:  relationId, 
haae: heap:00001224:  relname, 
haae: heap:00001225:  relfilenode, 
haae: heap:00001226:  segmentFileNum, 
haae: heap:00001227:  contentid, 
haae: heap:00001228:  persistentSerialNum); 
haae: heap:00001294:  elog(ERROR, 
haae: heap:00001295:  "Updating with invalid TID (0,0) in relfilenode %u, segment file #%d, serial number " INT64_FORMAT, 
haae: heap:00001296:  relfilenode, 
haae: heap:00001297:  segmentFileNum, 
haae: heap:00001298:  persistentSerialNum); 
haae: heap:00001439:  ereport(ERROR, 
haae: heap:00001440:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
haae: heap:00001441:  errmsg("Cannot support error table yet"))); 
haae: heap:00001453:  ereport(ERROR, 
haae: heap:00001454:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
haae: heap:00001455:  errmsg("tablespace \"%s\" does not support heap relation", 
haae: heap:00001456:  get_tablespace_name(reltablespace)), 
haae: heap:00001457:  errOmitLocation(true))); 
haae: heap:00001485:  ereport(ERROR, 
haae: heap:00001486:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
haae: heap:00001487:  errmsg( 
haae: heap:00001488:  "OIDS=TRUE is not allowed on tables that " 
haae: heap:00001489:  "use column-oriented storage. Use OIDS=FALSE" 
haae: heap:00001490:  ), 
haae: heap:00001491:  errOmitLocation(true))); 
haae: heap:00001493:  ereport(NOTICE, 
haae: heap:00001494:  (errmsg( 
haae: heap:00001495:  "OIDS=TRUE is not recommended for user-created " 
haae: heap:00001496:  "tables. Use OIDS=FALSE to prevent wrap-around " 
haae: heap:00001497:  "of the OID counter" 
haae: heap:00001498:  ), 
haae: heap:00001499:  errOmitLocation(true))); 
haae: heap:00001505:  ereport(ERROR, 
haae: heap:00001506:  (errcode(ERRCODE_DUPLICATE_TABLE), 
haae: heap:00001507:  errmsg("relation \"%s\" already exists", relname), 
haae: heap:00001508:  errOmitLocation(true))); 
haae: heap:00001892:  elog(ERROR, "cache lookup failed for relation %u", relid); 
haae: heap:00001942:  elog(ERROR, "could not find node tuple for relation %u, relation file node %u, segment file #%d, contentid %d", 
haae: heap:00001943:  RelationGetRelid(relation), 
haae: heap:00001944:  relation->rd_rel->relfilenode, 
haae: heap:00001945:  segmentFileNum, 
haae: heap:00001946:  contentid); 
haae: heap:00001997:  elog(ERROR, "cache lookup failed for attribute %d of relation %u", 
haae: heap:00001998:  attnum, relid); 
haae: heap:00002102:  elog(ERROR, "could not find attrdef tuple for relation %u attnum %d", 
haae: heap:00002103:  relid, attnum); 
haae: heap:00002141:  elog(ERROR, "could not find tuple for attrdef %u", attrdefId); 
haae: heap:00002170:  elog(ERROR, "cache lookup failed for attribute %d of relation %u", 
haae: heap:00002171:  myattnum, myrelid); 
haae: heap:00002532:  elog(ERROR, "cache lookup failed for attribute %d of relation %u", 
haae: heap:00002533:  attnum, RelationGetRelid(rel)); 
haae: heap:00002812:  ereport(ERROR, 
haae: heap:00002813:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
haae: heap:00002814:  errmsg("constraint \"%s\" for relation \"%s\" already exists", 
haae: heap:00002815:  ccname, RelationGetRelationName(rel)), 
haae: heap:00002816:  errOmitLocation(true))); 
haae: heap:00002823:  ereport(ERROR, 
haae: heap:00002824:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
haae: heap:00002825:  errmsg("check constraint \"%s\" already exists", 
haae: heap:00002826:  ccname), 
haae: heap:00002827:  errOmitLocation(true))); 
haae: heap:00002916:  ereport(ERROR, 
haae: heap:00002917:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
haae: heap:00002918:  errmsg("only table \"%s\" can be referenced in check constraint", 
haae: heap:00002919:  relname), errOmitLocation(true))); 
haae: heap:00002924:  ereport(ERROR, 
haae: heap:00002925:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
haae: heap:00002926:  errmsg("cannot use subquery in check constraint"), 
haae: heap:00002927:  errOmitLocation(true))); 
haae: heap:00002929:  ereport(ERROR, 
haae: heap:00002930:  (errcode(ERRCODE_GROUPING_ERROR), 
haae: heap:00002931:  errmsg("cannot use aggregate function in check constraint"), 
haae: heap:00002932:  errOmitLocation(true))); 
haae: heap:00002934:  ereport(ERROR, 
haae: heap:00002935:  (errcode(ERRCODE_SYNTAX_ERROR), 
haae: heap:00002936:  errmsg("cannot use window function in check constraint"), 
haae: heap:00002937:  errOmitLocation(true))); 
haae: heap:00002974:  elog(ERROR, "cache lookup failed for relation %u", 
haae: heap:00002975:  RelationGetRelid(rel)); 
haae: heap:00003027:  ereport(ERROR, 
haae: heap:00003028:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
haae: heap:00003029:  errmsg("cannot use column references in default expression"))); 
haae: heap:00003035:  ereport(ERROR, 
haae: heap:00003036:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
haae: heap:00003037:  errmsg("default expression must not return a set"), 
haae: heap:00003038:  errOmitLocation(true))); 
haae: heap:00003044:  ereport(ERROR, 
haae: heap:00003045:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
haae: heap:00003046:  errmsg("cannot use subquery in default expression"), 
haae: heap:00003047:  errOmitLocation(true))); 
haae: heap:00003049:  ereport(ERROR, 
haae: heap:00003050:  (errcode(ERRCODE_GROUPING_ERROR), 
haae: heap:00003051:  errmsg("cannot use aggregate function in default expression"), 
haae: heap:00003052:  errOmitLocation(true))); 
haae: heap:00003054:  ereport(ERROR, 
haae: heap:00003055:  (errcode(ERRCODE_SYNTAX_ERROR), 
haae: heap:00003056:  errmsg("cannot use window function in default expression"), 
haae: heap:00003057:  errOmitLocation(true))); 
haae: heap:00003073:  ereport(ERROR, 
haae: heap:00003074:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
haae: heap:00003075:  errmsg("column \"%s\" is of type %s" 
haae: heap:00003076:  " but default expression is of type %s", 
haae: heap:00003077:  attname, 
haae: heap:00003078:  format_type_be(atttypid), 
haae: heap:00003079:  format_type_be(type_id)), 
haae: heap:00003080:  errhint("You will need to rewrite or cast the expression."), 
haae: heap:00003081:  errOmitLocation(true))); 
haae: heap:00003370:  ereport(ERROR, 
haae: heap:00003371:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
haae: heap:00003372:  errmsg("unsupported ON COMMIT and foreign key combination"), 
haae: heap:00003373:  errdetail("Table \"%s\" references \"%s\", but they do not have the same ON COMMIT setting.", 
haae: heap:00003374:  relname2, relname), 
haae: heap:00003375:  errOmitLocation(true))); 
haae: heap:00003377:  ereport(ERROR, 
haae: heap:00003378:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
haae: heap:00003379:  errmsg("cannot truncate a table referenced in a foreign key constraint"), 
haae: heap:00003380:  errdetail("Table \"%s\" references \"%s\".", 
haae: heap:00003381:  relname2, relname), 
haae: heap:00003382:  errhint("Truncate table \"%s\" at the same time, " 
haae: heap:00003383:  "or use TRUNCATE ... CASCADE.", 
haae: heap:00003384:  relname2), 
haae: heap:00003385:  errOmitLocation(true))); 
haae: heap:00003524:  elog(ERROR, "could not find tuple for relation %u", 
haae: heap:00003525:  RelationGetRelid(relation)); 
haae: heap:00003601:  elog(ERROR, 
haae: heap:00003602:  "setNewRelfilenodeCommon has invalid TID (0,0) for relation %u/%u/%u '%s', serial number " INT64_FORMAT, 
haae: heap:00003603:  newrnode.spcNode, 
haae: heap:00003604:  newrnode.dbNode, 
haae: heap:00003605:  newrnode.relNode, 
haae: heap:00003606:  NameStr(relation->rd_rel->relname), 
haae: heap:00003607:  relation->rd_segfile0_relationnodeinfos[0].persistentSerialNum); 
aaaaa GP_IGNORE: iaaf: index - ./backend/catalog/index.c
iaaf: index:00000188:  elog(ERROR, "invalid column number %d", atnum); 
iaaf: index:00000219:  elog(ERROR, "too few entries in indexprs list"); 
iaaf: index:00000243:  elog(ERROR, "cache lookup failed for type %u", keyType); 
iaaf: index:00000283:  elog(ERROR, "cache lookup failed for opclass %u", 
iaaf: index:00000284:  classObjectId[i]); 
iaaf: index:00000298:  elog(ERROR, "cache lookup failed for type %u", keyType); 
iaaf: index:00000566:  elog(ERROR, "must index at least one column"); 
iaaf: index:00000571:  ereport(ERROR, 
iaaf: index:00000572:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaf: index:00000573:  errmsg("user-defined indexes on system catalog tables are not supported"))); 
iaaf: index:00000581:  ereport(ERROR, 
iaaf: index:00000582:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaf: index:00000583:  errmsg("concurrent index creation on system catalog tables is not supported"))); 
iaaf: index:00000591:  ereport(ERROR, 
iaaf: index:00000592:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
iaaf: index:00000593:  errmsg("shared indexes cannot be created after initdb"))); 
iaaf: index:00000596:  ereport(ERROR, 
iaaf: index:00000597:  (errcode(ERRCODE_DUPLICATE_TABLE), 
iaaf: index:00000598:  errmsg("relation \"%s\" already exists", 
iaaf: index:00000599:  indexRelationName))); 
iaaf: index:00000785:  elog(ERROR, "constraint must be PRIMARY or UNIQUE"); 
iaaf: index:00000791:  elog(ERROR, "constraints can't have index expressions"); 
iaaf: index:00001045:  elog(ERROR, "cache lookup failed for index %u", indexId); 
iaaf: index:00001115:  elog(ERROR, "invalid indnatts %d for index %u", 
iaaf: index:00001116:  numKeys, RelationGetRelid(index)); 
iaaf: index:00001199:  elog(ERROR, "wrong number of index expressions"); 
iaaf: index:00001211:  elog(ERROR, "wrong number of index expressions"); 
iaaf: index:00001320:  elog(ERROR, "could not find tuple for relation %u", relid); 
iaaf: index:00001715:  elog(ERROR, "concurrent insert in progress"); 
iaaf: index:00001737:  elog(ERROR, "concurrent delete in progress"); 
iaaf: index:00001742:  elog(ERROR, "unexpected HeapTupleSatisfiesVacuum result"); 
iaaf: index:00001850:  ereport(ERROR, 
iaaf: index:00001851:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
iaaf: index:00001852:  errmsg("Cannot create index concurrently. Create an index non-concurrently " 
iaaf: index:00001853:  "before creating an index concurrently in an appendonly table."))); 
iaaf: index:00002003:  ereport(ERROR, 
iaaf: index:00002004:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
iaaf: index:00002005:  errmsg("Cannot create index concurrently. Create an index non-concurrently " 
iaaf: index:00002006:  "before creating an index concurrently in an appendonly table."))); 
iaaf: index:00002449:  elog(ERROR, "cache lookup failed for index %u", indexId); 
iaaf: index:00002587:  ereport(ERROR, 
iaaf: index:00002588:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaf: index:00002589:  errmsg("cannot reindex temporary tables of other sessions"))); 
iaaf: index:00002615:  ereport(ERROR, 
iaaf: index:00002616:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
iaaf: index:00002617:  errmsg("shared index \"%s\" can only be reindexed in stand-alone mode", 
iaaf: index:00002618:  RelationGetRelationName(iRel)))); 
iaaf: index:00002706:  elog(ERROR, "cache lookup failed for index %u", indexId); 
aaaaa GP_IGNORE: naaj: namespace - ./backend/catalog/namespace.c
naaj: namespace:00000201:  ereport(ERROR, 
naaj: namespace:00000202:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
naaj: namespace:00000203:  errmsg("cross-database references are not implemented: \"%s.%s.%s\"", 
naaj: namespace:00000204:  relation->catalogname, relation->schemaname, 
naaj: namespace:00000205:  relation->relname))); 
naaj: namespace:00000223:  ereport(ERROR, 
naaj: namespace:00000224:  (errcode(ERRCODE_UNDEFINED_TABLE), 
naaj: namespace:00000225:  errmsg("relation \"%s.%s\" does not exist", 
naaj: namespace:00000226:  relation->schemaname, relation->relname), 
naaj: namespace:00000227:  errOmitLocation(true))); 
naaj: namespace:00000229:  ereport(ERROR, 
naaj: namespace:00000230:  (errcode(ERRCODE_UNDEFINED_TABLE), 
naaj: namespace:00000231:  errmsg("relation \"%s\" does not exist", 
naaj: namespace:00000232:  relation->relname), 
naaj: namespace:00000233:  errOmitLocation(true))); 
naaj: namespace:00000258:  ereport(ERROR, 
naaj: namespace:00000259:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
naaj: namespace:00000260:  errmsg("cross-database references are not implemented: \"%s.%s.%s\"", 
naaj: namespace:00000261:  newRelation->catalogname, newRelation->schemaname, 
naaj: namespace:00000262:  newRelation->relname))); 
naaj: namespace:00000273:  ereport(ERROR, 
naaj: namespace:00000274:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
naaj: namespace:00000275:  errmsg("temporary tables may not specify a schema name"), 
naaj: namespace:00000276:  errOmitLocation(true))); 
naaj: namespace:00000302:  ereport(ERROR, 
naaj: namespace:00000303:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
naaj: namespace:00000304:  errmsg("schema \"%s\" does not exist", 
naaj: namespace:00000305:  newRelation->schemaname), 
naaj: namespace:00000306:  errOmitLocation(true))); 
naaj: namespace:00000321:  ereport(ERROR, 
naaj: namespace:00000322:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
naaj: namespace:00000323:  errmsg("no schema has been selected to create in"), 
naaj: namespace:00000324:  errOmitLocation(true))); 
naaj: namespace:00000501:  elog(ERROR, "cache lookup failed for type %u", typid); 
naaj: namespace:00000741:  elog(ERROR, "cache lookup failed for function %u", funcid); 
naaj: namespace:00001087:  elog(ERROR, "cache lookup failed for operator %u", oprid); 
naaj: namespace:00001187:  elog(ERROR, "cache lookup failed for opclass %u", opcid); 
naaj: namespace:00001281:  elog(ERROR, "cache lookup failed for conversion %u", conid); 
naaj: namespace:00001347:  ereport(ERROR, 
naaj: namespace:00001348:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
naaj: namespace:00001349:  errmsg("cross-database references are not implemented: %s", 
naaj: namespace:00001350:  NameListToString(names)))); 
naaj: namespace:00001353:  ereport(ERROR, 
naaj: namespace:00001354:  (errcode(ERRCODE_SYNTAX_ERROR), 
naaj: namespace:00001355:  errmsg("improper qualified name (too many dotted names): %s", 
naaj: namespace:00001356:  NameListToString(names)))); 
naaj: namespace:00001397:  ereport(ERROR, 
naaj: namespace:00001398:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
naaj: namespace:00001399:  errmsg("schema \"%s\" does not exist", nspname), 
naaj: namespace:00001400:  errOmitLocation(true))); 
naaj: namespace:00001442:  ereport(ERROR, 
naaj: namespace:00001443:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
naaj: namespace:00001444:  errmsg("schema \"%s\" does not exist", nspname), 
naaj: namespace:00001445:  errOmitLocation(true))); 
naaj: namespace:00001494:  ereport(ERROR, 
naaj: namespace:00001495:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
naaj: namespace:00001496:  errmsg("schema \"%s\" does not exist", schemaname), 
naaj: namespace:00001497:  errOmitLocation(true))); 
naaj: namespace:00001512:  ereport(ERROR, 
naaj: namespace:00001513:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
naaj: namespace:00001514:  errmsg("no schema has been selected to create in"))); 
naaj: namespace:00001544:  ereport(ERROR, 
naaj: namespace:00001545:  (errcode(ERRCODE_SYNTAX_ERROR), 
naaj: namespace:00001546:  errmsg("improper relation name (too many dotted names): %s", 
naaj: namespace:00001547:  NameListToString(names)))); 
naaj: namespace:00001795:  elog(ERROR, "invalid list syntax"); 
naaj: namespace:00001963:  ereport(ERROR, 
naaj: namespace:00001964:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
naaj: namespace:00001965:  errmsg("permission denied to create temporary tables in database \"%s\"", 
naaj: namespace:00001966:  get_database_name(MyDatabaseId)))); 
naaj: namespace:00001986:  elog(ERROR, "invalid backend temp schema creation"); 
naaj: namespace:00002053:  elog(ERROR, "Called within a transation"); 
naaj: namespace:00002069:  elog(ERROR, "temporary namespace already exists"); 
naaj: namespace:00002408:  ereport(ERROR, 
naaj: namespace:00002409:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
naaj: namespace:00002410:  errmsg("temporary table schema removed while session " 
naaj: namespace:00002411:  "still in progress"))); 
aaaaa GP_IGNORE: pabc: pgxaggregate - ./backend/catalog/pg_aggregate.c
pabc: pgxaggregate:00000081:  elog(ERROR, "no aggregate name supplied"); 
pabc: pgxaggregate:00000084:  elog(ERROR, "aggregate must have a transition function"); 
pabc: pgxaggregate:00000104:  ereport(ERROR, 
pabc: pgxaggregate:00000105:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
pabc: pgxaggregate:00000106:  errmsg("cannot determine transition data type"), 
pabc: pgxaggregate:00000107:  errdetail("An aggregate using \"anyarray\" or \"anyelement\" as transition type must have at least one argument of either type."))); 
pabc: pgxaggregate:00000134:  ereport(ERROR, 
pabc: pgxaggregate:00000135:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: pgxaggregate:00000136:  errmsg("return type of transition function %s is not %s", 
pabc: pgxaggregate:00000137:  NameListToString(aggtransfnName), 
pabc: pgxaggregate:00000138:  format_type_be(aggTransType)))); 
pabc: pgxaggregate:00000149:  elog(ERROR, "cache lookup failed for function %u", transfn); 
pabc: pgxaggregate:00000161:  ereport(ERROR, 
pabc: pgxaggregate:00000162:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
pabc: pgxaggregate:00000163:  errmsg("must not omit initial value when transition function is strict and transition type is not compatible with input type"))); 
pabc: pgxaggregate:00000194:  ereport(ERROR, 
pabc: pgxaggregate:00000195:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: pgxaggregate:00000196:  errmsg("return type of preliminary function %s is not %s", 
pabc: pgxaggregate:00000197:  NameListToString(aggprelimfnName), 
pabc: pgxaggregate:00000198:  format_type_be(rettype)))); 
pabc: pgxaggregate:00000227:  ereport(ERROR, 
pabc: pgxaggregate:00000228:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: pgxaggregate:00000229:  errmsg("cannot determine result data type"), 
pabc: pgxaggregate:00000230:  errdetail("An aggregate returning \"anyarray\" or \"anyelement\" " 
pabc: pgxaggregate:00000231:  "must have at least one argument of either type."))); 
pabc: pgxaggregate:00000237:  ereport(ERROR, 
pabc: pgxaggregate:00000238:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
pabc: pgxaggregate:00000239:  errmsg("sort operator can only be specified for single-argument aggregates"))); 
pabc: pgxaggregate:00000405:  ereport(ERROR, 
pabc: pgxaggregate:00000406:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
pabc: pgxaggregate:00000407:  errmsg("function %s does not exist", 
pabc: pgxaggregate:00000408:  func_signature_string(fnName, nargs, input_types)), 
pabc: pgxaggregate:00000409:  errOmitLocation(true))); 
pabc: pgxaggregate:00000411:  ereport(ERROR, 
pabc: pgxaggregate:00000412:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: pgxaggregate:00000413:  errmsg("function %s returns a set", 
pabc: pgxaggregate:00000414:  func_signature_string(fnName, nargs, input_types)), 
pabc: pgxaggregate:00000415:  errOmitLocation(true))); 
pabc: pgxaggregate:00000448:  ereport(ERROR, 
pabc: pgxaggregate:00000449:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: pgxaggregate:00000450:  errmsg("function %s requires run-time type coercion", 
pabc: pgxaggregate:00000451:  func_signature_string(fnName, nargs, true_oid_array)))); 
aaaaa GP_IGNORE: pabd: pgxappendonly - ./backend/catalog/pg_appendonly.c
pabd: pgxappendonly:00000206:  ereport(ERROR, 
pabd: pgxappendonly:00000207:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000208:  errmsg("missing pg_appendonly entry for relation \"%s\"", 
pabd: pgxappendonly:00000209:  get_rel_name(relid)))); 
pabd: pgxappendonly:00000218:  ereport(ERROR, 
pabd: pgxappendonly:00000219:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000220:  errmsg("got invalid segrelid value: NULL"))); 
pabd: pgxappendonly:00000232:  ereport(ERROR, 
pabd: pgxappendonly:00000233:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000234:  errmsg("got invalid segidxid value: NULL"))); 
pabd: pgxappendonly:00000246:  ereport(ERROR, 
pabd: pgxappendonly:00000247:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000248:  errmsg("got invalid blkdirrelid value: NULL"))); 
pabd: pgxappendonly:00000260:  ereport(ERROR, 
pabd: pgxappendonly:00000261:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000262:  errmsg("got invalid blkdiridxid value: NULL"))); 
pabd: pgxappendonly:00000306:  ereport(ERROR, 
pabd: pgxappendonly:00000307:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000308:  errmsg("missing pg_appendonly entry for relation \"%s\"", 
pabd: pgxappendonly:00000309:  get_rel_name(relid)))); 
pabd: pgxappendonly:00000363:  ereport(ERROR, 
pabd: pgxappendonly:00000364:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000365:  errmsg("got invalid relid value: NULL"))); 
pabd: pgxappendonly:00000374:  ereport(ERROR, 
pabd: pgxappendonly:00000375:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000376:  errmsg("got invalid blocksize value: NULL"))); 
pabd: pgxappendonly:00000385:  ereport(ERROR, 
pabd: pgxappendonly:00000386:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000387:  errmsg("got invalid safe fs write size value: NULL"))); 
pabd: pgxappendonly:00000396:  ereport(ERROR, 
pabd: pgxappendonly:00000397:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000398:  errmsg("got invalid compresslevel value: NULL"))); 
pabd: pgxappendonly:00000407:  ereport(ERROR, 
pabd: pgxappendonly:00000408:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000409:  errmsg("got invalid major version value: NULL"))); 
pabd: pgxappendonly:00000418:  ereport(ERROR, 
pabd: pgxappendonly:00000419:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000420:  errmsg("got invalid minor version value: NULL"))); 
pabd: pgxappendonly:00000428:  ereport(ERROR, 
pabd: pgxappendonly:00000429:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000430:  errmsg("got invalid checksum value: NULL"))); 
pabd: pgxappendonly:00000438:  ereport(ERROR, 
pabd: pgxappendonly:00000439:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000440:  errmsg("got invalid columnstore value: NULL"))); 
pabd: pgxappendonly:00000462:  ereport(ERROR, 
pabd: pgxappendonly:00000463:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000464:  errmsg("got invalid segrelid value: NULL"))); 
pabd: pgxappendonly:00000472:  ereport(ERROR, 
pabd: pgxappendonly:00000473:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000474:  errmsg("got invalid segidxid value: NULL"))); 
pabd: pgxappendonly:00000482:  ereport(ERROR, 
pabd: pgxappendonly:00000483:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000484:  errmsg("got invalid blkdirrelid value: NULL"))); 
pabd: pgxappendonly:00000492:  ereport(ERROR, 
pabd: pgxappendonly:00000493:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000494:  errmsg("got invalid blkdiridxid value: NULL"))); 
pabd: pgxappendonly:00000503:  ereport(ERROR, 
pabd: pgxappendonly:00000504:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000505:  errmsg("got invalid version value: NULL"))); 
pabd: pgxappendonly:00000558:  ereport(ERROR, 
pabd: pgxappendonly:00000559:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000560:  errmsg("missing pg_appendonly entry for relation \"%s\"", 
pabd: pgxappendonly:00000561:  get_rel_name(relid)))); 
pabd: pgxappendonly:00000634:  ereport(ERROR, 
pabd: pgxappendonly:00000635:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000636:  errmsg("appendonly table relid \"%d\" does not exist in " 
pabd: pgxappendonly:00000637:  "pg_appendonly", relid))); 
pabd: pgxappendonly:00000721:  ereport(ERROR, 
pabd: pgxappendonly:00000722:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000723:  errmsg("appendonly table relid \"%d\" does not exist in " 
pabd: pgxappendonly:00000724:  "pg_appendonly", relId))); 
pabd: pgxappendonly:00000731:  ereport(ERROR, 
pabd: pgxappendonly:00000732:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000733:  errmsg("got invalid segrelid value: NULL"))); 
pabd: pgxappendonly:00000740:  ereport(ERROR, 
pabd: pgxappendonly:00000741:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxappendonly:00000742:  errmsg("got invalid blkdirrelid value: NULL"))); 
aaaaa GP_IGNORE: pacb: pgxattributexencoding - ./backend/catalog/pg_attribute_encoding.c
pacb: pgxattributexencoding:00000340:  elog(ERROR, "column \"%s\" does not exist", strVal(c->column)); 
pacb: pgxattributexencoding:00000343:  elog(ERROR, "column \"%s\" is a system column", strVal(c->column)); 
aaaaa GP_IGNORE: pabe: pgxcompression - ./backend/catalog/pg_compression.c
pabe: pgxcompression:00000094:  elog(ERROR, "compression name \"%s\" exceeds maximum name length " 
pabe: pgxcompression:00000095:  "of %d bytes", comptype, NAMEDATALEN - 1); 
pabe: pgxcompression:00000131:  ereport(ERROR, 
pabe: pgxcompression:00000132:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabe: pgxcompression:00000133:  errmsg("unknown compress type \"%s\"", 
pabe: pgxcompression:00000134:  comptype))); 
pabe: pgxcompression:00000459:  elog(ERROR, "out of memory"); 
pabe: pgxcompression:00000509:  elog(ERROR, "out of memory"); 
pabe: pgxcompression:00000518:  elog(ERROR, "buffer size %d insufficient for compressed data", 
pabe: pgxcompression:00000519:  dst_sz); 
pabe: pgxcompression:00000529:  elog(ERROR, "zlib encountered data in an unexpected format"); 
pabe: pgxcompression:00000550:  elog(ERROR, "rle_type block compression not supported"); 
pabe: pgxcompression:00000557:  elog(ERROR, "rle_type block compression not supported"); 
pabe: pgxcompression:00000564:  elog(ERROR, "rle_type block compression not supported"); 
pabe: pgxcompression:00000571:  elog(ERROR, "rle_type block compression not supported"); 
pabe: pgxcompression:00000578:  elog(ERROR, "rle_type block compression not supported"); 
pabe: pgxcompression:00000586:  elog(ERROR, "dummy compression called directly"); 
pabe: pgxcompression:00000593:  elog(ERROR, "dummy compression called directly"); 
pabe: pgxcompression:00000600:  elog(ERROR, "dummy compression called directly"); 
pabe: pgxcompression:00000607:  elog(ERROR, "dummy compression called directly"); 
pabe: pgxcompression:00000614:  elog(ERROR, "dummy compression called directly"); 
aaaaa GP_IGNORE: pabd: pgxconstraint - ./backend/catalog/pg_constraint.c
pabd: pgxconstraint:00000432:  elog(ERROR, "could not find tuple for constraint %u", conId); 
pabd: pgxconstraint:00000474:  elog(ERROR, "cache lookup failed for relation %u", 
pabd: pgxconstraint:00000475:  con->conrelid); 
pabd: pgxconstraint:00000479:  elog(ERROR, "relation \"%s\" has relchecks = 0", 
pabd: pgxconstraint:00000480:  RelationGetRelationName(rel)); 
pabd: pgxconstraint:00000510:  elog(ERROR, "constraint %u is not of a known type", conId); 
aaaaa GP_IGNORE: pabd: pgxconversion - ./backend/catalog/pg_conversion.c
pabd: pgxconversion:00000059:  elog(ERROR, "no conversion name supplied"); 
pabd: pgxconversion:00000073:  ereport(ERROR, 
pabd: pgxconversion:00000074:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
pabd: pgxconversion:00000075:  errmsg("conversion \"%s\" already exists", conname), 
pabd: pgxconversion:00000076:  errOmitLocation(true))); 
pabd: pgxconversion:00000088:  ereport(ERROR, 
pabd: pgxconversion:00000089:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
pabd: pgxconversion:00000090:  errmsg("default conversion for %s to %s already exists", 
pabd: pgxconversion:00000091:  pg_encoding_to_char(conforencoding), 
pabd: pgxconversion:00000092:  pg_encoding_to_char(contoencoding)), 
pabd: pgxconversion:00000093:  errOmitLocation(true))); 
pabd: pgxconversion:00000175:  elog(ERROR, "cache lookup failed for conversion %u", conversionOid); 
pabd: pgxconversion:00000211:  elog(ERROR, "could not find tuple for conversion %u", conversionOid); 
pabd: pgxconversion:00000336:  ereport(ERROR, 
pabd: pgxconversion:00000337:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxconversion:00000338:  errmsg("conversion \"%s\" does not exist", 
pabd: pgxconversion:00000339:  NameListToString(parsed_name)), 
pabd: pgxconversion:00000340:  errOmitLocation(true))); 
pabd: pgxconversion:00000351:  elog(ERROR, "cache lookup failed for conversion %u", convoid); 
aaaaa GP_IGNORE: paaj: pgxdepend - ./backend/catalog/pg_depend.c
paaj: pgxdepend:00000185:  ereport(ERROR, 
paaj: pgxdepend:00000186:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paaj: pgxdepend:00000187:  errmsg("cannot remove dependency on %s because it is a system object", 
paaj: pgxdepend:00000188:  getObjectDescription(&objAddr)))); 
aaaaa GP_IGNORE: pabe: pgxextprotocol - ./backend/catalog/pg_extprotocol.c
pabe: pgxextprotocol:00000067:  elog(ERROR, "no protocol name supplied"); 
pabe: pgxextprotocol:00000070:  elog(ERROR, "protocol must have at least one of readfunc or writefunc"); 
pabe: pgxextprotocol:00000081:  ereport(ERROR, 
pabe: pgxextprotocol:00000082:  (errcode(ERRCODE_RESERVED_NAME), 
pabe: pgxextprotocol:00000083:  errmsg("protocol \"%s\" already exists", 
pabe: pgxextprotocol:00000084:  protocolName), 
pabe: pgxextprotocol:00000085:  errhint("pick a different protocol name"))); 
pabe: pgxextprotocol:00000102:  ereport(ERROR, 
pabe: pgxextprotocol:00000103:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
pabe: pgxextprotocol:00000104:  errmsg("protocol \"%s\" already exists", 
pabe: pgxextprotocol:00000105:  protocolName))); 
pabe: pgxextprotocol:00000202:  elog(ERROR, "protocol %u could not be found", protOid); 
pabe: pgxextprotocol:00000243:  ereport(ERROR, 
pabe: pgxextprotocol:00000244:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
pabe: pgxextprotocol:00000245:  errmsg("function %s does not exist", 
pabe: pgxextprotocol:00000246:  func_signature_string(fnName, nargs, inputTypes)), 
pabe: pgxextprotocol:00000247:  errOmitLocation(true))); 
pabe: pgxextprotocol:00000250:  ereport(ERROR, 
pabe: pgxextprotocol:00000251:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabe: pgxextprotocol:00000252:  errmsg("Invalid protocol function"), 
pabe: pgxextprotocol:00000253:  errdetail("Protocol functions cannot return sets."), 
pabe: pgxextprotocol:00000254:  errOmitLocation(true))); 
pabe: pgxextprotocol:00000257:  ereport(ERROR, 
pabe: pgxextprotocol:00000258:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabe: pgxextprotocol:00000259:  errmsg("%s protocol function %s must return %s", 
pabe: pgxextprotocol:00000260:  func_type_to_name(fntype), 
pabe: pgxextprotocol:00000261:  func_signature_string(fnName, nargs, inputTypes), 
pabe: pgxextprotocol:00000262:  (fntype == EXTPTC_FUNC_VALIDATOR ? "void" : "an integer")), 
pabe: pgxextprotocol:00000263:  errOmitLocation(true))); 
pabe: pgxextprotocol:00000266:  ereport(ERROR, 
pabe: pgxextprotocol:00000267:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
pabe: pgxextprotocol:00000268:  errmsg("%s protocol function %s is declared IMMUTABLE", 
pabe: pgxextprotocol:00000269:  func_type_to_name(fntype), 
pabe: pgxextprotocol:00000270:  func_signature_string(fnName, nargs, inputTypes)), 
pabe: pgxextprotocol:00000271:  errhint("PROTOCOL functions must be declared STABLE or VOLATILE"), 
pabe: pgxextprotocol:00000272:  errOmitLocation(true))); 
pabe: pgxextprotocol:00000335:  elog(ERROR, "internal error in pg_extprotocol:func_type_to_attnum"); 
pabe: pgxextprotocol:00000340:  ereport(ERROR, 
pabe: pgxextprotocol:00000341:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabe: pgxextprotocol:00000342:  errmsg("protocol \"%s\" does not exist", 
pabe: pgxextprotocol:00000343:  prot_name))); 
pabe: pgxextprotocol:00000349:  ereport(ERROR, 
pabe: pgxextprotocol:00000350:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabe: pgxextprotocol:00000351:  errmsg("protocol '%s' has no %s function defined", 
pabe: pgxextprotocol:00000352:  prot_name, func_type_to_name(prot_type)))); 
pabe: pgxextprotocol:00000383:  ereport(ERROR, 
pabe: pgxextprotocol:00000384:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabe: pgxextprotocol:00000385:  errmsg("protocol \"%s\" does not exist", 
pabe: pgxextprotocol:00000386:  prot_name))); 
pabe: pgxextprotocol:00000417:  elog(ERROR, "protocol %u could not be found", protOid); 
pabe: pgxextprotocol:00000421:  ereport(ERROR, 
pabe: pgxextprotocol:00000422:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabe: pgxextprotocol:00000423:  errmsg("internal error: protocol '%u' has no name defined", 
pabe: pgxextprotocol:00000424:  protOid))); 
pabe: pgxextprotocol:00000440:  elog(ERROR, "internal error in pg_extprotocol:func_type_to_name"); 
aaaaa GP_IGNORE: pabb: pgxexttable - ./backend/catalog/pg_exttable.c
pabb: pgxexttable:00000169:  ereport(ERROR, 
pabb: pgxexttable:00000170:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabb: pgxexttable:00000171:  errmsg("missing pg_exttable entry for relation \"%s\"", 
pabb: pgxexttable:00000172:  get_rel_name(relid)))); 
pabb: pgxexttable:00000222:  ereport(ERROR, 
pabb: pgxexttable:00000223:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabb: pgxexttable:00000224:  errmsg("got invalid pg_exttable tuple. location and command are both NULL"))); 
pabb: pgxexttable:00000338:  ereport(ERROR, 
pabb: pgxexttable:00000339:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabb: pgxexttable:00000340:  errmsg("external table object id \"%d\" does not exist", 
pabb: pgxexttable:00000341:  relid))); 
aaaaa GP_IGNORE: pabd: pgxfilesystem - ./backend/catalog/pg_filesystem.c
pabd: pgxfilesystem:00000075:  elog(ERROR, "no filesystem name supplied"); 
pabd: pgxfilesystem:00000078:  elog(ERROR, "filesystem need %d funcs, but get %d", FSYS_FUNC_TOTALNUM, funcNum); 
pabd: pgxfilesystem:00000081:  elog(ERROR, "filesystem need a lib file, but not specified"); 
pabd: pgxfilesystem:00000089:  ereport(ERROR, 
pabd: pgxfilesystem:00000090:  (errcode(ERRCODE_RESERVED_NAME), 
pabd: pgxfilesystem:00000091:  errmsg("filesystem \"%s\" is reserved", 
pabd: pgxfilesystem:00000092:  fsysName), 
pabd: pgxfilesystem:00000093:  errhint("pick a different filesystem name"))); 
pabd: pgxfilesystem:00000102:  elog(ERROR, "filesystem function \"%s\" not specified", fsys_func_type_to_name(i)); 
pabd: pgxfilesystem:00000177:  elog(ERROR, "filesystem %u could not be found", fsysOid); 
pabd: pgxfilesystem:00000230:  ereport(ERROR, 
pabd: pgxfilesystem:00000231:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxfilesystem:00000232:  errmsg("filesystem \"%s\" does not exist", 
pabd: pgxfilesystem:00000233:  fsys_name))); 
pabd: pgxfilesystem:00000243:  ereport(ERROR, 
pabd: pgxfilesystem:00000244:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxfilesystem:00000245:  errmsg("filesystem '%s' has no %s function defined", 
pabd: pgxfilesystem:00000246:  fsys_name, fsys_func_type_to_name(fsys_type)))); 
pabd: pgxfilesystem:00000300:  ereport(ERROR, 
pabd: pgxfilesystem:00000301:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxfilesystem:00000302:  errmsg("filesystem \"%s\" does not exist", 
pabd: pgxfilesystem:00000303:  fsys_name))); 
pabd: pgxfilesystem:00000344:  elog(ERROR, "filesystem %u could not be found", fsysOid); 
pabd: pgxfilesystem:00000356:  ereport(ERROR, 
pabd: pgxfilesystem:00000357:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabd: pgxfilesystem:00000358:  errmsg("internal error: filesystem '%u' has no name defined", 
pabd: pgxfilesystem:00000359:  fsysOid))); 
pabd: pgxfilesystem:00000371:  elog(ERROR, "internal error in pg_filesystem:func_type_to_name"); 
pabd: pgxfilesystem:00000381:  elog(ERROR, "internal error in pg_filesystem:func_type_to_attnum"); 
aaaaa GP_IGNORE: pabe: pgxlargeobject - ./backend/catalog/pg_largeobject.c
pabe: pgxlargeobject:00000105:  ereport(ERROR, 
pabe: pgxlargeobject:00000106:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabe: pgxlargeobject:00000107:  errmsg("large object %u does not exist", loid))); 
aaaaa GP_IGNORE: pabc: pgxnamespace - ./backend/catalog/pg_namespace.c
pabc: pgxnamespace:00000047:  elog(ERROR, "no namespace name supplied"); 
pabc: pgxnamespace:00000063:  ereport(ERROR, 
pabc: pgxnamespace:00000064:  (errcode(ERRCODE_DUPLICATE_SCHEMA), 
pabc: pgxnamespace:00000065:  errmsg("schema \"%s\" already exists", nspName))); 
aaaaa GP_IGNORE: pabb: pgxoperator - ./backend/catalog/pg_operator.c
pabb: pgxoperator:00000229:  ereport(ERROR, 
pabb: pgxoperator:00000230:  (errcode(ERRCODE_INVALID_NAME), 
pabb: pgxoperator:00000231:  errmsg("\"%s\" is not a valid operator name", 
pabb: pgxoperator:00000232:  operatorName))); 
pabb: pgxoperator:00000457:  ereport(ERROR, 
pabb: pgxoperator:00000458:  (errcode(ERRCODE_INVALID_NAME), 
pabb: pgxoperator:00000459:  errmsg("\"%s\" is not a valid operator name", 
pabb: pgxoperator:00000460:  operatorName))); 
pabb: pgxoperator:00000463:  ereport(ERROR, 
pabb: pgxoperator:00000464:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
pabb: pgxoperator:00000465:  errmsg("at least one of leftarg or rightarg must be specified"))); 
pabb: pgxoperator:00000471:  ereport(ERROR, 
pabb: pgxoperator:00000472:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
pabb: pgxoperator:00000473:  errmsg("only binary operators can have commutators"))); 
pabb: pgxoperator:00000475:  ereport(ERROR, 
pabb: pgxoperator:00000476:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
pabb: pgxoperator:00000477:  errmsg("only binary operators can have join selectivity"))); 
pabb: pgxoperator:00000479:  ereport(ERROR, 
pabb: pgxoperator:00000480:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
pabb: pgxoperator:00000481:  errmsg("only binary operators can hash"))); 
pabb: pgxoperator:00000483:  ereport(ERROR, 
pabb: pgxoperator:00000484:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
pabb: pgxoperator:00000485:  errmsg("only binary operators can merge join"))); 
pabb: pgxoperator:00000495:  ereport(ERROR, 
pabb: pgxoperator:00000496:  (errcode(ERRCODE_DUPLICATE_FUNCTION), 
pabb: pgxoperator:00000497:  errmsg("operator %s already exists", 
pabb: pgxoperator:00000498:  operatorName))); 
pabb: pgxoperator:00000693:  elog(ERROR, "cache lookup failed for operator %u", 
pabb: pgxoperator:00000694:  operatorObjectId); 
pabb: pgxoperator:00000783:  ereport(ERROR, 
pabb: pgxoperator:00000784:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
pabb: pgxoperator:00000785:  errmsg("operator cannot be its own negator or sort operator"))); 
aaaaa GP_IGNORE: paah: pgxproc - ./backend/catalog/pg_proc.c
paah: pgxproc:00000118:  ereport(ERROR, 
paah: pgxproc:00000119:  (errcode(ERRCODE_TOO_MANY_ARGUMENTS), 
paah: pgxproc:00000120:  errmsg("functions cannot have more than %d arguments", 
paah: pgxproc:00000121:  FUNC_MAX_ARGS))); 
paah: pgxproc:00000138:  elog(ERROR, "allParameterTypes is not a 1-D Oid array"); 
paah: pgxproc:00000197:  ereport(ERROR, 
paah: pgxproc:00000198:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
paah: pgxproc:00000199:  errmsg("cannot determine result data type"), 
paah: pgxproc:00000200:  errdetail("A function returning \"anyarray\" or \"anyelement\" must have at least one argument of either type."), 
paah: pgxproc:00000201:  errOmitLocation(true))); 
paah: pgxproc:00000204:  ereport(ERROR, 
paah: pgxproc:00000205:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
paah: pgxproc:00000206:  errmsg("unsafe use of pseudo-type \"internal\""), 
paah: pgxproc:00000207:  errdetail("A function returning \"internal\" must have at least one \"internal\" argument."), 
paah: pgxproc:00000208:  errOmitLocation(true))); 
paah: pgxproc:00000218:  ereport(ERROR, 
paah: pgxproc:00000219:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
paah: pgxproc:00000220:  errmsg("\"%s\" is already an attribute of type %s", 
paah: pgxproc:00000221:  procedureName, 
paah: pgxproc:00000222:  format_type_be(parameterTypes->values[0])), 
paah: pgxproc:00000223:  errOmitLocation(true))); 
paah: pgxproc:00000295:  ereport(ERROR, 
paah: pgxproc:00000296:  (errcode(ERRCODE_DUPLICATE_FUNCTION), 
paah: pgxproc:00000297:  errmsg("function \"%s\" already exists with same argument types", 
paah: pgxproc:00000298:  procedureName), 
paah: pgxproc:00000299:  errOmitLocation(true))); 
paah: pgxproc:00000310:  ereport(ERROR, 
paah: pgxproc:00000311:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
paah: pgxproc:00000312:  errmsg("cannot change return type of existing function"), 
paah: pgxproc:00000313:  errhint("Use DROP FUNCTION first."), 
paah: pgxproc:00000314:  errOmitLocation(true))); 
paah: pgxproc:00000333:  ereport(ERROR, 
paah: pgxproc:00000334:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
paah: pgxproc:00000335:  errmsg("cannot change return type of existing function"), 
paah: pgxproc:00000336:  errdetail("Row type defined by OUT parameters is different."), 
paah: pgxproc:00000337:  errhint("Use DROP FUNCTION first."), 
paah: pgxproc:00000338:  errOmitLocation(true))); 
paah: pgxproc:00000366:  ereport(ERROR, 
paah: pgxproc:00000367:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
paah: pgxproc:00000368:  errmsg("cannot add DESCRIBE callback to function used in view(s)"), 
paah: pgxproc:00000369:  errOmitLocation(true))); 
paah: pgxproc:00000379:  ereport(ERROR, 
paah: pgxproc:00000380:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paah: pgxproc:00000381:  errmsg("function \"%s\" is an aggregate", 
paah: pgxproc:00000382:  procedureName), 
paah: pgxproc:00000383:  errOmitLocation(true))); 
paah: pgxproc:00000385:  ereport(ERROR, 
paah: pgxproc:00000386:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paah: pgxproc:00000387:  errmsg("function \"%s\" is not an aggregate", 
paah: pgxproc:00000388:  procedureName), 
paah: pgxproc:00000389:  errOmitLocation(true))); 
paah: pgxproc:00000394:  ereport(ERROR, 
paah: pgxproc:00000395:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paah: pgxproc:00000396:  errmsg("function \"%s\" is a window function", 
paah: pgxproc:00000397:  procedureName), 
paah: pgxproc:00000398:  errOmitLocation(true))); 
paah: pgxproc:00000400:  ereport(ERROR, 
paah: pgxproc:00000401:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paah: pgxproc:00000402:  errmsg("function \"%s\" is not a window function", 
paah: pgxproc:00000403:  procedureName), 
paah: pgxproc:00000404:  errOmitLocation(true))); 
paah: pgxproc:00000540:  elog(ERROR, "cache lookup failed for function %u", funcoid); 
paah: pgxproc:00000543:  elog(ERROR, "null prosrc"); 
paah: pgxproc:00000546:  ereport(ERROR, 
paah: pgxproc:00000547:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paah: pgxproc:00000548:  errmsg("there is no built-in function named \"%s\"", 
paah: pgxproc:00000549:  prosrc), 
paah: pgxproc:00000550:  errOmitLocation(true))); 
paah: pgxproc:00000591:  elog(ERROR, "cache lookup failed for function %u", funcoid); 
paah: pgxproc:00000595:  elog(ERROR, "null prosrc"); 
paah: pgxproc:00000600:  elog(ERROR, "null probin"); 
paah: pgxproc:00000641:  elog(ERROR, "cache lookup failed for function %u", funcoid); 
paah: pgxproc:00000651:  ereport(ERROR, 
paah: pgxproc:00000652:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
paah: pgxproc:00000653:  errmsg("SQL functions cannot return type %s", 
paah: pgxproc:00000654:  format_type_be(proc->prorettype)))); 
paah: pgxproc:00000667:  ereport(ERROR, 
paah: pgxproc:00000668:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
paah: pgxproc:00000669:  errmsg("SQL functions cannot have arguments of type %s", 
paah: pgxproc:00000670:  format_type_be(proc->proargtypes.values[i])))); 
paah: pgxproc:00000679:  elog(ERROR, "null prosrc"); 
paah: pgxproc:00000734:  elog(ERROR, "null prosrc"); 
aaaaa GP_IGNORE: pabb: pgxshdepend - ./backend/catalog/pg_shdepend.c
pabb: pgxshdepend:00000203:  elog(ERROR, 
pabb: pgxshdepend:00000204:  "multiple pg_shdepend entries for object %u/%u deptype %c", 
pabb: pgxshdepend:00000205:  classid, objid, deptype); 
pabb: pgxshdepend:00000398:  elog(WARNING, "invalid element %u in shorter list", list2[j]); 
pabb: pgxshdepend:00000560:  ereport(ERROR, 
pabb: pgxshdepend:00000561:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
pabb: pgxshdepend:00000562:  errmsg("cannot drop %s because it is required by the database system", 
pabb: pgxshdepend:00000563:  getObjectDescription(&object)))); 
pabb: pgxshdepend:00000930:  ereport(ERROR, 
pabb: pgxshdepend:00000931:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabb: pgxshdepend:00000932:  errmsg("role %u was concurrently dropped", 
pabb: pgxshdepend:00000933:  objectId))); 
pabb: pgxshdepend:00000950:  ereport(ERROR, 
pabb: pgxshdepend:00000951:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabb: pgxshdepend:00000952:  errmsg("tablespace %u was concurrently dropped", 
pabb: pgxshdepend:00000953:  objectId))); 
pabb: pgxshdepend:00000960:  elog(ERROR, "unrecognized shared classId: %u", classId); 
pabb: pgxshdepend:00001000:  elog(ERROR, "unrecognized dependency type: %d", 
pabb: pgxshdepend:00001001:  (int) deptype); 
pabb: pgxshdepend:00001010:  elog(ERROR, "unrecognized object type: %d", type); 
pabb: pgxshdepend:00001100:  ereport(ERROR, 
pabb: pgxshdepend:00001101:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
pabb: pgxshdepend:00001102:  errmsg("cannot drop objects owned by %s because they are " 
pabb: pgxshdepend:00001103:  "required by the database system", 
pabb: pgxshdepend:00001104:  getObjectDescription(&obj)))); 
pabb: pgxshdepend:00001132:  elog(ERROR, "unexpected dependency type"); 
pabb: pgxshdepend:00001157:  elog(ERROR, "unexpected object type %d", 
pabb: pgxshdepend:00001158:  sdepForm->classid); 
pabb: pgxshdepend:00001225:  ereport(ERROR, 
pabb: pgxshdepend:00001226:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
pabb: pgxshdepend:00001227:  errmsg("cannot drop objects owned by %s because they are " 
pabb: pgxshdepend:00001228:  "required by the database system", 
pabb: pgxshdepend:00001229:  getObjectDescription(&obj)))); 
pabb: pgxshdepend:00001255:  elog(ERROR, "unexpected shared pin"); 
pabb: pgxshdepend:00001295:  elog(ERROR, "unexpected classid %d", sdepForm->classid); 
aaaaa GP_IGNORE: paah: pgxtype - ./backend/catalog/pg_type.c
paah: pgxtype:00000250:  ereport(ERROR, 
paah: pgxtype:00000251:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
paah: pgxtype:00000252:  errmsg("invalid type internal size %d", 
paah: pgxtype:00000253:  internalSize))); 
paah: pgxtype:00000256:  ereport(ERROR, 
paah: pgxtype:00000257:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
paah: pgxtype:00000258:  errmsg("internal size %d is invalid for passed-by-value type", 
paah: pgxtype:00000259:  internalSize))); 
paah: pgxtype:00000263:  ereport(ERROR, 
paah: pgxtype:00000264:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
paah: pgxtype:00000265:  errmsg("fixed-size types must have storage PLAIN"))); 
paah: pgxtype:00000349:  ereport(ERROR, 
paah: pgxtype:00000350:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
paah: pgxtype:00000351:  errmsg("type \"%s\" already exists", typeName))); 
paah: pgxtype:00000383:  else if (Gp_role == GP_ROLE_EXECUTE) elog(ERROR," newtypeOid NULL"); 
paah: pgxtype:00000637:  ereport(ERROR, 
paah: pgxtype:00000638:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paah: pgxtype:00000639:  errmsg("type with OID \"%d\" does not exist", typeOid))); 
paah: pgxtype:00000652:  ereport(ERROR, 
paah: pgxtype:00000653:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
paah: pgxtype:00000654:  errmsg("type \"%s\" already exists", newTypeName))); 
aaaaa GP_IGNORE: taai: toasting - ./backend/catalog/toasting.c
taai: toasting:00000113:  ereport(ERROR, 
taai: toasting:00000114:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taai: toasting:00000115:  errmsg("\"%s\" is not a table", 
taai: toasting:00000116:  relName))); 
taai: toasting:00000171:  elog(ERROR, "\"%s\" does not require a toast table", 
taai: toasting:00000172:  relName); 
taai: toasting:00000233:  ereport(ERROR, 
taai: toasting:00000234:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
taai: toasting:00000235:  errmsg("shared tables cannot be toasted after initdb"))); 
taai: toasting:00000360:  elog(ERROR, "cache lookup failed for relation %u", relOid); 
taai: toasting:00000433:  ereport(ERROR, 
taai: toasting:00000434:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
taai: toasting:00000435:  errmsg("toast table is not supported"))); 
aaaaa GP_IGNORE: cacg: cdbappendonlystorageformat - ./backend/cdb/cdbappendonlystorageformat.c
cacg: cdbappendonlystorageformat:00000217:  ereport(ERROR, 
cacg: cdbappendonlystorageformat:00000218:  (errmsg("Unexpected Append-Only header kind %d", 
cacg: cdbappendonlystorageformat:00000219:  headerKind))); 
cacg: cdbappendonlystorageformat:00001255:  ereport(ERROR, 
cacg: cdbappendonlystorageformat:00001256:  (errmsg("Problem making append-only storage header of type bulk dense content. Header check error %d, detail '%s'", 
cacg: cdbappendonlystorageformat:00001257:  (int)checkError, 
cacg: cdbappendonlystorageformat:00001258:  AppendOnlyStorageFormat_GetHeaderCheckErrorStr()))); 
cacg: cdbappendonlystorageformat:00001261:  ereport(ERROR, 
cacg: cdbappendonlystorageformat:00001262:  (errmsg("Problem making append-only storage header of type bulk dense content. Found block length %d, expected %d", 
cacg: cdbappendonlystorageformat:00001263:  checkOverallBlockLen, 
cacg: cdbappendonlystorageformat:00001264:  checkBlockLimitLen))); 
cacg: cdbappendonlystorageformat:00001266:  ereport(ERROR, 
cacg: cdbappendonlystorageformat:00001267:  (errmsg("Problem making append-only storage header of type bulk dense content. Found data offset %d, expected %d", 
cacg: cdbappendonlystorageformat:00001268:  checkOffset, 
cacg: cdbappendonlystorageformat:00001269:  checkHeaderLen))); 
cacg: cdbappendonlystorageformat:00001271:  ereport(ERROR, 
cacg: cdbappendonlystorageformat:00001272:  (errmsg("Problem making append-only storage header of type bulk dense content. Found uncompressed length %d, expected %d", 
cacg: cdbappendonlystorageformat:00001273:  checkUncompressedLen, 
cacg: cdbappendonlystorageformat:00001274:  dataLength))); 
cacg: cdbappendonlystorageformat:00001276:  ereport(ERROR, 
cacg: cdbappendonlystorageformat:00001277:  (errmsg("Problem making append-only storage header of type bulk dense content. Found executor kind %d, expected %d", 
cacg: cdbappendonlystorageformat:00001278:  checkExecutorBlockKind, 
cacg: cdbappendonlystorageformat:00001279:  executorKind))); 
cacg: cdbappendonlystorageformat:00001281:  ereport(ERROR, 
cacg: cdbappendonlystorageformat:00001282:  (errmsg("Problem making append-only storage header of type bulk dense content. Found has first row number flag %s, expected %s", 
cacg: cdbappendonlystorageformat:00001283:  (checkHasFirstRowNum ? "true" : "false"), 
cacg: cdbappendonlystorageformat:00001284:  (hasFirstRowNum ? "true" : "false")))); 
cacg: cdbappendonlystorageformat:00001288:  ereport(ERROR, 
cacg: cdbappendonlystorageformat:00001289:  (errmsg("Problem making append-only storage header of type bulk dense content. " 
cacg: cdbappendonlystorageformat:00001290:  "Found first row number " INT64_FORMAT ", expected " INT64_FORMAT, 
cacg: cdbappendonlystorageformat:00001291:  checkFirstRowNum, 
cacg: cdbappendonlystorageformat:00001292:  firstRowNum))); 
cacg: cdbappendonlystorageformat:00001295:  ereport(ERROR, 
cacg: cdbappendonlystorageformat:00001296:  (errmsg("Problem making append-only storage header of type bulk dense content. Found row count %d, expected %d", 
cacg: cdbappendonlystorageformat:00001297:  checkRowCount, 
cacg: cdbappendonlystorageformat:00001298:  rowCount))); 
cacg: cdbappendonlystorageformat:00001300:  ereport(ERROR, 
cacg: cdbappendonlystorageformat:00001301:  (errmsg("Problem making append-only storage header of type bulk dense content. Found is compressed flag %s, expected %s", 
cacg: cdbappendonlystorageformat:00001302:  (checkIsCompressed ? "true" : "false"), 
cacg: cdbappendonlystorageformat:00001303:  (isCompressed ? "true" : "false")))); 
cacg: cdbappendonlystorageformat:00001305:  ereport(ERROR, 
cacg: cdbappendonlystorageformat:00001306:  (errmsg("Problem making append-only storage header of type bulk dense content. Found data length %d, expected %d", 
cacg: cdbappendonlystorageformat:00001307:  checkCompressedLen, 
cacg: cdbappendonlystorageformat:00001308:  dataLength))); 
cacg: cdbappendonlystorageformat:00001461:  elog(ERROR, "Unexpected Append-Only header kind %d", 
cacg: cdbappendonlystorageformat:00001462:  *headerKind); 
cacg: cdbappendonlystorageformat:00001512:  elog(ERROR, "Content offset %d doesn't equal header length parameter %d", 
cacg: cdbappendonlystorageformat:00001513:  *offset, 
cacg: cdbappendonlystorageformat:00001514:  headerLen); 
cacg: cdbappendonlystorageformat:00001633:  elog(ERROR, "Content offset %d doesn't equal header length parameter %d", 
cacg: cdbappendonlystorageformat:00001634:  offset, 
cacg: cdbappendonlystorageformat:00001635:  headerLen); 
cacg: cdbappendonlystorageformat:00001680:  elog(ERROR, "Content offset %d doesn't equal header length parameter %d", 
cacg: cdbappendonlystorageformat:00001681:  *offset, 
cacg: cdbappendonlystorageformat:00001682:  headerLen); 
cacg: cdbappendonlystorageformat:00001757:  elog(ERROR, "Content offset %d doesn't equal header length parameter %d", 
cacg: cdbappendonlystorageformat:00001758:  *offset, 
cacg: cdbappendonlystorageformat:00001759:  headerLen); 
aaaaa GP_IGNORE: cace: cdbappendonlystorageread - ./backend/cdb/cdbappendonlystorageread.c
cace: cdbappendonlystorageread:00000291:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000292:  (errcode(ERRCODE_IO_ERROR), 
cace: cdbappendonlystorageread:00000293:  errmsg("Append-only Storage Read error on segment file '%s' for relation '%s'. FileSeek offset = 0. Error code = %d (%s)", 
cace: cdbappendonlystorageread:00000294:  filePathName, 
cace: cdbappendonlystorageread:00000295:  storageRead->relationName, 
cace: cdbappendonlystorageread:00000296:  (int)seekResult, 
cace: cdbappendonlystorageread:00000297:  strerror((int)seekResult)))); 
cace: cdbappendonlystorageread:00000357:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000358:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cace: cdbappendonlystorageread:00000359:  errmsg("Append-only Storage Read segment file '%s' EOF must be > 0 for relation '%s'", 
cace: cdbappendonlystorageread:00000360:  filePathName, 
cace: cdbappendonlystorageread:00000361:  storageRead->relationName))); 
cace: cdbappendonlystorageread:00000368:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000369:  (errcode_for_file_access(), 
cace: cdbappendonlystorageread:00000370:  errmsg("Append-Only Storage Read could not open segment file '%s' for relation '%s'", 
cace: cdbappendonlystorageread:00000371:  filePathName, 
cace: cdbappendonlystorageread:00000372:  storageRead->relationName))); 
cace: cdbappendonlystorageread:00000541:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000542:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cace: cdbappendonlystorageread:00000543:  errmsg("Unexpected end of file. Expected to read %d bytes after position " INT64_FORMAT " but found %d bytes (bufferCount " INT64_FORMAT ")\n", 
cace: cdbappendonlystorageread:00000544:  safeWriteRemainder, 
cace: cdbappendonlystorageread:00000545:  nextReadPosition, 
cace: cdbappendonlystorageread:00000546:  availableLen, 
cace: cdbappendonlystorageread:00000547:  storageRead->bufferCount))); 
cace: cdbappendonlystorageread:00000607:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000608:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cace: cdbappendonlystorageread:00000609:  errmsg("Expected %d bytes and got %d bytes in table %s " 
cace: cdbappendonlystorageread:00000610:  "(segment file '%s', header offset in file = " INT64_FORMAT ", bufferCount " INT64_FORMAT ")\n", 
cace: cdbappendonlystorageread:00000611:  storageRead->minimumHeaderLen, 
cace: cdbappendonlystorageread:00000612:  availableLen, 
cace: cdbappendonlystorageread:00000613:  storageRead->relationName, 
cace: cdbappendonlystorageread:00000614:  storageRead->segmentFileName, 
cace: cdbappendonlystorageread:00000615:  *headerOffsetInFile, 
cace: cdbappendonlystorageread:00000616:  storageRead->bufferCount))); 
cace: cdbappendonlystorageread:00000652:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000653:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cace: cdbappendonlystorageread:00000654:  errmsg("Expected %d bytes and found %d bytes in table %s " 
cace: cdbappendonlystorageread:00000655:  "(segment file '%s', header offset in file = " INT64_FORMAT ", bufferCount " INT64_FORMAT ")", 
cace: cdbappendonlystorageread:00000656:  storageRead->minimumHeaderLen, 
cace: cdbappendonlystorageread:00000657:  availableLen, 
cace: cdbappendonlystorageread:00000658:  storageRead->relationName, 
cace: cdbappendonlystorageread:00000659:  storageRead->segmentFileName, 
cace: cdbappendonlystorageread:00000660:  *headerOffsetInFile, 
cace: cdbappendonlystorageread:00000661:  storageRead->bufferCount))); 
cace: cdbappendonlystorageread:00000843:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000844:  (errmsg("Header checksum does not match. Expected 0x%X and found 0x%X ", 
cace: cdbappendonlystorageread:00000845:  storedChecksum, 
cace: cdbappendonlystorageread:00000846:  computedChecksum), 
cace: cdbappendonlystorageread:00000847:  errdetail_appendonly_read_storage_content_header(storageRead), 
cace: cdbappendonlystorageread:00000848:  errcontext_appendonly_read_storage_block(storageRead))); 
cace: cdbappendonlystorageread:00000860:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000861:  (errmsg("Bad append-only storage header. Header check error %d, detail '%s'", 
cace: cdbappendonlystorageread:00000862:  (int)checkError, 
cace: cdbappendonlystorageread:00000863:  AppendOnlyStorageFormat_GetHeaderCheckErrorStr()), 
cace: cdbappendonlystorageread:00000864:  errdetail_appendonly_read_storage_content_header(storageRead), 
cace: cdbappendonlystorageread:00000865:  errcontext_appendonly_read_storage_block(storageRead))); 
cace: cdbappendonlystorageread:00000880:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000881:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cace: cdbappendonlystorageread:00000882:  errmsg("Expected %d bytes and found %d bytes in table %s " 
cace: cdbappendonlystorageread:00000883:  "(segment file '%s', header offset in file = " INT64_FORMAT ", bufferCount " INT64_FORMAT ")", 
cace: cdbappendonlystorageread:00000884:  storageRead->current.actualHeaderLen, 
cace: cdbappendonlystorageread:00000885:  availableLen, 
cace: cdbappendonlystorageread:00000886:  storageRead->relationName, 
cace: cdbappendonlystorageread:00000887:  storageRead->segmentFileName, 
cace: cdbappendonlystorageread:00000888:  storageRead->current.headerOffsetInFile, 
cace: cdbappendonlystorageread:00000889:  storageRead->bufferCount))); 
cace: cdbappendonlystorageread:00000918:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000919:  (errmsg("Bad append-only storage header of type small content. Header check error %d, detail '%s'", 
cace: cdbappendonlystorageread:00000920:  (int)checkError, 
cace: cdbappendonlystorageread:00000921:  AppendOnlyStorageFormat_GetHeaderCheckErrorStr()), 
cace: cdbappendonlystorageread:00000922:  errdetail_appendonly_read_storage_content_header(storageRead), 
cace: cdbappendonlystorageread:00000923:  errcontext_appendonly_read_storage_block(storageRead))); 
cace: cdbappendonlystorageread:00000940:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000941:  (errmsg("Bad append-only storage header of type large content. Header check error %d, detail '%s'", 
cace: cdbappendonlystorageread:00000942:  (int)checkError, 
cace: cdbappendonlystorageread:00000943:  AppendOnlyStorageFormat_GetHeaderCheckErrorStr()), 
cace: cdbappendonlystorageread:00000944:  errdetail_appendonly_read_storage_content_header(storageRead), 
cace: cdbappendonlystorageread:00000945:  errcontext_appendonly_read_storage_block(storageRead))); 
cace: cdbappendonlystorageread:00000968:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000969:  (errmsg("Bad append-only storage header of type non-bulk dense content. Header check error %d, detail '%s'", 
cace: cdbappendonlystorageread:00000970:  (int)checkError, 
cace: cdbappendonlystorageread:00000971:  AppendOnlyStorageFormat_GetHeaderCheckErrorStr()), 
cace: cdbappendonlystorageread:00000972:  errdetail_appendonly_read_storage_content_header(storageRead), 
cace: cdbappendonlystorageread:00000973:  errcontext_appendonly_read_storage_block(storageRead))); 
cace: cdbappendonlystorageread:00000997:  ereport(ERROR, 
cace: cdbappendonlystorageread:00000998:  (errmsg("Bad append-only storage header of type bulk dense content. Header check error %d, detail '%s'", 
cace: cdbappendonlystorageread:00000999:  (int)checkError, 
cace: cdbappendonlystorageread:00001000:  AppendOnlyStorageFormat_GetHeaderCheckErrorStr()), 
cace: cdbappendonlystorageread:00001001:  errdetail_appendonly_read_storage_content_header(storageRead), 
cace: cdbappendonlystorageread:00001002:  errcontext_appendonly_read_storage_block(storageRead))); 
cace: cdbappendonlystorageread:00001006:  elog(ERROR, "Unexpected Append-Only header kind %d", 
cace: cdbappendonlystorageread:00001007:  storageRead->current.headerKind); 
cace: cdbappendonlystorageread:00001177:  ereport(ERROR, 
cace: cdbappendonlystorageread:00001178:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cace: cdbappendonlystorageread:00001179:  errmsg("Wrong buffer length. Expected %d byte length buffer and got %d ", 
cace: cdbappendonlystorageread:00001180:  storageRead->current.overallBlockLen, 
cace: cdbappendonlystorageread:00001181:  availableLen), 
cace: cdbappendonlystorageread:00001182:  errdetail_appendonly_read_storage_content_header(storageRead), 
cace: cdbappendonlystorageread:00001183:  errcontext_appendonly_read_storage_block(storageRead))); 
cace: cdbappendonlystorageread:00001197:  ereport(ERROR, 
cace: cdbappendonlystorageread:00001198:  (errmsg("Block checksum does not match. Expected 0x%X and found 0x%X", 
cace: cdbappendonlystorageread:00001199:  storedChecksum, 
cace: cdbappendonlystorageread:00001200:  computedChecksum), 
cace: cdbappendonlystorageread:00001201:  errdetail_appendonly_read_storage_content_header(storageRead), 
cace: cdbappendonlystorageread:00001202:  errcontext_appendonly_read_storage_block(storageRead))); 
cace: cdbappendonlystorageread:00001317:  ereport(ERROR, 
cace: cdbappendonlystorageread:00001318:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cace: cdbappendonlystorageread:00001319:  errmsg("Unexpected end of file trying to read block %d of large content in segment file '%s' of table '%s'. " 
cace: cdbappendonlystorageread:00001320:  "Large content metadata block is at position " INT64_FORMAT " " 
cace: cdbappendonlystorageread:00001321:  "Large content length %d", 
cace: cdbappendonlystorageread:00001322:  regularBlockReadCount, 
cace: cdbappendonlystorageread:00001323:  storageRead->segmentFileName, 
cace: cdbappendonlystorageread:00001324:  storageRead->relationName, 
cace: cdbappendonlystorageread:00001325:  largeContentPosition, 
cace: cdbappendonlystorageread:00001326:  largeContentLen))); 
cace: cdbappendonlystorageread:00001333:  ereport(ERROR, 
cace: cdbappendonlystorageread:00001334:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cace: cdbappendonlystorageread:00001335:  errmsg("Expected header kind 'Block' for block %d of large content in segment file '%s' of table '%s'. " 
cace: cdbappendonlystorageread:00001336:  "Large content metadata block is at position " INT64_FORMAT " " 
cace: cdbappendonlystorageread:00001337:  "Large content length %d", 
cace: cdbappendonlystorageread:00001338:  regularBlockReadCount, 
cace: cdbappendonlystorageread:00001339:  storageRead->segmentFileName, 
cace: cdbappendonlystorageread:00001340:  storageRead->relationName, 
cace: cdbappendonlystorageread:00001341:  largeContentPosition, 
cace: cdbappendonlystorageread:00001342:  largeContentLen))); 
cace: cdbappendonlystorageread:00001353:  ereport(ERROR, 
cace: cdbappendonlystorageread:00001354:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cace: cdbappendonlystorageread:00001355:  errmsg("Too much data found after reading %d blocks for large content in segment file '%s' of table '%s'. " 
cace: cdbappendonlystorageread:00001356:  "Large content metadata block is at position " INT64_FORMAT " " 
cace: cdbappendonlystorageread:00001357:  "Large content length %d; extra data length %d", 
cace: cdbappendonlystorageread:00001358:  regularBlockReadCount, 
cace: cdbappendonlystorageread:00001359:  storageRead->segmentFileName, 
cace: cdbappendonlystorageread:00001360:  storageRead->relationName, 
cace: cdbappendonlystorageread:00001361:  largeContentPosition, 
cace: cdbappendonlystorageread:00001362:  largeContentLen, 
cace: cdbappendonlystorageread:00001363:  -remainingLargeContentLen))); 
cace: cdbappendonlystorageread:00001523:  ereport(ERROR, 
cace: cdbappendonlystorageread:00001524:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cace: cdbappendonlystorageread:00001525:  errmsg("Unexpected end of file trying to read block %d of large content in segment file '%s' of table '%s'. " 
cace: cdbappendonlystorageread:00001526:  "Large content metadata block is at position " INT64_FORMAT " " 
cace: cdbappendonlystorageread:00001527:  "Large content length %d", 
cace: cdbappendonlystorageread:00001528:  regularBlockReadCount, 
cace: cdbappendonlystorageread:00001529:  storageRead->segmentFileName, 
cace: cdbappendonlystorageread:00001530:  storageRead->relationName, 
cace: cdbappendonlystorageread:00001531:  largeContentPosition, 
cace: cdbappendonlystorageread:00001532:  largeContentLen))); 
cace: cdbappendonlystorageread:00001539:  ereport(ERROR, 
cace: cdbappendonlystorageread:00001540:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cace: cdbappendonlystorageread:00001541:  errmsg("Expected header kind 'Block' for block %d of large content in segment file '%s' of table '%s'. " 
cace: cdbappendonlystorageread:00001542:  "Large content metadata block is at position " INT64_FORMAT " " 
cace: cdbappendonlystorageread:00001543:  "Large content length %d", 
cace: cdbappendonlystorageread:00001544:  regularBlockReadCount, 
cace: cdbappendonlystorageread:00001545:  storageRead->segmentFileName, 
cace: cdbappendonlystorageread:00001546:  storageRead->relationName, 
cace: cdbappendonlystorageread:00001547:  largeContentPosition, 
cace: cdbappendonlystorageread:00001548:  largeContentLen))); 
cace: cdbappendonlystorageread:00001559:  ereport(ERROR, 
cace: cdbappendonlystorageread:00001560:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cace: cdbappendonlystorageread:00001561:  errmsg("Too much data found after reading %d blocks for large content in segment file '%s' of table '%s'. " 
cace: cdbappendonlystorageread:00001562:  "Large content metadata block is at position " INT64_FORMAT " " 
cace: cdbappendonlystorageread:00001563:  "Large content length %d; extra data length %d", 
cace: cdbappendonlystorageread:00001564:  regularBlockReadCount, 
cace: cdbappendonlystorageread:00001565:  storageRead->segmentFileName, 
cace: cdbappendonlystorageread:00001566:  storageRead->relationName, 
cace: cdbappendonlystorageread:00001567:  largeContentPosition, 
cace: cdbappendonlystorageread:00001568:  largeContentLen, 
cace: cdbappendonlystorageread:00001569:  -remainingLargeContentLen))); 
aaaaa GP_IGNORE: cacf: cdbappendonlystoragewrite - ./backend/cdb/cdbappendonlystoragewrite.c
cacf: cdbappendonlystoragewrite:00000393:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00000394:  (errcode_for_file_access(), 
cacf: cdbappendonlystoragewrite:00000395:  errmsg("Append-only Storage Write could not open segment file '%s' for relation '%s': %s", 
cacf: cdbappendonlystoragewrite:00000396:  filePathName, 
cacf: cdbappendonlystoragewrite:00000397:  storageWrite->relationName, 
cacf: cdbappendonlystoragewrite:00000398:  strerror(primaryError)))); 
cacf: cdbappendonlystoragewrite:00000414:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00000415:  (errcode(ERRCODE_IO_ERROR), 
cacf: cdbappendonlystoragewrite:00000416:  errmsg("Append-only Storage Write error on segment file '%s' for relation '%s'. FileSeek offset = " 
cacf: cdbappendonlystoragewrite:00000417:  INT64_FORMAT ". Error code = %d (%s)", 
cacf: cdbappendonlystoragewrite:00000418:  filePathName, storageWrite->relationName, 
cacf: cdbappendonlystoragewrite:00000419:  logicalEof, (int)seekResult, 
cacf: cdbappendonlystoragewrite:00000420:  strerror((int)seekResult)))); 
cacf: cdbappendonlystoragewrite:00000508:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00000509:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cacf: cdbappendonlystoragewrite:00000510:  errmsg("We do not expect files to be have a maximum length"))); 
cacf: cdbappendonlystoragewrite:00000586:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00000587:  (errcode_for_file_access(), 
cacf: cdbappendonlystoragewrite:00000588:  errmsg("Could not flush (fsync) Append-Only segment file '%s' to disk for relation '%s': %s", 
cacf: cdbappendonlystoragewrite:00000589:  storageWrite->segmentFileName, 
cacf: cdbappendonlystoragewrite:00000590:  storageWrite->relationName, 
cacf: cdbappendonlystoragewrite:00000591:  strerror(primaryError)))); 
cacf: cdbappendonlystoragewrite:00000968:  elog(WARNING, "The GUC gp_appendonly_verify_write_block is false. Compressed write not checked."); 
cacf: cdbappendonlystoragewrite:00000989:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00000990:  (errmsg("Verify block during write found header checksum does not match. Expected 0x%X and found 0x%X", 
cacf: cdbappendonlystoragewrite:00000991:  storedChecksum, 
cacf: cdbappendonlystoragewrite:00000992:  computedChecksum), 
cacf: cdbappendonlystoragewrite:00000993:  errdetail_appendonly_write_storage_block_header(storageWrite), 
cacf: cdbappendonlystoragewrite:00000994:  errcontext_appendonly_write_storage_block(storageWrite))); 
cacf: cdbappendonlystoragewrite:00001006:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00001007:  (errmsg("Verify block during write found bad append-only storage header. Header check error %d, detail '%s'", 
cacf: cdbappendonlystoragewrite:00001008:  (int)checkError, 
cacf: cdbappendonlystoragewrite:00001009:  AppendOnlyStorageFormat_GetHeaderCheckErrorStr()), 
cacf: cdbappendonlystoragewrite:00001010:  errdetail_appendonly_write_storage_block_header(storageWrite), 
cacf: cdbappendonlystoragewrite:00001011:  errcontext_appendonly_write_storage_block(storageWrite))); 
cacf: cdbappendonlystoragewrite:00001036:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00001037:  (errmsg("Verify block during write found bad append-only storage block header. " 
cacf: cdbappendonlystoragewrite:00001038:  "Header check error %d, detail '%s'", 
cacf: cdbappendonlystoragewrite:00001039:  (int)checkError, 
cacf: cdbappendonlystoragewrite:00001040:  AppendOnlyStorageFormat_GetHeaderCheckErrorStr()), 
cacf: cdbappendonlystoragewrite:00001041:  errdetail_appendonly_write_storage_block_header(storageWrite), 
cacf: cdbappendonlystoragewrite:00001042:  errcontext_appendonly_write_storage_block(storageWrite))); 
cacf: cdbappendonlystoragewrite:00001045:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00001046:  (errmsg("Verify block during write found append-only storage block header. " 
cacf: cdbappendonlystoragewrite:00001047:  "DataLen %d does not equal expected length %d, ", 
cacf: cdbappendonlystoragewrite:00001048:  uncompressedLen, 
cacf: cdbappendonlystoragewrite:00001049:  expectedUncompressedLen), 
cacf: cdbappendonlystoragewrite:00001050:  errdetail_appendonly_write_storage_block_header(storageWrite), 
cacf: cdbappendonlystoragewrite:00001051:  errcontext_appendonly_write_storage_block(storageWrite))); 
cacf: cdbappendonlystoragewrite:00001055:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00001056:  (errmsg("Verify block during write found append-only storage block header. " 
cacf: cdbappendonlystoragewrite:00001057:  "CompressedLen %d does not equal expected length %d", 
cacf: cdbappendonlystoragewrite:00001058:  compressedLen, 
cacf: cdbappendonlystoragewrite:00001059:  expectedCompressedLen), 
cacf: cdbappendonlystoragewrite:00001060:  errdetail_appendonly_write_storage_block_header(storageWrite), 
cacf: cdbappendonlystoragewrite:00001061:  errcontext_appendonly_write_storage_block(storageWrite))); 
cacf: cdbappendonlystoragewrite:00001068:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00001069:  (errmsg("Verify block during write found append-only storage block header. " 
cacf: cdbappendonlystoragewrite:00001070:  "ExecutorBlockKind %d does not equal expected value %d.", 
cacf: cdbappendonlystoragewrite:00001071:  executorBlockKind, 
cacf: cdbappendonlystoragewrite:00001072:  expectedExecutorBlockKind), 
cacf: cdbappendonlystoragewrite:00001073:  errdetail_appendonly_write_storage_block_header(storageWrite), 
cacf: cdbappendonlystoragewrite:00001074:  errcontext_appendonly_write_storage_block(storageWrite))); 
cacf: cdbappendonlystoragewrite:00001079:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00001080:  (errmsg("Verify block during write found append-only storage block header. " 
cacf: cdbappendonlystoragewrite:00001081:  "RowCount %d does not equal expected value %d", 
cacf: cdbappendonlystoragewrite:00001082:  rowCount, 
cacf: cdbappendonlystoragewrite:00001083:  expectedRowCount), 
cacf: cdbappendonlystoragewrite:00001084:  errdetail_appendonly_write_storage_block_header(storageWrite), 
cacf: cdbappendonlystoragewrite:00001085:  errcontext_appendonly_write_storage_block(storageWrite))); 
cacf: cdbappendonlystoragewrite:00001126:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00001127:  (errmsg("Verify block during write found decompress did not produce the exact same bits passed to compress! " 
cacf: cdbappendonlystoragewrite:00001128:  "Memcmp result %d", 
cacf: cdbappendonlystoragewrite:00001129:  test), 
cacf: cdbappendonlystoragewrite:00001130:  errdetail_appendonly_write_storage_block_header(storageWrite), 
cacf: cdbappendonlystoragewrite:00001131:  errcontext_appendonly_write_storage_block(storageWrite))); 
cacf: cdbappendonlystoragewrite:00001156:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00001157:  (errmsg("Bad append-only storage header of type LargeContent. Header check error %d, detail '%s'", 
cacf: cdbappendonlystoragewrite:00001158:  (int)checkError, 
cacf: cdbappendonlystoragewrite:00001159:  AppendOnlyStorageFormat_GetHeaderCheckErrorStr()), 
cacf: cdbappendonlystoragewrite:00001160:  errdetail_appendonly_write_storage_block_header(storageWrite), 
cacf: cdbappendonlystoragewrite:00001161:  errcontext_appendonly_write_storage_block(storageWrite))); 
cacf: cdbappendonlystoragewrite:00001170:  elog(ERROR, "Unexpected Append-Only header kind %d", 
cacf: cdbappendonlystoragewrite:00001171:  headerKind); 
cacf: cdbappendonlystoragewrite:00001184:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00001185:  (errmsg("Verify block during write found VarBlock is not valid " 
cacf: cdbappendonlystoragewrite:00001186:  "Valid block check error %d, detail '%s'", 
cacf: cdbappendonlystoragewrite:00001187:  varBlockCheckError, 
cacf: cdbappendonlystoragewrite:00001188:  VarBlockGetCheckErrorStr()), 
cacf: cdbappendonlystoragewrite:00001189:  errdetail_appendonly_write_storage_block_header(storageWrite), 
cacf: cdbappendonlystoragewrite:00001190:  errcontext_appendonly_write_storage_block(storageWrite))); 
cacf: cdbappendonlystoragewrite:00001203:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00001204:  (errmsg("Verify block during write found row count %d in append-only storage header does not match VarBlock item count %d", 
cacf: cdbappendonlystoragewrite:00001205:  rowCount, 
cacf: cdbappendonlystoragewrite:00001206:  readerItemCount), 
cacf: cdbappendonlystoragewrite:00001207:  errdetail_appendonly_write_storage_block_header(storageWrite), 
cacf: cdbappendonlystoragewrite:00001208:  errcontext_appendonly_write_storage_block(storageWrite))); 
cacf: cdbappendonlystoragewrite:00001245:  ereport(ERROR, 
cacf: cdbappendonlystoragewrite:00001246:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
cacf: cdbappendonlystoragewrite:00001247:  errmsg("We do not expect files to be have a maximum length"), 
cacf: cdbappendonlystoragewrite:00001248:  errcontext_appendonly_write_storage_block(storageWrite))); 
cacf: cdbappendonlystoragewrite:00001327:  elog(ERROR, "Unexpected Append-Only header kind %d", 
cacf: cdbappendonlystoragewrite:00001328:  storageWrite->getBufferAoHeaderKind); 
cacf: cdbappendonlystoragewrite:00001451:  elog(ERROR, 
cacf: cdbappendonlystoragewrite:00001452:  "Append-only content too large AO storage block (table '%s', " 
cacf: cdbappendonlystoragewrite:00001453:  "content length = %d, maximum buffer length %d, complete header length %d, first row number is set %s)", 
cacf: cdbappendonlystoragewrite:00001454:  storageWrite->relationName, 
cacf: cdbappendonlystoragewrite:00001455:  contentLen, 
cacf: cdbappendonlystoragewrite:00001456:  storageWrite->maxBufferLen, 
cacf: cdbappendonlystoragewrite:00001457:  storageWrite->currentCompleteHeaderLen, 
cacf: cdbappendonlystoragewrite:00001458:  (storageWrite->isFirstRowNumSet ? "true" : "false")); 
cacf: cdbappendonlystoragewrite:00001515:  elog(ERROR, "Unexpected Append-Only header kind %d", 
cacf: cdbappendonlystoragewrite:00001516:  storageWrite->getBufferAoHeaderKind); 
aaaaa GP_IGNORE: caaj: cdbbackup - ./backend/cdb/cdbbackup.c
caaj: cdbbackup:00000183:  ereport(ERROR, 
caaj: cdbbackup:00000184:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00000185:  errmsg("%s not found in PGPATH or PATH (PGPATH: %s *PIPE* PATH: %s)", 
caaj: cdbbackup:00000187:  errhint("Restart the server and try again"))); 
caaj: cdbbackup:00000266:  ereport(ERROR, 
caaj: cdbbackup:00000267:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00000268:  errmsg("out of memory"))); 
caaj: cdbbackup:00000281:  ereport(ERROR, 
caaj: cdbbackup:00000282:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00000283:  errmsg("throttlingD.py not found in GPHOME\\bin (GPHOME: %s)", gp_home))); 
caaj: cdbbackup:00000300:  ereport(ERROR, 
caaj: cdbbackup:00000301:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00000302:  errmsg("out of memory"))); 
caaj: cdbbackup:00000336:  ereport(ERROR, 
caaj: cdbbackup:00000337:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00000338:  errmsg("out of memory"))); 
caaj: cdbbackup:00000413:  ereport(ERROR, 
caaj: cdbbackup:00000414:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00000415:  errmsg("out of memory"))); 
caaj: cdbbackup:00000488:  ereport(ERROR, 
caaj: cdbbackup:00000489:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00000490:  errmsg("Could not fork a process for backup of database %s", pszDBName))); 
caaj: cdbbackup:00000498:  ereport(ERROR, 
caaj: cdbbackup:00000499:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00000500:  errmsg("Error in gp_backup_launch - execl of %s with Command Line %s failed", 
caaj: cdbbackup:00000501:  "/bin/sh", pszCmdLine))); 
caaj: cdbbackup:00000546:  ereport(ERROR, 
caaj: cdbbackup:00000547:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00000548:  errmsg("out of memory"))); 
caaj: cdbbackup:00000627:  ereport(ERROR, 
caaj: cdbbackup:00000628:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00000629:  errmsg("Could not fork a process for backup of database %s", pszDBName))); 
caaj: cdbbackup:00000637:  ereport(ERROR, 
caaj: cdbbackup:00000638:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00000639:  errmsg("Error in gp_backup_launch - execl of %s with Command Line %s failed", 
caaj: cdbbackup:00000640:  "/bin/sh", pszCmdLine))); 
caaj: cdbbackup:00000700:  elog(ERROR, "Out of memory\n"); 
caaj: cdbbackup:00000772:  ereport(ERROR, 
caaj: cdbbackup:00000773:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00000774:  errmsg("out of memory"))); 
caaj: cdbbackup:00000783:  ereport(ERROR, 
caaj: cdbbackup:00000784:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00000785:  errmsg("Creating backup directory %s failed with error %d", pszBackupDirectory, err))); 
caaj: cdbbackup:00000798:  ereport(ERROR, 
caaj: cdbbackup:00000799:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caaj: cdbbackup:00000800:  errmsg("Attempt to restore dbid %d failed. No acceptable dump file name found " 
caaj: cdbbackup:00000801:  " in directory %s with backup key %s and source dbid key %d", target_dbid, 
caaj: cdbbackup:00000802:  pszBackupDirectory, pszBackupKey, segid))); 
caaj: cdbbackup:00000815:  ereport(ERROR, 
caaj: cdbbackup:00000816:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00000817:  errmsg("dump file appears to be compressed. Pass a decompression " 
caaj: cdbbackup:00000818:  "option to gp_restore to decompress it on the fly"))); 
caaj: cdbbackup:00000821:  ereport(ERROR, 
caaj: cdbbackup:00000822:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00000823:  errmsg("a decompression cmd line option is used but the dump " 
caaj: cdbbackup:00000824:  "file does not appear to be compressed."))); 
caaj: cdbbackup:00000856:  ereport(ERROR, 
caaj: cdbbackup:00000857:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00000858:  errmsg("Could not fork a process for backup of database %s", pszDBName))); 
caaj: cdbbackup:00000871:  ereport(ERROR, 
caaj: cdbbackup:00000872:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00000873:  errmsg("out of memory"))); 
caaj: cdbbackup:00000882:  ereport(ERROR, 
caaj: cdbbackup:00000883:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00000884:  errmsg("out of memory"))); 
caaj: cdbbackup:00000934:  ereport(ERROR, 
caaj: cdbbackup:00000935:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00000936:  errmsg("out of memory"))); 
caaj: cdbbackup:00000973:  ereport(ERROR, 
caaj: cdbbackup:00000974:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00000975:  errmsg("out of memory"))); 
caaj: cdbbackup:00001009:  ereport(ERROR, 
caaj: cdbbackup:00001010:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00001011:  errmsg("Error in gp_restore_launch - execl of %s with Command Line %s failed", 
caaj: cdbbackup:00001012:  "/bin/sh", pszCmdLine))); 
caaj: cdbbackup:00001072:  ereport(ERROR, 
caaj: cdbbackup:00001073:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00001074:  errmsg("Only status files are currently supported in gp_read_backup_file"))); 
caaj: cdbbackup:00001081:  ereport(ERROR, 
caaj: cdbbackup:00001082:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00001083:  errmsg("Invalid filetype %d passed to gp_read_backup_file", fileType))); 
caaj: cdbbackup:00001090:  ereport(ERROR, 
caaj: cdbbackup:00001091:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00001092:  errmsg("Backup File %s Type %d could not be be found", pszFileName, fileType))); 
caaj: cdbbackup:00001098:  ereport(ERROR, 
caaj: cdbbackup:00001099:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00001100:  errmsg("Backup File %s Type %d too large to read", pszFileName, fileType))); 
caaj: cdbbackup:00001107:  ereport(ERROR, 
caaj: cdbbackup:00001108:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00001109:  errmsg("out of memory"))); 
caaj: cdbbackup:00001115:  ereport(ERROR, 
caaj: cdbbackup:00001116:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00001117:  errmsg("Backup File %s Type %d cannot be opened", pszFileName, fileType))); 
caaj: cdbbackup:00001123:  ereport(ERROR, 
caaj: cdbbackup:00001124:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00001125:  errmsg("Error reading Backup File %s Type %d", pszFileName, fileType))); 
caaj: cdbbackup:00001198:  ereport(ERROR, 
caaj: cdbbackup:00001199:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00001200:  errmsg("Backup File %s cannot be opened", pszFileName))); 
caaj: cdbbackup:00001207:  ereport(ERROR, 
caaj: cdbbackup:00001208:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00001209:  errmsg("Error writing Backup File %s", pszFileName))); 
caaj: cdbbackup:00001363:  ereport(ERROR, 
caaj: cdbbackup:00001364:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00001365:  errmsg("out of memory"))); 
caaj: cdbbackup:00001377:  ereport(ERROR, 
caaj: cdbbackup:00001378:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00001379:  errmsg("Could not compile regular expression for backup filename matching"))); 
caaj: cdbbackup:00001387:  ereport(ERROR, 
caaj: cdbbackup:00001388:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caaj: cdbbackup:00001389:  errmsg("Backup Directory %s does not exist.", pszBackupDirectory))); 
caaj: cdbbackup:00001394:  ereport(ERROR, 
caaj: cdbbackup:00001395:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caaj: cdbbackup:00001396:  errmsg("Backup Location %s is not a directory.", pszBackupDirectory))); 
caaj: cdbbackup:00001402:  ereport(ERROR, 
caaj: cdbbackup:00001403:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caaj: cdbbackup:00001404:  errmsg("Backup Directory %s cannot be opened for enumerating files.", pszBackupDirectory))); 
caaj: cdbbackup:00001484:  ereport(ERROR, 
caaj: cdbbackup:00001485:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caaj: cdbbackup:00001486:  errmsg("Backup FileName based on path %s and key %s too long", pszBackupDirectory, pszBackupKey))); 
caaj: cdbbackup:00001492:  ereport(ERROR, 
caaj: cdbbackup:00001493:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00001494:  errmsg("out of memory"))); 
caaj: cdbbackup:00001548:  ereport(ERROR, 
caaj: cdbbackup:00001549:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caaj: cdbbackup:00001550:  errmsg("Status FileName based on path %s and key %s too long", pszBackupDirectory, pszBackupKey))); 
caaj: cdbbackup:00001556:  ereport(ERROR, 
caaj: cdbbackup:00001557:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00001558:  errmsg("out of memory"))); 
caaj: cdbbackup:00001593:  ereport(ERROR, 
caaj: cdbbackup:00001594:  (errcode(ERRCODE_OUT_OF_MEMORY), errmsg("out of memory"))); 
caaj: cdbbackup:00001610:  ereport(ERROR, 
caaj: cdbbackup:00001611:  (errcode(ERRCODE_OUT_OF_MEMORY), errmsg("out of memory"))); 
caaj: cdbbackup:00001639:  ereport(ERROR, 
caaj: cdbbackup:00001640:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00001641:  errmsg("out of memory"))); 
caaj: cdbbackup:00001662:  ereport(ERROR, 
caaj: cdbbackup:00001663:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00001664:  errmsg("%s not found in PGPATH or PATH (PGPATH: %s *PIPE* PATH: %s)", 
caaj: cdbbackup:00001665:  pszBackupProgram, getenv("PGPATH"), getenv("PATH")), 
caaj: cdbbackup:00001666:  errhint("Restart the server and try again"))); 
caaj: cdbbackup:00001674:  ereport(ERROR, 
caaj: cdbbackup:00001675:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caaj: cdbbackup:00001676:  errmsg("%s (compression utility) not found in in PGPATH or " 
caaj: cdbbackup:00001677:  "PATH (PGPATH: %s *PIPE* PATH: %s)", 
caaj: cdbbackup:00001678:  pszCompressionProgram, getenv("PGPATH"), getenv("PATH")))); 
caaj: cdbbackup:00001712:  ereport(ERROR, 
caaj: cdbbackup:00001713:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00001714:  errmsg("out of memory"))); 
caaj: cdbbackup:00001736:  ereport(ERROR, 
caaj: cdbbackup:00001737:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00001738:  errmsg("out of memory"))); 
caaj: cdbbackup:00001751:  ereport(ERROR, 
caaj: cdbbackup:00001752:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00001753:  errmsg("out of memory"))); 
caaj: cdbbackup:00001777:  ereport(ERROR, 
caaj: cdbbackup:00001778:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00001779:  errmsg("out of memory"))); 
caaj: cdbbackup:00001796:  ereport(ERROR, 
caaj: cdbbackup:00001797:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00001798:  errmsg("out of memory"))); 
caaj: cdbbackup:00001838:  ereport(ERROR, 
caaj: cdbbackup:00001839:  (errcode_for_file_access(), 
caaj: cdbbackup:00001840:  errmsg("could not create backup directory \"%s\": %m", 
caaj: cdbbackup:00001841:  pszBackupDirectory))); 
caaj: cdbbackup:00001852:  ereport(ERROR, 
caaj: cdbbackup:00001853:  (errcode_for_file_access(), 
caaj: cdbbackup:00001854:  errmsg("BackupDirectory %s exists but is not a directory.", pszBackupDirectory))); 
caaj: cdbbackup:00001951:  ereport(ERROR, 
caaj: cdbbackup:00001952:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caaj: cdbbackup:00001953:  errmsg("Backup FileName based on key %s too long", pszBackupKey))); 
caaj: cdbbackup:00001959:  ereport(ERROR, 
caaj: cdbbackup:00001960:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbbackup:00001961:  errmsg("out of memory"))); 
aaaaa GP_IGNORE: cabh: cdbbufferedappend - ./backend/cdb/cdbbufferedappend.c
cabh: cdbbufferedappend:00000151:  ereport(ERROR, (errcode_for_file_access(), 
cabh: cdbbufferedappend:00000152:  errmsg("unable to get current position in table \"%s\" for file \"%s\" (errcode %d)", 
cabh: cdbbufferedappend:00000153:  bufferedAppend->relationName, 
cabh: cdbbufferedappend:00000154:  bufferedAppend->filePathName, 
cabh: cdbbufferedappend:00000155:  errno))); 
cabh: cdbbufferedappend:00000158:  ereport(ERROR, (errcode_for_file_access(), 
cabh: cdbbufferedappend:00000159:  errmsg("Current position mismatch actual " 
cabh: cdbbufferedappend:00000160:  INT64_FORMAT ", expected " INT64_FORMAT " in table \"%s\" for file \"%s\"", 
cabh: cdbbufferedappend:00000161:  currentWritePosition, bufferedAppend->largeWritePosition, 
cabh: cdbbufferedappend:00000162:  bufferedAppend->relationName, 
cabh: cdbbufferedappend:00000163:  bufferedAppend->filePathName))); 
cabh: cdbbufferedappend:00000179:  ereport(ERROR, 
cabh: cdbbufferedappend:00000180:  (errcode_for_file_access(), 
cabh: cdbbufferedappend:00000181:  errmsg("Could not write in table \"%s\" to segment file '%s': %m", 
cabh: cdbbufferedappend:00000182:  bufferedAppend->relationName, 
cabh: cdbbufferedappend:00000183:  bufferedAppend->filePathName))); 
cabh: cdbbufferedappend:00000249:  elog(ERROR, 
cabh: cdbbufferedappend:00000250:  "bufferLen %d greater than maxBufferLen %d at position " INT64_FORMAT " in table \"%s\" in file \"%s\"", 
cabh: cdbbufferedappend:00000251:  bufferLen, bufferedAppend->maxBufferLen, bufferedAppend->largeWritePosition, 
cabh: cdbbufferedappend:00000252:  bufferedAppend->relationName, 
cabh: cdbbufferedappend:00000253:  bufferedAppend->filePathName); 
cabh: cdbbufferedappend:00000320:  elog(ERROR, 
cabh: cdbbufferedappend:00000321:  "Used length %d greater than bufferLen %d at position " INT64_FORMAT " in table \"%s\" in file \"%s\"", 
cabh: cdbbufferedappend:00000322:  usedLen, bufferedAppend->bufferLen, bufferedAppend->largeWritePosition, 
cabh: cdbbufferedappend:00000323:  bufferedAppend->relationName, 
cabh: cdbbufferedappend:00000324:  bufferedAppend->filePathName); 
aaaaa GP_IGNORE: cabf: cdbbufferedread - ./backend/cdb/cdbbufferedread.c
cabf: cdbbufferedread:00000169:  ereport(ERROR, (errcode_for_file_access(), 
cabf: cdbbufferedread:00000170:  errmsg("unable to get current position for table \"%s\" in file \"%s\" (errcode %d)", 
cabf: cdbbufferedread:00000171:  bufferedRead->relationName, 
cabf: cdbbufferedread:00000172:  bufferedRead->filePathName, 
cabf: cdbbufferedread:00000173:  errno))); 
cabf: cdbbufferedread:00000177:  ereport(ERROR, (errcode_for_file_access(), 
cabf: cdbbufferedread:00000178:  errmsg("Current position mismatch actual " 
cabf: cdbbufferedread:00000179:  INT64_FORMAT ", expected " INT64_FORMAT " for table \"%s\" in file \"%s\"", 
cabf: cdbbufferedread:00000180:  currentReadPosition, bufferedRead->largeReadPosition, 
cabf: cdbbufferedread:00000181:  bufferedRead->relationName, 
cabf: cdbbufferedread:00000182:  bufferedRead->filePathName))); 
cabf: cdbbufferedread:00000196:  ereport(ERROR, (errcode_for_file_access(), 
cabf: cdbbufferedread:00000197:  errmsg("read beyond eof in table \"%s\" in file \"%s\"", 
cabf: cdbbufferedread:00000198:  bufferedRead->relationName, 
cabf: cdbbufferedread:00000199:  bufferedRead->filePathName))); 
cabf: cdbbufferedread:00000201:  ereport(ERROR, (errcode_for_file_access(), 
cabf: cdbbufferedread:00000202:  errmsg("unable to read table \"%s\" file \"%s\" (errcode %d)", 
cabf: cdbbufferedread:00000203:  bufferedRead->relationName, 
cabf: cdbbufferedread:00000204:  bufferedRead->filePathName, 
cabf: cdbbufferedread:00000205:  errno))); 
cabf: cdbbufferedread:00000296:  ereport(ERROR, (errcode(ERRCODE_INTERNAL_ERROR), 
cabf: cdbbufferedread:00000297:  errmsg("Unexpected internal error," 
cabf: cdbbufferedread:00000298:  " largeReadLen is set to 0 before calling BufferedReadIo." 
cabf: cdbbufferedread:00000299:  " remainingFileLen is " INT64_FORMAT 
cabf: cdbbufferedread:00000300:  " inEffectFileLen is " INT64_FORMAT 
cabf: cdbbufferedread:00000301:  " nextPosition is " INT64_FORMAT, 
cabf: cdbbufferedread:00000302:  remainingFileLen, inEffectFileLen, nextPosition))); 
cabf: cdbbufferedread:00000408:  ereport(ERROR, (errcode_for_file_access(), 
cabf: cdbbufferedread:00000409:  errmsg("unable to seek to position for table \"%s\" in file \"%s\" (errcode %d):%m", 
cabf: cdbbufferedread:00000410:  bufferedRead->relationName, 
cabf: cdbbufferedread:00000411:  bufferedRead->filePathName, 
cabf: cdbbufferedread:00000412:  errno))); 
cabf: cdbbufferedread:00000474:  elog(ERROR, "Read ahead length %d is greater than maximum buffer length %d", 
cabf: cdbbufferedread:00000475:  maxReadAheadLen, bufferedRead->maxBufferLen); 
aaaaa GP_IGNORE: caag: cdbcat - ./backend/cdb/cdbcat.c
caag: cdbcat:00000389:  ereport(ERROR, 
caag: cdbcat:00000390:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caag: cdbcat:00000391:  errmsg("distribution policy for relation \"%d\" does not exist", 
caag: cdbcat:00000392:  tbloid))); 
caag: cdbcat:00000433:  ereport(ERROR, 
caag: cdbcat:00000434:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caag: cdbcat:00000435:  errmsg("%s and DISTRIBUTED RANDOMLY are incompatible", 
caag: cdbcat:00000436:  isprimary ? "PRIMARY KEY" : "UNIQUE"), 
caag: cdbcat:00000437:  errOmitLocation(true))); 
caag: cdbcat:00000449:  ereport(ERROR, 
caag: cdbcat:00000450:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caag: cdbcat:00000451:  errmsg("cannot create %s on system column", 
caag: cdbcat:00000452:  isprimary ? "primary key" : "unique index"))); 
caag: cdbcat:00000475:  ereport(ERROR, 
caag: cdbcat:00000476:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caag: cdbcat:00000477:  errmsg("%s must contain all columns in the " 
caag: cdbcat:00000478:  "distribution key of relation \"%s\"", 
caag: cdbcat:00000479:  isprimary ? "PRIMARY KEY" : "UNIQUE index", 
caag: cdbcat:00000480:  RelationGetRelationName(rel)), 
caag: cdbcat:00000481:  errOmitLocation(true))); 
caag: cdbcat:00000496:  elog(NOTICE, "updating distribution policy to match new primary key"); 
caag: cdbcat:00000498:  elog(NOTICE, "updating distribution policy to match new unique index"); 
aaaaa GP_IGNORE: caba: cdbcellbuf - ./backend/cdb/cdbcellbuf.c
caba: cdbcellbuf:00000176:  ereport(WARNING, (errcode(ERRCODE_INTERNAL_ERROR), 
caba: cdbcellbuf:00000177:  errmsg("Unexpected internal error"), 
caba: cdbcellbuf:00000178:  errdetail("Cellbuf error in context '%s'.", 
caba: cdbcellbuf:00000179:  MemoryContextName(cellbuf->context, 
caba: cdbcellbuf:00000180:  NULL, 
caba: cdbcellbuf:00000181:  mcname, 
caba: cdbcellbuf:00000182:  sizeof(mcname))) )); 
caba: cdbcellbuf:00000451:  elog(ERROR, "Cellbuf overflow; %ld cells in use", 
caba: cdbcellbuf:00000452:  cellbuf->nfull_total); 
aaaaa GP_IGNORE: cabc: cdbchunkpool - ./backend/cdb/cdbchunkpool.c
cabc: cdbchunkpool:00000076:  elog(WARNING, "Chunk pool internal error in context '%s'", 
cabc: cdbchunkpool:00000077:  pool->chunkcontext->name); 
cabc: cdbchunkpool:00000093:  elog(ERROR, "Chunk pool internal error in context '%s'", 
cabc: cdbchunkpool:00000094:  pool->chunkcontext->name); 
cabc: cdbchunkpool:00000110:  elog(WARNING, "Chunk pool internal error in context '%s'", 
cabc: cdbchunkpool:00000111:  pool->chunkcontext->name); 
cabc: cdbchunkpool:00000113:  elog(WARNING, "CdbChunkPool_Free(pool, NULL) in context '%s'", 
cabc: cdbchunkpool:00000114:  pool->chunkcontext->name); 
cabc: cdbchunkpool:00000116:  elog(WARNING, "CdbChunkPool_Free to wrong pool in context '%s'", 
cabc: cdbchunkpool:00000117:  pool->chunkcontext->name); 
cabc: cdbchunkpool:00000119:  elog(WARNING, "Possible double CdbChunkPool_Free in context '%s'", 
cabc: cdbchunkpool:00000120:  pool->chunkcontext->name); 
aaaaa GP_IGNORE: cabf: cdbdatabaseinfo - ./backend/cdb/cdbdatabaseinfo.c
cabf: cdbdatabaseinfo:00000078:  elog(WARNING, "In database %u, stored relation doesn't match relation file on disk " 
cabf: cdbdatabaseinfo:00000079:  "(stored tablespace %u, disk file tablespace %u, " 
cabf: cdbdatabaseinfo:00000080:  "stored relation %u, disk file relation %u)", 
cabf: cdbdatabaseinfo:00000081:  info->database, 
cabf: cdbdatabaseinfo:00000082:  info->pgClassStoredRelations[sr].tablespaceRelFile.tablespace, 
cabf: cdbdatabaseinfo:00000083:  info->relSegFiles[rsf].tablespaceRelFile.tablespace, 
cabf: cdbdatabaseinfo:00000084:  info->pgClassStoredRelations[sr].tablespaceRelFile.relation, 
cabf: cdbdatabaseinfo:00000085:  info->relSegFiles[rsf].tablespaceRelFile.relation); 
cabf: cdbdatabaseinfo:00000110:  elog(WARNING, "In database %u, extra stored relation (tablespace %u, relation %u)", 
cabf: cdbdatabaseinfo:00000111:  info->database, 
cabf: cdbdatabaseinfo:00000112:  info->pgClassStoredRelations[sr].tablespaceRelFile.tablespace, 
cabf: cdbdatabaseinfo:00000113:  info->pgClassStoredRelations[sr].tablespaceRelFile.relation); 
cabf: cdbdatabaseinfo:00000119:  elog(WARNING, "In database %u, extra relation file on disk (tablespace %u, relation %u)", 
cabf: cdbdatabaseinfo:00000120:  info->database, 
cabf: cdbdatabaseinfo:00000121:  info->relSegFiles[rsf].tablespaceRelFile.tablespace, 
cabf: cdbdatabaseinfo:00000122:  info->relSegFiles[rsf].tablespaceRelFile.relation); 
cabf: cdbdatabaseinfo:00000143:  elog(WARNING, "Database Info: Tablespace #%d is %u", 
cabf: cdbdatabaseinfo:00000144:  t, info->tablespaces[t]); 
cabf: cdbdatabaseinfo:00000147:  elog(WARNING, "Database Info: Stored relation (tablespace %u, relation %u, isBufferPoolRealtion %s, TID %s)", 
cabf: cdbdatabaseinfo:00000148:  info->pgClassStoredRelations[sr].tablespaceRelFile.tablespace, 
cabf: cdbdatabaseinfo:00000149:  info->pgClassStoredRelations[sr].tablespaceRelFile.relation, 
cabf: cdbdatabaseinfo:00000150:  (info->pgClassStoredRelations[sr].isBufferPoolRelation ? "true" : "false"), 
cabf: cdbdatabaseinfo:00000151:  ItemPointerToString(&info->pgClassStoredRelations[sr].pgClassTid)); 
cabf: cdbdatabaseinfo:00000154:  elog(WARNING, "Database Info: Relation segment file (tablespace %u, relation %u, segment file num %d)", 
cabf: cdbdatabaseinfo:00000155:  info->relSegFiles[rsf].tablespaceRelFile.tablespace, 
cabf: cdbdatabaseinfo:00000156:  info->relSegFiles[rsf].tablespaceRelFile.relation, 
cabf: cdbdatabaseinfo:00000157:  info->relSegFiles[rsf].segmentFileNum); 
cabf: cdbdatabaseinfo:00000160:  elog(WARNING, "Database Info: Tablespace %u, relation %u node information (persistent TID %s, perstent serial number " INT64_FORMAT ")", 
cabf: cdbdatabaseinfo:00000161:  info->gpRelationNodes[grn].tablespaceRelFile.tablespace, 
cabf: cdbdatabaseinfo:00000162:  info->gpRelationNodes[grn].tablespaceRelFile.relation, 
cabf: cdbdatabaseinfo:00000163:  ItemPointerToString(&info->gpRelationNodes[grn].persistentTid), 
cabf: cdbdatabaseinfo:00000164:  info->gpRelationNodes[grn].persistentSerialNum); 
cabf: cdbdatabaseinfo:00000167:  elog(WARNING, "Database Info: Misc entry #%d (tablespace %u, directory = %s, name '%s')", 
cabf: cdbdatabaseinfo:00000168:  m, 
cabf: cdbdatabaseinfo:00000169:  info->miscEntries[m].tablespace, 
cabf: cdbdatabaseinfo:00000170:  (info->miscEntries[m].isDir ? "true" : "false"), 
cabf: cdbdatabaseinfo:00000171:  info->miscEntries[m].name); 
cabf: cdbdatabaseinfo:00000198:  elog(ERROR, "pg_class entry (relfilenode %u) not found", 
cabf: cdbdatabaseinfo:00000199:  relfilenodeOid); 
cabf: cdbdatabaseinfo:00000321:  elog(ERROR, "Duplicate pg_class entry (relation id %u)", 
cabf: cdbdatabaseinfo:00000322:  dbInfoRel->relationOid); 
cabf: cdbdatabaseinfo:00000348:  elog(ERROR, "pg_class entry (relation id %u) not found", 
cabf: cdbdatabaseinfo:00000349:  relationId); 
cabf: cdbdatabaseinfo:00000376:  elog(ERROR, "More than one pg_appendonly entry (relation id %u)", 
cabf: cdbdatabaseinfo:00000377:  relationId); 
cabf: cdbdatabaseinfo:00000404:  elog(ERROR, "pg_appendonly entry (relation id %u) not found", 
cabf: cdbdatabaseinfo:00000405:  relationId); 
cabf: cdbdatabaseinfo:00000536:  elog(ERROR, "More than one pg_class entry ('%s' %u and '%s' %u) references the same relfilenode %u", 
cabf: cdbdatabaseinfo:00000537:  dbInfoRel->relname, 
cabf: cdbdatabaseinfo:00000538:  dbInfoRel->relationOid, 
cabf: cdbdatabaseinfo:00000539:  relname, 
cabf: cdbdatabaseinfo:00000540:  relationOid, 
cabf: cdbdatabaseinfo:00000541:  relfilenode); 
cabf: cdbdatabaseinfo:00000764:  ereport(ERROR, 
cabf: cdbdatabaseinfo:00000765:  (errcode_for_file_access(), 
cabf: cdbdatabaseinfo:00000766:  errmsg("Could not open segment file '%s'", 
cabf: cdbdatabaseinfo:00000767:  path))); 
cabf: cdbdatabaseinfo:00000771:  ereport(ERROR, 
cabf: cdbdatabaseinfo:00000772:  (errcode_for_file_access(), 
cabf: cdbdatabaseinfo:00000773:  errmsg("Could not seek to end of file \"%s\" : %m", 
cabf: cdbdatabaseinfo:00000774:  path))); 
cabf: cdbdatabaseinfo:00000820:  ereport(ERROR, 
cabf: cdbdatabaseinfo:00000821:  (errcode_for_file_access(), 
cabf: cdbdatabaseinfo:00000822:  errmsg("Could not open database directory \"%s\": %m", dbDirPath))); 
cabf: cdbdatabaseinfo:00000840:  ereport(ERROR, 
cabf: cdbdatabaseinfo:00000841:  (errcode_for_file_access(), 
cabf: cdbdatabaseinfo:00000842:  errmsg("could not stat file \"%s\": %m", fromfile))); 
cabf: cdbdatabaseinfo:00000991:  elog(WARNING, "Did not find matching pg_class entry for gp_relation_node entry relfilenode %u (parentless!!!)", 
cabf: cdbdatabaseinfo:00000992:  relfilenode); 
cabf: cdbdatabaseinfo:00001323:  elog(ERROR, "insufficient #/entries in dbInfoRelHashTable"); 
cabf: cdbdatabaseinfo:00001328:  elog(ERROR, "too many entries in dbInfoRelHashTable"); 
cabf: cdbdatabaseinfo:00001528:  elog(ERROR, "Append-Only relation '%s' segment file #%d has data (logical EOF " INT64_FORMAT ") in the aoseg / aocsseg entry but no gp_relation_node entry!", 
cabf: cdbdatabaseinfo:00001529:  dbInfoRel->relname, 
cabf: cdbdatabaseinfo:00001530:  appendOnlyCatalogSegmentInfo->segmentFileNum, 
cabf: cdbdatabaseinfo:00001531:  appendOnlyCatalogSegmentInfo->logicalEof); 
cabf: cdbdatabaseinfo:00001549:  elog(ERROR, "Append-Only relation '%s' gp_relation_node entry for segment file #%d without an aoseg /aocsseg entry (case #1)", 
cabf: cdbdatabaseinfo:00001550:  dbInfoRel->relname, 
cabf: cdbdatabaseinfo:00001551:  dbInfoRel->gpRelationNodes[g].segmentFileNum); 
cabf: cdbdatabaseinfo:00001563:  elog(ERROR, "Append-Only relation '%s' gp_relation_node entry for segment file #%d without an aoseg /aocsseg entry", 
cabf: cdbdatabaseinfo:00001564:  dbInfoRel->relname, 
cabf: cdbdatabaseinfo:00001565:  dbInfoRel->gpRelationNodes[g].segmentFileNum); 
cabf: cdbdatabaseinfo:00001580:  elog(ERROR, "Append-Only relation '%s' gp_relation_node entry for segment file #%d without an aoseg /aocsseg entry (case #2)", 
cabf: cdbdatabaseinfo:00001581:  dbInfoRel->relname, 
cabf: cdbdatabaseinfo:00001582:  dbInfoRel->gpRelationNodes[g].segmentFileNum); 
aaaaa GP_IGNORE: caah: cdbdisp - ./backend/cdb/cdbdisp.c
caah: cdbdisp:00000451:  * It should not longjmp out via elog(ERROR, ...), ereport(ERROR, ...), 
caah: cdbdisp:00000452:  * PG_THROW, CHECK_FOR_INTERRUPTS, etc. 
caah: cdbdisp:00000453:  * 
caah: cdbdisp:00000454:  * Note: the maxSlices argument is used to allocate the parameter 
caah: cdbdisp:00000455:  * blocks for dispatch, it should be set to the maximum number of 
caah: cdbdisp:00000456:  * slices in a plan. For dispatch of single commands (ie most uses of 
caah: cdbdisp:00000457:  * cdbdisp_dispatchToGang()), setting it to 1 is fine. 
caah: cdbdisp:00000458:  */ 
caah: cdbdisp:00000459: void 
caah: cdbdisp:00000460: cdbdisp_dispatchToGang(struct CdbDispatcherState *ds, 
caah: cdbdisp:00000461:  GpDispatchCommandType mppDispatchCommandType, 
caah: cdbdisp:00000462:  void *commandTypeParms, 
caah: cdbdisp:00000463:  struct Gang *gp, 
caah: cdbdisp:00000464:  int sliceIndex, 
caah: cdbdisp:00000465:  unsigned int maxSlices, 
caah: cdbdisp:00000466:  CdbDispatchDirectDesc *disp_direct) 
caah: cdbdisp:00000467: { 
caah: cdbdisp:00000468:  struct CdbDispatchResults *dispatchResults = ds->primaryResults; 
caah: cdbdisp:00000491:  ereport(ERROR, 
caah: cdbdisp:00000492:  (errcode(ERRCODE_INTERNAL_ERROR), 
caah: cdbdisp:00000493:  errmsg("Cannot dispatch multiple queries to the segments."), 
caah: cdbdisp:00000494:  errhint("Likely caused by a function that reads or modifies data in a distributed table."))); 
caah: cdbdisp:00000540:  elog(FATAL, "Unrecognized MPP dispatch command type: %d", 
caah: cdbdisp:00000541:  (int) mppDispatchCommandType); 
caah: cdbdisp:00000605:  elog(ERROR, "Attempted to reallocate dispatchCommandParmsAr while other threads still running size %d new threadcount %d", 
caah: cdbdisp:00000606:  ds->dispatchThreads->dispatchCommandParmsArSize, ds->dispatchThreads->threadCount + max_threads); 
caah: cdbdisp:00000782:  ereport(FATAL, (errcode(ERRCODE_INTERNAL_ERROR), 
caah: cdbdisp:00000783:  errmsg("could not create thread %d of %d", i + 1, newThreads), 
caah: cdbdisp:00000784:  errdetail("pthread_create() failed with err %d", pthread_err))); 
caah: cdbdisp:00000949:  elog(FATAL, "Unrecognized MPP dispatch command type: %d", 
caah: cdbdisp:00000950:  (int) mppDispatchCommandType); 
caah: cdbdisp:00001083:  elog(FATAL, "CheckDispatchResult: pthread_join failed on thread %d (%lu) of %d (returned %d attempting to join to %lu)", 
caah: cdbdisp:00001084:  i + 1, 
caah: cdbdisp:00001085: #ifndef _WIN32 
caah: cdbdisp:00001086:  (unsigned long) pParms->thread, 
caah: cdbdisp:00001087: #else 
caah: cdbdisp:00001088:  (unsigned long) pParms->thread.p, 
caah: cdbdisp:00001089: #endif 
caah: cdbdisp:00001090:  ds->dispatchThreads->threadCount, pthread_err, (unsigned long)mythread()); 
caah: cdbdisp:00001201:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
caah: cdbdisp:00001202:  errmsg("cdbdisp_returnResults failed: out of memory"))); 
caah: cdbdisp:00001551:  ereport(ERROR, (errcode(errorcode), 
caah: cdbdisp:00001552:  errOmitLocation(true), 
caah: cdbdisp:00001553:  errmsg("%s", buf.data))); 
caah: cdbdisp:00003171:  elog(ERROR, "cache lookup failed for function %u", funcid); 
caah: cdbdisp:00003389:  ereport(ERROR, 
caah: cdbdisp:00003390:  (errcode(ERRCODE_INVALID_CURSOR_STATE), 
caah: cdbdisp:00003391:  errmsg("cursor \"%s\" does not exist", cursor_name))); 
caah: cdbdisp:00003395:  ereport(ERROR, 
caah: cdbdisp:00003396:  (errcode(ERRCODE_INVALID_CURSOR_STATE), 
caah: cdbdisp:00003397:  errmsg("cursor \"%s\" is held from a previous transaction", cursor_name))); 
caah: cdbdisp:00003409:  ereport(ERROR, 
caah: cdbdisp:00003410:  (errcode(ERRCODE_INVALID_CURSOR_STATE), 
caah: cdbdisp:00003411:  errmsg("cursor \"%s\" is not a simply updatable scan of table \"%s\"", 
caah: cdbdisp:00003412:  cursor_name, table_name))); 
caah: cdbdisp:00003424:  ereport(ERROR, 
caah: cdbdisp:00003425:  (errcode(ERRCODE_INVALID_CURSOR_STATE), 
caah: cdbdisp:00003426:  errmsg("cursor \"%s\" is not a simply updatable scan of table \"%s\"", 
caah: cdbdisp:00003427:  cursor_name, table_name))); 
caah: cdbdisp:00003433:  ereport(ERROR, 
caah: cdbdisp:00003434:  (errcode(ERRCODE_INVALID_CURSOR_STATE), 
caah: cdbdisp:00003435:  errmsg("cursor \"%s\" is not positioned on a row", cursor_name))); 
caah: cdbdisp:00003491:  ereport(ERROR, 
caah: cdbdisp:00003492:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caah: cdbdisp:00003493:  errmsg("%s is not updatable", 
caah: cdbdisp:00003494:  get_rel_name_partition(*tableoid)))); 
caah: cdbdisp:00003749:  ereport(ERROR, (errcode(ERRCODE_INTERNAL_ERROR), 
caah: cdbdisp:00003750:  errmsg_internal("Unable to dispatch plan."))); 
caah: cdbdisp:00003803:  * the caller's error catcher via ereport(ERROR,...). Otherwise this 
caah: cdbdisp:00003804:  * function returns normally and errors are not reported until later. 
caah: cdbdisp:00003805:  * 
caah: cdbdisp:00003806:  * If cancelOnError is false, the plan is to be dispatched as fully as 
caah: cdbdisp:00003807:  * possible and the QEs allowed to proceed regardless of cancellation 
caah: cdbdisp:00003808:  * requests, errors or connection failures from other QEs, etc. 
caah: cdbdisp:00003809:  * 
caah: cdbdisp:00003810:  * The CdbDispatchResults objects allocated for the plan are returned 
caah: cdbdisp:00003811:  * in *pPrimaryResults. The caller, after calling 
caah: cdbdisp:00003812:  * CdbCheckDispatchResult(), can examine the CdbDispatchResults 
caah: cdbdisp:00003813:  * objects, can keep them as long as needed, and ultimately must free 
caah: cdbdisp:00003814:  * them with cdbdisp_destroyDispatchResults() prior to deallocation of 
caah: cdbdisp:00003815:  * the caller's memory context. Callers should use PG_TRY/PG_CATCH to 
caah: cdbdisp:00003816:  * ensure proper cleanup. 
caah: cdbdisp:00003817:  * 
caah: cdbdisp:00003818:  * To wait for completion, check for errors, and clean up, it is 
caah: cdbdisp:00003819:  * suggested that the caller use cdbdisp_finishCommand(). 
caah: cdbdisp:00003820:  * 
caah: cdbdisp:00003821:  * Note that the slice tree dispatched is the one specified in the EState 
caah: cdbdisp:00003822:  * of the argument QueryDesc as es_cur__slice. 
caah: cdbdisp:00003823:  * 
caah: cdbdisp:00003824:  * Note that the QueryDesc params must include PARAM_EXEC_REMOTE parameters 
caah: cdbdisp:00003825:  * containing the values of any initplans required by the slice to be run. 
caah: cdbdisp:00003826:  * (This is handled by calls to addRemoteExecParamsToParamList() from the 
caah: cdbdisp:00003827:  * functions preprocess_initplans() and ExecutorRun().) 
caah: cdbdisp:00003828:  * 
caah: cdbdisp:00003829:  * Each QE receives its assignment as a message of type 'M' in PostgresMain(). 
caah: cdbdisp:00003830:  * The message is deserialized and processed by exec_mpp_query() in postgres.c. 
caah: cdbdisp:00003831:  */ 
caah: cdbdisp:00003832: void 
caah: cdbdisp:00003833: cdbdisp_dispatchPlan(struct QueryDesc *queryDesc, 
caah: cdbdisp:00003834:  bool planRequiresTxn, 
caah: cdbdisp:00003835:  bool cancelOnError, 
caah: cdbdisp:00003836:  struct CdbDispatcherState *ds) 
caah: cdbdisp:00003837: { 
caah: cdbdisp:00003838:  char *splan, 
caah: cdbdisp:00003839:  *ssliceinfo, 
caah: cdbdisp:00003840:  *sparams; 
caah: cdbdisp:00004489:  elog(FATAL, "Unexpected distribute transaction context: '%s'", 
caah: cdbdisp:00004490:  DtxContextToString(DistributedTransactionContext)); 
caah: cdbdisp:00004493:  elog(FATAL, "Unrecognized DTX transaction context: %d", 
caah: cdbdisp:00004494:  (int)DistributedTransactionContext); 
caah: cdbdisp:00004643:  elog(FATAL, "Unrecognized MPP dispatch command type: %d", 
caah: cdbdisp:00004644:  (int) pParms->mppDispatchCommandType); 
aaaaa GP_IGNORE: cabh: cdbdispatchresult - ./backend/cdb/cdbdispatchresult.c
cabh: cdbdispatchresult:00000109:  /* caller is responsible for cleanup -- can't elog(ERROR, ...) from here. */ 
cabh: cdbdispatchresult:00000110:  return NULL; 
aaaaa GP_IGNORE: cacc: cdbdistributedsnapshot - ./backend/cdb/cdbdistributedsnapshot.c
cacc: cdbdistributedsnapshot:00000263:  elog(ERROR,"Invalid distributed snapshot (maxCount %d, count %d)", 
cacc: cdbdistributedsnapshot:00000264:  source->header.maxCount, source->header.count); 
cacc: cdbdistributedsnapshot:00000287:  elog(ERROR,"Too many distributed transactions for snapshot (maxCount %d, count %d)", 
cacc: cdbdistributedsnapshot:00000288:  target->header.maxCount, source->header.count); 
cacc: cdbdistributedsnapshot:00000298:  ereport(ERROR, 
cacc: cdbdistributedsnapshot:00000299:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacc: cdbdistributedsnapshot:00000300:  errmsg("out of memory"))); 
aaaaa GP_IGNORE: caca: cdbdistributedxidmap - ./backend/cdb/cdbdistributedxidmap.c
caca: cdbdistributedxidmap:00000203:  elog(ERROR,"Attempting re-use local xid %u and distributed xid %u again (original start pid was %d, state = %s, pageno %d, entryno %d, slotno %d)", 
caca: cdbdistributedxidmap:00000204:  reuseXid, gxid, pid, DistributedMapStateToString(state), pageno, entryno, slotno); 
caca: cdbdistributedxidmap:00000332:  elog(ERROR, "UpdateDistributedXidMapState distributed xid = %d invalid (pageno = %d, entryno = %d, DistributedXidMapHighestPageNo = %d)", 
caca: cdbdistributedxidmap:00000333:  gxid, pageno, entryno, *shmDistributedXidMapHighestPageNo); 
caca: cdbdistributedxidmap:00000406:  elog(FATAL, "Could not initialize Distributed XIP Map shared memory"); 
aaaaa GP_IGNORE: cabh: cdbdtxcontextinfo - ./backend/cdb/cdbdtxcontextinfo.c
cabh: cdbdtxcontextinfo:00000062:  elog(ERROR,"Too many distributed transactions for snapshot (maxCount %d, count %d)", 
cabh: cdbdtxcontextinfo:00000063:  ds->header.maxCount, dslm->header.count); 
cabh: cdbdtxcontextinfo:00000073:  ereport(ERROR, 
cabh: cdbdtxcontextinfo:00000074:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cabh: cdbdtxcontextinfo:00000075:  errmsg("out of memory"))); 
cabh: cdbdtxcontextinfo:00000236:  elog(WARNING, "serializing FirstDistributedTransactionId: %u %u %u %u", 
cabh: cdbdtxcontextinfo:00000237:  dtxContextInfo->distributedXid, dtxContextInfo->distributedTimeStamp, 
cabh: cdbdtxcontextinfo:00000238:  dtxContextInfo->curcid, dtxContextInfo->segmateSync); 
cabh: cdbdtxcontextinfo:00000453:  elog(WARNING, "Deserializing FirstDistributedTransactionId: %u %u %u %u", 
cabh: cdbdtxcontextinfo:00000454:  dtxContextInfo->distributedXid, dtxContextInfo->distributedTimeStamp, 
cabh: cdbdtxcontextinfo:00000455:  dtxContextInfo->curcid, dtxContextInfo->segmateSync); 
cabh: cdbdtxcontextinfo:00000484:  elog(ERROR, "Invalid distributed snapshot received (maxCount %d, count %d)", 
cabh: cdbdtxcontextinfo:00000485:  maxCount, ds->header.count); 
cabh: cdbdtxcontextinfo:00000497:  elog(ERROR, "Bad allocation of in-progress array"); 
cabh: cdbdtxcontextinfo:00000502:  elog(ERROR, "Too many distributed transactions for snapshot (maxCount %d, count %d)", 
cabh: cdbdtxcontextinfo:00000503:  ds->header.maxCount, ds->header.count); 
cabh: cdbdtxcontextinfo:00000524:  ereport(ERROR, 
cabh: cdbdtxcontextinfo:00000525:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cabh: cdbdtxcontextinfo:00000526:  errmsg("out of memory"))); 
aaaaa GP_IGNORE: caba: cdbexplain - ./backend/cdb/cdbexplain.c
caba: cdbexplain:00000485:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caba: cdbexplain:00000486:  errmsg_internal("Invalid execution statistics " 
caba: cdbexplain:00000487:  "response returned from seg%d. " 
caba: cdbexplain:00000488:  "length=%d", 
caba: cdbexplain:00000489:  hdr->segindex, 
caba: cdbexplain:00000490:  statcell->len), 
caba: cdbexplain:00000491:  errhint("Please verify that all instances are using " 
caba: cdbexplain:00000492:  "the correct %s software version.", 
caba: cdbexplain:00000493:  PACKAGE_NAME) 
caba: cdbexplain:00000494:  )); 
caba: cdbexplain:00000504:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caba: cdbexplain:00000505:  errmsg("Invalid execution statistics " 
caba: cdbexplain:00000506:  "received stats node-count mismatch: cdbexplain_recvExecStats() ctx.nStatInst %d hdr->nInst %d", ctx.nStatInst, hdr->nInst), 
caba: cdbexplain:00000507:  errhint("Please verify that all instances are using " 
caba: cdbexplain:00000508:  "the correct %s software version.", 
caba: cdbexplain:00000509:  PACKAGE_NAME))); 
aaaaa GP_IGNORE: caba: cdbfilerep - ./backend/cdb/cdbfilerep.c
caba: cdbfilerep:00000512:  ereport(ERROR, 
caba: cdbfilerep:00000513:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caba: cdbfilerep:00000514:  (errmsg("not enough shared memory for mirroring")))); 
caba: cdbfilerep:00000538:  ereport(ERROR, 
caba: cdbfilerep:00000539:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caba: cdbfilerep:00000540:  (errmsg("shared memory for filerep ipc not initialized")))); 
caba: cdbfilerep:00000671:  ereport(ERROR, 
caba: cdbfilerep:00000672:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caba: cdbfilerep:00000673:  (errmsg("not enough shared memory for mirroring")))); 
caba: cdbfilerep:00000841:  ereport(ERROR, 
caba: cdbfilerep:00000842:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caba: cdbfilerep:00000843:  (errmsg("shared memory for mirroring not initialized.")))); 
caba: cdbfilerep:00001070:  ereport(WARNING, 
caba: cdbfilerep:00001071:  (errmsg("threshold '75' percent of 'gp_segment_connect_timeout=%d' is reached, " 
caba: cdbfilerep:00001072:  "mirror may not be able to keep up with primary, " 
caba: cdbfilerep:00001073:  "primary may transition to change tracking", 
caba: cdbfilerep:00001074:  gp_segment_connect_timeout), 
caba: cdbfilerep:00001075:  errhint("increase guc 'gp_segment_connect_timeout' by 'gpconfig' and 'gpstop -u' "), 
caba: cdbfilerep:00001076:  errSendAlert(true))); 
caba: cdbfilerep:00001440:  ereport(ERROR, 
caba: cdbfilerep:00001441:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caba: cdbfilerep:00001442:  (errmsg("not enough shared memory to log filerep config")))); 
caba: cdbfilerep:00001474:  ereport(ERROR, 
caba: cdbfilerep:00001475:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caba: cdbfilerep:00001476:  (errmsg("not enough shared memory to log filerep config")))); 
caba: cdbfilerep:00001507:  ereport(ERROR, 
caba: cdbfilerep:00001508:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caba: cdbfilerep:00001509:  (errmsg("not enough shared memory to log filerep config")))); 
caba: cdbfilerep:00001625:  ereport(WARNING, 
caba: cdbfilerep:00001626:  (errcode_for_file_access(), 
caba: cdbfilerep:00001627:  errmsg("could not open file '%s' : %m", 
caba: cdbfilerep:00001628:  path))); 
caba: cdbfilerep:00001643:  ereport(WARNING, 
caba: cdbfilerep:00001644:  (errcode_for_file_access(), 
caba: cdbfilerep:00001645:  errmsg("could not seek in file to position '0' in file '%s' : %m", 
caba: cdbfilerep:00001646:  path))); 
caba: cdbfilerep:00001662:  ereport(WARNING, 
caba: cdbfilerep:00001663:  (errcode_for_file_access(), 
caba: cdbfilerep:00001664:  errmsg("could not write to file '%s' data '%p' dataLength '%u' : %m", 
caba: cdbfilerep:00001665:  path, 
caba: cdbfilerep:00001666:  data, 
caba: cdbfilerep:00001667:  dataLengthLocal))); 
caba: cdbfilerep:00001678:  ereport(WARNING, 
caba: cdbfilerep:00001679:  (errcode_for_file_access(), 
caba: cdbfilerep:00001680:  errmsg("could not fsync file '%s' : %m", path))); 
caba: cdbfilerep:00001859:  ereport(WARNING, 
caba: cdbfilerep:00001860:  (errmsg("signal to children failed pid '%ld' signal '%d' : %m", 
caba: cdbfilerep:00001861:  (long) subProc->pid, signal))); 
caba: cdbfilerep:00002545:  ereport(WARNING, 
caba: cdbfilerep:00002546:  (errmsg("could not fork %s : %m", 
caba: cdbfilerep:00002547:  FileRepProcessTypeToString[type]))); 
caba: cdbfilerep:00003346:  ereport(WARNING, 
caba: cdbfilerep:00003347:  (errmsg("mirror failure, " 
caba: cdbfilerep:00003348:  "could not retrieve segment configuration, " 
caba: cdbfilerep:00003349:  "failover requested"), 
caba: cdbfilerep:00003350:  errhint("run gprecoverseg to re-establish mirror connectivity"))); 
caba: cdbfilerep:00003833:  ereport(ERROR, 
caba: cdbfilerep:00003834:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caba: cdbfilerep:00003835:  (errmsg("not enough shared memory for gpmon stats")))); 
caba: cdbfilerep:00003911:  elog(WARNING, 
caba: cdbfilerep:00003912:  "filerep gpmon: unable to set signal handler for SIGVTALRM (%m)"); 
caba: cdbfilerep:00003924:  elog(WARNING, "gpmon: unable to start timer (%m)"); 
caba: cdbfilerep:00003957:  ereport(ERROR, 
caba: cdbfilerep:00003958:  (errmsg("could not translate host addr \"%s\", port \"%d\" to address: %s", 
caba: cdbfilerep:00003959:  "localhost", gpperfmon_port, gai_strerror(ret)))); 
caba: cdbfilerep:00003995:  elog(WARNING, "fcntl(F_SETFL, O_NONBLOCK) failed"); 
caba: cdbfilerep:00004000:  elog(WARNING, "fcntl(F_SETFD) failed"); 
caba: cdbfilerep:00004015:  elog(WARNING, "gpmon: cannot create socket (%m)"); 
caba: cdbfilerep:00004119:  elog(WARNING, 
caba: cdbfilerep:00004120:  "Cannot send file rep stats to perfmon - socket invalid\n"); 
caba: cdbfilerep:00004130:  elog(WARNING, "FileRepStats_GpmonSend: Error when sending file rep stats to perfmon - \ 
caba: cdbfilerep:00004131:  only %d bytes of %lu sent; %s\n", 
caba: cdbfilerep:00004132:  bytesSent, (unsigned long)sizeof(gpmon_packet_t), 
caba: cdbfilerep:00004133:  strerror(errno) 
caba: cdbfilerep:00004134:  ); 
aaaaa GP_IGNORE: caca: cdbfilerepconnclient - ./backend/cdb/cdbfilerepconnclient.c
caca: cdbfilerepconnclient:00000059:  ereport(WARNING, 
caca: cdbfilerepconnclient:00000060:  (errcode_for_socket_access(), 
caca: cdbfilerepconnclient:00000061:  errmsg("could not establish connection with server, host:'%s' port:'%d' err:'%s' : %m", 
caca: cdbfilerepconnclient:00000062:  hostAddress, 
caca: cdbfilerepconnclient:00000063:  port, 
caca: cdbfilerepconnclient:00000064:  PQerrorMessage(conn)), 
caca: cdbfilerepconnclient:00000065:  errSendAlert(true), 
caca: cdbfilerepconnclient:00000066:  FileRep_errcontext())); 
caca: cdbfilerepconnclient:00000182:  elog(WARNING, "segment state transition requested while waiting to write data to socket"); 
caca: cdbfilerepconnclient:00000190:  ereport(WARNING, 
caca: cdbfilerepconnclient:00000191:  (errcode_for_socket_access(), 
caca: cdbfilerepconnclient:00000192:  errmsg("could not write data to socket, failure detected : %m"))); 
aaaaa GP_IGNORE: caca: cdbfilerepconnserver - ./backend/cdb/cdbfilerepconnserver.c
caca: cdbfilerepconnserver:00000059:  ereport(WARNING, 
caca: cdbfilerepconnserver:00000060:  (errcode_for_socket_access(), 
caca: cdbfilerepconnserver:00000061:  errmsg("could not start listener, host:'%s' port:'%d': %m", 
caca: cdbfilerepconnserver:00000062:  hostAddress, 
caca: cdbfilerepconnserver:00000063:  portLocal), 
caca: cdbfilerepconnserver:00000064:  errSendAlert(true), 
caca: cdbfilerepconnserver:00000065:  FileRep_errcontext())); 
caca: cdbfilerepconnserver:00000081:  ereport(ERROR, 
caca: cdbfilerepconnserver:00000082:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caca: cdbfilerepconnserver:00000083:  (errmsg("not enough memory to create connection")))); 
caca: cdbfilerepconnserver:00000089:  ereport(WARNING, 
caca: cdbfilerepconnserver:00000090:  (errcode_for_socket_access(), 
caca: cdbfilerepconnserver:00000091:  errmsg("could not accept connection: %m"), 
caca: cdbfilerepconnserver:00000092:  FileRep_errcontext())); 
caca: cdbfilerepconnserver:00000153:  ereport(WARNING, 
caca: cdbfilerepconnserver:00000154:  (errcode_for_socket_access(), 
caca: cdbfilerepconnserver:00000155:  errmsg("receive failure on connection: %m"), 
caca: cdbfilerepconnserver:00000156:  FileRep_errcontext())); 
caca: cdbfilerepconnserver:00000211:  ereport(WARNING, 
caca: cdbfilerepconnserver:00000212:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
caca: cdbfilerepconnserver:00000213:  errmsg("invalid length of startup packet"), 
caca: cdbfilerepconnserver:00000214:  FileRep_errcontext())); 
caca: cdbfilerepconnserver:00000220:  ereport(ERROR, 
caca: cdbfilerepconnserver:00000221:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caca: cdbfilerepconnserver:00000222:  errmsg("not enough memory to allocate buffer for startup packet"), 
caca: cdbfilerepconnserver:00000223:  FileRep_errcontext())); 
caca: cdbfilerepconnserver:00000230:  ereport(WARNING, 
caca: cdbfilerepconnserver:00000231:  (errcode_for_socket_access(), 
caca: cdbfilerepconnserver:00000232:  errmsg("receive EOF on connection: %m"), 
caca: cdbfilerepconnserver:00000233:  FileRep_errcontext())); 
caca: cdbfilerepconnserver:00000258:  ereport(WARNING, 
caca: cdbfilerepconnserver:00000259:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caca: cdbfilerepconnserver:00000260:  errmsg("not supported version"), 
caca: cdbfilerepconnserver:00000261:  FileRep_errcontext())); 
caca: cdbfilerepconnserver:00000322:  ereport(WARNING, 
caca: cdbfilerepconnserver:00000323:  (errcode_for_socket_access(), 
caca: cdbfilerepconnserver:00000324:  errmsg("receive EOF on connection: %m"))); 
caca: cdbfilerepconnserver:00000332:  ereport(WARNING, 
caca: cdbfilerepconnserver:00000333:  (errcode_for_socket_access(), 
caca: cdbfilerepconnserver:00000334:  errmsg("receive close on connection: %m"))); 
caca: cdbfilerepconnserver:00000338:  ereport(WARNING, 
caca: cdbfilerepconnserver:00000339:  (errcode_for_socket_access(), 
caca: cdbfilerepconnserver:00000340:  errmsg("receive unexpected message type on connection: %m"))); 
caca: cdbfilerepconnserver:00000358:  ereport(WARNING, 
caca: cdbfilerepconnserver:00000359:  (errcode_for_socket_access(), 
caca: cdbfilerepconnserver:00000360:  errmsg("receive EOF on connection: %m"))); 
caca: cdbfilerepconnserver:00000368:  ereport(WARNING, 
caca: cdbfilerepconnserver:00000369:  (errmsg("receive unexpected message length on connection"))); 
caca: cdbfilerepconnserver:00000392:  ereport(WARNING, 
caca: cdbfilerepconnserver:00000393:  (errcode_for_socket_access(), 
caca: cdbfilerepconnserver:00000394:  errmsg("receive EOF on connection: %m"))); 
aaaaa GP_IGNORE: cabg: cdbfilerepmirror - ./backend/cdb/cdbfilerepmirror.c
cabg: cdbfilerepmirror:00000162:  ereport(WARNING, 
cabg: cdbfilerepmirror:00000163:  (errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00000164:  "injected fault by guc filerep_inject_listener_fault, " 
cabg: cdbfilerepmirror:00000165:  "failover requested"), 
cabg: cdbfilerepmirror:00000166:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00000212:  ereport(WARNING, 
cabg: cdbfilerepmirror:00000213:  (errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00000214:  "no connection was established from client from primary, " 
cabg: cdbfilerepmirror:00000215:  "primary address(port) '%s(%d)' mirror address(port) '%s(%d)' timeout reached '%d' " 
cabg: cdbfilerepmirror:00000216:  "failover requested", 
cabg: cdbfilerepmirror:00000217:  fileRepPrimaryHostAddress, 
cabg: cdbfilerepmirror:00000218:  fileRepPrimaryPort, 
cabg: cdbfilerepmirror:00000219:  fileRepMirrorHostAddress, 
cabg: cdbfilerepmirror:00000220:  fileRepMirrorPort, 
cabg: cdbfilerepmirror:00000221:  gp_segment_connect_timeout), 
cabg: cdbfilerepmirror:00000222:  errSendAlert(true), 
cabg: cdbfilerepmirror:00000223:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00000358:  ereport(WARNING, 
cabg: cdbfilerepmirror:00000359:  (errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00000360:  "could not queue received message to be processed, " 
cabg: cdbfilerepmirror:00000361:  "failover requested"), 
cabg: cdbfilerepmirror:00000362:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00000363:  FileRep_errdetail_Shmem(), 
cabg: cdbfilerepmirror:00000364:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00000753:  ereport(WARNING, 
cabg: cdbfilerepmirror:00000754:  (errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00000755:  "could not match message header checksum between primary '%u' and mirror '%u', " 
cabg: cdbfilerepmirror:00000756:  "failover requested", 
cabg: cdbfilerepmirror:00000757:  *fileRepMessageHeaderCrc, 
cabg: cdbfilerepmirror:00000758:  messageHeaderCrcLocal), 
cabg: cdbfilerepmirror:00000759:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00000760:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00000761:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00000762:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00000763:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00000764:  FileRep_errdetail_Shmem(), 
cabg: cdbfilerepmirror:00000765:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00000793:  ereport(WARNING, 
cabg: cdbfilerepmirror:00000794:  (errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00000795:  "could not match message body checksum between primary:'%u' and mirror:'%u' data length:'%u', " 
cabg: cdbfilerepmirror:00000796:  "failover requested", 
cabg: cdbfilerepmirror:00000797:  fileRepMessageHeader->fileRepMessageBodyCrc, 
cabg: cdbfilerepmirror:00000798:  messageBodyLocal, 
cabg: cdbfilerepmirror:00000799:  fileRepMessageHeader->messageBodyLength), 
cabg: cdbfilerepmirror:00000800:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00000801:  
cabg: cdbfilerepmirror:00000802:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00000803:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00000804:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00000805:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00000806:  FileRep_errdetail_Shmem(), 
cabg: cdbfilerepmirror:00000807:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00000884:  ereport(WARNING, 
cabg: cdbfilerepmirror:00000885:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00000886:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00000887:  "could not seek to file position " INT64_FORMAT " : %m, " 
cabg: cdbfilerepmirror:00000888:  "failover requested", 
cabg: cdbfilerepmirror:00000889:  fileRepMessageHeader->fileRepOperationDescription.open.logicalEof), 
cabg: cdbfilerepmirror:00000890:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00000891:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00000892:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00000893:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00000894:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00000895:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00000941:  ereport(WARNING, 
cabg: cdbfilerepmirror:00000942:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00000943:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00000944:  "could not open file position:" INT64_FORMAT " file flags '%x' " 
cabg: cdbfilerepmirror:00000945:  "file mode '%o' : %m, " 
cabg: cdbfilerepmirror:00000946:  "failover requested", 
cabg: cdbfilerepmirror:00000947:  fileRepMessageHeader->fileRepOperationDescription.open.logicalEof, 
cabg: cdbfilerepmirror:00000948:  fileRepMessageHeader->fileRepOperationDescription.open.fileFlags, 
cabg: cdbfilerepmirror:00000949:  fileRepMessageHeader->fileRepOperationDescription.open.fileMode), 
cabg: cdbfilerepmirror:00000950:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00000951:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00000952:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00000953:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00000954:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00000955:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00000984:  ereport(WARNING, 
cabg: cdbfilerepmirror:00000985:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00000986:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00000987:  "could not seek to file position " INT64_FORMAT " : %m, " 
cabg: cdbfilerepmirror:00000988:  "failover requested", 
cabg: cdbfilerepmirror:00000989:  fileRepMessageHeader->fileRepOperationDescription.open.logicalEof), 
cabg: cdbfilerepmirror:00000990:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00000991:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00000992:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00000993:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00000994:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00000995:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001038:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001039:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001040:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001041:  "could not open file position " INT64_FORMAT " " 
cabg: cdbfilerepmirror:00001042:  "file flags '%x' file mode '%o' : %m, " 
cabg: cdbfilerepmirror:00001043:  "failover requested", 
cabg: cdbfilerepmirror:00001044:  fileRepMessageHeader->fileRepOperationDescription.open.logicalEof, 
cabg: cdbfilerepmirror:00001045:  fileRepMessageHeader->fileRepOperationDescription.open.fileFlags, 
cabg: cdbfilerepmirror:00001046:  fileRepMessageHeader->fileRepOperationDescription.open.fileMode), 
cabg: cdbfilerepmirror:00001047:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001048:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001049:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001050:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001051:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001052:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001105:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001106:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001107:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001108:  "could not open file position '" INT64_FORMAT "' " 
cabg: cdbfilerepmirror:00001109:  "file flags '%x' file mode '%o' : %m, " 
cabg: cdbfilerepmirror:00001110:  "failover requested", 
cabg: cdbfilerepmirror:00001111:  fileRepMessageHeader->fileRepOperationDescription.open.logicalEof, 
cabg: cdbfilerepmirror:00001112:  fileRepMessageHeader->fileRepOperationDescription.open.fileFlags, 
cabg: cdbfilerepmirror:00001113:  fileRepMessageHeader->fileRepOperationDescription.open.fileMode), 
cabg: cdbfilerepmirror:00001114:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001115:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001116:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001117:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001118:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001119:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001151:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001152:  (errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001153:  "could not find file descriptor, " 
cabg: cdbfilerepmirror:00001154:  "failover requested"), 
cabg: cdbfilerepmirror:00001155:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001156:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001157:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001158:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001159:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001160:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001192:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001193:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001194:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001195:  "could not open file file flags '%x' file mode '%o': %m, " 
cabg: cdbfilerepmirror:00001196:  "failover requested", 
cabg: cdbfilerepmirror:00001197:  O_CREAT *PIPE* O_RDWR *PIPE* PG_BINARY, 
cabg: cdbfilerepmirror:00001198:  fileMode), 
cabg: cdbfilerepmirror:00001199:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001200:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001201:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001202:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001203:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001204:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001241:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001242:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001243:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001244:  "could not fill zero blocks into segment file : %m, " 
cabg: cdbfilerepmirror:00001245:  "failover requested"), 
cabg: cdbfilerepmirror:00001246:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001247:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001248:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001249:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001250:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001251:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001263:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001264:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001265:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001266:  "could not seek to file position '%d' : %m, " 
cabg: cdbfilerepmirror:00001267:  "failover requested", 
cabg: cdbfilerepmirror:00001268:  fileRepMessageHeader->fileRepOperationDescription.write.offset), 
cabg: cdbfilerepmirror:00001269:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001270:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001271:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001272:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001273:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001274:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001293:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001294:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001295:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001296:  "could not write to file : %m, " 
cabg: cdbfilerepmirror:00001297:  "failover requested"), 
cabg: cdbfilerepmirror:00001298:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001299:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001300:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001301:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001302:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001303:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001316:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001317:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001318:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001319:  "could not find file descriptor : %m, " 
cabg: cdbfilerepmirror:00001320:  "failover requested"), 
cabg: cdbfilerepmirror:00001321:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001322:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001323:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001324:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001325:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001326:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001350:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001351:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001352:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001353:  "could not find file descriptor or open file : %m" 
cabg: cdbfilerepmirror:00001354:  "failover requested"), 
cabg: cdbfilerepmirror:00001355:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001356:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001357:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001358:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001359:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001360:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001425:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001426:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001427:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001428:  "could not fsync file : %m" 
cabg: cdbfilerepmirror:00001429:  "failover requested"), 
cabg: cdbfilerepmirror:00001430:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001431:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001432:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001433:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001434:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001435:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001507:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001508:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001509:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001510:  "could not find file descriptor or open file : %m" 
cabg: cdbfilerepmirror:00001511:  "failover requested"), 
cabg: cdbfilerepmirror:00001512:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001513:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001514:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001515:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001516:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001517:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001542:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001543:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001544:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001545:  "could not fsync file : %m" 
cabg: cdbfilerepmirror:00001546:  "failover requested"), 
cabg: cdbfilerepmirror:00001547:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001548:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001549:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001550:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001551:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001552:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001603:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001604:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001605:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001606:  "could not find file descriptor or open file : %m" 
cabg: cdbfilerepmirror:00001607:  "failover requested"), 
cabg: cdbfilerepmirror:00001608:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001609:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001610:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001611:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001612:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001613:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001639:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001640:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001641:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001642:  "could not truncate file to position '" INT64_FORMAT "' : %m" 
cabg: cdbfilerepmirror:00001643:  "failover requested", 
cabg: cdbfilerepmirror:00001644:  fileRepMessageHeader->fileRepOperationDescription.truncate.position), 
cabg: cdbfilerepmirror:00001645:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001646:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001647:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001648:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001649:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001650:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001686:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001687:  (errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001688:  "could not reconcile xlog file" 
cabg: cdbfilerepmirror:00001689:  "failover requested"), 
cabg: cdbfilerepmirror:00001690:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001691:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001692:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001693:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001694:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001695:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001745:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001746:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001747:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001748:  "could not create directory : %m" 
cabg: cdbfilerepmirror:00001749:  "failover requested"), 
cabg: cdbfilerepmirror:00001750:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001751:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001752:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001753:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001754:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001826:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001827:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001828:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001829:  "could not create file : %m, " 
cabg: cdbfilerepmirror:00001830:  "failover requested"), 
cabg: cdbfilerepmirror:00001831:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001832:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001833:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001834:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001835:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00001877:  ereport(WARNING, 
cabg: cdbfilerepmirror:00001878:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00001879:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00001880:  "could not remove directory : %m, " 
cabg: cdbfilerepmirror:00001881:  "failover requested"), 
cabg: cdbfilerepmirror:00001882:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00001883:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00001884:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00001885:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00001886:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00001887:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00002026:  ereport(WARNING, 
cabg: cdbfilerepmirror:00002027:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00002028:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00002029:  "could not rename to '%s' : %m, " 
cabg: cdbfilerepmirror:00002030:  "failover requested", 
cabg: cdbfilerepmirror:00002031:  newFileName), 
cabg: cdbfilerepmirror:00002032:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00002033:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00002034:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00002035:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00002036:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00002037:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00002062:  ereport(WARNING, 
cabg: cdbfilerepmirror:00002063:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00002064:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00002065:  "could not link to '%s' : %m, " 
cabg: cdbfilerepmirror:00002066:  "failover requested", 
cabg: cdbfilerepmirror:00002067:  newFileName), 
cabg: cdbfilerepmirror:00002068:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00002069:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00002070:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00002071:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00002072:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00002073:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00002183:  ereport(WARNING, 
cabg: cdbfilerepmirror:00002184:  (errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00002185:  "could not queue ack message to be sent to primary, " 
cabg: cdbfilerepmirror:00002186:  "failover requested"), 
cabg: cdbfilerepmirror:00002187:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00002188:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepmirror:00002189:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepmirror:00002190:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepmirror:00002191:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepmirror:00002192:  FileRep_errdetail_ShmemAck(), 
cabg: cdbfilerepmirror:00002193:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00002315:  ereport(WARNING, 
cabg: cdbfilerepmirror:00002316:  (errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00002317:  "could not insert file information in open files hash table identifier '%s' fd '%d', " 
cabg: cdbfilerepmirror:00002318:  "failover requested", 
cabg: cdbfilerepmirror:00002319:  fileName, 
cabg: cdbfilerepmirror:00002320:  fd), 
cabg: cdbfilerepmirror:00002321:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00002322:  FileRep_errdetail_Shmem(), 
cabg: cdbfilerepmirror:00002323:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00002351:  ereport(WARNING, 
cabg: cdbfilerepmirror:00002352:  (errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00002353:  "could not insert file information in open files hash table, entry exists " 
cabg: cdbfilerepmirror:00002354:  "identifier '%s' fd '%d' relation type '%s', " 
cabg: cdbfilerepmirror:00002355:  "failover requested", 
cabg: cdbfilerepmirror:00002356:  fileName, 
cabg: cdbfilerepmirror:00002357:  fd, 
cabg: cdbfilerepmirror:00002358:  FileRepRelationTypeToString[fileRepRelationType]), 
cabg: cdbfilerepmirror:00002359:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00002360:  FileRep_errdetail_Shmem(), 
cabg: cdbfilerepmirror:00002361:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00002593:  ereport(WARNING, 
cabg: cdbfilerepmirror:00002594:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00002595:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00002596:  "could not zero segment file, " 
cabg: cdbfilerepmirror:00002597:  "could not seek to end of file fd '%d' : %m, " 
cabg: cdbfilerepmirror:00002598:  "failover requested", 
cabg: cdbfilerepmirror:00002599:  fd), 
cabg: cdbfilerepmirror:00002600:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00002601:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00002618:  ereport(WARNING, 
cabg: cdbfilerepmirror:00002619:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00002620:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00002621:  "could not zero segment file, " 
cabg: cdbfilerepmirror:00002622:  "could not seek to position " INT64_FORMAT " of file fd '%d' : %m, " 
cabg: cdbfilerepmirror:00002623:  "failover requested", 
cabg: cdbfilerepmirror:00002624:  startOffset, 
cabg: cdbfilerepmirror:00002625:  fd), 
cabg: cdbfilerepmirror:00002626:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00002627:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00002647:  ereport(WARNING, 
cabg: cdbfilerepmirror:00002648:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00002649:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00002650:  "could not zero segment file, " 
cabg: cdbfilerepmirror:00002651:  "could not write to file fd '%d' : %m, " 
cabg: cdbfilerepmirror:00002652:  "failover requested", 
cabg: cdbfilerepmirror:00002653:  fd), 
cabg: cdbfilerepmirror:00002654:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00002655:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00002666:  ereport(WARNING, 
cabg: cdbfilerepmirror:00002667:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00002668:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00002669:  "could not zero segment file, " 
cabg: cdbfilerepmirror:00002670:  "could not fsync file fd '%d' : %m, " 
cabg: cdbfilerepmirror:00002671:  "failover requested", 
cabg: cdbfilerepmirror:00002672:  fd), 
cabg: cdbfilerepmirror:00002673:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00002674:  FileRep_errcontext())); 
cabg: cdbfilerepmirror:00002709:  ereport(WARNING, 
cabg: cdbfilerepmirror:00002710:  (errcode_for_file_access(), 
cabg: cdbfilerepmirror:00002711:  errmsg("mirror failure, " 
cabg: cdbfilerepmirror:00002712:  "could not open file '%s' to issue drop : %m, " 
cabg: cdbfilerepmirror:00002713:  "failover requested", 
cabg: cdbfilerepmirror:00002714:  fileName), 
cabg: cdbfilerepmirror:00002715:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepmirror:00002716:  FileRep_errcontext())); 
aaaaa GP_IGNORE: cabj: cdbfilerepmirrorack - ./backend/cdb/cdbfilerepmirrorack.c
cabj: cdbfilerepmirrorack:00000092:  ereport(WARNING, 
cabj: cdbfilerepmirrorack:00000093:  (errmsg("mirror failure, " 
cabj: cdbfilerepmirrorack:00000094:  "could not queue ack message to be sent to primary, " 
cabj: cdbfilerepmirrorack:00000095:  "failover requested"), 
cabj: cdbfilerepmirrorack:00000096:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabj: cdbfilerepmirrorack:00000097:  FileRep_errdetail(fileRepIdentifier, 
cabj: cdbfilerepmirrorack:00000098:  fileRepRelationType, 
cabj: cdbfilerepmirrorack:00000099:  fileRepOperation, 
cabj: cdbfilerepmirrorack:00000100:  FILEREP_UNDEFINED), 
cabj: cdbfilerepmirrorack:00000101:  FileRep_errdetail_ShmemAck(), 
cabj: cdbfilerepmirrorack:00000102:  FileRep_errcontext())); 
cabj: cdbfilerepmirrorack:00000471:  ereport(WARNING, 
cabj: cdbfilerepmirrorack:00000472:  (errcode_for_socket_access(), 
cabj: cdbfilerepmirrorack:00000473:  errmsg("mirror failure, " 
cabj: cdbfilerepmirrorack:00000474:  "could not sent ack message to primary : %m, " 
cabj: cdbfilerepmirrorack:00000475:  "failover requested"), 
cabj: cdbfilerepmirrorack:00000476:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabj: cdbfilerepmirrorack:00000477:  FileRep_errdetail_ShmemAck(), 
cabj: cdbfilerepmirrorack:00000478:  FileRep_errcontext())); 
aaaaa GP_IGNORE: cabh: cdbfilerepprimary - ./backend/cdb/cdbfilerepprimary.c
cabh: cdbfilerepprimary:00000347:  ereport(LOG, 
cabh: cdbfilerepprimary:00000348:  (errmsg("failover was performed to the primary segment, " 
cabh: cdbfilerepprimary:00000349:  "segment mirroring is suspended "), 
cabh: cdbfilerepprimary:00000350:  errSendAlert(true), 
cabh: cdbfilerepprimary:00000351:  FileRep_errcontext())); 
cabh: cdbfilerepprimary:00000435:  ereport(WARNING, 
cabh: cdbfilerepprimary:00000436:  (errmsg("mirror failure, " 
cabh: cdbfilerepprimary:00000437:  "could not insert message in ACK table" 
cabh: cdbfilerepprimary:00000438:  "failover requested"), 
cabh: cdbfilerepprimary:00000439:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabh: cdbfilerepprimary:00000440:  FileRep_errdetail(fileRepIdentifier, 
cabh: cdbfilerepprimary:00000441:  fileRepRelationType, 
cabh: cdbfilerepprimary:00000442:  fileRepOperation, 
cabh: cdbfilerepprimary:00000443:  FILEREP_UNDEFINED), 
cabh: cdbfilerepprimary:00000444:  FileRep_errdetail_Shmem(), 
cabh: cdbfilerepprimary:00000445:  FileRep_errcontext())); 
cabh: cdbfilerepprimary:00000480:  ereport(WARNING, 
cabh: cdbfilerepprimary:00000481:  (errmsg("mirror failure, " 
cabh: cdbfilerepprimary:00000482:  "could not queue message to be mirrored, " 
cabh: cdbfilerepprimary:00000483:  "failover requested"), 
cabh: cdbfilerepprimary:00000484:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabh: cdbfilerepprimary:00000485:  FileRep_errdetail(fileRepIdentifier, 
cabh: cdbfilerepprimary:00000486:  fileRepRelationType, 
cabh: cdbfilerepprimary:00000487:  fileRepOperation, 
cabh: cdbfilerepprimary:00000488:  FILEREP_UNDEFINED), 
cabh: cdbfilerepprimary:00000489:  FileRep_errdetail_Shmem(), 
cabh: cdbfilerepprimary:00000490:  FileRep_errcontext())); 
cabh: cdbfilerepprimary:00000969:  ereport(WARNING, 
cabh: cdbfilerepprimary:00000970:  (errmsg("mirror failure, " 
cabh: cdbfilerepprimary:00000971:  "could not queue message to be mirrored, " 
cabh: cdbfilerepprimary:00000972:  "failover requested"), 
cabh: cdbfilerepprimary:00000973:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabh: cdbfilerepprimary:00000974:  FileRep_errdetail(fileRepIdentifier, 
cabh: cdbfilerepprimary:00000975:  fileRepRelationType, 
cabh: cdbfilerepprimary:00000976:  FileRepOperationWrite, 
cabh: cdbfilerepprimary:00000977:  FILEREP_UNDEFINED), 
cabh: cdbfilerepprimary:00000978:  FileRep_errdetail_Shmem(), 
cabh: cdbfilerepprimary:00000979:  FileRep_errcontext())); 
cabh: cdbfilerepprimary:00001268:  ereport(WARNING, 
cabh: cdbfilerepprimary:00001269:  (errmsg("mirror failure, " 
cabh: cdbfilerepprimary:00001270:  "could not resynchronize mirror due to missing directories or relations on mirror, " 
cabh: cdbfilerepprimary:00001271:  "failover requested"), 
cabh: cdbfilerepprimary:00001272:  errhint("run gprecoverseg -F (full copy) to re-establish mirror connectivity"), 
cabh: cdbfilerepprimary:00001273:  errSendAlert(true), 
cabh: cdbfilerepprimary:00001274:  FileRep_errdetail(fileRepIdentifier, 
cabh: cdbfilerepprimary:00001275:  fileRepRelationType, 
cabh: cdbfilerepprimary:00001276:  FileRepOperationValidation, 
cabh: cdbfilerepprimary:00001277:  FILEREP_UNDEFINED), 
cabh: cdbfilerepprimary:00001278:  FileRep_errcontext())); 
cabh: cdbfilerepprimary:00001336:  ereport(WARNING, 
cabh: cdbfilerepprimary:00001337:  (errmsg("mirror failure, " 
cabh: cdbfilerepprimary:00001338:  "could not complete operation on mirror, " 
cabh: cdbfilerepprimary:00001339:  "failover requested"), 
cabh: cdbfilerepprimary:00001340:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabh: cdbfilerepprimary:00001341:  FileRep_errdetail(fileRepIdentifier, 
cabh: cdbfilerepprimary:00001342:  FileRepRelationTypeUnknown, 
cabh: cdbfilerepprimary:00001343:  FileRepOperationShutdown, 
cabh: cdbfilerepprimary:00001344:  FILEREP_UNDEFINED), 
cabh: cdbfilerepprimary:00001345:  FileRep_errdetail_Shmem(), 
cabh: cdbfilerepprimary:00001346:  FileRep_errdetail_ShmemAck(), 
cabh: cdbfilerepprimary:00001347:  FileRep_errcontext())); 
cabh: cdbfilerepprimary:00001390:  ereport(WARNING, 
cabh: cdbfilerepprimary:00001391:  (errmsg("mirror failure, " 
cabh: cdbfilerepprimary:00001392:  "could not complete operation on mirror, " 
cabh: cdbfilerepprimary:00001393:  "failover requested"), 
cabh: cdbfilerepprimary:00001394:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabh: cdbfilerepprimary:00001395:  FileRep_errdetail(fileRepIdentifier, 
cabh: cdbfilerepprimary:00001396:  FileRepRelationTypeUnknown, 
cabh: cdbfilerepprimary:00001397:  FileRepOperationInSyncTransition, 
cabh: cdbfilerepprimary:00001398:  FILEREP_UNDEFINED), 
cabh: cdbfilerepprimary:00001399:  FileRep_errdetail_Shmem(), 
cabh: cdbfilerepprimary:00001400:  FileRep_errdetail_ShmemAck(), 
cabh: cdbfilerepprimary:00001401:  FileRep_errcontext())); 
cabh: cdbfilerepprimary:00001457:  ereport(WARNING, 
cabh: cdbfilerepprimary:00001458:  (errmsg("mirror failure, " 
cabh: cdbfilerepprimary:00001459:  "could not complete operation on mirror, " 
cabh: cdbfilerepprimary:00001460:  "failover requested"), 
cabh: cdbfilerepprimary:00001461:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabh: cdbfilerepprimary:00001462:  FileRep_errdetail(fileRepIdentifier, 
cabh: cdbfilerepprimary:00001463:  FileRepRelationTypeUnknown, 
cabh: cdbfilerepprimary:00001464:  FileRepOperationHeartBeat, 
cabh: cdbfilerepprimary:00001465:  FILEREP_UNDEFINED), 
cabh: cdbfilerepprimary:00001466:  FileRep_errdetail_Shmem(), 
cabh: cdbfilerepprimary:00001467:  FileRep_errdetail_ShmemAck(), 
cabh: cdbfilerepprimary:00001468:  FileRep_errcontext())); 
cabh: cdbfilerepprimary:00001531:  ereport(WARNING, 
cabh: cdbfilerepprimary:00001532:  (errmsg("mirror failure, " 
cabh: cdbfilerepprimary:00001533:  "could not complete operation on mirror, " 
cabh: cdbfilerepprimary:00001534:  "failover requested"), 
cabh: cdbfilerepprimary:00001535:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabh: cdbfilerepprimary:00001536:  FileRep_errdetail(fileRepIdentifier, 
cabh: cdbfilerepprimary:00001537:  fileRepRelationType, 
cabh: cdbfilerepprimary:00001538:  FileRepOperationVerify, 
cabh: cdbfilerepprimary:00001539:  FILEREP_UNDEFINED), 
cabh: cdbfilerepprimary:00001540:  FileRep_errdetail_Shmem(), 
cabh: cdbfilerepprimary:00001541:  FileRep_errdetail_ShmemAck(), 
cabh: cdbfilerepprimary:00001542:  FileRep_errcontext())); 
cabh: cdbfilerepprimary:00001584:  ereport(WARNING, 
cabh: cdbfilerepprimary:00001585:  (errmsg("mirror failure, " 
cabh: cdbfilerepprimary:00001586:  "could not complete operation on mirror, " 
cabh: cdbfilerepprimary:00001587:  "failover requested"), 
cabh: cdbfilerepprimary:00001588:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabh: cdbfilerepprimary:00001589:  FileRep_errdetail(fileRepIdentifier, 
cabh: cdbfilerepprimary:00001590:  fileRepRelationType, 
cabh: cdbfilerepprimary:00001591:  FileRepOperationNotSpecified, 
cabh: cdbfilerepprimary:00001592:  FILEREP_UNDEFINED), 
cabh: cdbfilerepprimary:00001593:  FileRep_errdetail_Shmem(), 
cabh: cdbfilerepprimary:00001594:  FileRep_errdetail_ShmemAck(), 
cabh: cdbfilerepprimary:00001595:  FileRep_errcontext())); 
cabh: cdbfilerepprimary:00001900:  ereport(WARNING, 
cabh: cdbfilerepprimary:00001901:  (errmsg("mirror failure, " 
cabh: cdbfilerepprimary:00001902:  "unknown relation type '%d' " 
cabh: cdbfilerepprimary:00001903:  "failover requested", 
cabh: cdbfilerepprimary:00001904:  fileRepMessageHeader->fileRepRelationType), 
cabh: cdbfilerepprimary:00001905:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabh: cdbfilerepprimary:00001906:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabh: cdbfilerepprimary:00001907:  fileRepMessageHeader->fileRepRelationType, 
cabh: cdbfilerepprimary:00001908:  fileRepMessageHeader->fileRepOperation, 
cabh: cdbfilerepprimary:00001909:  fileRepMessageHeader->messageCount), 
cabh: cdbfilerepprimary:00001910:  FileRep_errcontext())); 
cabh: cdbfilerepprimary:00001929:  ereport(WARNING, 
cabh: cdbfilerepprimary:00001930:  (errcode_for_socket_access(), 
cabh: cdbfilerepprimary:00001931:  errmsg("mirror failure, " 
cabh: cdbfilerepprimary:00001932:  "could not sent message to mirror msg header count '%d' local count '%d' : %m, " 
cabh: cdbfilerepprimary:00001933:  "failover requested", 
cabh: cdbfilerepprimary:00001934:  fileRepMessageHeader->messageCount, 
cabh: cdbfilerepprimary:00001935:  spare), 
cabh: cdbfilerepprimary:00001936:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabh: cdbfilerepprimary:00001937:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
cabh: cdbfilerepprimary:00001938:  fileRepMessageHeader->fileRepRelationType, 
cabh: cdbfilerepprimary:00001939:  fileRepMessageHeader->fileRepOperation, 
cabh: cdbfilerepprimary:00001940:  fileRepMessageHeader->messageCount), 
cabh: cdbfilerepprimary:00001941:  FileRep_errdetail_Shmem(), 
cabh: cdbfilerepprimary:00001942:  FileRep_errcontext())); 
aaaaa GP_IGNORE: caca: cdbfilerepprimaryack - ./backend/cdb/cdbfilerepprimaryack.c
caca: cdbfilerepprimaryack:00000145:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00000146:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00000147:  "injected fault by guc filerep_inject_listener_fault, " 
caca: cdbfilerepprimaryack:00000148:  "failover requested"), 
caca: cdbfilerepprimaryack:00000149:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00000192:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00000193:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00000194:  "no connection was established from client from mirror, " 
caca: cdbfilerepprimaryack:00000195:  "primary address(port) '%s(%d)' mirror address(port) '%s(%d)' timeout reached '%d' " 
caca: cdbfilerepprimaryack:00000196:  "failover requested", 
caca: cdbfilerepprimaryack:00000197:  fileRepPrimaryHostAddress, 
caca: cdbfilerepprimaryack:00000198:  fileRepPrimaryPort, 
caca: cdbfilerepprimaryack:00000199:  fileRepMirrorHostAddress, 
caca: cdbfilerepprimaryack:00000200:  fileRepMirrorPort, 
caca: cdbfilerepprimaryack:00000201:  gp_segment_connect_timeout), 
caca: cdbfilerepprimaryack:00000202:  errSendAlert(true), 
caca: cdbfilerepprimaryack:00000203:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00000302:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00000303:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00000304:  "could not queue received ack message to be processed, " 
caca: cdbfilerepprimaryack:00000305:  "failover requested"), 
caca: cdbfilerepprimaryack:00000306:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
caca: cdbfilerepprimaryack:00000307:  FileRep_errdetail_Shmem(), 
caca: cdbfilerepprimaryack:00000308:  FileRep_errdetail_ShmemAck(), 
caca: cdbfilerepprimaryack:00000309:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00000402:  ereport(ERROR, 
caca: cdbfilerepprimaryack:00000403:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caca: cdbfilerepprimaryack:00000404:  (errmsg("not enough shared memory for mirroring")))); 
caca: cdbfilerepprimaryack:00000425:  ereport(ERROR, 
caca: cdbfilerepprimaryack:00000426:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caca: cdbfilerepprimaryack:00000427:  (errmsg("not enough shared memory for mirroring")))); 
caca: cdbfilerepprimaryack:00000443:  ereport(ERROR, 
caca: cdbfilerepprimaryack:00000444:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caca: cdbfilerepprimaryack:00000445:  (errmsg("not enough shared memory for mirroring")))); 
caca: cdbfilerepprimaryack:00000451:  ereport(ERROR, 
caca: cdbfilerepprimaryack:00000452:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caca: cdbfilerepprimaryack:00000453:  (errmsg("not enough shared memory for mirroring")))); 
caca: cdbfilerepprimaryack:00000491:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00000492:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00000493:  "could not lookup ack entry '%s' into ack table, no entry " 
caca: cdbfilerepprimaryack:00000494:  "failover requested", 
caca: cdbfilerepprimaryack:00000495:  (fileName == NULL) ? "<null>" : fileName), 
caca: cdbfilerepprimaryack:00000496:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
caca: cdbfilerepprimaryack:00000497:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00000613:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00000614:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00000615:  "could not insert ack entry into ack table, no memory " 
caca: cdbfilerepprimaryack:00000616:  "failover requested"), 
caca: cdbfilerepprimaryack:00000617:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
caca: cdbfilerepprimaryack:00000618:  FileRep_errdetail(fileRepIdentifier, 
caca: cdbfilerepprimaryack:00000619:  fileRepRelationType, 
caca: cdbfilerepprimaryack:00000620:  fileRepOperation, 
caca: cdbfilerepprimaryack:00000621:  FILEREP_UNDEFINED), 
caca: cdbfilerepprimaryack:00000622:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00000668:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00000669:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00000670:  "could not insert ack entry into ack table, entry exists " 
caca: cdbfilerepprimaryack:00000671:  "failover requested"), 
caca: cdbfilerepprimaryack:00000672:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
caca: cdbfilerepprimaryack:00000673:  FileRep_errdetail(fileRepIdentifier, 
caca: cdbfilerepprimaryack:00000674:  fileRepRelationType, 
caca: cdbfilerepprimaryack:00000675:  fileRepOperation, 
caca: cdbfilerepprimaryack:00000676:  FILEREP_UNDEFINED), 
caca: cdbfilerepprimaryack:00000677:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00000724:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00000725:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00000726:  "could not update ack entry with ack status, no entry found " 
caca: cdbfilerepprimaryack:00000727:  "identifier '%s' relation type '%s' " 
caca: cdbfilerepprimaryack:00000728:  "failover requested", 
caca: cdbfilerepprimaryack:00000729:  (fileName == NULL) ? "<null>" : fileName, 
caca: cdbfilerepprimaryack:00000730:  FileRepRelationTypeToString[fileRepRelationType]), 
caca: cdbfilerepprimaryack:00000731:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
caca: cdbfilerepprimaryack:00000732:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00000854:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00000855:  (errmsg("threshold '75' percent of 'gp_segment_connect_timeout=%d' is reached, " 
caca: cdbfilerepprimaryack:00000856:  "mirror may not be able to keep up with primary, " 
caca: cdbfilerepprimaryack:00000857:  "primary may transition to change tracking", 
caca: cdbfilerepprimaryack:00000858:  gp_segment_connect_timeout), 
caca: cdbfilerepprimaryack:00000859:  errhint("increase guc 'gp_segment_connect_timeout' by 'gpconfig' and 'gpstop -u' "), 
caca: cdbfilerepprimaryack:00000860:  errSendAlert(true))); 
caca: cdbfilerepprimaryack:00000890:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00000891:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00000892:  "could not complete mirrored request identifier '%s' ack state '%s', " 
caca: cdbfilerepprimaryack:00000893:  "failover requested", 
caca: cdbfilerepprimaryack:00000894:  (fileName == NULL) ? "<null>" : fileName, 
caca: cdbfilerepprimaryack:00000895:  FileRepAckStateToString[entry->fileRepAckState]), 
caca: cdbfilerepprimaryack:00000896:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
caca: cdbfilerepprimaryack:00000897:  FileRep_errdetail_ShmemAck(), 
caca: cdbfilerepprimaryack:00000898:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00001072:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00001073:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00001074:  "could not match ack message header checksum between primary '%u' and mirror '%u', " 
caca: cdbfilerepprimaryack:00001075:  "failover requested", 
caca: cdbfilerepprimaryack:00001076:  *fileRepMessageHeaderCrc, 
caca: cdbfilerepprimaryack:00001077:  messageHeaderCrcLocal), 
caca: cdbfilerepprimaryack:00001078:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
caca: cdbfilerepprimaryack:00001079:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
caca: cdbfilerepprimaryack:00001080:  fileRepMessageHeader->fileRepRelationType, 
caca: cdbfilerepprimaryack:00001081:  fileRepMessageHeader->fileRepOperation, 
caca: cdbfilerepprimaryack:00001082:  fileRepMessageHeader->messageCount), 
caca: cdbfilerepprimaryack:00001083:  FileRep_errdetail_ShmemAck(), 
caca: cdbfilerepprimaryack:00001084:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00001137:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00001138:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00001139:  "could not complete operation on mirror ack state '%s', " 
caca: cdbfilerepprimaryack:00001140:  "failover requested", 
caca: cdbfilerepprimaryack:00001141:  FileRepAckStateToString[fileRepMessageHeader->fileRepAckState]), 
caca: cdbfilerepprimaryack:00001142:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
caca: cdbfilerepprimaryack:00001143:  errSendAlert(true), 
caca: cdbfilerepprimaryack:00001144:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
caca: cdbfilerepprimaryack:00001145:  fileRepMessageHeader->fileRepRelationType, 
caca: cdbfilerepprimaryack:00001146:  fileRepMessageHeader->fileRepOperation, 
caca: cdbfilerepprimaryack:00001147:  fileRepMessageHeader->messageCount), 
caca: cdbfilerepprimaryack:00001148:  FileRep_errdetail_Shmem(), 
caca: cdbfilerepprimaryack:00001149:  FileRep_errdetail_ShmemAck(), 
caca: cdbfilerepprimaryack:00001150:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00001166:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00001167:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00001168:  "could not update ack state '%s' in ack hash table, " 
caca: cdbfilerepprimaryack:00001169:  "failover requested", 
caca: cdbfilerepprimaryack:00001170:  FileRepAckStateToString[fileRepMessageHeader->fileRepAckState]), 
caca: cdbfilerepprimaryack:00001171:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
caca: cdbfilerepprimaryack:00001172:  errSendAlert(true), 
caca: cdbfilerepprimaryack:00001173:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
caca: cdbfilerepprimaryack:00001174:  fileRepMessageHeader->fileRepRelationType, 
caca: cdbfilerepprimaryack:00001175:  fileRepMessageHeader->fileRepOperation, 
caca: cdbfilerepprimaryack:00001176:  fileRepMessageHeader->messageCount), 
caca: cdbfilerepprimaryack:00001177:  FileRep_errdetail_Shmem(), 
caca: cdbfilerepprimaryack:00001178:  FileRep_errdetail_ShmemAck(), 
caca: cdbfilerepprimaryack:00001179:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00001326:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00001327:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00001328:  "could not match ack message header checksum between primary '%u' and mirror '%u', " 
caca: cdbfilerepprimaryack:00001329:  "failover requested", 
caca: cdbfilerepprimaryack:00001330:  *fileRepMessageHeaderCrc, 
caca: cdbfilerepprimaryack:00001331:  messageHeaderCrcLocal), 
caca: cdbfilerepprimaryack:00001332:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
caca: cdbfilerepprimaryack:00001333:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
caca: cdbfilerepprimaryack:00001334:  fileRepMessageHeader->fileRepRelationType, 
caca: cdbfilerepprimaryack:00001335:  fileRepMessageHeader->fileRepOperation, 
caca: cdbfilerepprimaryack:00001336:  fileRepMessageHeader->messageCount), 
caca: cdbfilerepprimaryack:00001337:  FileRep_errdetail_ShmemAck(), 
caca: cdbfilerepprimaryack:00001338:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00001366:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00001367:  (errmsg("mirror failure, " 
caca: cdbfilerepprimaryack:00001368:  "could not match ack message body checksum between primary:'%u' and mirror:'%u' data length:'%u', " 
caca: cdbfilerepprimaryack:00001369:  "failover requested", 
caca: cdbfilerepprimaryack:00001370:  fileRepMessageHeader->fileRepMessageBodyCrc, 
caca: cdbfilerepprimaryack:00001371:  messageBodyLocal, 
caca: cdbfilerepprimaryack:00001372:  fileRepMessageHeader->messageBodyLength), 
caca: cdbfilerepprimaryack:00001373:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
caca: cdbfilerepprimaryack:00001374:  
caca: cdbfilerepprimaryack:00001375:  FileRep_errdetail(fileRepMessageHeader->fileRepIdentifier, 
caca: cdbfilerepprimaryack:00001376:  fileRepMessageHeader->fileRepRelationType, 
caca: cdbfilerepprimaryack:00001377:  fileRepMessageHeader->fileRepOperation, 
caca: cdbfilerepprimaryack:00001378:  fileRepMessageHeader->messageCount), 
caca: cdbfilerepprimaryack:00001379:  FileRep_errdetail_Shmem(), 
caca: cdbfilerepprimaryack:00001380:  FileRep_errcontext())); 
caca: cdbfilerepprimaryack:00001389:  ereport(WARNING, 
caca: cdbfilerepprimaryack:00001390:  (errmsg("verification failure, " 
caca: cdbfilerepprimaryack:00001391:  "could not allocate memory to run verification " 
caca: cdbfilerepprimaryack:00001392:  "verification aborted"), 
caca: cdbfilerepprimaryack:00001393:  errhint("run gpverify"))); 
aaaaa GP_IGNORE: cacg: cdbfilerepresetpeerprocess - ./backend/cdb/cdbfilerepresetpeerprocess.c
cacg: cdbfilerepresetpeerprocess:00000094:  elog(WARNING, "could not translate host name \"%s\" to address: %s\n", host, gai_strerror(ret)); 
cacg: cdbfilerepresetpeerprocess:00000158:  elog(WARNING, "during reset, unable to contact primary/mirror peer to coordinate reset; " 
cacg: cdbfilerepresetpeerprocess:00000159:  "will transition to fault state. Error code %d and message '%s'", 
cacg: cdbfilerepresetpeerprocess:00000160:  resultCode, gErrorLogBuf); 
cacg: cdbfilerepresetpeerprocess:00000183:  elog(WARNING, "during reset, invalid message contacting primary/mirror peer to coordinate reset; " 
cacg: cdbfilerepresetpeerprocess:00000184:  "will transition to fault state. Message received: %s", 
cacg: cdbfilerepresetpeerprocess:00000185:  gResultDataBuf); 
cacg: cdbfilerepresetpeerprocess:00000216:  elog(WARNING, "during reset, invalid message contacting primary/mirror peer to coordinate reset; " 
cacg: cdbfilerepresetpeerprocess:00000217:  "will transition to fault state. Message received: %s", 
cacg: cdbfilerepresetpeerprocess:00000218:  gResultDataBuf); 
cacg: cdbfilerepresetpeerprocess:00000306:  elog(WARNING, "during reset, unable to look up address for peer host to coordinate reset; " 
cacg: cdbfilerepresetpeerprocess:00000307:  "will transition to fault state."); 
aaaaa GP_IGNORE: cacd: cdbfilerepresyncmanager - ./backend/cdb/cdbfilerepresyncmanager.c
cacd: cdbfilerepresyncmanager:00000463:  ereport(ERROR, 
cacd: cdbfilerepresyncmanager:00000464:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacd: cdbfilerepresyncmanager:00000465:  (errmsg("not enough shared memory to run resynchronization")))); 
cacd: cdbfilerepresyncmanager:00000514:  ereport(ERROR, 
cacd: cdbfilerepresyncmanager:00000515:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacd: cdbfilerepresyncmanager:00000516:  (errmsg("not enough shared memory to run resynchronization")))); 
cacd: cdbfilerepresyncmanager:00000534:  ereport(ERROR, 
cacd: cdbfilerepresyncmanager:00000535:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacd: cdbfilerepresyncmanager:00000536:  (errmsg("not enough shared memory to run resynchronization")))); 
cacd: cdbfilerepresyncmanager:00000571:  ereport(ERROR, 
cacd: cdbfilerepresyncmanager:00000572:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacd: cdbfilerepresyncmanager:00000573:  (errmsg("not enough shared memory to run resynchronization")))); 
cacd: cdbfilerepresyncmanager:00000795:  ereport(ERROR, 
cacd: cdbfilerepresyncmanager:00000796:  (errcode(ERRCODE_INTERNAL_ERROR), 
cacd: cdbfilerepresyncmanager:00000797:  (errmsg("'MirroredLock' is already held by primary resync manager process")))); 
cacd: cdbfilerepresyncmanager:00001068:  ereport(WARNING, 
cacd: cdbfilerepresyncmanager:00001069:  (errmsg("resync failure, " 
cacd: cdbfilerepresyncmanager:00001070:  "unexpected mirror synchronization state during full resynchronization, " 
cacd: cdbfilerepresyncmanager:00001071:  "failover requested, " 
cacd: cdbfilerepresyncmanager:00001072:  "relation path to be resynchronized '%s' " 
cacd: cdbfilerepresyncmanager:00001073:  "relation storage manager '%s(%d)' mirror synchronization state '%s(%d)' " 
cacd: cdbfilerepresyncmanager:00001074:  "append only loss eof " INT64_FORMAT " " 
cacd: cdbfilerepresyncmanager:00001075:  "append only new eof " INT64_FORMAT " " 
cacd: cdbfilerepresyncmanager:00001076:  "mirror buffer pool resync changed page count " INT64_FORMAT " ", 
cacd: cdbfilerepresyncmanager:00001077:  entry.fileName, 
cacd: cdbfilerepresyncmanager:00001078:  PersistentFileSysRelStorageMgr_Name(entry.relStorageMgr), 
cacd: cdbfilerepresyncmanager:00001079:  entry.relStorageMgr, 
cacd: cdbfilerepresyncmanager:00001080:  MirroredRelDataSynchronizationState_Name(entry.mirrorDataSynchronizationState), 
cacd: cdbfilerepresyncmanager:00001081:  entry.mirrorDataSynchronizationState, 
cacd: cdbfilerepresyncmanager:00001082:  entry.mirrorAppendOnlyLossEof, 
cacd: cdbfilerepresyncmanager:00001083:  entry.mirrorAppendOnlyNewEof, 
cacd: cdbfilerepresyncmanager:00001084:  entry.mirrorBufpoolResyncChangedPageCount), 
cacd: cdbfilerepresyncmanager:00001085:  errhint("run gprecoverseg -F again to re-establish mirror connectivity"))); 
cacd: cdbfilerepresyncmanager:00001430:  ereport(WARNING, 
cacd: cdbfilerepresyncmanager:00001431:  (errmsg("resync failure, " 
cacd: cdbfilerepresyncmanager:00001432:  "could not insert resync information into hash table identifier '%s', no memory " 
cacd: cdbfilerepresyncmanager:00001433:  "failover requested", 
cacd: cdbfilerepresyncmanager:00001434:  key), 
cacd: cdbfilerepresyncmanager:00001435:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cacd: cdbfilerepresyncmanager:00001436:  FileRep_errcontext())); 
cacd: cdbfilerepresyncmanager:00001443:  ereport(WARNING, 
cacd: cdbfilerepresyncmanager:00001444:  (errmsg("resync failure, " 
cacd: cdbfilerepresyncmanager:00001445:  "could not insert resync information into hash table identifier '%s', entry exists " 
cacd: cdbfilerepresyncmanager:00001446:  "failover requested", 
cacd: cdbfilerepresyncmanager:00001447:  key), 
cacd: cdbfilerepresyncmanager:00001448:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cacd: cdbfilerepresyncmanager:00001449:  FileRep_errcontext())); 
aaaaa GP_IGNORE: cacc: cdbfilerepresyncworker - ./backend/cdb/cdbfilerepresyncworker.c
cacc: cdbfilerepresyncworker:00000435:  ereport(ERROR, 
cacc: cdbfilerepresyncworker:00000436:  (errcode_for_file_access(), 
cacc: cdbfilerepresyncworker:00000437:  errmsg("could not open file %u/%u/%u.%u : %s", 
cacc: cdbfilerepresyncworker:00000438:  entry->relFileNode.dbNode, 
cacc: cdbfilerepresyncworker:00000439:  entry->relFileNode.spcNode, 
cacc: cdbfilerepresyncworker:00000440:  entry->relFileNode.relNode, 
cacc: cdbfilerepresyncworker:00000441:  entry->segmentFileNum, 
cacc: cdbfilerepresyncworker:00000442:  strerror(primaryError)))); 
cacc: cdbfilerepresyncworker:00000454:  ereport(ERROR, 
cacc: cdbfilerepresyncworker:00000455:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacc: cdbfilerepresyncworker:00000456:  (errmsg("not enough memory for resynchronization")))); 
cacc: cdbfilerepresyncworker:00000469:  ereport(ERROR, 
cacc: cdbfilerepresyncworker:00000470:  (errcode_for_file_access(), 
cacc: cdbfilerepresyncworker:00000471:  errmsg("could not read from position:" INT64_FORMAT " in file %u/%u/%u.%u : %m", 
cacc: cdbfilerepresyncworker:00000472:  startOffset, 
cacc: cdbfilerepresyncworker:00000473:  entry->relFileNode.dbNode, 
cacc: cdbfilerepresyncworker:00000474:  entry->relFileNode.spcNode, 
cacc: cdbfilerepresyncworker:00000475:  entry->relFileNode.relNode, 
cacc: cdbfilerepresyncworker:00000476:  entry->segmentFileNum))); 
cacc: cdbfilerepresyncworker:00000595:  ereport(WARNING, 
cacc: cdbfilerepresyncworker:00000596:  (errmsg("mirror failure, " 
cacc: cdbfilerepresyncworker:00000597:  "could not resynchonize buffer pool relation '%u/%u/%u', no such relation " 
cacc: cdbfilerepresyncworker:00000598:  "failover requested", 
cacc: cdbfilerepresyncworker:00000599:  result->entries[ii].relFileNode.spcNode, 
cacc: cdbfilerepresyncworker:00000600:  result->entries[ii].relFileNode.dbNode, 
cacc: cdbfilerepresyncworker:00000601:  result->entries[ii].relFileNode.relNode), 
cacc: cdbfilerepresyncworker:00000602:  errhint("run gprecoverseg -F (full copy) to re-establish mirror connectivity"), 
cacc: cdbfilerepresyncworker:00000603:  errSendAlert(true), 
cacc: cdbfilerepresyncworker:00000604:  FileRep_errcontext())); 
cacc: cdbfilerepresyncworker:00000719:  ereport(WARNING, 
cacc: cdbfilerepresyncworker:00000720:  (errmsg("mirror failure, " 
cacc: cdbfilerepresyncworker:00000721:  "could not resynchonize buffer pool relation '%u/%u/%u' block '%d' due to inconsistent lsn, " 
cacc: cdbfilerepresyncworker:00000722:  "lsn end change tracking '%s(%u/%u)' lsn page '%s(%u/%u)' " 
cacc: cdbfilerepresyncworker:00000723:  "number of blocks '%d', " 
cacc: cdbfilerepresyncworker:00000724:  "failover requested", 
cacc: cdbfilerepresyncworker:00000725:  smgr_relation->smgr_rnode.spcNode, 
cacc: cdbfilerepresyncworker:00000726:  smgr_relation->smgr_rnode.dbNode, 
cacc: cdbfilerepresyncworker:00000727:  smgr_relation->smgr_rnode.relNode, 
cacc: cdbfilerepresyncworker:00000728:  result->entries[ii].block_num, 
cacc: cdbfilerepresyncworker:00000729:  XLogLocationToString(&loc), 
cacc: cdbfilerepresyncworker:00000730:  loc.xlogid, 
cacc: cdbfilerepresyncworker:00000731:  loc.xrecoff, 
cacc: cdbfilerepresyncworker:00000732:  XLogLocationToString(&loc1), 
cacc: cdbfilerepresyncworker:00000733:  loc1.xlogid, 
cacc: cdbfilerepresyncworker:00000734:  loc1.xrecoff, 
cacc: cdbfilerepresyncworker:00000735:  numBlocks), 
cacc: cdbfilerepresyncworker:00000736:  errhint("run gprecoverseg -F (full copy) to re-establish mirror connectivity"), 
cacc: cdbfilerepresyncworker:00000737:  errSendAlert(true), 
cacc: cdbfilerepresyncworker:00000738:  FileRep_errcontext())); 
aaaaa GP_IGNORE: cabh: cdbfilerepservice - ./backend/cdb/cdbfilerepservice.c
cabh: cdbfilerepservice:00000404:  ereport(WARNING, 
cabh: cdbfilerepservice:00000405:  (errmsg("mirror failure, " 
cabh: cdbfilerepservice:00000406:  "unexpected filerep state transition from '%s' to '%s' " 
cabh: cdbfilerepservice:00000407:  "failover requested", 
cabh: cdbfilerepservice:00000408:  FileRepStateToString[fileRepState], 
cabh: cdbfilerepservice:00000409:  FileRepStateToString[fileRepStateLocal]), 
cabh: cdbfilerepservice:00000410:  errhint("run gprecoverseg to re-establish mirror connectivity"))); 
cabh: cdbfilerepservice:00000429:  ereport(WARNING, 
cabh: cdbfilerepservice:00000430:  (errmsg("mirror failure, " 
cabh: cdbfilerepservice:00000431:  "unexpected filerep state transition from '%s' to '%s' " 
cabh: cdbfilerepservice:00000432:  "failover requested", 
cabh: cdbfilerepservice:00000433:  FileRepStateToString[fileRepState], 
cabh: cdbfilerepservice:00000434:  FileRepStateToString[fileRepStateLocal]), 
cabh: cdbfilerepservice:00000435:  errhint("run gprecoverseg to re-establish mirror connectivity"))); 
cabh: cdbfilerepservice:00000460:  ereport(WARNING, 
cabh: cdbfilerepservice:00000461:  (errmsg("mirror failure, " 
cabh: cdbfilerepservice:00000462:  "unexpected filerep state transition from '%s' to '%s' " 
cabh: cdbfilerepservice:00000463:  "failover requested", 
cabh: cdbfilerepservice:00000464:  FileRepStateToString[fileRepState], 
cabh: cdbfilerepservice:00000465:  FileRepStateToString[fileRepStateLocal]), 
cabh: cdbfilerepservice:00000466:  errhint("run gprecoverseg to re-establish mirror connectivity"))); 
cabh: cdbfilerepservice:00000489:  ereport(WARNING, 
cabh: cdbfilerepservice:00000490:  (errmsg("mirror failure, " 
cabh: cdbfilerepservice:00000491:  "unexpected filerep state transition from '%s' to '%s' " 
cabh: cdbfilerepservice:00000492:  "failover requested", 
cabh: cdbfilerepservice:00000493:  FileRepStateToString[fileRepState], 
cabh: cdbfilerepservice:00000494:  FileRepStateToString[fileRepStateLocal]), 
cabh: cdbfilerepservice:00000495:  errhint("run gprecoverseg to re-establish mirror connectivity"))); 
cabh: cdbfilerepservice:00000585:  ereport(FATAL, (errcode(ERRCODE_UNDEFINED_DATABASE), 
cabh: cdbfilerepservice:00000586:  errmsg("database 'template0' does not exist"))); 
cabh: cdbfilerepservice:00000613:  elog(FATAL, "bad backend id: %d", MyBackendId); 
aaaaa GP_IGNORE: cabg: cdbfilerepverify - ./backend/cdb/cdbfilerepverify.c
cabg: cdbfilerepverify:00000607:  ereport(WARNING, 
cabg: cdbfilerepverify:00000608:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000609:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000610:  "could not write to file '%s' data '%s' length '%lu' verification token '%s' : %m " 
cabg: cdbfilerepverify:00000611:  "verification aborted", 
cabg: cdbfilerepverify:00000612:  logControl.logOptions.fixPath, 
cabg: cdbfilerepverify:00000613:  fixMessage, 
cabg: cdbfilerepverify:00000614:  (long unsigned int) strlen(fixMessage), 
cabg: cdbfilerepverify:00000615:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00000616:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00000621:  ereport(WARNING, 
cabg: cdbfilerepverify:00000622:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000623:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000624:  "could not flush (fsync) to file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00000625:  "verification aborted", 
cabg: cdbfilerepverify:00000626:  logControl.logOptions.fixPath, 
cabg: cdbfilerepverify:00000627:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00000628:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00000653:  ereport(WARNING, 
cabg: cdbfilerepverify:00000654:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000655:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000656:  "could not create directory '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00000657:  "verification aborted", 
cabg: cdbfilerepverify:00000658:  VERIFYDIR, 
cabg: cdbfilerepverify:00000659:  token), 
cabg: cdbfilerepverify:00000660:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00000677:  ereport(WARNING, 
cabg: cdbfilerepverify:00000678:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000679:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000680:  "could not open file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00000681:  "verification aborted", 
cabg: cdbfilerepverify:00000682:  (fileName == NULL) ? "<null>" : fileName, 
cabg: cdbfilerepverify:00000683:  token), 
cabg: cdbfilerepverify:00000684:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00000694:  ereport(WARNING, 
cabg: cdbfilerepverify:00000695:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000696:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000697:  "could not write to file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00000698:  "verification aborted", 
cabg: cdbfilerepverify:00000699:  (fileName == NULL) ? "<null>" : fileName, 
cabg: cdbfilerepverify:00000700:  token), 
cabg: cdbfilerepverify:00000701:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00000707:  ereport(WARNING, 
cabg: cdbfilerepverify:00000708:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000709:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000710:  "could not write to file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00000711:  "verification aborted", 
cabg: cdbfilerepverify:00000712:  (fileName == NULL) ? "<null>" : fileName, 
cabg: cdbfilerepverify:00000713:  token), 
cabg: cdbfilerepverify:00000714:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00000740:  ereport(WARNING, 
cabg: cdbfilerepverify:00000741:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000742:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000743:  "could not open file '%s' : %m " 
cabg: cdbfilerepverify:00000744:  "verification aborted", 
cabg: cdbfilerepverify:00000745:  (fileName == NULL) ? "<null>" : fileName), 
cabg: cdbfilerepverify:00000746:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00000754:  ereport(WARNING, 
cabg: cdbfilerepverify:00000755:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000756:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000757:  "in progress file empty '%s' : %m " 
cabg: cdbfilerepverify:00000758:  "verification aborted", 
cabg: cdbfilerepverify:00000759:  (fileName == NULL) ? "<null>" : fileName), 
cabg: cdbfilerepverify:00000760:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00000769:  ereport(WARNING, 
cabg: cdbfilerepverify:00000770:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000771:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000772:  "could not seek to begin of file '%s' : %m " 
cabg: cdbfilerepverify:00000773:  "verification aborted", 
cabg: cdbfilerepverify:00000774:  (fileName == NULL) ? "<null>" : fileName), 
cabg: cdbfilerepverify:00000775:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00000784:  ereport(WARNING, 
cabg: cdbfilerepverify:00000785:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000786:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000787:  "could not read from file '%s' verification token : %m " 
cabg: cdbfilerepverify:00000788:  "verification aborted", 
cabg: cdbfilerepverify:00000789:  (fileName == NULL) ? "<null>" : fileName), 
cabg: cdbfilerepverify:00000790:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00000811:  ereport(WARNING, 
cabg: cdbfilerepverify:00000812:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000813:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000814:  "could not read from file '%s' verification token : %m " 
cabg: cdbfilerepverify:00000815:  "verification aborted", 
cabg: cdbfilerepverify:00000816:  (fileName == NULL) ? "<null>" : fileName), 
cabg: cdbfilerepverify:00000817:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00000841:  ereport(WARNING, 
cabg: cdbfilerepverify:00000842:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000843:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000844:  "could not create directory '%s' : %m " 
cabg: cdbfilerepverify:00000845:  "verification aborted", 
cabg: cdbfilerepverify:00000846:  VERIFYDIR), 
cabg: cdbfilerepverify:00000847:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00000864:  ereport(WARNING, 
cabg: cdbfilerepverify:00000865:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000866:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000867:  "could not open file '%s' : %m " 
cabg: cdbfilerepverify:00000868:  "verification aborted", 
cabg: cdbfilerepverify:00000869:  fileName), 
cabg: cdbfilerepverify:00000870:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00000879:  ereport(WARNING, 
cabg: cdbfilerepverify:00000880:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000881:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000882:  "could not write to file '%s' : %m " 
cabg: cdbfilerepverify:00000883:  "verification aborted", 
cabg: cdbfilerepverify:00000884:  fileName), 
cabg: cdbfilerepverify:00000885:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00000907:  ereport(WARNING, 
cabg: cdbfilerepverify:00000908:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000909:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000910:  "could not create directory '%s' : %m " 
cabg: cdbfilerepverify:00000911:  "verification aborted ", 
cabg: cdbfilerepverify:00000912:  VERIFYDIR), 
cabg: cdbfilerepverify:00000913:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00000951:  ereport(WARNING, 
cabg: cdbfilerepverify:00000952:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000953:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000954:  "could not open file '%s' : %m " 
cabg: cdbfilerepverify:00000955:  "verification aborted ", 
cabg: cdbfilerepverify:00000956:  logControl->logOptions.logPath), 
cabg: cdbfilerepverify:00000957:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00000965:  ereport(WARNING, 
cabg: cdbfilerepverify:00000966:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000967:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000968:  "could not seek to end of file '%s' : %m " 
cabg: cdbfilerepverify:00000969:  "verification aborted", 
cabg: cdbfilerepverify:00000970:  logControl->logOptions.logPath), 
cabg: cdbfilerepverify:00000971:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00000984:  ereport(WARNING, 
cabg: cdbfilerepverify:00000985:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000986:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00000987:  "could not open file '%s' : %m " 
cabg: cdbfilerepverify:00000988:  "verification aborted ", 
cabg: cdbfilerepverify:00000989:  logControl->logOptions.fixPath), 
cabg: cdbfilerepverify:00000990:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00000997:  ereport(WARNING, 
cabg: cdbfilerepverify:00000998:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00000999:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00001000:  "could not seek to end of file '%s' : %m " 
cabg: cdbfilerepverify:00001001:  "verification aborted", 
cabg: cdbfilerepverify:00001002:  logControl->logOptions.fixPath), 
cabg: cdbfilerepverify:00001003:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00001018:  ereport(WARNING, 
cabg: cdbfilerepverify:00001019:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00001020:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00001021:  "could not open file '%s' : %m " 
cabg: cdbfilerepverify:00001022:  "verification aborted ", 
cabg: cdbfilerepverify:00001023:  logControl->logOptions.chkpntPath), 
cabg: cdbfilerepverify:00001024:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00001031:  ereport(WARNING, 
cabg: cdbfilerepverify:00001032:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00001033:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00001034:  "could not seek to end of file '%s' : %m " 
cabg: cdbfilerepverify:00001035:  "verification aborted", 
cabg: cdbfilerepverify:00001036:  logControl->logOptions.chkpntPath), 
cabg: cdbfilerepverify:00001037:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00001050:  ereport(WARNING, 
cabg: cdbfilerepverify:00001051:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00001052:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00001053:  "could not open file '%s' : %m " 
cabg: cdbfilerepverify:00001054:  "verification aborted ", 
cabg: cdbfilerepverify:00001055:  logControl->logOptions.externalTablePath), 
cabg: cdbfilerepverify:00001056:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00001068:  ereport(WARNING, 
cabg: cdbfilerepverify:00001069:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00001070:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00001071:  "could not open file '%s' : %m " 
cabg: cdbfilerepverify:00001072:  "verification aborted ", 
cabg: cdbfilerepverify:00001073:  logControl->logOptions.resultsPath), 
cabg: cdbfilerepverify:00001074:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00001449:  ereport(WARNING, 
cabg: cdbfilerepverify:00001450:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00001451:  errmsg("could not write to file '%s' data '%p' dataLength '%lu' : %m", 
cabg: cdbfilerepverify:00001452:  logControl.logOptions.logPath, 
cabg: cdbfilerepverify:00001453:  logMessage, 
cabg: cdbfilerepverify:00001454:  (long unsigned int) strlen(logMessage)))); 
cabg: cdbfilerepverify:00001460:  ereport(WARNING, 
cabg: cdbfilerepverify:00001461:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00001462:  errmsg("could not write to file '%s' data '%p' dataLength '%u' : %m", 
cabg: cdbfilerepverify:00001463:  logControl.logOptions.logPath, 
cabg: cdbfilerepverify:00001464:  logMessage, 
cabg: cdbfilerepverify:00001465:  (int) strlen(logMessage)))); 
cabg: cdbfilerepverify:00001591:  ereport(WARNING, 
cabg: cdbfilerepverify:00001592:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00001593:  "request '%s' aborted because inprogress request '%s' has priority " 
cabg: cdbfilerepverify:00001594:  "verification aborted", 
cabg: cdbfilerepverify:00001595:  request->logControl.logOptions.token, token), 
cabg: cdbfilerepverify:00001596:  errhint("rerun new request when inprogress request is complete"))); 
cabg: cdbfilerepverify:00001797:  ereport(WARNING, 
cabg: cdbfilerepverify:00001798:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00001799:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00001800:  "could not create directory '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00001801:  "verification aborted, " 
cabg: cdbfilerepverify:00001802:  "results not reported", 
cabg: cdbfilerepverify:00001803:  VERIFYDIR, 
cabg: cdbfilerepverify:00001804:  token), 
cabg: cdbfilerepverify:00001805:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00001822:  ereport(WARNING, 
cabg: cdbfilerepverify:00001823:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00001824:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00001825:  "could not open file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00001826:  "verification aborted, " 
cabg: cdbfilerepverify:00001827:  "results not reported", 
cabg: cdbfilerepverify:00001828:  (filename == NULL) ? "<null>" : filename, 
cabg: cdbfilerepverify:00001829:  token), 
cabg: cdbfilerepverify:00001830:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00001845:  ereport(WARNING, 
cabg: cdbfilerepverify:00001846:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00001847:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00001848:  "could not write to file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00001849:  "verification aborted, " 
cabg: cdbfilerepverify:00001850:  "results not reported", 
cabg: cdbfilerepverify:00001851:  (filename == NULL) ? "<null>" : filename, 
cabg: cdbfilerepverify:00001852:  token), 
cabg: cdbfilerepverify:00001853:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00001900:  ereport(WARNING, 
cabg: cdbfilerepverify:00001901:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00001902:  "could not resume verification token '%s' retry number '%d' " 
cabg: cdbfilerepverify:00001903:  "verification aborted", 
cabg: cdbfilerepverify:00001904:  request->fileRepVerifyArguments.token, 
cabg: cdbfilerepverify:00001905:  request->numAutoRestarts), 
cabg: cdbfilerepverify:00001906:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00001950:  ereport(WARNING, 
cabg: cdbfilerepverify:00001951:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00001952:  "no verification in progress"))); 
cabg: cdbfilerepverify:00002266:  ereport(WARNING, 
cabg: cdbfilerepverify:00002267:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00002268:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00002269:  "could not open file '%s' : %m " 
cabg: cdbfilerepverify:00002270:  "verification aborted ", 
cabg: cdbfilerepverify:00002271:  request->logControl.logOptions.resultsPath), 
cabg: cdbfilerepverify:00002272:  errhint("address file system failure and run gpverify"))); 
cabg: cdbfilerepverify:00002281:  ereport(WARNING, 
cabg: cdbfilerepverify:00002282:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00002283:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00002284:  "could not write to file '%s' data '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00002285:  "verification aborted", 
cabg: cdbfilerepverify:00002286:  request->logControl.logOptions.resultsPath, 
cabg: cdbfilerepverify:00002287:  result, 
cabg: cdbfilerepverify:00002288:  request->fileRepVerifyArguments.token), 
cabg: cdbfilerepverify:00002289:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00002297:  ereport(WARNING, 
cabg: cdbfilerepverify:00002298:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00002299:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00002300:  "could not write to file '%s' data '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00002301:  "verification aborted", 
cabg: cdbfilerepverify:00002302:  request->logControl.logOptions.resultsPath, 
cabg: cdbfilerepverify:00002303:  result, 
cabg: cdbfilerepverify:00002304:  request->fileRepVerifyArguments.token), 
cabg: cdbfilerepverify:00002305:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00002434:  ereport(WARNING, 
cabg: cdbfilerepverify:00002435:  (errmsg("invalid verification request, " 
cabg: cdbfilerepverify:00002436:  "could not find directory '%s' verification token '%s' " 
cabg: cdbfilerepverify:00002437:  "verification aborted", 
cabg: cdbfilerepverify:00002438:  args->directoryTree, 
cabg: cdbfilerepverify:00002439:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00002440:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00002464:  ereport(WARNING, 
cabg: cdbfilerepverify:00002465:  (errmsg("invalid verification request, " 
cabg: cdbfilerepverify:00002466:  "could not find file '%s' verification token '%s' " 
cabg: cdbfilerepverify:00002467:  "verification aborted", 
cabg: cdbfilerepverify:00002468:  args->compareFile, 
cabg: cdbfilerepverify:00002469:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00002470:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00002510:  ereport(WARNING, 
cabg: cdbfilerepverify:00002511:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00002512:  "could not allocate memory to start verification token '%s' " 
cabg: cdbfilerepverify:00002513:  "verification aborted", 
cabg: cdbfilerepverify:00002514:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00002515:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00002538:  ereport(WARNING, 
cabg: cdbfilerepverify:00002539:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00002540:  "could not allocate memory to start verification token '%s' " 
cabg: cdbfilerepverify:00002541:  "verification aborted", 
cabg: cdbfilerepverify:00002542:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00002543:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00002560:  ereport(WARNING, 
cabg: cdbfilerepverify:00002561:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00002562:  "could not allocate memory to start verification token '%s' " 
cabg: cdbfilerepverify:00002563:  "verification aborted", 
cabg: cdbfilerepverify:00002564:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00002565:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00002612:  ereport(WARNING, 
cabg: cdbfilerepverify:00002613:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00002614:  "could not allocate memory to start verification token '%s' " 
cabg: cdbfilerepverify:00002615:  "verification aborted", 
cabg: cdbfilerepverify:00002616:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00002617:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00002639:  ereport(WARNING, 
cabg: cdbfilerepverify:00002640:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00002641:  "could not allocate memory to start verification token '%s' " 
cabg: cdbfilerepverify:00002642:  "verification aborted", 
cabg: cdbfilerepverify:00002643:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00002644:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00002662:  ereport(WARNING, 
cabg: cdbfilerepverify:00002663:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00002664:  "could not allocate memory to start verification token '%s' " 
cabg: cdbfilerepverify:00002665:  "verification aborted", 
cabg: cdbfilerepverify:00002666:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00002667:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00003257:  ereport(WARNING, 
cabg: cdbfilerepverify:00003258:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00003259:  "unable to complete verification request with token '%s'" 
cabg: cdbfilerepverify:00003260:  "verification aborted, ", 
cabg: cdbfilerepverify:00003261:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00003262:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00003921:  ereport(WARNING, 
cabg: cdbfilerepverify:00003922:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00003923:  "could not allocate memory to run verification token '%s' " 
cabg: cdbfilerepverify:00003924:  "verification aborted", 
cabg: cdbfilerepverify:00003925:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00003926:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00004600:  ereport(WARNING, 
cabg: cdbfilerepverify:00004601:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00004602:  "unable to complete verification request with token '%s'" 
cabg: cdbfilerepverify:00004603:  "verification aborted, ", 
cabg: cdbfilerepverify:00004604:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00004605:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00004851:  ereport(WARNING, 
cabg: cdbfilerepverify:00004852:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00004853:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00004854:  "could not open file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00004855:  "verification aborted", 
cabg: cdbfilerepverify:00004856:  (chkpntPath == NULL) ? "<null>" : chkpntPath, 
cabg: cdbfilerepverify:00004857:  token), 
cabg: cdbfilerepverify:00004858:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00004867:  ereport(WARNING, 
cabg: cdbfilerepverify:00004868:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00004869:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00004870:  "checkpoint file empty '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00004871:  "verification aborted", 
cabg: cdbfilerepverify:00004872:  (chkpntPath == NULL) ? "<null>" : chkpntPath, 
cabg: cdbfilerepverify:00004873:  token), 
cabg: cdbfilerepverify:00004874:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00004883:  ereport(WARNING, 
cabg: cdbfilerepverify:00004884:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00004885:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00004886:  "could not seek to begin of file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00004887:  "verification aborted", 
cabg: cdbfilerepverify:00004888:  (chkpntPath == NULL) ? "<null>" : chkpntPath, 
cabg: cdbfilerepverify:00004889:  token), 
cabg: cdbfilerepverify:00004890:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00004902:  ereport(WARNING, 
cabg: cdbfilerepverify:00004903:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00004904:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00004905:  "could not read from file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00004906:  "verification aborted", 
cabg: cdbfilerepverify:00004907:  (chkpntPath == NULL) ? "<null>" : chkpntPath, 
cabg: cdbfilerepverify:00004908:  token), 
cabg: cdbfilerepverify:00004909:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00004918:  ereport(WARNING, 
cabg: cdbfilerepverify:00004919:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00004920:  "could not match verification request between expected '%s' and checkpoint token '%s' file '%s' " 
cabg: cdbfilerepverify:00004921:  "verification aborted", 
cabg: cdbfilerepverify:00004922:  token, 
cabg: cdbfilerepverify:00004923:  (chkpntPath == NULL) ? "<null>" : chkpntPath, 
cabg: cdbfilerepverify:00004924:  restore.logControl.logOptions.token), 
cabg: cdbfilerepverify:00004925:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00004938:  ereport(WARNING, 
cabg: cdbfilerepverify:00004939:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00004940:  "could not match verification checkpoint version expected '%d' actual '%d' file '%s' " 
cabg: cdbfilerepverify:00004941:  "verification token '%s' " 
cabg: cdbfilerepverify:00004942:  "verification aborted", 
cabg: cdbfilerepverify:00004943:  CHECKPOINT_VERSION_ID, 
cabg: cdbfilerepverify:00004944:  request->checkpointVersion, 
cabg: cdbfilerepverify:00004945:  (chkpntPath == NULL) ? "<null>" : chkpntPath, 
cabg: cdbfilerepverify:00004946:  token), 
cabg: cdbfilerepverify:00004947:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00004963:  ereport(WARNING, 
cabg: cdbfilerepverify:00004964:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00004965:  "could not allocate memory to resume verification token '%s' " 
cabg: cdbfilerepverify:00004966:  "verification aborted", 
cabg: cdbfilerepverify:00004967:  token), 
cabg: cdbfilerepverify:00004968:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00004989:  ereport(WARNING, 
cabg: cdbfilerepverify:00004990:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00004991:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00004992:  "could not read from file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00004993:  "verification aborted", 
cabg: cdbfilerepverify:00004994:  (chkpntPath == NULL) ? "<null>" : chkpntPath, 
cabg: cdbfilerepverify:00004995:  token), 
cabg: cdbfilerepverify:00004996:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005007:  ereport(WARNING, 
cabg: cdbfilerepverify:00005008:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00005009:  "could not allocate memory to resume verification token '%s' " 
cabg: cdbfilerepverify:00005010:  "verification aborted", 
cabg: cdbfilerepverify:00005011:  token), 
cabg: cdbfilerepverify:00005012:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005025:  ereport(WARNING, 
cabg: cdbfilerepverify:00005026:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00005027:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00005028:  "could not read from file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00005029:  "verification aborted", 
cabg: cdbfilerepverify:00005030:  (chkpntPath == NULL) ? "<null>" : chkpntPath, 
cabg: cdbfilerepverify:00005031:  token), 
cabg: cdbfilerepverify:00005032:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005049:  ereport(WARNING, 
cabg: cdbfilerepverify:00005050:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00005051:  "could not allocate memory to resume verification token '%s' " 
cabg: cdbfilerepverify:00005052:  "verification aborted", 
cabg: cdbfilerepverify:00005053:  token), 
cabg: cdbfilerepverify:00005054:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005074:  ereport(WARNING, 
cabg: cdbfilerepverify:00005075:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00005076:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00005077:  "could not read from file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00005078:  "verification aborted", 
cabg: cdbfilerepverify:00005079:  (chkpntPath == NULL) ? "<null>" : chkpntPath, 
cabg: cdbfilerepverify:00005080:  token), 
cabg: cdbfilerepverify:00005081:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005092:  ereport(WARNING, 
cabg: cdbfilerepverify:00005093:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00005094:  "could not allocate memory to resume verification token '%s' " 
cabg: cdbfilerepverify:00005095:  "verification aborted", 
cabg: cdbfilerepverify:00005096:  token), 
cabg: cdbfilerepverify:00005097:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005110:  ereport(WARNING, 
cabg: cdbfilerepverify:00005111:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00005112:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00005113:  "could not read from file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00005114:  "verification aborted", 
cabg: cdbfilerepverify:00005115:  (chkpntPath == NULL) ? "<null>" : chkpntPath, 
cabg: cdbfilerepverify:00005116:  token), 
cabg: cdbfilerepverify:00005117:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005151:  ereport(WARNING, 
cabg: cdbfilerepverify:00005152:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00005153:  "resume information is not valid " 
cabg: cdbfilerepverify:00005154:  "verification aborted"), 
cabg: cdbfilerepverify:00005155:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005239:  ereport(WARNING, 
cabg: cdbfilerepverify:00005240:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00005241:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00005242:  "could not seek to begin of file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00005243:  "verification aborted", 
cabg: cdbfilerepverify:00005244:  request->logControl.logOptions.chkpntPath, 
cabg: cdbfilerepverify:00005245:  request->fileRepVerifyArguments.token), 
cabg: cdbfilerepverify:00005246:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005255:  ereport(WARNING, 
cabg: cdbfilerepverify:00005256:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00005257:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00005258:  "could not write to file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00005259:  "verification aborted", 
cabg: cdbfilerepverify:00005260:  request->logControl.logOptions.chkpntPath, 
cabg: cdbfilerepverify:00005261:  request->fileRepVerifyArguments.token), 
cabg: cdbfilerepverify:00005262:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005282:  ereport(WARNING, 
cabg: cdbfilerepverify:00005283:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00005284:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00005285:  "could not write to file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00005286:  "verification aborted", 
cabg: cdbfilerepverify:00005287:  request->logControl.logOptions.chkpntPath, 
cabg: cdbfilerepverify:00005288:  request->fileRepVerifyArguments.token), 
cabg: cdbfilerepverify:00005289:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005299:  ereport(WARNING, 
cabg: cdbfilerepverify:00005300:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00005301:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00005302:  "could not write to file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00005303:  "verification aborted", 
cabg: cdbfilerepverify:00005304:  request->logControl.logOptions.chkpntPath, 
cabg: cdbfilerepverify:00005305:  request->fileRepVerifyArguments.token), 
cabg: cdbfilerepverify:00005306:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005321:  ereport(WARNING, 
cabg: cdbfilerepverify:00005322:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00005323:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00005324:  "could not write to file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00005325:  "verification aborted", 
cabg: cdbfilerepverify:00005326:  request->logControl.logOptions.chkpntPath, 
cabg: cdbfilerepverify:00005327:  request->fileRepVerifyArguments.token), 
cabg: cdbfilerepverify:00005328:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005337:  ereport(WARNING, 
cabg: cdbfilerepverify:00005338:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00005339:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00005340:  "could not write to file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00005341:  "verification aborted", 
cabg: cdbfilerepverify:00005342:  request->logControl.logOptions.chkpntPath, 
cabg: cdbfilerepverify:00005343:  request->fileRepVerifyArguments.token), 
cabg: cdbfilerepverify:00005344:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005354:  ereport(WARNING, 
cabg: cdbfilerepverify:00005355:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00005356:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00005357:  "could not flush (fsync) to file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00005358:  "verification aborted", 
cabg: cdbfilerepverify:00005359:  request->logControl.logOptions.chkpntPath, 
cabg: cdbfilerepverify:00005360:  request->fileRepVerifyArguments.token), 
cabg: cdbfilerepverify:00005361:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005669:  ereport(WARNING, 
cabg: cdbfilerepverify:00005670:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00005671:  "could not allocate memory to run verification token '%s' " 
cabg: cdbfilerepverify:00005672:  "verification aborted", 
cabg: cdbfilerepverify:00005673:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00005674:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00005772:  ereport(WARNING, 
cabg: cdbfilerepverify:00005773:  (errmsg("mirror failure, " 
cabg: cdbfilerepverify:00005774:  "could not complete operation on mirror, " 
cabg: cdbfilerepverify:00005775:  "failover requested"), 
cabg: cdbfilerepverify:00005776:  errhint("run gprecoverseg to re-establish mirror connectivity"), 
cabg: cdbfilerepverify:00005777:  FileRep_errdetail(fileRepIdentifier, 
cabg: cdbfilerepverify:00005778:  fileRepRelationType, 
cabg: cdbfilerepverify:00005779:  FileRepOperationVerify, 
cabg: cdbfilerepverify:00005780:  FILEREP_UNDEFINED), 
cabg: cdbfilerepverify:00005781:  FileRep_errdetail_Shmem(), 
cabg: cdbfilerepverify:00005782:  FileRep_errdetail_ShmemAck(), 
cabg: cdbfilerepverify:00005783:  FileRep_errcontext())); 
cabg: cdbfilerepverify:00006447:  ereport(WARNING, 
cabg: cdbfilerepverify:00006448:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00006449:  "could not allocate memory to run verification token '%s' " 
cabg: cdbfilerepverify:00006450:  "verification aborted", 
cabg: cdbfilerepverify:00006451:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00006452:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00006549:  ereport(WARNING, 
cabg: cdbfilerepverify:00006550:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00006551:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00006552:  "could not find file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00006553:  "verification aborted ", 
cabg: cdbfilerepverify:00006554:  fileName, 
cabg: cdbfilerepverify:00006555:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00006556:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00006576:  ereport(WARNING, 
cabg: cdbfilerepverify:00006577:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00006578:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00006579:  "not a regular file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00006580:  "verification aborted ", 
cabg: cdbfilerepverify:00006581:  fileName, 
cabg: cdbfilerepverify:00006582:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00006583:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00006621:  ereport(WARNING, 
cabg: cdbfilerepverify:00006622:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00006623:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00006624:  "length '" INT64_FORMAT "' bigger than '%d' file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00006625:  "verification aborted ", 
cabg: cdbfilerepverify:00006626:  dataLength, 
cabg: cdbfilerepverify:00006627:  BLCKSZ, 
cabg: cdbfilerepverify:00006628:  fileName, 
cabg: cdbfilerepverify:00006629:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00006630:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00006646:  ereport(WARNING, 
cabg: cdbfilerepverify:00006647:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00006648:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00006649:  "mirror file '%s' is shorter ' " INT64_FORMAT " ' than primary offset ' " INT64_FORMAT " ' length '" INT64_FORMAT "' verification token '%s' : %m " 
cabg: cdbfilerepverify:00006650:  "verification aborted ", 
cabg: cdbfilerepverify:00006651:  fileName, 
cabg: cdbfilerepverify:00006652:  info.st_size, 
cabg: cdbfilerepverify:00006653:  fileOffset, 
cabg: cdbfilerepverify:00006654:  dataLength, 
cabg: cdbfilerepverify:00006655:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00006656:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00006695:  ereport(WARNING, 
cabg: cdbfilerepverify:00006696:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00006697:  "could not allocate memory to run verification token '%s' " 
cabg: cdbfilerepverify:00006698:  "verification aborted", 
cabg: cdbfilerepverify:00006699:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00006700:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00006726:  ereport(WARNING, 
cabg: cdbfilerepverify:00006727:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00006728:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00006729:  "could not open file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00006730:  "verification aborted ", 
cabg: cdbfilerepverify:00006731:  fileName, 
cabg: cdbfilerepverify:00006732:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00006733:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00006765:  ereport(WARNING, 
cabg: cdbfilerepverify:00006766:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00006767:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00006768:  "could not read file '%s' offset '" INT64_FORMAT "' length requested '" INT64_FORMAT "' " 
cabg: cdbfilerepverify:00006769:  "length read '%u' : %m " 
cabg: cdbfilerepverify:00006770:  "verification aborted", 
cabg: cdbfilerepverify:00006771:  fileName, 
cabg: cdbfilerepverify:00006772:  fileOffset, 
cabg: cdbfilerepverify:00006773:  dataLength, 
cabg: cdbfilerepverify:00006774:  bytesRead), 
cabg: cdbfilerepverify:00006775:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00006886:  ereport(WARNING, 
cabg: cdbfilerepverify:00006887:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00006888:  "could not allocate memory to run verification token '%s' " 
cabg: cdbfilerepverify:00006889:  "verification aborted", 
cabg: cdbfilerepverify:00006890:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00006891:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00006979:  ereport(WARNING, 
cabg: cdbfilerepverify:00006980:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00006981:  "could not allocate memory to run verification token '%s' " 
cabg: cdbfilerepverify:00006982:  "verification aborted", 
cabg: cdbfilerepverify:00006983:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00006984:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00006994:  ereport(WARNING, 
cabg: cdbfilerepverify:00006995:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00006996:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00006997:  "could not read directory '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00006998:  "verification aborted", 
cabg: cdbfilerepverify:00006999:  directoryName, 
cabg: cdbfilerepverify:00007000:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00007001:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00007073:  ereport(WARNING, 
cabg: cdbfilerepverify:00007074:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00007075:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00007076:  "could not read directory '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00007077:  "verification aborted", 
cabg: cdbfilerepverify:00007078:  directoryName, 
cabg: cdbfilerepverify:00007079:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00007080:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00007110:  ereport(WARNING, 
cabg: cdbfilerepverify:00007111:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00007112:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00007113:  "could not stat file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00007114:  "verification aborted", 
cabg: cdbfilerepverify:00007115:  child_path, 
cabg: cdbfilerepverify:00007116:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00007117:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00007212:  ereport(WARNING, 
cabg: cdbfilerepverify:00007213:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00007214:  "could not allocate memory to run verification token '%s' " 
cabg: cdbfilerepverify:00007215:  "verification aborted", 
cabg: cdbfilerepverify:00007216:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00007217:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00007275:  ereport(WARNING, 
cabg: cdbfilerepverify:00007276:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00007277:  "could not allocate memory to run verification token '%s' " 
cabg: cdbfilerepverify:00007278:  "verification aborted", 
cabg: cdbfilerepverify:00007279:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00007280:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00007292:  ereport(WARNING, 
cabg: cdbfilerepverify:00007293:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00007294:  "could not allocate memory to run verification token '%s' " 
cabg: cdbfilerepverify:00007295:  "verification aborted", 
cabg: cdbfilerepverify:00007296:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00007297:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00007316:  ereport(WARNING, 
cabg: cdbfilerepverify:00007317:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00007318:  "could not allocate memory to run verification token '%s' " 
cabg: cdbfilerepverify:00007319:  "verification aborted", 
cabg: cdbfilerepverify:00007320:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00007321:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00007333:  ereport(WARNING, 
cabg: cdbfilerepverify:00007334:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00007335:  "could not allocate memory to run verification token '%s' " 
cabg: cdbfilerepverify:00007336:  "verification aborted", 
cabg: cdbfilerepverify:00007337:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00007338:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00007592:  ereport(WARNING, 
cabg: cdbfilerepverify:00007593:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00007594:  "could not allocate memory to run verification token '%s' " 
cabg: cdbfilerepverify:00007595:  "verification aborted", 
cabg: cdbfilerepverify:00007596:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00007597:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00007681:  ereport(WARNING, 
cabg: cdbfilerepverify:00007682:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00007683:  "maximum restarts exceeded when comparing directory contents for '%s' run verification token '%s' " 
cabg: cdbfilerepverify:00007684:  "verification aborted", 
cabg: cdbfilerepverify:00007685:  primaryDirectoryName, 
cabg: cdbfilerepverify:00007686:  request->logControl.logOptions.token), 
cabg: cdbfilerepverify:00007687:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00007942:  ereport(WARNING, 
cabg: cdbfilerepverify:00007943:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00007944:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00007945:  "could not open file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00007946:  "verification aborted", 
cabg: cdbfilerepverify:00007947:  primaryFilename, 
cabg: cdbfilerepverify:00007948:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00007949:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00007969:  ereport(WARNING, 
cabg: cdbfilerepverify:00007970:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00007971:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00007972:  "could not stat file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00007973:  "verification aborted", 
cabg: cdbfilerepverify:00007974:  primaryFilename, 
cabg: cdbfilerepverify:00007975:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00007976:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00007983:  ereport(WARNING, 
cabg: cdbfilerepverify:00007984:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00007985:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00007986:  "not a regular file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00007987:  "verification aborted", 
cabg: cdbfilerepverify:00007988:  primaryFilename, 
cabg: cdbfilerepverify:00007989:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00007990:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00008012:  ereport(WARNING, 
cabg: cdbfilerepverify:00008013:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00008014:  "could not allocate memory for file '%s' to run verification token '%s' " 
cabg: cdbfilerepverify:00008015:  "verification aborted", 
cabg: cdbfilerepverify:00008016:  primaryFilename, 
cabg: cdbfilerepverify:00008017:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00008018:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00008026:  ereport(WARNING, 
cabg: cdbfilerepverify:00008027:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00008028:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00008029:  "could not open file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00008030:  "verification aborted", 
cabg: cdbfilerepverify:00008031:  primaryFilename, 
cabg: cdbfilerepverify:00008032:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00008033:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00008214:  ereport(WARNING, 
cabg: cdbfilerepverify:00008215:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00008216:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00008217:  "response from mirror is empty file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00008218:  "verification aborted", 
cabg: cdbfilerepverify:00008219:  primaryFilename, 
cabg: cdbfilerepverify:00008220:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00008221:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00008272:  ereport(WARNING, 
cabg: cdbfilerepverify:00008273:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00008274:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00008275:  "invalid buffer pool page file '%s' blkno '%d' " 
cabg: cdbfilerepverify:00008276:  "verification token '%s' : %m " 
cabg: cdbfilerepverify:00008277:  "verification aborted", 
cabg: cdbfilerepverify:00008278:  primaryFilename, 
cabg: cdbfilerepverify:00008279:  blkno, 
cabg: cdbfilerepverify:00008280:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00008281:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00008292:  ereport(WARNING, 
cabg: cdbfilerepverify:00008293:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00008294:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00008295:  "could not read file '%s' offset '" INT64_FORMAT "' length requested '" INT64_FORMAT "' " 
cabg: cdbfilerepverify:00008296:  "length read '" INT64_FORMAT "' verification token '%s' : %m " 
cabg: cdbfilerepverify:00008297:  "verification aborted", 
cabg: cdbfilerepverify:00008298:  primaryFilename, 
cabg: cdbfilerepverify:00008299:  fileOffset, 
cabg: cdbfilerepverify:00008300:  dataLengthLocal, 
cabg: cdbfilerepverify:00008301:  bytesRead, 
cabg: cdbfilerepverify:00008302:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00008303:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00008641:  ereport(WARNING, 
cabg: cdbfilerepverify:00008642:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00008643:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00008644:  "response from mirror is empty file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00008645:  "verification aborted", 
cabg: cdbfilerepverify:00008646:  primaryFilename, 
cabg: cdbfilerepverify:00008647:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00008648:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00008846:  ereport(WARNING, 
cabg: cdbfilerepverify:00008847:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00008848:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00008849:  "could not compare verification type '%s' : %m " 
cabg: cdbfilerepverify:00008850:  "verification aborted", 
cabg: cdbfilerepverify:00008851:  FileRepOperationVerificationTypeToString[fileRepMessageHeader->fileRepOperationDescription.verify.type]), 
cabg: cdbfilerepverify:00008852:  errhint("run gpverify"), 
cabg: cdbfilerepverify:00008853:  FileRep_errdetail( 
cabg: cdbfilerepverify:00008854:  fileRepMessageHeader->fileRepIdentifier, 
cabg: cdbfilerepverify:00008855:  fileRepMessageHeader->fileRepRelationType, 
cabg: cdbfilerepverify:00008856:  fileRepMessageHeader->fileRepOperation, 
cabg: cdbfilerepverify:00008857:  fileRepMessageHeader->messageCount), 
cabg: cdbfilerepverify:00008858:  FileRep_errcontext())); 
cabg: cdbfilerepverify:00008964:  ereport(WARNING, 
cabg: cdbfilerepverify:00008965:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00008966:  "could not compute summary for relation file '%s' " 
cabg: cdbfilerepverify:00008967:  "verification aborted", 
cabg: cdbfilerepverify:00008968:  relpath(relfilenodeTable[row].relFileNode)), 
cabg: cdbfilerepverify:00008969:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00009042:  ereport(WARNING, 
cabg: cdbfilerepverify:00009043:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00009044:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00009045:  "could not stat file '%s' : %m " 
cabg: cdbfilerepverify:00009046:  "verification aborted", 
cabg: cdbfilerepverify:00009047:  relpath(relfilenodeTable[row].relFileNode)), 
cabg: cdbfilerepverify:00009048:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00009868:  ereport(WARNING, 
cabg: cdbfilerepverify:00009869:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00009870:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00009871:  "could not read directory '%s' : %m " 
cabg: cdbfilerepverify:00009872:  "verification aborted", 
cabg: cdbfilerepverify:00009873:  currentDirectoryName), 
cabg: cdbfilerepverify:00009874:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00009934:  ereport(WARNING, 
cabg: cdbfilerepverify:00009935:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00009936:  errmsg("could not stat file '%s/%s' : %m", 
cabg: cdbfilerepverify:00009937:  child_path, 
cabg: cdbfilerepverify:00009938:  de->d_name), 
cabg: cdbfilerepverify:00009939:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00010065:  ereport(WARNING, 
cabg: cdbfilerepverify:00010066:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00010067:  "could not parse file '%s' " 
cabg: cdbfilerepverify:00010068:  "verification aborted", 
cabg: cdbfilerepverify:00010069:  child_path), 
cabg: cdbfilerepverify:00010070:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00010460:  ereport(WARNING, 
cabg: cdbfilerepverify:00010461:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00010462:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00010463:  "could not stat file '%s' : %m " 
cabg: cdbfilerepverify:00010464:  "verification aborted", 
cabg: cdbfilerepverify:00010465:  primaryBaseDir), 
cabg: cdbfilerepverify:00010466:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00010475:  ereport(WARNING, 
cabg: cdbfilerepverify:00010476:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00010477:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00010478:  "not a directory '%s' : %m " 
cabg: cdbfilerepverify:00010479:  "verification aborted", 
cabg: cdbfilerepverify:00010480:  primaryBaseDir), 
cabg: cdbfilerepverify:00010481:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00010512:  ereport(WARNING, 
cabg: cdbfilerepverify:00010513:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00010514:  "could not parse file '%s' " 
cabg: cdbfilerepverify:00010515:  "verification aborted", 
cabg: cdbfilerepverify:00010516:  primaryBaseDir), 
cabg: cdbfilerepverify:00010517:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00010583:  ereport(WARNING, 
cabg: cdbfilerepverify:00010584:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00010585:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00010586:  "could not stat file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00010587:  "verification aborted", 
cabg: cdbfilerepverify:00010588:  fileName, 
cabg: cdbfilerepverify:00010589:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00010590:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00010605:  ereport(WARNING, 
cabg: cdbfilerepverify:00010606:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00010607:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00010608:  "not a regular file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00010609:  "verification aborted", 
cabg: cdbfilerepverify:00010610:  fileName, 
cabg: cdbfilerepverify:00010611:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00010612:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00010624:  ereport(WARNING, 
cabg: cdbfilerepverify:00010625:  (errcode_for_file_access(), 
cabg: cdbfilerepverify:00010626:  errmsg("verification failure, " 
cabg: cdbfilerepverify:00010627:  "could not open file '%s' verification token '%s' : %m " 
cabg: cdbfilerepverify:00010628:  "verification aborted", 
cabg: cdbfilerepverify:00010629:  fileName, 
cabg: cdbfilerepverify:00010630:  logControl.logOptions.token), 
cabg: cdbfilerepverify:00010631:  errhint("run gpverify"))); 
cabg: cdbfilerepverify:00011380:  ereport(WARNING, 
cabg: cdbfilerepverify:00011381:  (errmsg("verification failure, " 
cabg: cdbfilerepverify:00011382:  "could not allocate memory to run verification " 
cabg: cdbfilerepverify:00011383:  "verification aborted"), 
cabg: cdbfilerepverify:00011384:  errhint("run gpverify"))); 
aaaaa GP_IGNORE: caag: cdbfts - ./backend/cdb/cdbfts.c
caag: cdbfts:00000087:  elog(FATAL, "FTS: could not initialize fault tolerance manager share memory"); 
caag: cdbfts:00000254:  ereport(LOG, (errmsg_internal("FTS: reconfiguration is in progress"), 
caag: cdbfts:00000255:  errSendAlert(true))); 
caag: cdbfts:00000422:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
caag: cdbfts:00000423:  errmsg("QDMirroringUpdate: out of memory"))); 
caag: cdbfts:00000450:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
caag: cdbfts:00000451:  errmsg("QDMirroringUpdate: out of memory"))); 
caag: cdbfts:00000457:  elog(FATAL, "QDMirroringUpdate: setting segDB state failed, error connecting to entry db, error: %s", error_message); 
caag: cdbfts:00000473:  ereport(ERROR, (errcode(ERRCODE_INTERNAL_ERROR), 
caag: cdbfts:00000474:  errmsg("QDMirroringUpdate: format command string failure"))); 
caag: cdbfts:00000480:  ereport(ERROR, (errcode(ERRCODE_INTERNAL_ERROR), 
caag: cdbfts:00000481:  errmsg("QDMirroringUpdate: could not execute command '%s'", cmd))); 
caag: cdbfts:00000537:  ereport(ERROR, (errcode(ERRCODE_INTERNAL_ERROR), 
caag: cdbfts:00000538:  errmsg("QDMirroringUpdate: format command string failure"))); 
caag: cdbfts:00000576:  ereport(ERROR, (errcode(ERRCODE_INTERNAL_ERROR), 
caag: cdbfts:00000577:  errmsg("QDMirroringUpdate: format command string failure"))); 
caag: cdbfts:00000583:  ereport(ERROR, 
caag: cdbfts:00000584:  (errcode(ERRCODE_INTERNAL_ERROR), 
caag: cdbfts:00000585:  errmsg("QDMirroringUpdate: could not execute command '%s'", cmd))); 
caag: cdbfts:00000716:  ereport(LOG, 
caag: cdbfts:00000717:  (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caag: cdbfts:00000718:  errmsg("Master mirroring is not synchronized as of %s (%s). " 
caag: cdbfts:00000719:  "The GPDB system is currently not highly-available", 
caag: cdbfts:00000720:  logTimeStr, 
caag: cdbfts:00000721:  QDMirroringDisabledReasonToString(disabledReason)), 
caag: cdbfts:00000722:  errSendAlert(true))); 
caag: cdbfts:00000753:  ereport(NOTICE, 
caag: cdbfts:00000754:  (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caag: cdbfts:00000755:  errmsg("Master mirroring not synchronized because the standby master was not started by the administrator"))); 
caag: cdbfts:00000757:  ereport(WARNING, 
caag: cdbfts:00000758:  (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caag: cdbfts:00000759:  errSendAlert(true), 
caag: cdbfts:00000760:  errmsg("Master mirroring synchronization lost"), 
caag: cdbfts:00000761:  errdetail("%s\nThe Greenplum Database is no longer highly available.", detail))); 
caag: cdbfts:00000793:  elog(ERROR, "Unknown disabled reason %d", (int)disabledReason); 
caag: cdbfts:00000868:  ereport(ERROR, 
caag: cdbfts:00000869:  (errcode(ERRCODE_INTERNAL_ERROR), 
caag: cdbfts:00000870:  errmsg("Unexpected master mirror state '%s'", 
caag: cdbfts:00000871:  QDMirroringStateToString(state)))); 
caag: cdbfts:00000877:  ereport(NOTICE, 
caag: cdbfts:00000878:  (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caag: cdbfts:00000879:  errmsg("%s", message), 
caag: cdbfts:00000880:  errdetail("%s", detail))); 
caag: cdbfts:00001080:  ereport(ERROR, (errmsg_internal("MPP detected %d segment failures, system is reconnected", numOfFailed), 
caag: cdbfts:00001081:  errSendAlert(true))); 
caag: cdbfts:00001142:  ereport(LOG, (errmsg_internal("FTS: found bad segment with dbid %d", segInfo->dbid), 
caag: cdbfts:00001143:  errSendAlert(true))); 
caag: cdbfts:00001279:  elog(ERROR, "hostname too long for fts master mirror configuration storage"); 
caag: cdbfts:00001303:  elog(NOTICE, "Master mirroring synchronizing"); 
caag: cdbfts:00001337:  ereport(ERROR, (errmsg_internal("Unexpected master mirroring state '%s'", 
caag: cdbfts:00001338:  QDMirroringStateToString(state)))); 
caag: cdbfts:00001371:  elog(ERROR,"Unexpected master mirror state '%s'", 
caag: cdbfts:00001372:  QDMirroringStateToString(state)); 
caag: cdbfts:00001433:  ereport(ERROR, (errmsg_internal("Unexpected master mirror state '%s'", 
caag: cdbfts:00001434:  QDMirroringStateToString(state)))); 
caag: cdbfts:00001781:  elog(ERROR, "No alive segment in the GPSQL."); 
caag: cdbfts:00001790:  elog(ERROR, "segment configuration changed, reset session"); 
aaaaa GP_IGNORE: caah: cdbgang - ./backend/cdb/cdbgang.c
caah: cdbgang:00000389:  ereport(FATAL, (errcode(ERRCODE_INTERNAL_ERROR), 
caah: cdbgang:00000390:  errmsg("failed to create thread %d of %d", i + 1, threadCount), 
caah: cdbgang:00000391:  errdetail("pthread_create() failed with err %d", pthread_err))); 
caah: cdbgang:00000510:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caah: cdbgang:00000511:  errmsg("failed to create connection to segment %d: master out of memory", 
caah: cdbgang:00000512:  i))); 
caah: cdbgang:00000637:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caah: cdbgang:00000638:  errmsg("failed to acquire resources on segment %d", i))); 
caah: cdbgang:00000662:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caah: cdbgang:00000663:  errmsg("failed to acquire resources on one or more segments"))); 
caah: cdbgang:00000853:  elog(ERROR, "Not all primary segment instances are active and connected"); 
caah: cdbgang:00001329:  elog(FATAL, "Segment dispatched with invalid option: 'gpqeid=%s'", gpqeid_value); 
caah: cdbgang:00001376:  elog(FATAL, "Master callback dispatched with invalid option: 'gpqdid=%s'", gpqdid_value); 
caah: cdbgang:00001708:  elog(ERROR, "could not temporarily connect to one or more segments"); 
caah: cdbgang:00001910:  elog(ERROR, "required segment is unavailable"); 
caah: cdbgang:00001914:  elog(ERROR, "required segment IP is unavailable"); 
caah: cdbgang:00001977:  elog(FATAL, "getCdbProcessesForQD: unsupported request for master mirror process"); 
caah: cdbgang:00001984:  elog(ERROR, PACKAGE_NAME " schema not populated"); 
caah: cdbgang:00002508:  elog(ERROR, "could not temporarily connect to one or more segments"); 
caah: cdbgang:00002807:  elog(WARNING, "Any temporary tables for this session have been dropped because the gang was disconnected (session id = %d)", 
caah: cdbgang:00002808:  gp_session_id); 
aaaaa GP_IGNORE: cabh: cdbglobalsequence - ./backend/cdb/cdbglobalsequence.c
cabh: cdbglobalsequence:00000072:  elog(ERROR, "Failed to build global sequence tuple"); 
cabh: cdbglobalsequence:00000112:  elog(ERROR, "Failed to fetch global sequence tuple at %s", 
cabh: cdbglobalsequence:00000113:  ItemPointerToString(&globalSequenceTuple.t_self)); 
aaaaa GP_IGNORE: caai: cdbgroup - ./backend/cdb/cdbgroup.c
caai: cdbgroup:00000845:  elog(NOTICE, "1-phase cost: %.6f", plan_1p.plan_cost); 
caai: cdbgroup:00000854:  elog(NOTICE, "2-phase cost: %.6f", plan_2p.plan_cost); 
caai: cdbgroup:00000863:  elog(NOTICE, "3-phase cost: %.6f", plan_3p.plan_cost); 
caai: cdbgroup:00000894:  ereport(ERROR, 
caai: cdbgroup:00000895:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caai: cdbgroup:00000896:  errmsg("no parallel plan for aggregation"))); 
caai: cdbgroup:00001020:  ereport(ERROR, 
caai: cdbgroup:00001021:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caai: cdbgroup:00001022:  errmsg("no parallel plan for aggregation"))); 
caai: cdbgroup:00001251:  ereport(ERROR, 
caai: cdbgroup:00001252:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caai: cdbgroup:00001253:  errmsg("unexpected call for two-stage aggregation"))); 
caai: cdbgroup:00001418:  ereport(ERROR, 
caai: cdbgroup:00001419:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caai: cdbgroup:00001420:  errmsg("unexpected use of 2-stage aggregation"))); 
caai: cdbgroup:00002024:  ereport(ERROR, 
caai: cdbgroup:00002025:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caai: cdbgroup:00002026:  errmsg("unexpected use of DQA pruned 2-phase aggregation"))); 
caai: cdbgroup:00003190:  elog(ERROR,"Unexpected use of DISTINCT-qualified aggregate pruning"); 
caai: cdbgroup:00003389:  elog(ERROR,"Unexpected use of DISTINCT-qualified aggregation"); 
caai: cdbgroup:00003664:  elog(ERROR,"Unexpected failure of multi-phase aggregation planning"); 
caai: cdbgroup:00003699:  elog(ERROR, "cache lookup failed for aggregate %u", aggid); 
caai: cdbgroup:00004278:  ereport(ERROR, 
caai: cdbgroup:00004279:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caai: cdbgroup:00004280:  errmsg("unexpected call for two-stage aggregation"))); 
caai: cdbgroup:00004361:  ereport(ERROR, 
caai: cdbgroup:00004362:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caai: cdbgroup:00004363:  errmsg("unexpected call for two-stage aggregation"))); 
caai: cdbgroup:00004529:  elog(ERROR, "unexpected join strategy during DQA planning"); 
caai: cdbgroup:00004552:  elog(ERROR, "unexpected join strategy during DQA planning"); 
caai: cdbgroup:00005255:  elog(ERROR, "unexpected use of aggregate"); 
aaaaa GP_IGNORE: caah: cdbhash - ./backend/cdb/cdbhash.c
caah: cdbhash:00000589:  ereport(ERROR, 
caah: cdbhash:00000590:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
caah: cdbhash:00000591:  errmsg("Type %u is not hashable.", type))); 
aaaaa GP_IGNORE: cabe: cdbinmemheapam - ./backend/cdb/cdbinmemheapam.c
cabe: cdbinmemheapam:00000109:  ereport(ERROR, 
cabe: cdbinmemheapam:00000110:  (errcode(ERRCODE_INTERNAL_ERROR), 
cabe: cdbinmemheapam:00000111:  errmsg("in-memory table with Oid = %d already exist.", relid))); 
cabe: cdbinmemheapam:00000400:  ereport(ERROR, 
cabe: cdbinmemheapam:00000401:  (errcode(ERRCODE_INTERNAL_ERROR), 
cabe: cdbinmemheapam:00000402:  errmsg("update a tuple which does not exist," 
cabe: cdbinmemheapam:00000403:  " relname = %s, relid = %u", relation->rel->rd_rel->relname.data, 
cabe: cdbinmemheapam:00000404:  relation->relid))); 
aaaaa GP_IGNORE: caah: cdblink - ./backend/cdb/cdblink.c
caah: cdblink:00000108:  elog(ERROR, "No alive segment in the cluser."); 
caah: cdblink:00000267:  elog(ERROR, "no hostname for mirror"); 
caah: cdblink:00000274:  elog(ERROR, "could not allocate segment descriptor"); 
caah: cdblink:00000282:  elog(ERROR, "Master mirroring connect failed for entry db. %s", 
caah: cdblink:00000283:  cdb_mirrored_entry_db->error_message.data); 
caah: cdblink:00000306:  elog(ERROR,"did not get standby master end location information"); 
caah: cdblink:00000347:  elog(ERROR, "No master mirror"); 
caah: cdblink:00000356:  elog(ERROR, "Master mirror connection failed"); 
caah: cdblink:00000414:  ereport(ERROR, 
caah: cdblink:00000415:  (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caah: cdblink:00000416:  errmsg("Shutdown detected during send to standby master"))); 
caah: cdblink:00000422:  ereport(ERROR, 
caah: cdblink:00000423:  (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caah: cdblink:00000424:  errSendAlert(true), 
caah: cdblink:00000425:  errmsg("Send to standby master timed out after %d.%03d seconds", 
caah: cdblink:00000426:  (int)timeout->tv_sec, 
caah: cdblink:00000427:  (int)timeout->tv_usec / 1000))); 
caah: cdblink:00000478:  ereport(ERROR, 
caah: cdblink:00000479:  (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caah: cdblink:00000480:  errSendAlert(true), 
caah: cdblink:00000481:  errmsg("error received sending data to standby master: %s", msg), 
caah: cdblink:00000482:  errdetail("The Greenplum Database is no longer highly available"))); 
aaaaa GP_IGNORE: caai: cdbllize - ./backend/cdb/cdbllize.c
caai: cdbllize:00000228:  ereport(ERROR, (errcode(ERRCODE_CDB_FEATURE_NOT_SUPPORTED), 
caai: cdbllize:00000229:  errmsg("The RETURNING clause of the %s " 
caai: cdbllize:00000230:  "statement is not yet supported in " 
caai: cdbllize:00000231:  "this version of " PACKAGE_NAME ".", 
caai: cdbllize:00000232:  cmd) 
caai: cdbllize:00000233:  )); 
caai: cdbllize:00000430:  ereport(ERROR, (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
caai: cdbllize:00000431:  errmsg("Cannot parallelize that query yet."), 
caai: cdbllize:00000432:  errdetail("In a subquery FROM clause, a " 
caai: cdbllize:00000433:  "function invocation cannot contain " 
caai: cdbllize:00000434:  "a correlated reference."), 
caai: cdbllize:00000435:  errOmitLocation(true) 
caai: cdbllize:00000436:  )); 
caai: cdbllize:00001398:  elog(ERROR, "Post-planning sanity check detected motion deadlock."); 
aaaaa GP_IGNORE: cabj: cdblocaldistribxact - ./backend/cdb/cdblocaldistribxact.c
cabj: cdblocaldistribxact:00000152:  elog(FATAL, "Distributed to local xact element not valid (eyecatcher)"); 
cabj: cdblocaldistribxact:00000230:  elog(FATAL, "Distributed to local xact element not valid"); 
cabj: cdblocaldistribxact:00000283:  elog(FATAL, "Distributed to local xact element not valid"); 
cabj: cdblocaldistribxact:00000286:  elog(FATAL, "Distributed to local xact element not valid"); 
cabj: cdblocaldistribxact:00000301:  elog(FATAL, "Distributed to local xact element not valid"); 
cabj: cdblocaldistribxact:00000304:  elog(FATAL, "Distributed to local xact element not valid"); 
cabj: cdblocaldistribxact:00000468:  elog(FATAL, "Out of distributed transaction to local elements"); 
cabj: cdblocaldistribxact:00000504:  elog(FATAL, "Out of distributed transaction to local elements"); 
cabj: cdblocaldistribxact:00000540:  elog(FATAL, "Out of distributed transaction to local elements"); 
cabj: cdblocaldistribxact:00000569:  elog(FATAL, "Distributed transaction element not found for local xid = %u", 
cabj: cdblocaldistribxact:00000570:  localXid); 
cabj: cdblocaldistribxact:00000573:  elog(FATAL, "Local xid %u does not match expected local xid %u (distributed xid = %u)", 
cabj: cdblocaldistribxact:00000574:  ele->localXid, 
cabj: cdblocaldistribxact:00000575:  localXid, 
cabj: cdblocaldistribxact:00000576:  ele->distribXid); 
cabj: cdblocaldistribxact:00001010:  elog(ERROR, "Add should not have found local xid = %x", localXid); 
aaaaa GP_IGNORE: caba: cdblogsync - ./backend/cdb/cdblogsync.c
caba: cdblogsync:00000081:  ereport(ERROR, 
caba: cdblogsync:00000082:  (errcode_for_file_access(), 
caba: cdblogsync:00000083:  errmsg("error writing file: %m"))); 
caba: cdblogsync:00000108:  ereport(ERROR, 
caba: cdblogsync:00000109:  (errcode_for_file_access(), 
caba: cdblogsync:00000110:  errmsg("QDSYNC: could not create recovery.conf file \"%s\"", 
caba: cdblogsync:00000111:  path))); 
caba: cdblogsync:00000171:  ereport(ERROR, 
caba: cdblogsync:00000172:  (errcode_for_file_access(), 
caba: cdblogsync:00000173:  errmsg("QDSYNC: could not create xlog file \"%s/%s\"", 
caba: cdblogsync:00000174:  xlogDir, xlogfilename))); 
caba: cdblogsync:00000191:  ereport(ERROR, 
caba: cdblogsync:00000192:  (errcode_for_file_access(), 
caba: cdblogsync:00000193:  errmsg("QDSYNC: could not create xlog file \"%s\"", 
caba: cdblogsync:00000194:  path))); 
caba: cdblogsync:00000270:  elog(ERROR, "QDSYNC: found invalid new checkpoint location"); 
caba: cdblogsync:00000276:  elog(ERROR, "QDSYNC: redo error occurred"); 
caba: cdblogsync:00000284:  ereport(ERROR, 
caba: cdblogsync:00000285:  (errmsg( 
caba: cdblogsync:00000286:  "kill(%ld,%d) failed: %m", 
caba: cdblogsync:00000287:  (long) PostmasterPid, SIGINT))); 
caba: cdblogsync:00000391:  ereport(ERROR, (errmsg("cannot generate dir path %s/xlogtemp.%d", xlogDir, (int) getpid()))); 
caba: cdblogsync:00000401:  ereport(ERROR, 
caba: cdblogsync:00000402:  (errcode_for_file_access(), 
caba: cdblogsync:00000403:  errmsg("could not create file \"%s\": %m", tmppath))); 
caba: cdblogsync:00000429:  ereport(ERROR, 
caba: cdblogsync:00000430:  (errcode_for_file_access(), 
caba: cdblogsync:00000431:  errmsg("could not write to file \"%s\": %m", tmppath))); 
caba: cdblogsync:00000437:  ereport(ERROR, 
caba: cdblogsync:00000438:  (errcode_for_file_access(), 
caba: cdblogsync:00000439:  errmsg("could not fsync file \"%s\": %m", tmppath))); 
caba: cdblogsync:00000444:  ereport(ERROR, 
caba: cdblogsync:00000445:  (errcode_for_file_access(), 
caba: cdblogsync:00000446:  errmsg("could not close file \"%s\": %m", tmppath))); 
caba: cdblogsync:00000451:  ereport(ERROR, 
caba: cdblogsync:00000452:  (errcode_for_file_access(), 
caba: cdblogsync:00000453:  errmsg("could not rename file \"%s\" to \"%s\" (initialization of log file %u, segment %u): %m", 
caba: cdblogsync:00000454:  tmppath, path, xlogid, xseg))); 
caba: cdblogsync:00000463:  ereport(ERROR, 
caba: cdblogsync:00000464:  (errcode_for_file_access(), 
caba: cdblogsync:00000465:  errmsg("QDSYNC: could not create xlog file \"%s\"", 
caba: cdblogsync:00000466:  path))); 
caba: cdblogsync:00000490:  ereport(ERROR, 
caba: cdblogsync:00000491:  (errcode_for_file_access(), 
caba: cdblogsync:00000492:  errmsg("QDSYNC: could not create xlog file \"%s/%s\"", 
caba: cdblogsync:00000493:  xlogDir, xlogfilename))); 
caba: cdblogsync:00000524:  elog(ERROR,"QDSYNC: not on block boundaries 0x%X", 
caba: cdblogsync:00000525:  woffset); 
caba: cdblogsync:00000555:  elog(ERROR,"QDSYNC: not appending to end (primary: 0x%X, standby: 0x%X)", 
caba: cdblogsync:00000556:  woffset, xlogfileoffset); 
caba: cdblogsync:00000610:  elog(ERROR, "QDSYNC: Cannot parse cmd args '%s' -- no seg", cmdArgs); 
caba: cdblogsync:00000617:  elog(ERROR, "QDSYNC: Cannot parse cmd args '%s' -- no offset", cmdArgs); 
caba: cdblogsync:00000624:  elog(ERROR, "QDSYNC: Cannot parse cmd args '%s' -- no len", cmdArgs); 
caba: cdblogsync:00000642:  elog(ERROR, "QDSYNC: cannot parse cmd args '%s' -- no seg", cmdArgs); 
caba: cdblogsync:00000649:  elog(ERROR, "QDSYNC: cannot parse cmd args '%s' -- no offset", cmdArgs); 
caba: cdblogsync:00000685:  ereport(FATAL, 
caba: cdblogsync:00000686:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
caba: cdblogsync:00000687:  errmsg("queries cannot be executed against the standby master"), 
caba: cdblogsync:00000688:  errhint("Queries should be issued against the activate master. " 
caba: cdblogsync:00000689:  "If this host is not available, activate the standby so " 
caba: cdblogsync:00000690:  "that it can process queries."))); 
caba: cdblogsync:00000703:  ereport(ERROR, 
caba: cdblogsync:00000704:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
caba: cdblogsync:00000705:  errmsg("QDSYNC: incomplete log packet"))); 
caba: cdblogsync:00000726:  elog(ERROR, "QDSYNC: error lseek location: %d, offset: %d, filename '%s', errno: %d", loffset, offset, xlogfilename, errno); 
caba: cdblogsync:00000731:  ereport(ERROR, 
caba: cdblogsync:00000732:  (errcode_for_file_access(), 
caba: cdblogsync:00000733:  errmsg("QDSYNC: could not fsync file '%s': %m", xlogfilename))); 
caba: cdblogsync:00000757:  elog(ERROR, "QDSYNC: malloc failed in sync tmlog, possiblly running out of memory"); 
aaaaa GP_IGNORE: cacb: cdbmirroredbufferpool - ./backend/cdb/cdbmirroredbufferpool.c
cacb: cdbmirroredbufferpool:00000075:  elog(ERROR, "No mirror configured for mirror only"); 
cacb: cdbmirroredbufferpool:00000108:  elog(ERROR, "Unexpected mirror data loss tracking state: %d", 
cacb: cdbmirroredbufferpool:00000109:  mirrorDataLossTrackingState); 
cacb: cdbmirroredbufferpool:00000740:  ereport(ERROR, 
cacb: cdbmirroredbufferpool:00000741:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacb: cdbmirroredbufferpool:00000742:  (errmsg("could not allocate memory for mirrored alligned buffer")))); 
cacb: cdbmirroredbufferpool:00000794:  ereport(ERROR, 
cacb: cdbmirroredbufferpool:00000795:  (errcode_for_file_access(), 
cacb: cdbmirroredbufferpool:00000796:  errmsg("could not seek in file to position %d in file '%s', segment file %d : %m", 
cacb: cdbmirroredbufferpool:00000797:  position, 
cacb: cdbmirroredbufferpool:00000798:  relpath(open->relFileNode), 
cacb: cdbmirroredbufferpool:00000799:  open->segmentFileNum))); 
cacb: cdbmirroredbufferpool:00000841:  elog(ERROR, "file not open on the primary"); 
cacb: cdbmirroredbufferpool:00000847:  ereport(ERROR, 
cacb: cdbmirroredbufferpool:00000848:  (errcode_for_file_access(), 
cacb: cdbmirroredbufferpool:00000849:  errmsg("could not seek in file to position %d in file '%s', segment file %d: %m", 
cacb: cdbmirroredbufferpool:00000850:  position, 
cacb: cdbmirroredbufferpool:00000851:  relpath(open->relFileNode), open->segmentFileNum))); 
cacb: cdbmirroredbufferpool:00000867:  elog(ERROR, "file not open on the primary"); 
cacb: cdbmirroredbufferpool:00000882:  elog(ERROR, "File not open on the primary"); 
cacb: cdbmirroredbufferpool:00001038:  elog(ERROR, "Unexpected mirror data loss tracking state: %d", 
cacb: cdbmirroredbufferpool:00001039:  mirrorDataLossTrackingState); 
cacb: cdbmirroredbufferpool:00001097:  ereport(ERROR, 
cacb: cdbmirroredbufferpool:00001098:  (errcode_for_file_access(), 
cacb: cdbmirroredbufferpool:00001099:  errmsg("could not read from position: " INT64_FORMAT " in file %d/%d/%d.%d : %m", 
cacb: cdbmirroredbufferpool:00001100:  readOffset, 
cacb: cdbmirroredbufferpool:00001101:  mirroredOpen->relFileNode.dbNode, 
cacb: cdbmirroredbufferpool:00001102:  mirroredOpen->relFileNode.spcNode, 
cacb: cdbmirroredbufferpool:00001103:  mirroredOpen->relFileNode.relNode, 
cacb: cdbmirroredbufferpool:00001104:  mirroredOpen->segmentFileNum))); 
cacb: cdbmirroredbufferpool:00001114:  ereport(ERROR, 
cacb: cdbmirroredbufferpool:00001115:  (errcode_for_file_access(), 
cacb: cdbmirroredbufferpool:00001116:  errmsg("could not write mirror position: " INT64_FORMAT " in file %d/%d/%d.%d : %m", 
cacb: cdbmirroredbufferpool:00001117:  readOffset, 
cacb: cdbmirroredbufferpool:00001118:  mirroredOpen->relFileNode.dbNode, 
cacb: cdbmirroredbufferpool:00001119:  mirroredOpen->relFileNode.spcNode, 
cacb: cdbmirroredbufferpool:00001120:  mirroredOpen->relFileNode.relNode, 
cacb: cdbmirroredbufferpool:00001121:  mirroredOpen->segmentFileNum))); 
cacb: cdbmirroredbufferpool:00001230:  ereport(ERROR, 
cacb: cdbmirroredbufferpool:00001231:  (errcode_for_file_access(), 
cacb: cdbmirroredbufferpool:00001232:  errmsg("could not open relation file '%s', relation name '%s': %s", 
cacb: cdbmirroredbufferpool:00001233:  relpath(*relFileNode), 
cacb: cdbmirroredbufferpool:00001234:  relationName, 
cacb: cdbmirroredbufferpool:00001235:  strerror(primaryError)))); 
cacb: cdbmirroredbufferpool:00001263:  ereport(ERROR, 
cacb: cdbmirroredbufferpool:00001264:  (errcode_for_file_access(), 
cacb: cdbmirroredbufferpool:00001265:  errmsg("could not flush relation file '%s', relation name '%s': %s", 
cacb: cdbmirroredbufferpool:00001266:  relpath(*relFileNode), 
cacb: cdbmirroredbufferpool:00001267:  relationName, 
cacb: cdbmirroredbufferpool:00001268:  strerror(primaryError)))); 
aaaaa GP_IGNORE: cacb: cdbmirroredfilesysobj - ./backend/cdb/cdbmirroredfilesysobj.c
cacb: cdbmirroredfilesysobj:00000100:  elog(ERROR, "unexpected mirror data loss tracking state: %d", 
cacb: cdbmirroredfilesysobj:00000101:  mirrorDataLossTrackingState); 
cacb: cdbmirroredfilesysobj:00000222:  ereport(ERROR, 
cacb: cdbmirroredfilesysobj:00000223:  (errcode_for_file_access(), 
cacb: cdbmirroredfilesysobj:00000224:  errmsg("%s: %s", errdir, FileRepStatusToString[status]))); 
cacb: cdbmirroredfilesysobj:00000302:  ereport(ERROR, 
cacb: cdbmirroredfilesysobj:00000303:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
cacb: cdbmirroredfilesysobj:00000304:  errmsg("cannot CREATE FILESPACE in resync mode"), 
cacb: cdbmirroredfilesysobj:00000305:  errhint("run gprecoverseg to re-establish mirror connectivity"))); 
cacb: cdbmirroredfilesysobj:00000309:  ereport(ERROR, 
cacb: cdbmirroredfilesysobj:00000310:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
cacb: cdbmirroredfilesysobj:00000311:  errmsg("cannot CREATE FILESPACE in change tracking mode"), 
cacb: cdbmirroredfilesysobj:00000312:  errhint("run gprecoverseg to re-establish mirror connectivity"))); 
cacb: cdbmirroredfilesysobj:00000316:  elog(ERROR, "unexpected mirror data loss tracking state: %d", 
cacb: cdbmirroredfilesysobj:00000317:  mirrorDataLossTrackingState); 
cacb: cdbmirroredfilesysobj:00000358:  ereport(ERROR, 
cacb: cdbmirroredfilesysobj:00000359:  (errcode_for_file_access(), 
cacb: cdbmirroredfilesysobj:00000360:  errmsg("could not create filespace directory %s: %s", 
cacb: cdbmirroredfilesysobj:00000361:  primaryFilespaceLocation, 
cacb: cdbmirroredfilesysobj:00000362:  strerror(primaryError)))); 
cacb: cdbmirroredfilesysobj:00000433:  ereport(ERROR, 
cacb: cdbmirroredfilesysobj:00000434:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
cacb: cdbmirroredfilesysobj:00000435:  errmsg("cannot DROP FILESPACE in resync mode"), 
cacb: cdbmirroredfilesysobj:00000436:  errhint("run gprecoverseg to re-establish mirror connectivity"))); 
cacb: cdbmirroredfilesysobj:00000440:  ereport(ERROR, 
cacb: cdbmirroredfilesysobj:00000441:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
cacb: cdbmirroredfilesysobj:00000442:  errmsg("cannot DROP FILESPACE in change tracking mode"), 
cacb: cdbmirroredfilesysobj:00000443:  errhint("run gprecoverseg to re-establish mirror connectivity"))); 
cacb: cdbmirroredfilesysobj:00000447:  elog(ERROR, "unexpected mirror data loss tracking state: %d", 
cacb: cdbmirroredfilesysobj:00000448:  mirrorDataLossTrackingState); 
cacb: cdbmirroredfilesysobj:00000566:  ereport(ERROR, 
cacb: cdbmirroredfilesysobj:00000567:  (errcode_for_file_access(), 
cacb: cdbmirroredfilesysobj:00000568:  errmsg("could not create tablespace directory %u: %s", 
cacb: cdbmirroredfilesysobj:00000569:  tablespaceDirNode->tablespace, 
cacb: cdbmirroredfilesysobj:00000570:  strerror(primaryError)))); 
cacb: cdbmirroredfilesysobj:00000714:  ereport(ERROR, 
cacb: cdbmirroredfilesysobj:00000715:  (errcode_for_file_access(), 
cacb: cdbmirroredfilesysobj:00000716:  errmsg("could not create database directory %s: %s", 
cacb: cdbmirroredfilesysobj:00000717:  GetDatabasePath(dbDirNode->database, dbDirNode->tablespace), 
cacb: cdbmirroredfilesysobj:00000718:  strerror(primaryError)))); 
cacb: cdbmirroredfilesysobj:00000903:  ereport(ERROR, 
cacb: cdbmirroredfilesysobj:00000904:  (errcode_for_file_access(), 
cacb: cdbmirroredfilesysobj:00000905:  errmsg("could not create database directory %u/%u: %s", 
cacb: cdbmirroredfilesysobj:00000906:  justInTimeDbDirNode->tablespace, 
cacb: cdbmirroredfilesysobj:00000907:  justInTimeDbDirNode->database, 
cacb: cdbmirroredfilesysobj:00000908:  strerror(primaryError)))); 
cacb: cdbmirroredfilesysobj:00000930:  ereport(ERROR, 
cacb: cdbmirroredfilesysobj:00000931:  (errcode_for_file_access(), 
cacb: cdbmirroredfilesysobj:00000932:  errmsg("could not create just-in-time database directory %u/%u: %s", 
cacb: cdbmirroredfilesysobj:00000933:  justInTimeDbDirNode->tablespace, 
cacb: cdbmirroredfilesysobj:00000934:  justInTimeDbDirNode->database, 
cacb: cdbmirroredfilesysobj:00000935:  strerror(primaryError)))); 
cacb: cdbmirroredfilesysobj:00001054:  ereport(ERROR, 
cacb: cdbmirroredfilesysobj:00001055:  (errcode_for_file_access(), 
cacb: cdbmirroredfilesysobj:00001056:  errmsg("could not create relation file '%s', relation name '%s': %s", 
cacb: cdbmirroredfilesysobj:00001057:  relpath(smgrOpen->smgr_rnode), 
cacb: cdbmirroredfilesysobj:00001058:  relationName, 
cacb: cdbmirroredfilesysobj:00001059:  strerror(primaryError)))); 
cacb: cdbmirroredfilesysobj:00001161:  ereport(ERROR, 
cacb: cdbmirroredfilesysobj:00001162:  (errcode_for_file_access(), 
cacb: cdbmirroredfilesysobj:00001163:  errmsg("could not create relation file '%s', relation name '%s', contentid: %d: %s", 
cacb: cdbmirroredfilesysobj:00001164:  relpath(*relFileNode), 
cacb: cdbmirroredfilesysobj:00001165:  relationName, 
cacb: cdbmirroredfilesysobj:00001166:  contentid, 
cacb: cdbmirroredfilesysobj:00001167:  strerror(primaryError)))); 
cacb: cdbmirroredfilesysobj:00001367:  ereport(WARNING, 
cacb: cdbmirroredfilesysobj:00001368:  (errcode_for_file_access(), 
cacb: cdbmirroredfilesysobj:00001369:  errmsg("could not remove relation %u/%u/%u (segment file #%d): %s", 
cacb: cdbmirroredfilesysobj:00001370:  relFileNode->spcNode, 
cacb: cdbmirroredfilesysobj:00001371:  relFileNode->dbNode, 
cacb: cdbmirroredfilesysobj:00001372:  relFileNode->relNode, 
cacb: cdbmirroredfilesysobj:00001373:  segmentFileNum, 
cacb: cdbmirroredfilesysobj:00001374:  strerror(primaryError)))); 
cacb: cdbmirroredfilesysobj:00001378:  elog(ERROR, "unexpected relation storage manager %d", relStorageMgr); 
aaaaa GP_IGNORE: cabj: cdbmirroredflatfile - ./backend/cdb/cdbmirroredflatfile.c
cabj: cdbmirroredflatfile:00000118:  ereport(ERROR, (errmsg("cannot generate path %s/%s", dir, open->simpleFileName))); 
cabj: cdbmirroredflatfile:00000145:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00000146:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00000147:  errmsg("could not open file \"%s\": %m", open->path))); 
cabj: cdbmirroredflatfile:00000281:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00000282:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00000283:  errmsg("could not open file \"%s\": %m", open->path))); 
cabj: cdbmirroredflatfile:00000373:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00000374:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00000375:  errmsg("could not fsync file \"%s\": %m", open->path))); 
cabj: cdbmirroredflatfile:00000498:  ereport(ERROR, (errmsg("cannot generate path %s/%s", dir, oldSimpleFileName))); 
cabj: cdbmirroredflatfile:00000502:  ereport(ERROR, (errmsg("cannot generate path %s/%s", dir, newSimpleFileName))); 
cabj: cdbmirroredflatfile:00000508:  elog(ERROR, "cannot rename flat file %s to %s: File exists", 
cabj: cdbmirroredflatfile:00000509:  oldPath, 
cabj: cdbmirroredflatfile:00000510:  newPath); 
cabj: cdbmirroredflatfile:00000531:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00000532:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00000533:  errmsg("could not rename file from \"%s\" to \"%s\": %m", 
cabj: cdbmirroredflatfile:00000534:  oldPath, newPath))); 
cabj: cdbmirroredflatfile:00000613:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00000614:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00000615:  errmsg("could not write to file \"%s\": %m", open->path))); 
cabj: cdbmirroredflatfile:00000684:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00000685:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00000686:  errmsg("could not seek in file to position '%d' in file '%s': %m", 
cabj: cdbmirroredflatfile:00000687:  position, 
cabj: cdbmirroredflatfile:00000688:  open->path))); 
cabj: cdbmirroredflatfile:00000697:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00000698:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00000699:  errmsg("could not write to file \"%s\": %m", open->path))); 
cabj: cdbmirroredflatfile:00000744:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00000745:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00000746:  errmsg("could not open file \"%s\": %m", open->path))); 
cabj: cdbmirroredflatfile:00000828:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00000829:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00000830:  errmsg("could not seek in file to position %d in file \"%s\": %m", 
cabj: cdbmirroredflatfile:00000831:  position, 
cabj: cdbmirroredflatfile:00000832:  open->path))); 
cabj: cdbmirroredflatfile:00000901:  ereport(ERROR, (errmsg("cannot generate path %s/%s", dir, simpleFileName))); 
cabj: cdbmirroredflatfile:00000918:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00000919:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00000920:  errmsg("could not unlink file \"%s\": %m", path))); 
cabj: cdbmirroredflatfile:00001043:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00001044:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00001045:  errmsg("could not seek to end of file \"%s\" : %m", 
cabj: cdbmirroredflatfile:00001046:  primaryOpen.path))); 
cabj: cdbmirroredflatfile:00001074:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00001075:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cabj: cdbmirroredflatfile:00001076:  (errmsg("Not enough shared memory for Mirroring.")))); 
cabj: cdbmirroredflatfile:00001089:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00001090:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00001091:  errmsg("could not read from position:%d in file \"%s\" : %m", 
cabj: cdbmirroredflatfile:00001092:  startOffset, primaryOpen.path))); 
cabj: cdbmirroredflatfile:00001375:  ereport(WARNING, 
cabj: cdbmirroredflatfile:00001376:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00001377:  errmsg("mirror failure, " 
cabj: cdbmirroredflatfile:00001378:  "could not open file '%s' : %m " 
cabj: cdbmirroredflatfile:00001379:  "failover requested", 
cabj: cdbmirroredflatfile:00001380:  (primaryOpen.path == NULL) ? "<null>" : primaryOpen.path), 
cabj: cdbmirroredflatfile:00001381:  FileRep_errcontext())); 
cabj: cdbmirroredflatfile:00001398:  ereport(WARNING, 
cabj: cdbmirroredflatfile:00001399:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00001400:  errmsg("mirror failure, " 
cabj: cdbmirroredflatfile:00001401:  "could not seek to end of file '%s' : %m " 
cabj: cdbmirroredflatfile:00001402:  "failover requested", 
cabj: cdbmirroredflatfile:00001403:  (primaryOpen.path == NULL) ? "<null>" : primaryOpen.path), 
cabj: cdbmirroredflatfile:00001404:  FileRep_errcontext())); 
cabj: cdbmirroredflatfile:00001430:  ereport(ERROR, 
cabj: cdbmirroredflatfile:00001431:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cabj: cdbmirroredflatfile:00001432:  (errmsg("not enough shared memory for mirroring")))); 
cabj: cdbmirroredflatfile:00001449:  ereport(WARNING, 
cabj: cdbmirroredflatfile:00001450:  (errcode_for_file_access(), 
cabj: cdbmirroredflatfile:00001451:  errmsg("mirror failure, " 
cabj: cdbmirroredflatfile:00001452:  "could not read from position '%d' file '%s' : %m " 
cabj: cdbmirroredflatfile:00001453:  "failover requested", 
cabj: cdbmirroredflatfile:00001454:  startOffset, 
cabj: cdbmirroredflatfile:00001455:  (primaryOpen.path == NULL) ? "<null>" : primaryOpen.path), 
cabj: cdbmirroredflatfile:00001456:  FileRep_errcontext())); 
aaaaa GP_IGNORE: caaj: cdbmutate - ./backend/cdb/cdbmutate.c
caaj: cdbmutate:00000405:  ereport(NOTICE, 
caaj: cdbmutate:00000406:  (errcode(ERRCODE_SUCCESSFUL_COMPLETION), 
caaj: cdbmutate:00000407:  errmsg("Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) " 
caaj: cdbmutate:00000408:  "named '%s' as the Greenplum Database data distribution key for this " 
caaj: cdbmutate:00000409:  "table. ", columns), 
caaj: cdbmutate:00000410:  errhint("The 'DISTRIBUTED BY' clause determines the distribution of data." 
caaj: cdbmutate:00000411:  " Make sure column(s) chosen are the optimal data distribution key to minimize skew."), 
caaj: cdbmutate:00000412:  errOmitLocation(true))); 
caaj: cdbmutate:00000429:  ereport(ERROR, (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
caaj: cdbmutate:00000430:  errmsg("Cannot parallelize that SELECT INTO yet") 
caaj: cdbmutate:00000431:  )); 
caaj: cdbmutate:00000591:  elog(ERROR, "policy must be partitioned"); 
caaj: cdbmutate:00000665:  ereport(ERROR, (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
caaj: cdbmutate:00000666:  errmsg("Cannot parallelize that INSERT yet"))); 
caaj: cdbmutate:00000682:  ereport(ERROR, (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
caaj: cdbmutate:00000683:  errmsg("Cannot parallelize that INSERT yet"))); 
caaj: cdbmutate:00000706:  ereport(ERROR, (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
caaj: cdbmutate:00000707:  errmsg("Cannot parallelize an UPDATE statement that updates the distribution columns"), 
caaj: cdbmutate:00000708:  errOmitLocation(true))); 
caaj: cdbmutate:00001175:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caaj: cdbmutate:00001176:  errmsg("no equality operator for typid %d", 
caaj: cdbmutate:00001177:  typeoid))); 
caaj: cdbmutate:00001390:  elog(ERROR, "no tlist entry for key %d", n); 
aaaaa GP_IGNORE: caba: cdboidsync - ./backend/cdb/cdboidsync.c
caba: cdboidsync:00000061:  ereport(ERROR, (errmsg("pg_highest_oid error (gathered %d results from cmd '%s')", resultCount, buffer.data), 
caba: cdboidsync:00000062:  errdetail("%s", errbuf.data))); 
caba: cdboidsync:00000068:  elog(ERROR,"dboid: resultStatus not tuples_Ok"); 
aaaaa GP_IGNORE: cabc: cdbpartindex - ./backend/cdb/cdbpartindex.c
cabc: cdbpartindex:00000605:  ereport(ERROR, 
cabc: cdbpartindex:00000606:  (errcode(ERRCODE_INTERNAL_ERROR), 
cabc: cdbpartindex:00000607:  errmsg("error during BuildLogicalIndexInfo. Found indexrelid \"%d\" in hash", 
cabc: cdbpartindex:00000608:  indForm->indexrelid 
cabc: cdbpartindex:00000609:  ))); 
cabc: cdbpartindex:00000724:  ereport(ERROR, 
cabc: cdbpartindex:00000725:  (errcode(ERRCODE_INTERNAL_ERROR), 
cabc: cdbpartindex:00000726:  errmsg("error during BuildLogicalIndexInfo. Indexr not found \"%d\" in hash", 
cabc: cdbpartindex:00000727:  x))); 
aaaaa GP_IGNORE: cabc: cdbpartition - ./backend/cdb/cdbpartition.c
cabc: cdbpartition:00000237:  elog(ERROR, "mode not dispatch"); 
cabc: cdbpartition:00000615:  ereport(WARNING, 
cabc: cdbpartition:00000616:  (errcode(ERRCODE_WARNING), 
cabc: cdbpartition:00000617:  errmsg("ignoring inconsistency: \"%s\" " 
cabc: cdbpartition:00000618:  "has no constraint corresponding to \"%s\" " 
cabc: cdbpartition:00000619:  "on \"%s\"", 
cabc: cdbpartition:00000620:  RelationGetRelationName(part), 
cabc: cdbpartition:00000621:  NameStr(con->conname), 
cabc: cdbpartition:00000622:  RelationGetRelationName(table)), 
cabc: cdbpartition:00000623:  errOmitLocation(true))); 
cabc: cdbpartition:00000659:  elog(ERROR, 
cabc: cdbpartition:00000660:  "multiple partition constraints (same key) on \"%s\"", 
cabc: cdbpartition:00000661:  RelationGetRelationName(part)); 
cabc: cdbpartition:00000675:  elog(ERROR, 
cabc: cdbpartition:00000676:  "invalid partition constraint on \"%s\"", 
cabc: cdbpartition:00000677:  RelationGetRelationName(part)); 
cabc: cdbpartition:00000743:  elog(ERROR, "constraint hash table inconsistent"); 
cabc: cdbpartition:00000754:  ereport(ERROR, 
cabc: cdbpartition:00000755:  (errcode(ERRCODE_INTEGRITY_CONSTRAINT_VIOLATION), 
cabc: cdbpartition:00000756:  errmsg("invalid constraint(s) found on \"%s\": %s", 
cabc: cdbpartition:00000757:  RelationGetRelationName(cand), 
cabc: cdbpartition:00000758:  constraint_names(excess_constraints)), 
cabc: cdbpartition:00000759:  errhint("drop the invalid constraints and retry"), 
cabc: cdbpartition:00000760:  errOmitLocation(true))); 
cabc: cdbpartition:00000779:  elog(ERROR,"Invalid partition constration, not CHECK type"); 
cabc: cdbpartition:00001022:  elog(ERROR, "unknown partitioning type %i", type); 
cabc: cdbpartition:00001049:  elog(ERROR, "unrecognized partitioning kind '%c'", 
cabc: cdbpartition:00001050:  c); 
cabc: cdbpartition:00001464:  elog(ERROR, "unknown partitioning type %i", pby->partType); 
cabc: cdbpartition:00002374:  elog(ERROR, "could not find pg_partition entry with oid %d for " 
cabc: cdbpartition:00002375:  "pg_partition_rule with child table %d", paroid, relid); 
cabc: cdbpartition:00002734:  ereport(ERROR, 
cabc: cdbpartition:00002735:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
cabc: cdbpartition:00002736:  errmsg("too many columns in boundary specification (%d > %d)", 
cabc: cdbpartition:00002737:  jj, ii))); 
cabc: cdbpartition:00002740:  ereport(ERROR, 
cabc: cdbpartition:00002741:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
cabc: cdbpartition:00002742:  errmsg("too many columns in boundary specification (%d > %d)", 
cabc: cdbpartition:00002743:  jj, part->parnatts))); 
cabc: cdbpartition:00002758:  ereport(ERROR, 
cabc: cdbpartition:00002759:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
cabc: cdbpartition:00002760:  errmsg("Not a constant expression"))); 
cabc: cdbpartition:00002772:  ereport(ERROR, 
cabc: cdbpartition:00002773:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
cabc: cdbpartition:00002774:  errmsg("cannot coerce column type (%s versus %s)", 
cabc: cdbpartition:00002775:  format_type_be(c1->consttype), 
cabc: cdbpartition:00002776:  format_type_be(lhsid)))); 
cabc: cdbpartition:00003476:  elog(ERROR, "unrecognized partitioning kind '%c'", 
cabc: cdbpartition:00003477:  part->parkind); 
cabc: cdbpartition:00003569:  ereport(ERROR, 
cabc: cdbpartition:00003570:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
cabc: cdbpartition:00003571:  errmsg("No partition id specified for %s", 
cabc: cdbpartition:00003572:  relname), 
cabc: cdbpartition:00003573:  errOmitLocation(true))); 
cabc: cdbpartition:00003641:  ereport(ERROR, 
cabc: cdbpartition:00003642:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabc: cdbpartition:00003643:  errmsg("%s is not partitioned", 
cabc: cdbpartition:00003644:  relname), 
cabc: cdbpartition:00003645:  errOmitLocation(true))); 
cabc: cdbpartition:00003711:  ereport(ERROR, 
cabc: cdbpartition:00003712:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
cabc: cdbpartition:00003713:  errmsg("cannot find partition by RANK -- " 
cabc: cdbpartition:00003714:  "%s is %s partitioned", 
cabc: cdbpartition:00003715:  relname, 
cabc: cdbpartition:00003716:  parTypName), 
cabc: cdbpartition:00003717:  errOmitLocation(true))); 
cabc: cdbpartition:00003839:  ereport(ERROR, 
cabc: cdbpartition:00003840:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
cabc: cdbpartition:00003841:  errmsg("FOR expression matches " 
cabc: cdbpartition:00003842:  "DEFAULT partition%s of %s", 
cabc: cdbpartition:00003843:  prule->isName ? 
cabc: cdbpartition:00003844:  partIdStr : "", 
cabc: cdbpartition:00003845:  relname), 
cabc: cdbpartition:00003846:  errhint("FOR expression may only specify " 
cabc: cdbpartition:00003847:  "a non-default partition in this context."), 
cabc: cdbpartition:00003848:  errOmitLocation(true))); 
cabc: cdbpartition:00003864:  ereport(ERROR, 
cabc: cdbpartition:00003865:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabc: cdbpartition:00003866:  errmsg("partition%s of %s does not exist", 
cabc: cdbpartition:00003867:  partIdStr, 
cabc: cdbpartition:00003868:  relname), 
cabc: cdbpartition:00003869:  errOmitLocation(true))); 
cabc: cdbpartition:00003872:  ereport(ERROR, 
cabc: cdbpartition:00003873:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabc: cdbpartition:00003874:  errmsg("DEFAULT partition of %s does not exist", 
cabc: cdbpartition:00003875:  relname), 
cabc: cdbpartition:00003876:  errOmitLocation(true))); 
cabc: cdbpartition:00003895:  ereport(ERROR, 
cabc: cdbpartition:00003896:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
cabc: cdbpartition:00003897:  errmsg("partition%s of %s already exists", 
cabc: cdbpartition:00003898:  partIdStr, 
cabc: cdbpartition:00003899:  relname), 
cabc: cdbpartition:00003900:  errOmitLocation(true))); 
cabc: cdbpartition:00003903:  ereport(ERROR, 
cabc: cdbpartition:00003904:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
cabc: cdbpartition:00003905:  errmsg("DEFAULT partition%s of %s already exists", 
cabc: cdbpartition:00003906:  prule->isName ? 
cabc: cdbpartition:00003907:  partIdStr : "", 
cabc: cdbpartition:00003908:  relname), 
cabc: cdbpartition:00003909:  errOmitLocation(true))); 
cabc: cdbpartition:00004527:  ereport(ERROR, 
cabc: cdbpartition:00004528:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabc: cdbpartition:00004529:  errmsg("cannot specify EVERY when adding " 
cabc: cdbpartition:00004530:  "RANGE partition to %s", 
cabc: cdbpartition:00004531:  lrelname), 
cabc: cdbpartition:00004532:  errOmitLocation(true))); 
cabc: cdbpartition:00004535:  ereport(ERROR, 
cabc: cdbpartition:00004536:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabc: cdbpartition:00004537:  errmsg("Need START or END when adding " 
cabc: cdbpartition:00004538:  "RANGE partition to %s", 
cabc: cdbpartition:00004539:  lrelname), 
cabc: cdbpartition:00004540:  errOmitLocation(true))); 
cabc: cdbpartition:00004579:  ereport(ERROR, 
cabc: cdbpartition:00004580:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
cabc: cdbpartition:00004581:  errmsg("invalid partition range specification."), 
cabc: cdbpartition:00004582:  errOmitLocation(true))); 
cabc: cdbpartition:00004650:  ereport(ERROR, 
cabc: cdbpartition:00004651:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
cabc: cdbpartition:00004652:  errmsg("new partition overlaps existing " 
cabc: cdbpartition:00004653:  "partition"), 
cabc: cdbpartition:00004654:  errOmitLocation(true))); 
cabc: cdbpartition:00004708:  ereport(ERROR, 
cabc: cdbpartition:00004709:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
cabc: cdbpartition:00004710:  errmsg("new partition overlaps existing " 
cabc: cdbpartition:00004711:  "partition"), 
cabc: cdbpartition:00004712:  errOmitLocation(true))); 
cabc: cdbpartition:00004823:  ereport(ERROR, 
cabc: cdbpartition:00004824:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
cabc: cdbpartition:00004825:  errmsg("new partition overlaps existing " 
cabc: cdbpartition:00004826:  "partition"), 
cabc: cdbpartition:00004827:  errOmitLocation(true))); 
cabc: cdbpartition:00004865:  ereport(ERROR, 
cabc: cdbpartition:00004866:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
cabc: cdbpartition:00004867:  errmsg("new partition overlaps existing " 
cabc: cdbpartition:00004868:  "partition"), 
cabc: cdbpartition:00004869:  errOmitLocation(true))); 
cabc: cdbpartition:00005530:  ereport(ERROR, 
cabc: cdbpartition:00005531:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
cabc: cdbpartition:00005532:  errmsg("new partition overlaps existing " 
cabc: cdbpartition:00005533:  "partition%s", 
cabc: cdbpartition:00005534:  (prule && prule->isName) ? 
cabc: cdbpartition:00005535:  prule->partIdStr : ""), 
cabc: cdbpartition:00005536:  errOmitLocation(true))); 
cabc: cdbpartition:00005589:  ereport(ERROR, 
cabc: cdbpartition:00005590:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabc: cdbpartition:00005591:  errmsg("new partition definition overlaps " 
cabc: cdbpartition:00005592:  "existing partition%s of %s", 
cabc: cdbpartition:00005593:  prule->partIdStr, 
cabc: cdbpartition:00005594:  lrelname), 
cabc: cdbpartition:00005595:  errOmitLocation(true))); 
cabc: cdbpartition:00005720:  elog(ERROR, "cache lookup failed for relation %u", 
cabc: cdbpartition:00005721:  RelationGetRelid(rel)); 
cabc: cdbpartition:00006112:  elog(ERROR, "cache lookup failed for relation %u", oldrelid); 
cabc: cdbpartition:00006128:  elog(ERROR, "cache lookup failed for relation %u", newrelid); 
cabc: cdbpartition:00006183:  ereport(ERROR, 
cabc: cdbpartition:00006184:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
cabc: cdbpartition:00006185:  errmsg("cannot MODIFY %s partition%s for " 
cabc: cdbpartition:00006186:  "relation \"%s\" to ADD values -- would " 
cabc: cdbpartition:00006187:  "overlap DEFAULT partition \"%s\"", 
cabc: cdbpartition:00006188:  "LIST", 
cabc: cdbpartition:00006189:  prule->partIdStr, 
cabc: cdbpartition:00006190:  RelationGetRelationName(rel), 
cabc: cdbpartition:00006191:  prule->pNode->default_part->parname), 
cabc: cdbpartition:00006192:  errhint("need to SPLIT partition \"%s\"", 
cabc: cdbpartition:00006193:  prule->pNode->default_part->parname), 
cabc: cdbpartition:00006194:  errOmitLocation(true))); 
cabc: cdbpartition:00006244:  ereport(ERROR, 
cabc: cdbpartition:00006245:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabc: cdbpartition:00006246:  errmsg("cannot MODIFY LIST partition%s for " 
cabc: cdbpartition:00006247:  "relation \"%s\" -- " 
cabc: cdbpartition:00006248:  "would overlap " 
cabc: cdbpartition:00006249:  "existing partition%s", 
cabc: cdbpartition:00006250:  prule->partIdStr, 
cabc: cdbpartition:00006251:  RelationGetRelationName(rel), 
cabc: cdbpartition:00006252:  prule2->isName ? 
cabc: cdbpartition:00006253:  prule2->partIdStr : ""), 
cabc: cdbpartition:00006254:  errOmitLocation(true))); 
cabc: cdbpartition:00006256:  ereport(ERROR, 
cabc: cdbpartition:00006257:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabc: cdbpartition:00006258:  errmsg("cannot MODIFY LIST partition%s for " 
cabc: cdbpartition:00006259:  "relation \"%s\" -- " 
cabc: cdbpartition:00006260:  "ADD value has duplicate in " 
cabc: cdbpartition:00006261:  "existing partition", 
cabc: cdbpartition:00006262:  prule->partIdStr, 
cabc: cdbpartition:00006263:  RelationGetRelationName(rel)), 
cabc: cdbpartition:00006264:  errOmitLocation(true))); 
cabc: cdbpartition:00006275:  ereport(ERROR, 
cabc: cdbpartition:00006276:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabc: cdbpartition:00006277:  errmsg("cannot MODIFY LIST partition%s for " 
cabc: cdbpartition:00006278:  "relation \"%s\" -- DROP value not found", 
cabc: cdbpartition:00006279:  prule->partIdStr, 
cabc: cdbpartition:00006280:  RelationGetRelationName(rel)), 
cabc: cdbpartition:00006281:  errOmitLocation(true))); 
cabc: cdbpartition:00006286:  ereport(ERROR, 
cabc: cdbpartition:00006287:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabc: cdbpartition:00006288:  errmsg("cannot MODIFY LIST partition%s for " 
cabc: cdbpartition:00006289:  "relation \"%s\" -- " 
cabc: cdbpartition:00006290:  "found DROP value in%s partition%s", 
cabc: cdbpartition:00006291:  prule->partIdStr, 
cabc: cdbpartition:00006292:  RelationGetRelationName(rel), 
cabc: cdbpartition:00006293:  prule2->isName ? "" : "other", 
cabc: cdbpartition:00006294:  prule2->isName ? prule2->partIdStr : ""), 
cabc: cdbpartition:00006295:  errOmitLocation(true))); 
cabc: cdbpartition:00006407:  ereport(ERROR, 
cabc: cdbpartition:00006408:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
cabc: cdbpartition:00006409:  errmsg("cannot MODIFY %s partition%s for " 
cabc: cdbpartition:00006410:  "relation \"%s\" to extend range -- would " 
cabc: cdbpartition:00006411:  "overlap DEFAULT partition \"%s\"", 
cabc: cdbpartition:00006412:  "RANGE", 
cabc: cdbpartition:00006413:  prule->partIdStr, 
cabc: cdbpartition:00006414:  RelationGetRelationName(rel), 
cabc: cdbpartition:00006415:  prule->pNode->default_part->parname), 
cabc: cdbpartition:00006416:  errhint("need to SPLIT partition \"%s\"", 
cabc: cdbpartition:00006417:  prule->pNode->default_part->parname), 
cabc: cdbpartition:00006418:  errOmitLocation(true))); 
cabc: cdbpartition:00006562:  ereport(ERROR, 
cabc: cdbpartition:00006563:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
cabc: cdbpartition:00006564:  errmsg("cannot MODIFY %s partition%s for " 
cabc: cdbpartition:00006565:  "relation \"%s\" to extend range -- would " 
cabc: cdbpartition:00006566:  "overlap DEFAULT partition \"%s\"", 
cabc: cdbpartition:00006567:  "RANGE", 
cabc: cdbpartition:00006568:  prule->partIdStr, 
cabc: cdbpartition:00006569:  RelationGetRelationName(rel), 
cabc: cdbpartition:00006570:  prule->pNode->default_part->parname), 
cabc: cdbpartition:00006571:  errhint("need to SPLIT partition \"%s\"", 
cabc: cdbpartition:00006572:  prule->pNode->default_part->parname), 
cabc: cdbpartition:00006573:  errOmitLocation(true))); 
cabc: cdbpartition:00006702:  ereport(ERROR, 
cabc: cdbpartition:00006703:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabc: cdbpartition:00006704:  errmsg("cannot MODIFY RANGE partition%s for " 
cabc: cdbpartition:00006705:  "relation \"%s\" -- " 
cabc: cdbpartition:00006706:  "would overlap " 
cabc: cdbpartition:00006707:  "existing partition%s", 
cabc: cdbpartition:00006708:  prule->partIdStr, 
cabc: cdbpartition:00006709:  RelationGetRelationName(rel), 
cabc: cdbpartition:00006710:  (prule2 && prule2->isName) ? 
cabc: cdbpartition:00006711:  prule2->partIdStr : ""), 
cabc: cdbpartition:00006712:  errOmitLocation(true))); 
cabc: cdbpartition:00006818:  ereport(ERROR, 
cabc: cdbpartition:00006819:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
cabc: cdbpartition:00006820:  errmsg("relation name \"%s\" for child partition " 
cabc: cdbpartition:00006821:  "is too long", 
cabc: cdbpartition:00006822:  newRelNameBuf))); 
cabc: cdbpartition:00006889:  elog(ERROR, "could not find operator"); 
cabc: cdbpartition:00007040:  ereport(ERROR, 
cabc: cdbpartition:00007041:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
cabc: cdbpartition:00007042:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
cabc: cdbpartition:00007043:  cname, 
cabc: cdbpartition:00007044:  RelationGetRelationName(rel)), 
cabc: cdbpartition:00007045:  errOmitLocation(true))); 
cabc: cdbpartition:00007080:  ereport(ERROR, 
cabc: cdbpartition:00007081:  (errcode(ERRCODE_SYNTAX_ERROR), 
cabc: cdbpartition:00007082:  errmsg("cannot exchange relation " 
cabc: cdbpartition:00007083:  "which is not a table"))); 
cabc: cdbpartition:00007095:  elog(ERROR, "existing part \"%s\" not congruent with" 
cabc: cdbpartition:00007096:  "partitioned table \"%s\"", 
cabc: cdbpartition:00007097:  RelationGetRelationName(oldrel), 
cabc: cdbpartition:00007098:  RelationGetRelationName(rel)); 
cabc: cdbpartition:00007114:  ereport(ERROR, 
cabc: cdbpartition:00007115:  (errcode(ERRCODE_SYNTAX_ERROR), 
cabc: cdbpartition:00007116:  errmsg("owner of \"%s\" must be the same as that " 
cabc: cdbpartition:00007117:  "of \"%s\"", 
cabc: cdbpartition:00007118:  RelationGetRelationName(newrel), 
cabc: cdbpartition:00007119:  RelationGetRelationName(rel)), 
cabc: cdbpartition:00007120:  errOmitLocation(true))); 
cabc: cdbpartition:00007128:  ereport(ERROR, 
cabc: cdbpartition:00007129:  (errcode(ERRCODE_SYNTAX_ERROR), 
cabc: cdbpartition:00007130:  errmsg("\"%s\" and \"%s\" must have same OIDs setting", 
cabc: cdbpartition:00007131:  RelationGetRelationName(rel), 
cabc: cdbpartition:00007132:  RelationGetRelationName(newrel)), 
cabc: cdbpartition:00007133:  errOmitLocation(true))); 
cabc: cdbpartition:00007141:  ereport(ERROR, 
cabc: cdbpartition:00007142:  (errcode(ERRCODE_SYNTAX_ERROR), 
cabc: cdbpartition:00007143:  errmsg("cannot EXCHANGE table \"%s\" as it has " 
cabc: cdbpartition:00007144:  "child table(s)", 
cabc: cdbpartition:00007145:  RelationGetRelationName(newrel)), 
cabc: cdbpartition:00007146:  errOmitLocation(true))); 
cabc: cdbpartition:00007153:  ereport(ERROR, 
cabc: cdbpartition:00007154:  (errcode(ERRCODE_SYNTAX_ERROR), 
cabc: cdbpartition:00007155:  errmsg("cannot exchange table \"%s\" as it " 
cabc: cdbpartition:00007156:  "inherits other table(s)", 
cabc: cdbpartition:00007157:  RelationGetRelationName(newrel)), 
cabc: cdbpartition:00007158:  errOmitLocation(true))); 
cabc: cdbpartition:00007166:  ereport(ERROR, 
cabc: cdbpartition:00007167:  (errcode(ERRCODE_SYNTAX_ERROR), 
cabc: cdbpartition:00007168:  errmsg("cannot exchange table which has rules " 
cabc: cdbpartition:00007169:  "defined on it"), 
cabc: cdbpartition:00007170:  errOmitLocation(true))); 
cabc: cdbpartition:00007199:  elog(ERROR, 
cabc: cdbpartition:00007200:  "discrepancy in partitioning policy of \"%s\"", 
cabc: cdbpartition:00007201:  RelationGetRelationName(rel)); 
cabc: cdbpartition:00007207:  elog(ERROR, 
cabc: cdbpartition:00007208:  "discrepancy in partitioning policy of \"%s\"", 
cabc: cdbpartition:00007209:  RelationGetRelationName(rel)); 
cabc: cdbpartition:00007232:  ereport(ERROR, 
cabc: cdbpartition:00007233:  (errcode(ERRCODE_SYNTAX_ERROR), 
cabc: cdbpartition:00007234:  errmsg("distribution policy for \"%s\" " 
cabc: cdbpartition:00007235:  "must be the same as that for \"%s\"", 
cabc: cdbpartition:00007236:  RelationGetRelationName(newrel), 
cabc: cdbpartition:00007237:  RelationGetRelationName(rel)), 
cabc: cdbpartition:00007238:  errOmitLocation(true))); 
cabc: cdbpartition:00007245:  ereport(ERROR, 
cabc: cdbpartition:00007246:  (errcode(ERRCODE_SYNTAX_ERROR), 
cabc: cdbpartition:00007247:  errmsg("distribution policy matches but implementation lags"), 
cabc: cdbpartition:00007248:  errOmitLocation(true))); 
cabc: cdbpartition:00007425:  ereport(ERROR, 
cabc: cdbpartition:00007426:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
cabc: cdbpartition:00007427:  errmsg("%s constraint \"%s\" missing", what, who), 
cabc: cdbpartition:00007428:  errhint("Add %s constraint \"%s\" to the candidate table" 
cabc: cdbpartition:00007429:  " or drop it from the partitioned table." 
cabc: cdbpartition:00007430:  , what, who), 
cabc: cdbpartition:00007431:  errOmitLocation(true))); 
cabc: cdbpartition:00007435:  ereport(ERROR, 
cabc: cdbpartition:00007436:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
cabc: cdbpartition:00007437:  errmsg("WITHOUT VALIDATION incompatible with missing %s constraint \"%s\"", 
cabc: cdbpartition:00007438:  what, who), 
cabc: cdbpartition:00007439:  errhint("Add %s constraint %s to the candidate table" 
cabc: cdbpartition:00007440:  " or drop it from the partitioned table." 
cabc: cdbpartition:00007441:  , what, who), 
cabc: cdbpartition:00007442:  errOmitLocation(true))); 
cabc: cdbpartition:00007449:  elog(ERROR,"invalid constraint type: %c", con->contype); 
cabc: cdbpartition:00007470:  elog(WARNING, "Won't enforce FK constraint."); 
cabc: cdbpartition:00007475:  elog(WARNING, "Won't enforce PK constraint."); 
cabc: cdbpartition:00007480:  elog(WARNING, "Won't enforce ND constraint."); 
cabc: cdbpartition:00007485:  elog(WARNING, "!! NOT READY FOR TYPE %c CONSTRAINT !!", con->contype); 
cabc: cdbpartition:00007580:  elog(ERROR, "name request for constraint of inappropriate type"); 
cabc: cdbpartition:00007873:  ereport(ERROR, 
cabc: cdbpartition:00007874:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
cabc: cdbpartition:00007875:  errmsg("%s constraint must contain all columns in the " 
cabc: cdbpartition:00007876:  "partition key of relation \"%s\".", 
cabc: cdbpartition:00007877:  what, RelationGetRelationName(rel)), 
cabc: cdbpartition:00007878:  errhint("Include the partition key or create a part-wise UNIQUE index instead."))); 
aaaaa GP_IGNORE: caah: cdbpath - ./backend/cdb/cdbpath.c
caah: cdbpath:00001328:  ereport(ERROR, (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
caah: cdbpath:00001329:  errmsg("The query is not yet supported in " 
caah: cdbpath:00001330:  "this version of " PACKAGE_NAME "."), 
caah: cdbpath:00001331:  errdetail("Unsupported combination of " 
caah: cdbpath:00001332:  "UNION ALL of joined tables " 
caah: cdbpath:00001333:  "with subquery.") 
caah: cdbpath:00001334:  )); 
aaaaa GP_IGNORE: cabi: cdbpersistentbuild - ./backend/cdb/cdbpersistentbuild.c
cabi: cdbpersistentbuild:00000173:  elog(ERROR, "Only expecting global tables to be Buffer Pool managed"); 
cabi: cdbpersistentbuild:00000316:  elog(ERROR, "Physical segment file #0 missing for relation '%s'", 
cabi: cdbpersistentbuild:00000317:  dbInfoRel->relname); 
cabi: cdbpersistentbuild:00000388:  elog(ERROR, "logical EOF greater than zero (" INT64_FORMAT ") for segment file #%d in relation '%s' but physical file is missing", 
cabi: cdbpersistentbuild:00000389:  logicalSegInfo->logicalEof, 
cabi: cdbpersistentbuild:00000390:  logicalSegInfo->segmentFileNum, 
cabi: cdbpersistentbuild:00000391:  dbInfoRel->relname); 
cabi: cdbpersistentbuild:00000566:  elog(ERROR, "failed to build global sequence tuple"); 
cabi: cdbpersistentbuild:00000582:  elog(ERROR, "could not find tuple for database %u", dbOid); 
cabi: cdbpersistentbuild:00000695:  ereport(ERROR, 
cabi: cdbpersistentbuild:00000696:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabi: cdbpersistentbuild:00000697:  errmsg("tablespace tuple is invalid"))); 
cabi: cdbpersistentbuild:00000847:  elog(ERROR, "pg_class entry for gp_relation_node_index not found"); 
cabi: cdbpersistentbuild:00001068:  ereport(ERROR, 
cabi: cdbpersistentbuild:00001069:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
cabi: cdbpersistentbuild:00001070:  errmsg("function is not supported"), 
cabi: cdbpersistentbuild:00001071:  errOmitLocation(true))); 
cabi: cdbpersistentbuild:00001125:  elog(ERROR, 
cabi: cdbpersistentbuild:00001126:  "Persistent object type must be in the range 1..4 " 
cabi: cdbpersistentbuild:00001127:  "(Relation, Database Dir, Tablespace Dir, Filespace Dir)"); 
aaaaa GP_IGNORE: cacb: cdbpersistentdatabase - ./backend/cdb/cdbpersistentdatabase.c
cacb: cdbpersistentdatabase:00000154:  elog(ERROR, "Out of shared-memory for persistent relations"); 
cacb: cdbpersistentdatabase:00000470:  elog(ERROR, "Persistent database entry '%s' expected to exist", 
cacb: cdbpersistentdatabase:00000471:  GetDatabasePath(dbDirNode->database, dbDirNode->tablespace)); 
cacb: cdbpersistentdatabase:00000595:  elog(ERROR, "Persistent database entry '%s' already exists in state '%s'", 
cacb: cdbpersistentdatabase:00000596:  GetDatabasePath( 
cacb: cdbpersistentdatabase:00000597:  dbDirNode->database, 
cacb: cdbpersistentdatabase:00000598:  dbDirNode->tablespace), 
cacb: cdbpersistentdatabase:00000599:  PersistentFileSysObjState_Name(databaseDirEntry->state)); 
cacb: cdbpersistentdatabase:00000612:  ereport(ERROR, 
cacb: cdbpersistentdatabase:00000613:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacb: cdbpersistentdatabase:00000614:  errmsg("Out of shared-memory for persistent databases"), 
cacb: cdbpersistentdatabase:00000615:  errhint("You may need to increase the gp_max_databases and " 
cacb: cdbpersistentdatabase:00000616:  "gp_max_tablespaces value"), 
cacb: cdbpersistentdatabase:00000617:  errOmitLocation(true))); 
cacb: cdbpersistentdatabase:00000695:  elog(ERROR, "We can only add to persistent meta-data when special states"); 
cacb: cdbpersistentdatabase:00000717:  elog(ERROR, "Persistent database entry '%s' already exists in state '%s'", 
cacb: cdbpersistentdatabase:00000718:  GetDatabasePath( 
cacb: cdbpersistentdatabase:00000719:  dbDirNode->database, 
cacb: cdbpersistentdatabase:00000720:  dbDirNode->tablespace), 
cacb: cdbpersistentdatabase:00000721:  PersistentFileSysObjState_Name(databaseDirEntry->state)); 
cacb: cdbpersistentdatabase:00000734:  ereport(ERROR, 
cacb: cdbpersistentdatabase:00000735:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacb: cdbpersistentdatabase:00000736:  errmsg("Out of shared-memory for persistent databases"), 
cacb: cdbpersistentdatabase:00000737:  errhint("You may need to increase the gp_max_databases and " 
cacb: cdbpersistentdatabase:00000738:  "gp_max_tablespaces value"), 
cacb: cdbpersistentdatabase:00000739:  errOmitLocation(true))); 
cacb: cdbpersistentdatabase:00000797:  elog(ERROR, "persistent database entry '%s' already exists " 
cacb: cdbpersistentdatabase:00000798:  "in state '%s'", 
cacb: cdbpersistentdatabase:00000799:  GetDatabasePath( 
cacb: cdbpersistentdatabase:00000800:  db->database, 
cacb: cdbpersistentdatabase:00000801:  db->tablespace), 
cacb: cdbpersistentdatabase:00000802:  PersistentFileSysObjState_Name(dbe->state)); 
cacb: cdbpersistentdatabase:00000812:  elog(ERROR, "out of shared-memory for persistent databases"); 
cacb: cdbpersistentdatabase:00000881:  elog(ERROR, "Persistent database entry %s expected to be in 'Create Pending' state (actual state '%s')", 
cacb: cdbpersistentdatabase:00000882:  GetDatabasePath( 
cacb: cdbpersistentdatabase:00000883:  dbDirNode->database, 
cacb: cdbpersistentdatabase:00000884:  dbDirNode->tablespace), 
cacb: cdbpersistentdatabase:00000885:  PersistentFileSysObjState_Name(databaseDirEntry->state)); 
cacb: cdbpersistentdatabase:00000924:  elog(ERROR, "persistent table changes forbidden"); 
cacb: cdbpersistentdatabase:00000976:  elog(ERROR, "persistent table changes forbidden"); 
cacb: cdbpersistentdatabase:00001129:  elog(ERROR, "Persistent database entry %s expected to be in 'Create Pending' or 'Created' state (actual state '%s')", 
cacb: cdbpersistentdatabase:00001130:  GetDatabasePath( 
cacb: cdbpersistentdatabase:00001131:  dbDirNode->database, 
cacb: cdbpersistentdatabase:00001132:  dbDirNode->tablespace), 
cacb: cdbpersistentdatabase:00001133:  PersistentFileSysObjState_Name(databaseDirEntry->state)); 
cacb: cdbpersistentdatabase:00001208:  elog(ERROR, "Persistent database entry %s expected to be in 'Create Pending' (actual state '%s')", 
cacb: cdbpersistentdatabase:00001209:  GetDatabasePath( 
cacb: cdbpersistentdatabase:00001210:  dbDirNode->database, 
cacb: cdbpersistentdatabase:00001211:  dbDirNode->tablespace), 
cacb: cdbpersistentdatabase:00001212:  PersistentFileSysObjState_Name(databaseDirEntry->state)); 
cacb: cdbpersistentdatabase:00001273:  elog(ERROR, "Unexpected persistent object verify expected result: %d", 
cacb: cdbpersistentdatabase:00001274:  verifyExpectedResult); 
cacb: cdbpersistentdatabase:00001325:  elog(ERROR, "Persistent database entry %s expected to be in 'Drop Pending' or 'Aborting Create' (actual state '%s')", 
cacb: cdbpersistentdatabase:00001326:  GetDatabasePath( 
cacb: cdbpersistentdatabase:00001327:  dbDirNode->database, 
cacb: cdbpersistentdatabase:00001328:  dbDirNode->tablespace), 
cacb: cdbpersistentdatabase:00001329:  PersistentFileSysObjState_Name(databaseDirEntry->state)); 
cacb: cdbpersistentdatabase:00001400:  elog(ERROR, "Persistent database entry %s expected to be in 'Create Pending' or 'Created' (actual state '%s')", 
cacb: cdbpersistentdatabase:00001401:  GetDatabasePath( 
cacb: cdbpersistentdatabase:00001402:  dbDirNode->database, 
cacb: cdbpersistentdatabase:00001403:  dbDirNode->tablespace), 
cacb: cdbpersistentdatabase:00001404:  PersistentFileSysObjState_Name(databaseDirEntry->state)); 
cacb: cdbpersistentdatabase:00001462:  elog(ERROR, "Persistent database entry '%s' already exists in state '%s'", 
cacb: cdbpersistentdatabase:00001463:  GetDatabasePath( 
cacb: cdbpersistentdatabase:00001464:  dbDirNode->database, 
cacb: cdbpersistentdatabase:00001465:  dbDirNode->tablespace), 
cacb: cdbpersistentdatabase:00001466:  PersistentFileSysObjState_Name(databaseDirEntry->state)); 
cacb: cdbpersistentdatabase:00001480:  ereport(ERROR, 
cacb: cdbpersistentdatabase:00001481:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacb: cdbpersistentdatabase:00001482:  errmsg("Out of shared-memory for persistent databases"), 
cacb: cdbpersistentdatabase:00001483:  errhint("You may need to increase the gp_max_databases and " 
cacb: cdbpersistentdatabase:00001484:  "gp_max_tablespaces value"), 
cacb: cdbpersistentdatabase:00001485:  errOmitLocation(true))); 
cacb: cdbpersistentdatabase:00001577:  elog(ERROR, "Persistent database entry %s expected to be in 'Just-In-Time Create Pending' state (actual state '%s')", 
cacb: cdbpersistentdatabase:00001578:  GetDatabasePath( 
cacb: cdbpersistentdatabase:00001579:  dbDirNode->database, 
cacb: cdbpersistentdatabase:00001580:  dbDirNode->tablespace), 
cacb: cdbpersistentdatabase:00001581:  PersistentFileSysObjState_Name(databaseDirEntry->state)); 
cacb: cdbpersistentdatabase:00001654:  elog(ERROR, "Persistent database entry %s expected to be in 'Just-In-Time Create Pending' state (actual state '%s')", 
cacb: cdbpersistentdatabase:00001655:  GetDatabasePath( 
cacb: cdbpersistentdatabase:00001656:  dbDirNode->database, 
cacb: cdbpersistentdatabase:00001657:  dbDirNode->tablespace), 
cacb: cdbpersistentdatabase:00001658:  PersistentFileSysObjState_Name(databaseDirEntry->state)); 
aaaaa GP_IGNORE: cacc: cdbpersistentfilespace - ./backend/cdb/cdbpersistentfilespace.c
cacc: cdbpersistentfilespace:00000192:  elog(ERROR, "Trying to delete entry that does not exist"); 
cacc: cdbpersistentfilespace:00000261:  elog(ERROR, "Out of shared-memory for persistent filespaces"); 
cacc: cdbpersistentfilespace:00000383:  elog(ERROR, "Trying to delete entry that does not exist"); 
cacc: cdbpersistentfilespace:00000495:  elog(ERROR, "Did not find persistent filespace entry %u", 
cacc: cdbpersistentfilespace:00000496:  filespaceOid); 
cacc: cdbpersistentfilespace:00000567:  elog(ERROR, "Location '%s' is too long (found %d characaters -- expected no more than %d characters)", 
cacc: cdbpersistentfilespace:00000568:  location, 
cacc: cdbpersistentfilespace:00000569:  len, 
cacc: cdbpersistentfilespace:00000570:  FilespaceLocationBlankPaddedWithNullTermLen - 1); 
cacc: cdbpersistentfilespace:00000602:  elog(ERROR, "Expecting non-empty primary location"); 
cacc: cdbpersistentfilespace:00000619:  elog(ERROR, "Incorrect format for blank-padded filespace location"); 
cacc: cdbpersistentfilespace:00000726:  ereport(FATAL, 
cacc: cdbpersistentfilespace:00000727:  (errcode(ERRCODE_INTERNAL_ERROR), 
cacc: cdbpersistentfilespace:00000728:  errmsg("Unable to determine dbid for filespace lookup"))); 
cacc: cdbpersistentfilespace:00000773:  elog(ERROR, "Did not find persistent filespace entry %u", 
cacc: cdbpersistentfilespace:00000774:  filespaceOid); 
cacc: cdbpersistentfilespace:00000841:  elog(ERROR, "Did not find persistent filespace entry %u", 
cacc: cdbpersistentfilespace:00000842:  filespaceOid); 
cacc: cdbpersistentfilespace:00000923:  ereport(ERROR, 
cacc: cdbpersistentfilespace:00000924:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacc: cdbpersistentfilespace:00000925:  errmsg("Out of shared-memory for persistent filespaces"), 
cacc: cdbpersistentfilespace:00000926:  errhint("You may need to increase the gp_max_filespaces value"), 
cacc: cdbpersistentfilespace:00000927:  errOmitLocation(true))); 
cacc: cdbpersistentfilespace:00001042:  elog(ERROR, "did not find persistent filespace entry %u", 
cacc: cdbpersistentfilespace:00001043:  filespaceOid); 
cacc: cdbpersistentfilespace:00001046:  elog(ERROR, "persistent filespace entry %u expected to be in " 
cacc: cdbpersistentfilespace:00001047:  "'Create Pending' state (actual state '%s')", 
cacc: cdbpersistentfilespace:00001048:  filespaceOid, 
cacc: cdbpersistentfilespace:00001049:  PersistentFileSysObjState_Name(filespaceDirEntry->state)); 
cacc: cdbpersistentfilespace:00001125:  elog(ERROR, "Did not find persistent filespace entry %u", 
cacc: cdbpersistentfilespace:00001126:  filespaceOid); 
cacc: cdbpersistentfilespace:00001130:  elog(ERROR, "Persistent filespace entry %u expected to be in 'Create Pending' or 'Created' state (actual state '%s')", 
cacc: cdbpersistentfilespace:00001131:  filespaceOid, 
cacc: cdbpersistentfilespace:00001132:  PersistentFileSysObjState_Name(filespaceDirEntry->state)); 
cacc: cdbpersistentfilespace:00001205:  elog(ERROR, "Did not find persistent contentid %d filespace entry %u", 
cacc: cdbpersistentfilespace:00001206:  fsObjName->contentid, filespaceOid); 
cacc: cdbpersistentfilespace:00001209:  elog(ERROR, "Persistent filespace entry %u expected to be in 'Create Pending' (actual state '%s')", 
cacc: cdbpersistentfilespace:00001210:  filespaceOid, 
cacc: cdbpersistentfilespace:00001211:  PersistentFileSysObjState_Name(filespaceDirEntry->state)); 
cacc: cdbpersistentfilespace:00001271:  elog(ERROR, "Unexpected persistent object verify expected result: %d", 
cacc: cdbpersistentfilespace:00001272:  verifyExpectedResult); 
cacc: cdbpersistentfilespace:00001319:  elog(ERROR, "Did not find persistent filespace entry %u", 
cacc: cdbpersistentfilespace:00001320:  filespaceOid); 
cacc: cdbpersistentfilespace:00001324:  elog(ERROR, "Persistent filespace entry %u expected to be in 'Drop Pending' or 'Aborting Create' (actual state '%s')", 
cacc: cdbpersistentfilespace:00001325:  filespaceOid, 
cacc: cdbpersistentfilespace:00001326:  PersistentFileSysObjState_Name(filespaceDirEntry->state)); 
cacc: cdbpersistentfilespace:00001371:  elog(ERROR, "persistent table changes forbidden"); 
cacc: cdbpersistentfilespace:00001383:  elog(ERROR, "did not find persistent filespace entry %u", 
cacc: cdbpersistentfilespace:00001384:  filespace); 
cacc: cdbpersistentfilespace:00001431:  elog(ERROR, "persistent table changes forbidden"); 
cacc: cdbpersistentfilespace:00001481:  elog(ERROR, "persistent table changes forbidden"); 
cacc: cdbpersistentfilespace:00001568:  elog(FATAL, 
cacc: cdbpersistentfilespace:00001569:  "dbid %d not found in gp_persistent_filespace_node", 
cacc: cdbpersistentfilespace:00001570:  (int) primaryDbid); 
cacc: cdbpersistentfilespace:00001672:  ereport(FATAL, 
cacc: cdbpersistentfilespace:00001673:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacc: cdbpersistentfilespace:00001674:  errmsg("Not enough shared memory for persistent filespace hash table"))); 
aaaaa GP_IGNORE: cacd: cdbpersistentfilesysobj - ./backend/cdb/cdbpersistentfilesysobj.c
cacd: cdbpersistentfilesysobj:00000485:  elog(ERROR, "Persistent file-system object type %d out-of-range", 
cacd: cdbpersistentfilesysobj:00000486:  fsObjType); 
cacd: cdbpersistentfilesysobj:00000597:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
cacd: cdbpersistentfilesysobj:00000598:  fsObjType); 
cacd: cdbpersistentfilesysobj:00000648:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
cacd: cdbpersistentfilesysobj:00000649:  fsObjType); 
cacd: cdbpersistentfilesysobj:00000892:  elog(ERROR, "TID for fetch persistent '%s' tuple is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00000893:  PersistentFileSysObjName_TypeName(fsObjType)); 
cacd: cdbpersistentfilesysobj:00001044:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
cacd: cdbpersistentfilesysobj:00001045:  fsObjType); 
cacd: cdbpersistentfilesysobj:00001340:  elog(ERROR, "TID for persistent '%s' state-change tuple is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00001341:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00001344:  elog(ERROR, "Persistent '%s' serial number for state-change is invalid (0)", 
cacd: cdbpersistentfilesysobj:00001345:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00001404:  elog(ERROR, "Unexpected persistent object next state: %d", 
cacd: cdbpersistentfilesysobj:00001405:  nextState); 
cacd: cdbpersistentfilesysobj:00001451:  elog(ERROR, "Unexpected persistent object verify expected result: %d", 
cacd: cdbpersistentfilesysobj:00001452:  verifyExpectedResult); 
cacd: cdbpersistentfilesysobj:00001513:  elog(ERROR, "unexpected mirror data loss tracking state: %d", 
cacd: cdbpersistentfilesysobj:00001514:  currentMirrorDataLossTrackingState); 
cacd: cdbpersistentfilesysobj:00001604:  elog(ERROR, "Unexpected persistent object next state: %d", 
cacd: cdbpersistentfilesysobj:00001605:  nextState); 
cacd: cdbpersistentfilesysobj:00002162:  elog(ERROR, "TID for persistent repair delete tuple is invalid (0,0)"); 
cacd: cdbpersistentfilesysobj:00002186:  elog(ERROR, 
cacd: cdbpersistentfilesysobj:00002187:  "Persistent object for TID %s is already free", 
cacd: cdbpersistentfilesysobj:00002188:  ItemPointerToString(persistentTid)); 
cacd: cdbpersistentfilesysobj:00002214:  elog(ERROR, "TID for persistent '%s' tuple for mirror validate is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00002215:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00002218:  elog(ERROR, "Persistent '%s' serial number for mirror validate is invalid (0)", 
cacd: cdbpersistentfilesysobj:00002219:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00002351:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
cacd: cdbpersistentfilesysobj:00002352:  fsObjName->type); 
cacd: cdbpersistentfilesysobj:00002376:  elog(ERROR, "TID for persistent '%s' tuple for mirror re-create is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00002377:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00002380:  elog(ERROR, "Persistent '%s' serial number for mirror re-create is invalid (0)", 
cacd: cdbpersistentfilesysobj:00002381:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00002468:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
cacd: cdbpersistentfilesysobj:00002469:  fsObjName->type); 
cacd: cdbpersistentfilesysobj:00002485:  elog(ERROR, "TID for persistent '%s' tuple for created is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00002486:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00002489:  elog(ERROR, "Persistent '%s' serial number for created is invalid (0)", 
cacd: cdbpersistentfilesysobj:00002490:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00002539:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
cacd: cdbpersistentfilesysobj:00002540:  fsObjName->type); 
cacd: cdbpersistentfilesysobj:00002558:  elog(ERROR, "TID for persistent '%s' tuple for mark aborting CREATE is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00002559:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00002562:  elog(ERROR, "Persistent '%s' serial number for mark aborting CREATE is invalid (0)", 
cacd: cdbpersistentfilesysobj:00002563:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00002610:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
cacd: cdbpersistentfilesysobj:00002611:  fsObjName->type); 
cacd: cdbpersistentfilesysobj:00002632:  elog(ERROR, "TID for persistent '%s' tuple for mark DROP pending is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00002633:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00002636:  elog(ERROR, "Persistent '%s' serial number for mark DROP pending is invalid (0)", 
cacd: cdbpersistentfilesysobj:00002637:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00002689:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
cacd: cdbpersistentfilesysobj:00002690:  fsObjName->type); 
cacd: cdbpersistentfilesysobj:00002762:  elog(ERROR, "TID for persistent '%s' tuple for DROP is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00002763:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00002766:  elog(ERROR, "Persistent '%s' serial number for DROP is invalid (0)", 
cacd: cdbpersistentfilesysobj:00002767:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00002803:  elog(ERROR, "Expected persistent entry '%s' not to be in 'Free' state for DROP at TID %s", 
cacd: cdbpersistentfilesysobj:00002804:  PersistentFileSysObjName_TypeAndObjectName(fsObjName), 
cacd: cdbpersistentfilesysobj:00002805:  ItemPointerToString(persistentTid)); 
cacd: cdbpersistentfilesysobj:00002808:  elog(ERROR, "Expected persistent entry '%s' serial number mismatch for DROP (expected " INT64_FORMAT ", found " INT64_FORMAT "), at TID %s", 
cacd: cdbpersistentfilesysobj:00002809:  PersistentFileSysObjName_TypeAndObjectName(fsObjName), 
cacd: cdbpersistentfilesysobj:00002810:  persistentSerialNum, 
cacd: cdbpersistentfilesysobj:00002811:  actualSerialNum, 
cacd: cdbpersistentfilesysobj:00002812:  ItemPointerToString(persistentTid)); 
cacd: cdbpersistentfilesysobj:00002838:  elog(ERROR, "Relation storage manager for persistent '%s' tuple for DROP is invalid (%d)", 
cacd: cdbpersistentfilesysobj:00002839:  PersistentFileSysObjName_TypeName(fsObjName->type), 
cacd: cdbpersistentfilesysobj:00002840:  relStorageMgr); 
cacd: cdbpersistentfilesysobj:00002968:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
cacd: cdbpersistentfilesysobj:00002969:  fsObjName->type); 
cacd: cdbpersistentfilesysobj:00003019:  elog(ERROR, "TID for persistent '%s' tuple for mirror re-drop is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00003020:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00003023:  elog(ERROR, "Persistent '%s' serial number for mirror re-drop is invalid (0)", 
cacd: cdbpersistentfilesysobj:00003024:  PersistentFileSysObjName_TypeName(fsObjName->type)); 
cacd: cdbpersistentfilesysobj:00003146:  elog(ERROR, "Unexpected persistent file-system object type: %d", 
cacd: cdbpersistentfilesysobj:00003147:  fsObjName->type); 
cacd: cdbpersistentfilesysobj:00003292:  elog(ERROR, "TID for persistent %u/%u/%u, segment file #%d, tuple for update Append-Only mirror resync EOFs is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00003293:  relFileNode->spcNode, 
cacd: cdbpersistentfilesysobj:00003294:  relFileNode->dbNode, 
cacd: cdbpersistentfilesysobj:00003295:  relFileNode->relNode, 
cacd: cdbpersistentfilesysobj:00003296:  segmentFileNum); 
cacd: cdbpersistentfilesysobj:00003299:  elog(ERROR, "Persistent %u/%u/%u, segment file #%d, serial number for update Append-Only mirror resync EOFs is invalid (0)", 
cacd: cdbpersistentfilesysobj:00003300:  relFileNode->spcNode, 
cacd: cdbpersistentfilesysobj:00003301:  relFileNode->dbNode, 
cacd: cdbpersistentfilesysobj:00003302:  relFileNode->relNode, 
cacd: cdbpersistentfilesysobj:00003303:  segmentFileNum); 
cacd: cdbpersistentfilesysobj:00003342:  elog(ERROR, "Persistent %u/%u/%u, segment file #%d. contentid %d, entry is 'Free' for update Append-Only mirror resync EOFs at TID %s", 
cacd: cdbpersistentfilesysobj:00003343:  relFileNode->spcNode, 
cacd: cdbpersistentfilesysobj:00003344:  relFileNode->dbNode, 
cacd: cdbpersistentfilesysobj:00003345:  relFileNode->relNode, 
cacd: cdbpersistentfilesysobj:00003346:  segmentFileNum, 
cacd: cdbpersistentfilesysobj:00003347:  contentid, 
cacd: cdbpersistentfilesysobj:00003348:  ItemPointerToString(persistentTid)); 
cacd: cdbpersistentfilesysobj:00003351:  elog(ERROR, "Persistent %u/%u/%u, segment file #%d, contentid %d, serial number mismatch for update Append-Only mirror resync EOFs (expected " INT64_FORMAT ", found " INT64_FORMAT "), at TID %s", 
cacd: cdbpersistentfilesysobj:00003352:  relFileNode->spcNode, 
cacd: cdbpersistentfilesysobj:00003353:  relFileNode->dbNode, 
cacd: cdbpersistentfilesysobj:00003354:  relFileNode->relNode, 
cacd: cdbpersistentfilesysobj:00003355:  segmentFileNum, 
cacd: cdbpersistentfilesysobj:00003356:  contentid, 
cacd: cdbpersistentfilesysobj:00003357:  persistentSerialNum, 
cacd: cdbpersistentfilesysobj:00003358:  actualPersistentSerialNum, 
cacd: cdbpersistentfilesysobj:00003359:  ItemPointerToString(persistentTid)); 
cacd: cdbpersistentfilesysobj:00003362:  elog(ERROR, "Persistent %u/%u/%u, segment file #%d, contentid %d, relation storage manager mismatch for update Append-Only mirror resync EOFs (expected '%s', found '%s'), at TID %s", 
cacd: cdbpersistentfilesysobj:00003363:  relFileNode->spcNode, 
cacd: cdbpersistentfilesysobj:00003364:  relFileNode->dbNode, 
cacd: cdbpersistentfilesysobj:00003365:  relFileNode->relNode, 
cacd: cdbpersistentfilesysobj:00003366:  segmentFileNum, 
cacd: cdbpersistentfilesysobj:00003367:  contentid, 
cacd: cdbpersistentfilesysobj:00003368:  PersistentFileSysRelStorageMgr_Name(PersistentFileSysRelStorageMgr_AppendOnly), 
cacd: cdbpersistentfilesysobj:00003369:  PersistentFileSysRelStorageMgr_Name(relationStorageManager), 
cacd: cdbpersistentfilesysobj:00003370:  ItemPointerToString(persistentTid)); 
cacd: cdbpersistentfilesysobj:00003375:  elog(ERROR, "Persistent %u/%u/%u, segment file #%d, contentid %d, current new EOF is greater than or equal to update new EOF for Append-Only mirror resync EOFs (current new EOF " INT64_FORMAT ", update new EOF " INT64_FORMAT "), persistent serial num " INT64_FORMAT " at TID %s", 
cacd: cdbpersistentfilesysobj:00003376:  relFileNode->spcNode, 
cacd: cdbpersistentfilesysobj:00003377:  relFileNode->dbNode, 
cacd: cdbpersistentfilesysobj:00003378:  relFileNode->relNode, 
cacd: cdbpersistentfilesysobj:00003379:  segmentFileNum, 
cacd: cdbpersistentfilesysobj:00003380:  contentid, 
cacd: cdbpersistentfilesysobj:00003381:  mirrorAppendOnlyNewEof, 
cacd: cdbpersistentfilesysobj:00003382:  mirrorNewEof, 
cacd: cdbpersistentfilesysobj:00003383:  persistentSerialNum, 
cacd: cdbpersistentfilesysobj:00003384:  ItemPointerToString(persistentTid)); 
cacd: cdbpersistentfilesysobj:00003527:  elog(ERROR, "Serial number mismatch for update (expected " INT64_FORMAT ", found " INT64_FORMAT "), at TID %s", 
cacd: cdbpersistentfilesysobj:00003528:  persistentSerialNum, 
cacd: cdbpersistentfilesysobj:00003529:  serialNum, 
cacd: cdbpersistentfilesysobj:00003530:  ItemPointerToString(persistentTid)); 
cacd: cdbpersistentfilesysobj:00003710:  elog(ERROR, "Unexpected persistent end transaction file-system action: %d", 
cacd: cdbpersistentfilesysobj:00003711:  action); 
cacd: cdbpersistentfilesysobj:00003801:  elog(ERROR, "Unexpected persistent end transaction file-system action: %d", 
cacd: cdbpersistentfilesysobj:00003802:  action); 
cacd: cdbpersistentfilesysobj:00003912:  elog(ERROR, "mirror loss EOF " INT64_FORMAT " doesn't match new EOF " INT64_FORMAT, 
cacd: cdbpersistentfilesysobj:00003913:  eofs->mirrorLossEof, 
cacd: cdbpersistentfilesysobj:00003914:  eofs->mirrorNewEof); 
cacd: cdbpersistentfilesysobj:00003952:  elog(ERROR, 
cacd: cdbpersistentfilesysobj:00003953:  "Append-Only Mirror Resync EOFs intent count mismatch " 
cacd: cdbpersistentfilesysobj:00003954:  "(shared-memory count %d, xlog count %d). " 
cacd: cdbpersistentfilesysobj:00003955:  "Example relation %u/%u/%u, segment file #%d (persistent serial num " INT64_FORMAT ", TID %s). " 
cacd: cdbpersistentfilesysobj:00003956:  "Distributed transaction id %s (local prepared xid %u)", 
cacd: cdbpersistentfilesysobj:00003957:  prepareAppendOnlyIntentCount, 
cacd: cdbpersistentfilesysobj:00003958:  persistentObjects->typed.appendOnlyMirrorResyncEofsCount, 
cacd: cdbpersistentfilesysobj:00003959:  eofsExample->relFileNode.spcNode, 
cacd: cdbpersistentfilesysobj:00003960:  eofsExample->relFileNode.dbNode, 
cacd: cdbpersistentfilesysobj:00003961:  eofsExample->relFileNode.relNode, 
cacd: cdbpersistentfilesysobj:00003962:  eofsExample->segmentFileNum, 
cacd: cdbpersistentfilesysobj:00003963:  eofsExample->persistentSerialNum, 
cacd: cdbpersistentfilesysobj:00003964:  ItemPointerToString(&eofsExample->persistentTid), 
cacd: cdbpersistentfilesysobj:00003965:  gid, 
cacd: cdbpersistentfilesysobj:00003966:  preparedXid); 
cacd: cdbpersistentfilesysobj:00003977:  elog(ERROR, 
cacd: cdbpersistentfilesysobj:00003978:  "Append-Only Mirror Resync EOFs intent count would go negative " 
cacd: cdbpersistentfilesysobj:00003979:  "(enter system count %d, subtract count %d). " 
cacd: cdbpersistentfilesysobj:00003980:  "Example relation %u/%u/%u, segment file #%d (persistent serial num " INT64_FORMAT ", TID %s). " 
cacd: cdbpersistentfilesysobj:00003981:  "Distributed transaction id %s (local prepared xid %u)", 
cacd: cdbpersistentfilesysobj:00003982:  oldSystemAppendOnlyCommitWorkCount, 
cacd: cdbpersistentfilesysobj:00003983:  persistentObjects->typed.appendOnlyMirrorResyncEofsCount, 
cacd: cdbpersistentfilesysobj:00003984:  eofsExample->relFileNode.spcNode, 
cacd: cdbpersistentfilesysobj:00003985:  eofsExample->relFileNode.dbNode, 
cacd: cdbpersistentfilesysobj:00003986:  eofsExample->relFileNode.relNode, 
cacd: cdbpersistentfilesysobj:00003987:  eofsExample->segmentFileNum, 
cacd: cdbpersistentfilesysobj:00003988:  eofsExample->persistentSerialNum, 
cacd: cdbpersistentfilesysobj:00003989:  ItemPointerToString(&eofsExample->persistentTid), 
cacd: cdbpersistentfilesysobj:00003990:  gid, 
cacd: cdbpersistentfilesysobj:00003991:  preparedXid); 
cacd: cdbpersistentfilesysobj:00004023:  elog(ERROR, 
cacd: cdbpersistentfilesysobj:00004024:  "Append-Only Mirror Resync EOFs intent count in shared-memory non-zero (%d) and xlog count is zero. " 
cacd: cdbpersistentfilesysobj:00004025:  "Distributed transaction id %s (local prepared xid %u)", 
cacd: cdbpersistentfilesysobj:00004026:  prepareAppendOnlyIntentCount, 
cacd: cdbpersistentfilesysobj:00004027:  gid, 
cacd: cdbpersistentfilesysobj:00004028:  preparedXid); 
cacd: cdbpersistentfilesysobj:00004388:  elog(ERROR, "TID for persistent '%s' tuple for update mirror existence state is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00004389:  PersistentFileSysObjName_TypeName(fsObjType)); 
cacd: cdbpersistentfilesysobj:00004392:  elog(ERROR, "Persistent '%s' serial number for update mirror existence state is invalid (0)", 
cacd: cdbpersistentfilesysobj:00004393:  PersistentFileSysObjName_TypeName(fsObjType)); 
cacd: cdbpersistentfilesysobj:00004472:  elog(ERROR, "TID for persistent '%s' tuple for mark Buffer Pool relation for 'Scan Incremental' resync is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00004473:  PersistentFileSysObjName_TypeAndObjectName(fsObjName)); 
cacd: cdbpersistentfilesysobj:00004476:  elog(ERROR, "Persistent '%s' serial number for mark Buffer Pool relation for 'Scan Incremental' resync is invalid (0)", 
cacd: cdbpersistentfilesysobj:00004477:  PersistentFileSysObjName_TypeAndObjectName(fsObjName)); 
cacd: cdbpersistentfilesysobj:00004519:  elog(ERROR, "Persistent '%s' serial number mismatch for update physically truncated (expected " INT64_FORMAT ", found " INT64_FORMAT ")", 
cacd: cdbpersistentfilesysobj:00004520:  PersistentFileSysObjName_TypeAndObjectName(fsObjName), 
cacd: cdbpersistentfilesysobj:00004521:  persistentSerialNum, 
cacd: cdbpersistentfilesysobj:00004522:  actualPersistentSerialNum); 
cacd: cdbpersistentfilesysobj:00004525:  elog(ERROR, "Persistent '%s' relation storage manager mismatch for update physically truncated (expected '%s', found '%s')", 
cacd: cdbpersistentfilesysobj:00004526:  PersistentFileSysObjName_TypeAndObjectName(fsObjName), 
cacd: cdbpersistentfilesysobj:00004527:  PersistentFileSysRelStorageMgr_Name(PersistentFileSysRelStorageMgr_BufferPool), 
cacd: cdbpersistentfilesysobj:00004528:  PersistentFileSysRelStorageMgr_Name(relationStorageManager)); 
cacd: cdbpersistentfilesysobj:00004600:  elog(ERROR, "TID for persistent '%s' tuple for update relation physically truncated is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00004601:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName)); 
cacd: cdbpersistentfilesysobj:00004604:  elog(ERROR, "Persistent '%s' serial number for update relation physically truncated is invalid (0)", 
cacd: cdbpersistentfilesysobj:00004605:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName)); 
cacd: cdbpersistentfilesysobj:00004651:  elog(ERROR, "Persistent '%s' serial number mismatch for check for Append-Only catch-up (expected " INT64_FORMAT ", found " INT64_FORMAT ")", 
cacd: cdbpersistentfilesysobj:00004652:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName), 
cacd: cdbpersistentfilesysobj:00004653:  persistentSerialNum, 
cacd: cdbpersistentfilesysobj:00004654:  actualPersistentSerialNum); 
cacd: cdbpersistentfilesysobj:00004657:  elog(ERROR, "Persistent '%s' relation storage manager mismatch for check for Append-Only catch-up (expected '%s', found '%s')", 
cacd: cdbpersistentfilesysobj:00004658:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName), 
cacd: cdbpersistentfilesysobj:00004659:  PersistentFileSysRelStorageMgr_Name(PersistentFileSysRelStorageMgr_AppendOnly), 
cacd: cdbpersistentfilesysobj:00004660:  PersistentFileSysRelStorageMgr_Name(relationStorageManager)); 
cacd: cdbpersistentfilesysobj:00004742:  elog(ERROR, "TID for persistent '%s' tuple for update relation physically truncated is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00004743:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName)); 
cacd: cdbpersistentfilesysobj:00004746:  elog(ERROR, "Persistent '%s' serial number for update relation physically truncated is invalid (0)", 
cacd: cdbpersistentfilesysobj:00004747:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName)); 
cacd: cdbpersistentfilesysobj:00004793:  elog(ERROR, "Persistent '%s' serial number mismatch for check for Append-Only catch-up (expected " INT64_FORMAT ", found " INT64_FORMAT ")", 
cacd: cdbpersistentfilesysobj:00004794:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName), 
cacd: cdbpersistentfilesysobj:00004795:  persistentSerialNum, 
cacd: cdbpersistentfilesysobj:00004796:  actualPersistentSerialNum); 
cacd: cdbpersistentfilesysobj:00004799:  elog(ERROR, "Persistent '%s' relation storage manager mismatch for check for Append-Only catch-up (expected '%s', found '%s')", 
cacd: cdbpersistentfilesysobj:00004800:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName), 
cacd: cdbpersistentfilesysobj:00004801:  PersistentFileSysRelStorageMgr_Name(PersistentFileSysRelStorageMgr_AppendOnly), 
cacd: cdbpersistentfilesysobj:00004802:  PersistentFileSysRelStorageMgr_Name(relationStorageManager)); 
cacd: cdbpersistentfilesysobj:00004805:  elog(ERROR, "Persistent '%s' EOF mismatch for check for Append-Only catch-up (loss EOF " INT64_FORMAT ", new EOF " INT64_FORMAT ")", 
cacd: cdbpersistentfilesysobj:00004806:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName), 
cacd: cdbpersistentfilesysobj:00004807:  mirrorAppendOnlyLossEof, 
cacd: cdbpersistentfilesysobj:00004808:  mirrorAppendOnlyNewEof); 
cacd: cdbpersistentfilesysobj:00004964:  elog(ERROR, "Unexpected persistent file-system object state: %d", 
cacd: cdbpersistentfilesysobj:00004965:  state); 
cacd: cdbpersistentfilesysobj:00005169:  elog(ERROR, "Unexpected persistent state: %d", 
cacd: cdbpersistentfilesysobj:00005170:  state); 
cacd: cdbpersistentfilesysobj:00005299:  elog(ERROR, "Unexpected state-action: %d", 
cacd: cdbpersistentfilesysobj:00005300:  stateAction); 
cacd: cdbpersistentfilesysobj:00005979:  elog(ERROR, "TID for persistent '%s' tuple for marking page incremental is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00005980:  PersistentFileSysObjName_TypeName(PersistentFsObjType_RelationFile)); 
cacd: cdbpersistentfilesysobj:00005983:  elog(ERROR, "Persistent '%s' serial number for update mirror existence state is invalid (0)", 
cacd: cdbpersistentfilesysobj:00005984:  PersistentFileSysObjName_TypeName(PersistentFsObjType_RelationFile)); 
cacd: cdbpersistentfilesysobj:00006148:  elog(WARNING, "TID for persistent '%s' tuple from change log is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00006149:  PersistentFileSysObjName_TypeName(PersistentFsObjType_RelationFile)); 
cacd: cdbpersistentfilesysobj:00006155:  elog(WARNING, "Persistent '%s' serial number from change log is invalid (0)", 
cacd: cdbpersistentfilesysobj:00006156:  PersistentFileSysObjName_TypeName(PersistentFsObjType_RelationFile)); 
cacd: cdbpersistentfilesysobj:00006416:  elog(ERROR, "TID for persistent '%s' tuple for marking page incremental is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00006417:  PersistentFileSysObjName_TypeName(PersistentFsObjType_RelationFile)); 
cacd: cdbpersistentfilesysobj:00006420:  elog(ERROR, "Persistent '%s' serial number for update mirror existence state is invalid (0)", 
cacd: cdbpersistentfilesysobj:00006421:  PersistentFileSysObjName_TypeName(PersistentFsObjType_RelationFile)); 
cacd: cdbpersistentfilesysobj:00006505:  elog(ERROR, "TID for persistent '%s' tuple for resynchronize Buffer Pool checkpoint is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00006506:  PersistentFileSysObjName_TypeName(PersistentFsObjType_RelationFile)); 
cacd: cdbpersistentfilesysobj:00006509:  elog(ERROR, "Persistent '%s' serial number for resynchronize Buffer Pool checkpoint is invalid (0)", 
cacd: cdbpersistentfilesysobj:00006510:  PersistentFileSysObjName_TypeName(PersistentFsObjType_RelationFile)); 
cacd: cdbpersistentfilesysobj:00006580:  elog(ERROR, "TID for persistent '%s' tuple for resynchronize relation complete is invalid (0,0)", 
cacd: cdbpersistentfilesysobj:00006581:  PersistentFileSysObjName_TypeName(PersistentFsObjType_RelationFile)); 
cacd: cdbpersistentfilesysobj:00006584:  elog(ERROR, "Persistent '%s' serial number for resynchronize relation complete is invalid (0)", 
cacd: cdbpersistentfilesysobj:00006585:  PersistentFileSysObjName_TypeName(PersistentFsObjType_RelationFile)); 
cacd: cdbpersistentfilesysobj:00006993:  elog(ERROR, "Invalid RelFileNode (0,0,0)"); 
cacd: cdbpersistentfilesysobj:00006997:  elog(ERROR, 
cacd: cdbpersistentfilesysobj:00006998:  "Cannot scan for persistent relation %u/%u/%u, segment file #%d because we are before persistence work", 
cacd: cdbpersistentfilesysobj:00006999:  relFileNode->spcNode, 
cacd: cdbpersistentfilesysobj:00007000:  relFileNode->dbNode, 
cacd: cdbpersistentfilesysobj:00007001:  relFileNode->relNode, 
cacd: cdbpersistentfilesysobj:00007002:  segmentFileNum); 
aaaaa GP_IGNORE: cacb: cdbpersistentrecovery - ./backend/cdb/cdbpersistentrecovery.c
cacb: cdbpersistentrecovery:00000093:  ereport(ERROR, 
cacb: cdbpersistentrecovery:00000094:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacb: cdbpersistentrecovery:00000095:  (errmsg("not enough shared memory for pass2 recovery")))); 
cacb: cdbpersistentrecovery:00000118:  ereport(ERROR, 
cacb: cdbpersistentrecovery:00000119:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacb: cdbpersistentrecovery:00000120:  (errmsg("not enough shared memory for pass2 recovery")))); 
cacb: cdbpersistentrecovery:00000429:  elog(ERROR, "Relation storage manager for persistent '%s' for Crash Recovery is invalid (%d)", 
cacb: cdbpersistentrecovery:00000430:  PersistentFileSysObjName_TypeAndObjectName(&fileSysActionInfo->fsObjName), 
cacb: cdbpersistentrecovery:00000431:  fileSysActionInfo->relStorageMgr); 
cacb: cdbpersistentrecovery:00000651:  elog(ERROR, "Invalid RelFileNode (0,0,0)"); 
cacb: cdbpersistentrecovery:00000701:  elog(ERROR, "No relfilenode"); 
cacb: cdbpersistentrecovery:00000776:  elog(ERROR, "Unexpected persistent end transaction file-system action: %d", 
cacb: cdbpersistentrecovery:00000777:  action); 
cacb: cdbpersistentrecovery:00000821:  elog(ERROR, "Unexpected persistent end transaction file-system action: %d", 
cacb: cdbpersistentrecovery:00000822:  action); 
cacb: cdbpersistentrecovery:00000839:  elog(WARNING, 
cacb: cdbpersistentrecovery:00000840:  "Pass2Recovery_InsertHashEntry" 
cacb: cdbpersistentrecovery:00000841:  " failed to insert AbortingCreate entry into" 
cacb: cdbpersistentrecovery:00000842:  " shared memory hash table, there might be" 
cacb: cdbpersistentrecovery:00000843:  " entries in gp_fastsequence left uncleaned," 
cacb: cdbpersistentrecovery:00000844:  " it could cause inconsistency between" 
cacb: cdbpersistentrecovery:00000845:  " pg_class and gp_fastsequence."); 
cacb: cdbpersistentrecovery:00001282:  elog(ERROR, "Relation storage manager for persistent '%s' for Crash Recovery is invalid (%d)", 
cacb: cdbpersistentrecovery:00001283:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName), 
cacb: cdbpersistentrecovery:00001284:  relStorageMgr); 
cacb: cdbpersistentrecovery:00001643:  elog(ERROR, "Found persistent '%s' entry among 'Create Pending' entries", 
cacb: cdbpersistentrecovery:00001644:  FsObjEntryToString(fsObjEntry)); 
cacb: cdbpersistentrecovery:00001761:  elog(WARNING, 
cacb: cdbpersistentrecovery:00001762:  "Pass2Recovery_InsertHashEntry" 
cacb: cdbpersistentrecovery:00001763:  " failed to insert AbortingCreate entry into" 
cacb: cdbpersistentrecovery:00001764:  " shared memory hash table, there might be" 
cacb: cdbpersistentrecovery:00001765:  " entries in gp_fastsequence left uncleaned," 
cacb: cdbpersistentrecovery:00001766:  " it could cause inconsistency between" 
cacb: cdbpersistentrecovery:00001767:  " pg_class and gp_fastsequence."); 
cacb: cdbpersistentrecovery:00001772:  elog(WARNING, "Not setting the state of '%s' to 'Aborting Create'", 
cacb: cdbpersistentrecovery:00001773:  FsObjEntryToString(fsObjEntry)); 
cacb: cdbpersistentrecovery:00001778:  elog(ERROR, "Unexpected persistent file-system state: %d", 
cacb: cdbpersistentrecovery:00001779:  fsObjEntry->state); 
cacb: cdbpersistentrecovery:00001859:  elog(ERROR, "Unexpected persistent file-system state: %d", 
cacb: cdbpersistentrecovery:00001860:  state); 
cacb: cdbpersistentrecovery:00001933:  elog(WARNING, 
cacb: cdbpersistentrecovery:00001934:  "Crash recovery skipping drop for %s with State-Change result '%s'", 
cacb: cdbpersistentrecovery:00001935:  FsObjEntryToString(fsObjEntry), 
cacb: cdbpersistentrecovery:00001936:  PersistentFileSysObjStateChangeResult_Name(fsObjEntry->stateChangeResult)); 
cacb: cdbpersistentrecovery:00001965:  elog(ERROR, "Relation storage manager for persistent '%s' for Crash Recovery is invalid (%d)", 
cacb: cdbpersistentrecovery:00001966:  PersistentFileSysObjName_TypeAndObjectName(&fsObjEntry->fsObjName), 
cacb: cdbpersistentrecovery:00001967:  fsObjEntry->relStorageMgr); 
cacb: cdbpersistentrecovery:00002077:  elog(ERROR, 
cacb: cdbpersistentrecovery:00002078:  "Update Append-Only EOFs REDO: %s is newer than persistent entry %s", 
cacb: cdbpersistentrecovery:00002079:  AoMirrorResyncEofsEntryToString(eofsEntry), 
cacb: cdbpersistentrecovery:00002080:  FsObjEntryToString(fsObjEntry)); 
cacb: cdbpersistentrecovery:00002089:  elog(ERROR, "mirror loss EOF " INT64_FORMAT " doesn't match new EOF " INT64_FORMAT, 
cacb: cdbpersistentrecovery:00002090:  eofsEntry->mirrorLossEof, 
cacb: cdbpersistentrecovery:00002091:  eofsEntry->mirrorNewEof); 
cacb: cdbpersistentrecovery:00002180:  ereport(ERROR, 
cacb: cdbpersistentrecovery:00002181:  (errcode_for_file_access(), 
cacb: cdbpersistentrecovery:00002182:  errmsg("could not write redo relation file : %m"))); 
cacb: cdbpersistentrecovery:00002230:  elog(ERROR, "Invalid RelFileNode (0,0,0)"); 
cacb: cdbpersistentrecovery:00002245:  elog(ERROR, 
cacb: cdbpersistentrecovery:00002246:  "Duplicate redo relation entry: existing (%u/%u/%u, serial number " INT64_FORMAT ", TID %s), " 
cacb: cdbpersistentrecovery:00002247:  "new (%u/%u/%u, serial number " INT64_FORMAT ", TID %s)", 
cacb: cdbpersistentrecovery:00002248:  entry->relFileNode.spcNode, 
cacb: cdbpersistentrecovery:00002249:  entry->relFileNode.dbNode, 
cacb: cdbpersistentrecovery:00002250:  entry->relFileNode.relNode, 
cacb: cdbpersistentrecovery:00002251:  entry->persistentSerialNum, 
cacb: cdbpersistentrecovery:00002252:  ItemPointerToString(&entry->key.persistentTid), 
cacb: cdbpersistentrecovery:00002253:  redoRelationEntry->relFileNode.spcNode, 
cacb: cdbpersistentrecovery:00002254:  redoRelationEntry->relFileNode.dbNode, 
cacb: cdbpersistentrecovery:00002255:  redoRelationEntry->relFileNode.relNode, 
cacb: cdbpersistentrecovery:00002256:  redoRelationEntry->persistentSerialNum, 
cacb: cdbpersistentrecovery:00002257:  ItemPointerToString2(&redoRelationEntry->key.persistentTid)); 
cacb: cdbpersistentrecovery:00002325:  elog(ERROR, "Bad redo relation entry length (expected %d and found %d)", 
cacb: cdbpersistentrecovery:00002326:  (int)sizeof(RedoRelationEntryData), readLen); 
cacb: cdbpersistentrecovery:00002329:  ereport(ERROR, 
cacb: cdbpersistentrecovery:00002330:  (errcode_for_file_access(), 
cacb: cdbpersistentrecovery:00002331:  errmsg("error reading redo relation file: %m"))); 
cacb: cdbpersistentrecovery:00002344:  elog(ERROR, "Invalid RelFileNode (0,0,0)"); 
aaaaa GP_IGNORE: cacb: cdbpersistentrelation - ./backend/cdb/cdbpersistentrelation.c
cacb: cdbpersistentrelation:00000280:  elog(ERROR, "Invalid RelFileNode (0,0,0)"); 
cacb: cdbpersistentrelation:00000434:  elog(ERROR, "Invalid RelFileNode (0,0,0)"); 
cacb: cdbpersistentrelation:00000440:  elog(ERROR, "We can only add to persistent meta-data when special states"); 
cacb: cdbpersistentrelation:00000524:  elog(ERROR, "Invalid RelFileNode (0,0,0)"); 
cacb: cdbpersistentrelation:00000547:  elog(ERROR, "TID for persistent '%s' tuple for 'Created' is invalid (0,0)", 
cacb: cdbpersistentrelation:00000548:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName)); 
cacb: cdbpersistentrelation:00000551:  elog(ERROR, "Persistent '%s' serial number for 'Created' is invalid (0)", 
cacb: cdbpersistentrelation:00000552:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName)); 
cacb: cdbpersistentrelation:00000601:  elog(ERROR, "Invalid RelFileNode (0,0,0)"); 
cacb: cdbpersistentrelation:00000617:  elog(ERROR, "TID for persistent '%s' tuple for 'Created' is invalid (0,0)", 
cacb: cdbpersistentrelation:00000618:  PersistentFileSysObjName_TypeAndObjectName(fsObjName)); 
cacb: cdbpersistentrelation:00000621:  elog(ERROR, "Persistent '%s' serial number for 'Created' is invalid (0)", 
cacb: cdbpersistentrelation:00000622:  PersistentFileSysObjName_TypeAndObjectName(fsObjName)); 
cacb: cdbpersistentrelation:00000660:  elog(ERROR, "persistent table changes forbidden"); 
cacb: cdbpersistentrelation:00000715:  elog(ERROR, "persistent table changes forbidden"); 
cacb: cdbpersistentrelation:00000769:  elog(ERROR, "persistent table changes forbidden"); 
cacb: cdbpersistentrelation:00000844:  elog(ERROR, "Invalid RelFileNode (0,0,0)"); 
cacb: cdbpersistentrelation:00000860:  elog(ERROR, "TID for persistent '%s' tuple for mark DROP pending is invalid (0,0)", 
cacb: cdbpersistentrelation:00000861:  PersistentFileSysObjName_TypeAndObjectName(fsObjName)); 
cacb: cdbpersistentrelation:00000864:  elog(ERROR, "Persistent '%s' serial number for mark DROP pending is invalid (0)", 
cacb: cdbpersistentrelation:00000865:  PersistentFileSysObjName_TypeAndObjectName(fsObjName)); 
cacb: cdbpersistentrelation:00000919:  elog(ERROR, "Invalid RelFileNode (0,0,0)"); 
cacb: cdbpersistentrelation:00000981:  elog(ERROR, "TID for persistent '%s' tuple for mark DROP pending is invalid (0,0)", 
cacb: cdbpersistentrelation:00000982:  PersistentFileSysObjName_TypeAndObjectName(fsObjName)); 
cacb: cdbpersistentrelation:00000985:  elog(ERROR, "Persistent '%s' serial number for mark DROP pending is invalid (0)", 
cacb: cdbpersistentrelation:00000986:  PersistentFileSysObjName_TypeAndObjectName(fsObjName)); 
cacb: cdbpersistentrelation:00001052:  elog(ERROR, "Unexpected persistent object verify expected result: %d", 
cacb: cdbpersistentrelation:00001053:  verifyExpectedResult); 
cacb: cdbpersistentrelation:00001080:  elog(ERROR, "Invalid RelFileNode (0,0,0)"); 
cacb: cdbpersistentrelation:00001096:  elog(ERROR, "TID for persistent '%s' tuple for mark DROP pending is invalid (0,0)", 
cacb: cdbpersistentrelation:00001097:  PersistentFileSysObjName_TypeAndObjectName(fsObjName)); 
cacb: cdbpersistentrelation:00001100:  elog(ERROR, "Persistent '%s' serial number for mark DROP pending is invalid (0)", 
cacb: cdbpersistentrelation:00001101:  PersistentFileSysObjName_TypeAndObjectName(fsObjName)); 
cacb: cdbpersistentrelation:00001142:  elog(ERROR, "Invalid RelFileNode (0,0,0)"); 
cacb: cdbpersistentrelation:00001185:  elog(ERROR, "TID for persistent '%s' tuple for mark physically truncated is invalid (0,0)", 
cacb: cdbpersistentrelation:00001186:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName)); 
cacb: cdbpersistentrelation:00001189:  elog(ERROR, "Persistent '%s' serial number for mark physcially truncated is invalid (0)", 
cacb: cdbpersistentrelation:00001190:  PersistentFileSysObjName_TypeAndObjectName(&fsObjName)); 
aaaaa GP_IGNORE: cabi: cdbpersistentstore - ./backend/cdb/cdbpersistentstore.c
cabi: cdbpersistentstore:00000167:  elog(ERROR, "Failed to build persistent relation node tuple"); 
cabi: cdbpersistentstore:00000219:  elog(ERROR, "Expected persistent TID to not be (0,0)"); 
cabi: cdbpersistentstore:00000222:  elog(ERROR, "Expected previous free TID to not be (0,0)"); 
cabi: cdbpersistentstore:00000238:  elog(ERROR, "Duplicate free persistent TID entry %s", 
cabi: cdbpersistentstore:00000239:  ItemPointerToString(persistentTid)); 
cabi: cdbpersistentstore:00000263:  elog(ERROR, "Expected free TID to be (0,0) when free order number is 0 in '%s'", 
cabi: cdbpersistentstore:00000264:  storeData->tableName); 
cabi: cdbpersistentstore:00000273:  elog(ERROR, "Looking for free order number " INT64_FORMAT " and the free entry hash table is empty for '%s'", 
cabi: cdbpersistentstore:00000274:  freeOrderNum, 
cabi: cdbpersistentstore:00000275:  storeData->tableName); 
cabi: cdbpersistentstore:00000289:  elog(ERROR, 
cabi: cdbpersistentstore:00000290:  "Did not find free entry for free TID %s (free order number " INT64_FORMAT ") for '%s'", 
cabi: cdbpersistentstore:00000291:  ItemPointerToString(&freeTid), 
cabi: cdbpersistentstore:00000292:  freeOrderNum, 
cabi: cdbpersistentstore:00000293:  storeData->tableName); 
cabi: cdbpersistentstore:00000296:  elog(ERROR, 
cabi: cdbpersistentstore:00000297:  "Previous free TID not expected to be (0,0) -- persistent Free Entry hashtable corrupted for '%s' " 
cabi: cdbpersistentstore:00000298:  "(expected free order number " INT64_FORMAT ", entry free order number " INT64_FORMAT ")", 
cabi: cdbpersistentstore:00000299:  storeData->tableName, 
cabi: cdbpersistentstore:00000300:  freeOrderNum, 
cabi: cdbpersistentstore:00000301:  entry->freeOrderNum); 
cabi: cdbpersistentstore:00000304:  elog(ERROR, 
cabi: cdbpersistentstore:00000305:  "Free entry for free TID %s has wrong free order number (expected free order number " INT64_FORMAT ", found free order number " INT64_FORMAT ") for '%s'", 
cabi: cdbpersistentstore:00000306:  ItemPointerToString(&freeTid), 
cabi: cdbpersistentstore:00000307:  freeOrderNum, 
cabi: cdbpersistentstore:00000308:  entry->freeOrderNum, 
cabi: cdbpersistentstore:00000309:  storeData->tableName); 
cabi: cdbpersistentstore:00000330:  elog(ERROR, "Expected previous_free_tid %s to match the persistent TID %s for the last free entry (free order number 1) for '%s'", 
cabi: cdbpersistentstore:00000331:  ItemPointerToString(&freeTid), 
cabi: cdbpersistentstore:00000332:  ItemPointerToString2(&entry->key.persistentTid), 
cabi: cdbpersistentstore:00000333:  storeData->tableName); 
cabi: cdbpersistentstore:00000344:  elog(ERROR, "Persistent Free Entry hashtable corrupted for '%s'", 
cabi: cdbpersistentstore:00000345:  storeData->tableName); 
cabi: cdbpersistentstore:00000367:  elog(ERROR, "Found at least one unaccounted for free entry for '%s'. Example: free order number " INT64_FORMAT ", free TID %s, previous free TID %s", 
cabi: cdbpersistentstore:00000368:  storeData->tableName, 
cabi: cdbpersistentstore:00000369:  entry->freeOrderNum, 
cabi: cdbpersistentstore:00000370:  ItemPointerToString(&entry->key.persistentTid), 
cabi: cdbpersistentstore:00000371:  ItemPointerToString2(&entry->previousFreeTid)); 
cabi: cdbpersistentstore:00000509:  elog(ERROR, "Global sequence number " INT64_FORMAT " less than maximum value " INT64_FORMAT " found in scan ('%s')", 
cabi: cdbpersistentstore:00000510:  globalSequenceNum, 
cabi: cdbpersistentstore:00000511:  storeSharedData->maxInUseSerialNum, 
cabi: cdbpersistentstore:00000512:  storeData->tableName); 
cabi: cdbpersistentstore:00000775:  elog(ERROR, "Failed to build persistent tuple ('%s')", 
cabi: cdbpersistentstore:00000776:  storeData->tableName); 
cabi: cdbpersistentstore:00000848:  elog(ERROR, "Persistent store shared-memory not valid"); 
cabi: cdbpersistentstore:00000918:  elog(ERROR, "Persistent store shared-memory not valid"); 
cabi: cdbpersistentstore:00000941:  elog(ERROR, "Failed to build persistent tuple ('%s')", 
cabi: cdbpersistentstore:00000942:  storeData->tableName); 
cabi: cdbpersistentstore:00001017:  elog(ERROR, "Persistent store shared-memory not valid"); 
cabi: cdbpersistentstore:00001074:  elog(ERROR, "Failed to fetch persistent tuple at %s ('%s')", 
cabi: cdbpersistentstore:00001075:  ItemPointerToString(&readTuple.t_self), 
cabi: cdbpersistentstore:00001076:  storeData->tableName); 
cabi: cdbpersistentstore:00001130:  elog(ERROR, "Persistent store shared-memory not valid"); 
cabi: cdbpersistentstore:00001141:  elog(ERROR, "TID for fetch persistent tuple is invalid (0,0) ('%s')", 
cabi: cdbpersistentstore:00001142:  storeData->tableName); 
cabi: cdbpersistentstore:00001155:  elog(ERROR, "TID %s for fetch persistent tuple is greater than the last known TID %s ('%s')", 
cabi: cdbpersistentstore:00001156:  ItemPointerToString(readTid), 
cabi: cdbpersistentstore:00001157:  ItemPointerToString2(&storeSharedData->maxTid), 
cabi: cdbpersistentstore:00001158:  storeData->tableName); 
cabi: cdbpersistentstore:00001168:  elog(ERROR, "Failed to fetch persistent tuple at %s (maximum known TID %s, '%s')", 
cabi: cdbpersistentstore:00001169:  ItemPointerToString(&tuple.t_self), 
cabi: cdbpersistentstore:00001170:  ItemPointerToString2(&storeSharedData->maxTid), 
cabi: cdbpersistentstore:00001171:  storeData->tableName); 
cabi: cdbpersistentstore:00001264:  elog(ERROR, "Expected persistent store tuple at %s to be free ('%s')", 
cabi: cdbpersistentstore:00001265:  ItemPointerToString(&storeSharedData->freeTid), 
cabi: cdbpersistentstore:00001266:  storeData->tableName); 
cabi: cdbpersistentstore:00001272:  elog(ERROR, "Expected persistent store tuple at %s to have order number " INT64_FORMAT " (found " INT64_FORMAT ", '%s')", 
cabi: cdbpersistentstore:00001273:  ItemPointerToString(&storeSharedData->freeTid), 
cabi: cdbpersistentstore:00001274:  storeSharedData->maxFreeOrderNum, 
cabi: cdbpersistentstore:00001275:  persistentSerialNum, 
cabi: cdbpersistentstore:00001276:  storeData->tableName); 
cabi: cdbpersistentstore:00001315:  elog(ERROR, "Persistent store shared-memory not valid"); 
cabi: cdbpersistentstore:00001401:  elog(ERROR, "Persistent store shared-memory not valid"); 
aaaaa GP_IGNORE: cacd: cdbpersistenttablespace - ./backend/cdb/cdbpersistenttablespace.c
cacd: cdbpersistenttablespace:00000193:  elog(ERROR, "Trying to delete entry that does not exist"); 
cacd: cdbpersistenttablespace:00000229:  elog(ERROR, "Did not find persistent tablespace entry %u", 
cacd: cdbpersistenttablespace:00000230:  tablespaceOid); 
cacd: cdbpersistenttablespace:00000294:  elog(ERROR, "Out of shared-memory for persistent tablespaces"); 
cacd: cdbpersistenttablespace:00000400:  elog(ERROR, "Trying to delete entry that does not exist"); 
cacd: cdbpersistenttablespace:00000442:  elog(ERROR, "Did not find persistent tablespace entry %u", 
cacd: cdbpersistenttablespace:00000443:  tablespaceOid); 
cacd: cdbpersistenttablespace:00000585:  elog(ERROR, "can not lookup tablespace location: gp_before_filespace_setup=true"); 
cacd: cdbpersistenttablespace:00000675:  ereport(ERROR, 
cacd: cdbpersistenttablespace:00000676:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
cacd: cdbpersistenttablespace:00000677:  errmsg("Unable to find entry for tablespace OID = %u when getting filespace directory paths", 
cacd: cdbpersistenttablespace:00000678:  tablespaceOid))); 
cacd: cdbpersistenttablespace:00000682:  ereport(ERROR, 
cacd: cdbpersistenttablespace:00000683:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
cacd: cdbpersistenttablespace:00000684:  errmsg("Unable to find entry for filespace OID = %u when forming filespace directory paths for tablespace OID = %u", 
cacd: cdbpersistenttablespace:00000685:  filespaceOid, 
cacd: cdbpersistenttablespace:00000686:  tablespaceOid))); 
cacd: cdbpersistenttablespace:00000694:  elog(ERROR, "Unexpected tablespace filespace fetch result: %d", 
cacd: cdbpersistenttablespace:00000695:  tablespaceGetFilespaces); 
cacd: cdbpersistenttablespace:00000725:  elog(ERROR, "Did not find persistent tablespace entry %u", 
cacd: cdbpersistenttablespace:00000726:  tablespaceOid); 
cacd: cdbpersistenttablespace:00000801:  ereport(ERROR, 
cacd: cdbpersistenttablespace:00000802:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacd: cdbpersistenttablespace:00000803:  errmsg("Out of shared-memory for persistent tablespaces"), 
cacd: cdbpersistenttablespace:00000804:  errhint("You may need to increase the gp_max_tablespaces value"), 
cacd: cdbpersistenttablespace:00000805:  errOmitLocation(true))); 
cacd: cdbpersistenttablespace:00000875:  elog(ERROR, "Out of shared-memory for persistent tablespaces"); 
cacd: cdbpersistenttablespace:00000934:  ereport(ERROR, 
cacd: cdbpersistenttablespace:00000935:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacd: cdbpersistenttablespace:00000936:  errmsg("Out of shared-memory for persistent tablespaces"), 
cacd: cdbpersistenttablespace:00000937:  errhint("You may need to increase the gp_max_tablespaces value"), 
cacd: cdbpersistenttablespace:00000938:  errOmitLocation(true))); 
cacd: cdbpersistenttablespace:00001012:  elog(ERROR, "Did not find persistent tablespace entry %u", 
cacd: cdbpersistenttablespace:00001013:  tablespaceOid); 
cacd: cdbpersistenttablespace:00001016:  elog(ERROR, "Persistent tablespace entry %u expected to be in 'Create Pending' state (actual state '%s')", 
cacd: cdbpersistenttablespace:00001017:  tablespaceOid, 
cacd: cdbpersistenttablespace:00001018:  PersistentFileSysObjState_Name(tablespaceDirEntry->state)); 
cacd: cdbpersistenttablespace:00001054:  elog(ERROR, "persistent table changes forbidden"); 
cacd: cdbpersistenttablespace:00001068:  elog(ERROR, "Did not find persistent tablespace entry %u", 
cacd: cdbpersistenttablespace:00001069:  tblspc); 
cacd: cdbpersistenttablespace:00001094:  elog(ERROR, "persistent table changes forbidden"); 
cacd: cdbpersistenttablespace:00001109:  elog(ERROR, "cannot find persistent tablespace entry %u", 
cacd: cdbpersistenttablespace:00001110:  tblspc); 
cacd: cdbpersistenttablespace:00001136:  elog(ERROR, "persistent table changes forbidden"); 
cacd: cdbpersistenttablespace:00001150:  elog(ERROR, "Did not find persistent tablespace entry %u", 
cacd: cdbpersistenttablespace:00001151:  tblspc); 
cacd: cdbpersistenttablespace:00001219:  elog(ERROR, "Did not find persistent tablespace entry %u", 
cacd: cdbpersistenttablespace:00001220:  tablespaceOid); 
cacd: cdbpersistenttablespace:00001224:  elog(ERROR, "Persistent tablespace entry %u expected to be in 'Create Pending' or 'Created' state (actual state '%s')", 
cacd: cdbpersistenttablespace:00001225:  tablespaceOid, 
cacd: cdbpersistenttablespace:00001226:  PersistentFileSysObjState_Name(tablespaceDirEntry->state)); 
cacd: cdbpersistenttablespace:00001298:  elog(ERROR, "Did not find persistent tablespace entry %u", 
cacd: cdbpersistenttablespace:00001299:  tablespaceOid); 
cacd: cdbpersistenttablespace:00001302:  elog(ERROR, "Persistent tablespace entry %u expected to be in 'Create Pending' (actual state '%s')", 
cacd: cdbpersistenttablespace:00001303:  tablespaceOid, 
cacd: cdbpersistenttablespace:00001304:  PersistentFileSysObjState_Name(tablespaceDirEntry->state)); 
cacd: cdbpersistenttablespace:00001364:  elog(ERROR, "Unexpected persistent object verify expected result: %d", 
cacd: cdbpersistenttablespace:00001365:  verifyExpectedResult); 
cacd: cdbpersistenttablespace:00001412:  elog(ERROR, "Did not find persistent tablespace entry %u", 
cacd: cdbpersistenttablespace:00001413:  tablespaceOid); 
cacd: cdbpersistenttablespace:00001417:  elog(ERROR, "Persistent tablespace entry %u expected to be in 'Drop Pending' or 'Aborting Create' (actual state '%s')", 
cacd: cdbpersistenttablespace:00001418:  tablespaceOid, 
cacd: cdbpersistenttablespace:00001419:  PersistentFileSysObjState_Name(tablespaceDirEntry->state)); 
cacd: cdbpersistenttablespace:00001541:  ereport(FATAL, 
cacd: cdbpersistenttablespace:00001542:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cacd: cdbpersistenttablespace:00001543:  errmsg("Not enough shared memory for persistent tablespace hash table"))); 
aaaaa GP_IGNORE: caah: cdbplan - ./backend/cdb/cdbplan.c
caah: cdbplan:00000163:  elog(ERROR, "abstract node type not allowed: T_Plan"); 
caah: cdbplan:00000249:  elog(ERROR, "abstract node type not allowed: T_Scan"); 
caah: cdbplan:00000443:  elog(ERROR, "abstract node type not allowed: T_Join"); 
aaaaa GP_IGNORE: cacg: cdbquerycontextdispatching - ./backend/cdb/cdbquerycontextdispatching.c
cacg: cdbquerycontextdispatching:00000273:  ereport(ERROR, 
cacg: cdbquerycontextdispatching:00000274:  (errcode(ERRCODE_IO_ERROR), errmsg( "rebuild query context failed:" 
cacg: cdbquerycontextdispatching:00000275:  " can not read data since unexpected eof"))); 
cacg: cdbquerycontextdispatching:00000283:  ereport(ERROR, 
cacg: cdbquerycontextdispatching:00000284:  (errcode(ERRCODE_IO_ERROR), errmsg( "rebuild query context failed:" 
cacg: cdbquerycontextdispatching:00000285:  " can not read data from %s", path))); 
cacg: cdbquerycontextdispatching:00000313:  ereport(ERROR, 
cacg: cdbquerycontextdispatching:00000314:  (errcode(ERRCODE_IO_ERROR), errmsg( "rebuild query context failed: " 
cacg: cdbquerycontextdispatching:00000315:  "can not read data since unexpected eof"))); 
cacg: cdbquerycontextdispatching:00000323:  ereport(ERROR, 
cacg: cdbquerycontextdispatching:00000324:  (errcode(ERRCODE_IO_ERROR), errmsg( "rebuild query context failed: " 
cacg: cdbquerycontextdispatching:00000325:  "can not read data since unexpected eof"))); 
cacg: cdbquerycontextdispatching:00000359:  ereport(ERROR, 
cacg: cdbquerycontextdispatching:00000360:  (errcode(ERRCODE_IO_ERROR), errmsg( "prepare query context failed: " 
cacg: cdbquerycontextdispatching:00000361:  "can not write data into file: %s", cxt->sharedPath))); 
cacg: cdbquerycontextdispatching:00000383:  ereport(ERROR, 
cacg: cdbquerycontextdispatching:00000384:  (errcode(ERRCODE_INTERNAL_ERROR), errmsg("failed to construct" 
cacg: cdbquerycontextdispatching:00000385:  " query context directory, file path: %s", cxt->sharedPath))); 
cacg: cdbquerycontextdispatching:00000400:  ereport(ERROR, 
cacg: cdbquerycontextdispatching:00000401:  (errcode(ERRCODE_IO_ERROR), errmsg( "prepare query context failed: " 
cacg: cdbquerycontextdispatching:00000402:  "can not write data into file: %s", cxt->sharedPath))); 
cacg: cdbquerycontextdispatching:00000610:  ereport(ERROR, 
cacg: cdbquerycontextdispatching:00000611:  (errcode(ERRCODE_GP_INTERNAL_ERROR), errmsg( "unrecognized " 
cacg: cdbquerycontextdispatching:00000612:  "QueryContextDispatchingItemType %d", (int) type))); 
cacg: cdbquerycontextdispatching:00000773:  elog(ERROR, "cache lookup failed for namespace %u", namespace); 
cacg: cdbquerycontextdispatching:00000955:  elog(ERROR, "reltype in pg_class for %u is invalid", relid); 
cacg: cdbquerycontextdispatching:00001030:  elog(ERROR, "cache lookup failed for relation %u", relid); 
cacg: cdbquerycontextdispatching:00001050:  elog(ERROR, "relnamespace field in pg_class of %u is invalid", relid); 
cacg: cdbquerycontextdispatching:00001111:  elog(ERROR, "not implemented relstorage: %c, relname: %s", 
cacg: cdbquerycontextdispatching:00001112:  DatumGetChar(relstorage), DatumGetCString(relname)); 
cacg: cdbquerycontextdispatching:00001194:  ereport(ERROR, 
cacg: cdbquerycontextdispatching:00001195:  (errcode(ERRCODE_UNDEFINED_OBJECT), errmsg("missing pg_appendonly" 
cacg: cdbquerycontextdispatching:00001196:  " entry for relation \"%s\"", get_rel_name(relid)))); 
cacg: cdbquerycontextdispatching:00001366:  ereport(ERROR, 
cacg: cdbquerycontextdispatching:00001367:  (errcode(ERRCODE_UNDEFINED_OBJECT), errmsg("missing " 
cacg: cdbquerycontextdispatching:00001368:  "pg_exttable entry for relation \"%s\"", RelationGetRelationName(rel)))); 
cacg: cdbquerycontextdispatching:00001412:  ereport(ERROR, 
cacg: cdbquerycontextdispatching:00001413:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
cacg: cdbquerycontextdispatching:00001414:  errmsg("permission denied for sequence %s", 
cacg: cdbquerycontextdispatching:00001415:  get_rel_name(seqoid)))); 
cacg: cdbquerycontextdispatching:00001420:  ereport(ERROR, 
cacg: cdbquerycontextdispatching:00001421:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
cacg: cdbquerycontextdispatching:00001422:  errmsg("Non const argument in function \"NEXTVAL\" is not support yet."))); 
cacg: cdbquerycontextdispatching:00001627:  elog(ERROR, "not implemented"); 
aaaaa GP_IGNORE: cada: cdbresynchronizechangetracking - ./backend/cdb/cdbresynchronizechangetracking.c
cada: cdbresynchronizechangetracking:00000211:  elog(WARNING, "Change logging is disabled. This should only occur after " 
cada: cdbresynchronizechangetracking:00000212:  "a manual intervention of an administrator, and only with " 
cada: cdbresynchronizechangetracking:00000213:  "guidance from greenplum support."); 
cada: cdbresynchronizechangetracking:00000593:  elog(ERROR, "internal error: unsupported RM ID (%d) in ChangeTracking_GetRelationChangeInfoFromXlog", xl_rmid); 
cada: cdbresynchronizechangetracking:00000620:  elog(ERROR, "internal error: unsupported RM_HEAP2_ID op (%u) in ChangeTracking_GetRelationChangeInfoFromXlog", info); 
cada: cdbresynchronizechangetracking:00000745:  elog(ERROR, "internal error: unsupported RM_HEAP_ID op (%u) in ChangeTracking_GetRelationChangeInfoFromXlog", op); 
cada: cdbresynchronizechangetracking:00000920:  elog(ERROR, "internal error: unsupported RM_BTREE_ID op (%u) in ChangeTracking_GetRelationChangeInfoFromXlog", info); 
cada: cdbresynchronizechangetracking:00001075:  elog(ERROR, "internal error: unsupported RM_BITMAP_ID op (%u) in ChangeTracking_GetRelationChangeInfoFromXlog", info); 
cada: cdbresynchronizechangetracking:00001097:  elog(ERROR, "internal error: unsupported RM_SEQ_ID op (%u) in ChangeTracking_GetRelationChangeInfoFromXlog", info); 
cada: cdbresynchronizechangetracking:00001201:  elog(ERROR, "internal error: unsupported RM_GIST_ID op (%u) in ChangeTracking_GetRelationChangeInfoFromXlog", info); 
cada: cdbresynchronizechangetracking:00001206:  elog(ERROR, "internal error: unsupported resource manager type (%d) in ChangeTracking_GetRelationChangeInfoFromXlog", xl_rmid); 
cada: cdbresynchronizechangetracking:00001354:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
cada: cdbresynchronizechangetracking:00001355:  errmsg("Unable to obtain change tracking information from segment database."), 
cada: cdbresynchronizechangetracking:00001356:  errdetail("SPI_connect failed in ChangeTracking_GetIncrementalChangeList()"))); 
cada: cdbresynchronizechangetracking:00001489:  elog(ERROR, "ChangeTracking: trying to add more request entries than originally requested"); 
cada: cdbresynchronizechangetracking:00001540:  elog(ERROR, "ChangeTracking: trying to add more result entries than originally requested"); 
cada: cdbresynchronizechangetracking:00001640:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
cada: cdbresynchronizechangetracking:00001641:  errmsg("Unable to obtain change tracking information from segment database."), 
cada: cdbresynchronizechangetracking:00001642:  errdetail("SPI_connect failed in ChangeTracking_GetChanges()"))); 
cada: cdbresynchronizechangetracking:00001691:  //elog(NOTICE,"tuple %d: %s %s %s block %s lsn %s", i, str_space, str_db, str_rel, str_blocknum, str_endlsn); 
cada: cdbresynchronizechangetracking:00001708:  elog(ERROR, "internal error in ChangeTracking_GetChanges(): caller " 
cada: cdbresynchronizechangetracking:00001709:  "passed in an invalid request (expecting more than %d " 
cada: cdbresynchronizechangetracking:00001710:  "result entries for more than a single relation)", 
cada: cdbresynchronizechangetracking:00001711:  CHANGETRACKING_MAX_RESULT_SIZE); 
cada: cdbresynchronizechangetracking:00001832:  ereport(ERROR, 
cada: cdbresynchronizechangetracking:00001833:  (errcode_for_file_access(), 
cada: cdbresynchronizechangetracking:00001834:  errmsg("change tracking failure, " 
cada: cdbresynchronizechangetracking:00001835:  "could not create '%s' directory : %m", 
cada: cdbresynchronizechangetracking:00001836:  CHANGETRACKINGDIR), 
cada: cdbresynchronizechangetracking:00001837:  errhint("create directory and re-start the cluster"))); 
cada: cdbresynchronizechangetracking:00001876:  elog(ERROR, "internal error in ChangeTracking_OpenFile. type %d", ftype); 
cada: cdbresynchronizechangetracking:00001921:  ereport(ERROR, 
cada: cdbresynchronizechangetracking:00001922:  (errcode_for_file_access(), 
cada: cdbresynchronizechangetracking:00001923:  errmsg("could not rename file \"%s\" to \"%s\": %m", 
cada: cdbresynchronizechangetracking:00001924:  fn1, fn2))); 
cada: cdbresynchronizechangetracking:00002034:  elog(ERROR, "ChangeTracking_WriteBuffer called with empty buffer"); 
cada: cdbresynchronizechangetracking:00002153:  ereport(WARNING, 
cada: cdbresynchronizechangetracking:00002154:  (errcode_for_file_access(), 
cada: cdbresynchronizechangetracking:00002155:  errmsg("unable to read change tracking meta file \"%s\", " 
cada: cdbresynchronizechangetracking:00002156:  "change tracking disabled : %m", 
cada: cdbresynchronizechangetracking:00002157:  path), 
cada: cdbresynchronizechangetracking:00002158:  errSendAlert(true))); 
cada: cdbresynchronizechangetracking:00002243:  ereport(WARNING, 
cada: cdbresynchronizechangetracking:00002244:  (errcode_for_file_access(), 
cada: cdbresynchronizechangetracking:00002245:  errmsg("write error for change tracking meta file in " 
cada: cdbresynchronizechangetracking:00002246:  "ChangeTracking_MarkFullResyncLockAcquired. " 
cada: cdbresynchronizechangetracking:00002247:  "Change Tracking disabled : %m"), 
cada: cdbresynchronizechangetracking:00002248:  errSendAlert(true))); 
cada: cdbresynchronizechangetracking:00002622:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
cada: cdbresynchronizechangetracking:00002623:  errmsg("Unable to obtain change tracking information from segment database."), 
cada: cdbresynchronizechangetracking:00002624:  errdetail("SPI_connect failed in ChangeTracking_GetTotalBlocksToSync()"))); 
cada: cdbresynchronizechangetracking:00002704:  elog(ERROR, "internal error in ChangeTracking_doesFileNeedCompacting (used %d)", ftype); 
cada: cdbresynchronizechangetracking:00002793:  ereport(WARNING, 
cada: cdbresynchronizechangetracking:00002794:  (errcode_for_file_access(), 
cada: cdbresynchronizechangetracking:00002795:  errmsg("unable to seek to begin " INT64_FORMAT " or end " INT64_FORMAT " in change tracking '%s' file : %m", 
cada: cdbresynchronizechangetracking:00002796:  positionFull, 
cada: cdbresynchronizechangetracking:00002797:  positionFullEnd, 
cada: cdbresynchronizechangetracking:00002798:  ChangeTracking_FtypeToString(ftype)))); 
cada: cdbresynchronizechangetracking:00002804:  ereport(WARNING, 
cada: cdbresynchronizechangetracking:00002805:  (errcode_for_file_access(), 
cada: cdbresynchronizechangetracking:00002806:  errmsg("unable to open change tracking '%s' file : %m", 
cada: cdbresynchronizechangetracking:00002807:  ChangeTracking_FtypeToString(ftype)))); 
cada: cdbresynchronizechangetracking:00002821:  ereport(WARNING, 
cada: cdbresynchronizechangetracking:00002822:  (errcode_for_file_access(), 
cada: cdbresynchronizechangetracking:00002823:  errmsg("unable to seek to end in change tracking '%s' file : %m", 
cada: cdbresynchronizechangetracking:00002824:  ChangeTracking_FtypeToString(ftype)))); 
cada: cdbresynchronizechangetracking:00002830:  ereport(WARNING, 
cada: cdbresynchronizechangetracking:00002831:  (errcode_for_file_access(), 
cada: cdbresynchronizechangetracking:00002832:  errmsg("unable to open change tracking '%s' file : %m", 
cada: cdbresynchronizechangetracking:00002833:  ChangeTracking_FtypeToString(ftype)))); 
cada: cdbresynchronizechangetracking:00002846:  ereport(ERROR, 
cada: cdbresynchronizechangetracking:00002847:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cada: cdbresynchronizechangetracking:00002848:  (errmsg("could not allocate memory for change tracking log buffer")))); 
cada: cdbresynchronizechangetracking:00003159:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
cada: cdbresynchronizechangetracking:00003160:  errmsg("Unable to obtain change tracking information from segment database."), 
cada: cdbresynchronizechangetracking:00003161:  errdetail("SPI_connect failed in ChangeTracking_CreateCompactLogFromFull()"))); 
cada: cdbresynchronizechangetracking:00003202:  //elog(NOTICE,"tuple %d: %s %s %s block %s lsn %s", i, str_space, str_db, str_rel, str_blocknum, str_endlsn); 
cada: cdbresynchronizechangetracking:00003297:  ereport(WARNING, 
cada: cdbresynchronizechangetracking:00003298:  (errcode_for_file_access(), 
cada: cdbresynchronizechangetracking:00003299:  errmsg("unable to seek to end in change tracking '%s' file : %m", 
cada: cdbresynchronizechangetracking:00003300:  ChangeTracking_FtypeToString(ftype)))); 
cada: cdbresynchronizechangetracking:00003319:  ereport(WARNING, 
cada: cdbresynchronizechangetracking:00003320:  (errcode_for_file_access(), 
cada: cdbresynchronizechangetracking:00003321:  errmsg("unable to open change tracking '%s' file : %m", 
cada: cdbresynchronizechangetracking:00003322:  ChangeTracking_FtypeToString(ftype)))); 
cada: cdbresynchronizechangetracking:00003332:  ereport(ERROR, 
cada: cdbresynchronizechangetracking:00003333:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cada: cdbresynchronizechangetracking:00003334:  (errmsg("could not allocate memory for change tracking log buffer")))); 
cada: cdbresynchronizechangetracking:00003356:  ereport(WARNING, 
cada: cdbresynchronizechangetracking:00003357:  (errcode_for_file_access(), 
cada: cdbresynchronizechangetracking:00003358:  errmsg("unable to read change tracking '%s' file : %m", 
cada: cdbresynchronizechangetracking:00003359:  ChangeTracking_FtypeToString(ftype)))); 
cada: cdbresynchronizechangetracking:00003401:  ereport(WARNING, 
cada: cdbresynchronizechangetracking:00003402:  (errcode_for_file_access(), 
cada: cdbresynchronizechangetracking:00003403:  errmsg("write error for change tracking %s file, " 
cada: cdbresynchronizechangetracking:00003404:  "change tracking disabled : %m", 
cada: cdbresynchronizechangetracking:00003405:  ChangeTracking_FtypeToString(ft)), 
cada: cdbresynchronizechangetracking:00003406:  errSendAlert(true))); 
cada: cdbresynchronizechangetracking:00003424:  elog(ERROR, "internal error in ChangeTracking_FtypeToString. invalid arg value (%d)", ftype); 
aaaaa GP_IGNORE: caai: cdbsetop - ./backend/cdb/cdbsetop.c
caai: cdbsetop:00000153:  ereport(ERROR, ( 
caai: cdbsetop:00000154:  errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caai: cdbsetop:00000155:  errmsg("unexpected argument locus to set operation") )); 
caai: cdbsetop:00000182:  ereport(ERROR, ( 
caai: cdbsetop:00000183:  errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caai: cdbsetop:00000184:  errmsg("unexpected argument locus to set operation") )); 
caai: cdbsetop:00000211:  ereport(ERROR, ( 
caai: cdbsetop:00000212:  errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caai: cdbsetop:00000213:  errmsg("unexpected argument locus to set operation") )); 
caai: cdbsetop:00000220:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caai: cdbsetop:00000221:  errmsg("unexpected replicated intermediate result"), 
caai: cdbsetop:00000222:  errdetail("argument to set operation may not be replicated") )); 
caai: cdbsetop:00000227:  ereport(ERROR, ( 
caai: cdbsetop:00000228:  errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caai: cdbsetop:00000229:  errmsg("unexpected arguments to set operation") )); 
aaaaa GP_IGNORE: cabi: cdbsharedstorageop - ./backend/cdb/cdbsharedstorageop.c
cabi: cdbsharedstorageop:00000201:  ereport(ERROR, 
cabi: cdbsharedstorageop:00000202:  (errcode_for_file_access(), 
cabi: cdbsharedstorageop:00000203:  errmsg("could not create relation file '%s', relation name '%s', contentid: %d: %s", 
cabi: cdbsharedstorageop:00000204:  relpath(stat->relFileNode[i]), 
cabi: cdbsharedstorageop:00000205:  stat->relationName[i], GpIdentity.segindex, 
cabi: cdbsharedstorageop:00000206:  strerror(error)))); 
cabi: cdbsharedstorageop:00000308:  ereport(ERROR, 
cabi: cdbsharedstorageop:00000309:  (errcode_for_file_access(), 
cabi: cdbsharedstorageop:00000310:  errmsg("could not create relation file '%s', relation name '%s', contentid: %d: %s", 
cabi: cdbsharedstorageop:00000311:  relpath(stat->relFileNode[i]), 
cabi: cdbsharedstorageop:00000312:  stat->relationName[i], GpIdentity.segindex, 
cabi: cdbsharedstorageop:00000313:  strerror(error)))); 
aaaaa GP_IGNORE: caah: cdbsreh - ./backend/cdb/cdbsreh.c
caah: cdbsreh:00000197:  ereport(ERROR, 
caah: cdbsreh:00000198:  (errcode(ERRCODE_READ_ONLY_SQL_TRANSACTION), 
caah: cdbsreh:00000199:  errmsg("transaction is read-only"))); 
caah: cdbsreh:00000203:  ereport(ERROR, 
caah: cdbsreh:00000204:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caah: cdbsreh:00000205:  errmsg("\"%s\" exists in the database but is a non table relation", 
caah: cdbsreh:00000206:  RelationGetRelationName(cdbsreh->errtbl)))); 
caah: cdbsreh:00000209:  ereport(ERROR, 
caah: cdbsreh:00000210:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caah: cdbsreh:00000211:  errmsg("\"%s\" exists in the database but is a non heap stored relation", 
caah: cdbsreh:00000212:  RelationGetRelationName(cdbsreh->errtbl)))); 
caah: cdbsreh:00000243:  ereport(NOTICE, 
caah: cdbsreh:00000244:  (errcode(ERRCODE_SUCCESSFUL_COMPLETION), 
caah: cdbsreh:00000245:  errmsg("Dropping the auto-generated unused error table"), 
caah: cdbsreh:00000246:  errhint("Use KEEP in LOG INTO clause to force keeping the error table alive"))); 
caah: cdbsreh:00000353:  ereport(NOTICE, 
caah: cdbsreh:00000354:  (errmsg("Found %d data formatting errors (%d or more " 
caah: cdbsreh:00000355:  "input rows). Errors logged into error table \"%s\"", 
caah: cdbsreh:00000356:  total_rejected, total_rejected, 
caah: cdbsreh:00000357:  RelationGetRelationName(cdbsreh->errtbl)))); 
caah: cdbsreh:00000359:  ereport(NOTICE, 
caah: cdbsreh:00000360:  (errmsg("Found %d data formatting errors (%d or more " 
caah: cdbsreh:00000361:  "input rows). Rejected related input data.", 
caah: cdbsreh:00000362:  total_rejected, total_rejected))); 
caah: cdbsreh:00000378:  elog(FATAL, "SendNumRowsRejected: called outside of execute context."); 
caah: cdbsreh:00000405:  ereport(ERROR, 
caah: cdbsreh:00000406:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caah: cdbsreh:00000407:  errmsg("Relation \"%s\" already exists and is not of a valid " 
caah: cdbsreh:00000408:  "error table format (expected %d attributes, found %d)", 
caah: cdbsreh:00000409:  relname, NUM_ERRORTABLE_ATTR, attr_count))); 
caah: cdbsreh:00000419:  ereport(ERROR, 
caah: cdbsreh:00000420:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caah: cdbsreh:00000421:  errmsg("Relation \"%s\" already exists and is not of a valid " 
caah: cdbsreh:00000422:  "error table format. If appears to have constraints " 
caah: cdbsreh:00000423:  "defined.", relname))); 
caah: cdbsreh:00000462:  ereport(ERROR, 
caah: cdbsreh:00000463:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caah: cdbsreh:00000464:  errmsg("Relation \"%s\" includes dropped attributes and is " 
caah: cdbsreh:00000465:  "therefore not of a valid error table format", 
caah: cdbsreh:00000466:  relname))); 
caah: cdbsreh:00000469:  ereport(ERROR, 
caah: cdbsreh:00000470:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caah: cdbsreh:00000471:  errmsg("Relation \"%s\" is an invalid error table. Expected " 
caah: cdbsreh:00000472:  "attribute \"%s\" found \"%s\"", 
caah: cdbsreh:00000473:  relname, expected_attname, NameStr(*cur_attname)))); 
caah: cdbsreh:00000476:  ereport(ERROR, 
caah: cdbsreh:00000477:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caah: cdbsreh:00000478:  errmsg("Relation \"%s\" is an invalid error table. Wrong data " 
caah: cdbsreh:00000479:  "type for attribute \"%s\"", 
caah: cdbsreh:00000480:  relname, NameStr(*cur_attname)))); 
caah: cdbsreh:00000483:  ereport(ERROR, 
caah: cdbsreh:00000484:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caah: cdbsreh:00000485:  errmsg("Relation \"%s\" is an invalid error table. Attribute " 
caah: cdbsreh:00000486:  "\"%s\" has more than zero dimensions (array).", 
caah: cdbsreh:00000487:  relname, NameStr(*cur_attname)))); 
caah: cdbsreh:00000568:  ereport(WARNING, 
caah: cdbsreh:00000569:  (errcode(ERRCODE_T_R_GP_ERROR_TABLE_MAY_DROP), 
caah: cdbsreh:00000570:  errmsg("The error table was created in the same " 
caah: cdbsreh:00000571:  "transaction as this operation. It will get " 
caah: cdbsreh:00000572:  "dropped if transaction rolls back even if bad " 
caah: cdbsreh:00000573:  "rows are present"), 
caah: cdbsreh:00000574:  errhint("To avoid this create the error table ahead " 
caah: cdbsreh:00000575:  "of time using: CREATE TABLE <name> (cmdtime " 
caah: cdbsreh:00000576:  "timestamp with time zone, relname text, " 
caah: cdbsreh:00000577:  "filename text, linenum integer, bytenum " 
caah: cdbsreh:00000578:  "integer, errmsg text, rawdata text, rawbytes " 
caah: cdbsreh:00000579:  "bytea)"))); 
caah: cdbsreh:00000666:  ereport(ERROR, 
caah: cdbsreh:00000667:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caah: cdbsreh:00000668:  errmsg("Segment reject limit in ROWS " 
caah: cdbsreh:00000669:  "must be 2 or larger (got %d)", rejectlimit))); 
caah: cdbsreh:00000676:  ereport(ERROR, 
caah: cdbsreh:00000677:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caah: cdbsreh:00000678:  errmsg("Segment reject limit in PERCENT " 
caah: cdbsreh:00000679:  "must be between 1 and 100 (got %d)", rejectlimit))); 
aaaaa GP_IGNORE: caah: cdbsrlz - ./backend/cdb/cdbsrlz.c
caah: cdbsrlz:00000159:  elog(ERROR,"Compression failed: %s (errno=%d) uncompressed len %d, compressed %d", 
caah: cdbsrlz:00000160:  zError(status), status, uncompressed_size, (int)compressed_size); 
caah: cdbsrlz:00000191:  elog(ERROR,"Uncompress failed: %s (errno=%d compressed len %d, uncompressed %d)", 
caah: cdbsrlz:00000192:  zError(status), status, size, *uncompressed_len); 
aaaaa GP_IGNORE: caba: cdbsubplan - ./backend/cdb/cdbsubplan.c
caba: cdbsubplan:00000253:  ereport(ERROR, 
caba: cdbsubplan:00000254:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caba: cdbsubplan:00000255:  errmsg("no parameter found for initplan subquery"))); 
caba: cdbsubplan:00000322:  ereport(ERROR, 
caba: cdbsubplan:00000323:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caba: cdbsubplan:00000324:  errmsg("Failed to locate datatype for paramid %d", 
caba: cdbsubplan:00000325:  paramid 
caba: cdbsubplan:00000326:  ))); 
aaaaa GP_IGNORE: cabc: cdbsubselect - ./backend/cdb/cdbsubselect.c
cabc: cdbsubselect:00000925:  ereport(ERROR, (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
cabc: cdbsubselect:00000926:  errmsg("Set-returning function in EXISTS subquery: not yet implemented") 
cabc: cdbsubselect:00000927:  )); 
aaaaa GP_IGNORE: cabj: cdbtargeteddispatch - ./backend/cdb/cdbtargeteddispatch.c
cabj: cdbtargeteddispatch:00000539:  elog(ERROR, "Invalid plan node %d", nodeTag(node)); 
aaaaa GP_IGNORE: cabd: cdbthreadwork - ./backend/cdb/cdbthreadwork.c
cabd: cdbthreadwork:00000069: // elog(ERROR, "ThreadWork: pthread_attr_init failed with error %d", pthread_err); 
cabd: cdbthreadwork:00000082: // elog(ERROR, "ThreadWork: pthread_attr_setstacksize failed with error %d", pthread_err); 
cabd: cdbthreadwork:00000091: // elog(ERROR, "ThreadWork: pthread_create failed with error %d", pthread_err); 
cabd: cdbthreadwork:00000138: // elog(ERROR, "ThreadWork: pthread_join failed on thread %lu returned %d attempting to join to %lu)", 
cabd: cdbthreadwork:00000139:  fprintf(stderr, "ThreadWork: pthread_join failed on thread %lu returned %d attempting to join to %lu)", 
cabd: cdbthreadwork:00000140: #ifndef _WIN32 
cabd: cdbthreadwork:00000141:  (unsigned long) threadWork->thread, 
cabd: cdbthreadwork:00000142: #else 
cabd: cdbthreadwork:00000143:  (unsigned long) threadWork->thread.p, 
cabd: cdbthreadwork:00000144: #endif 
cabd: cdbthreadwork:00000145:  pthread_err, (unsigned long)mythread()); 
cabd: cdbthreadwork:00000163: // elog(ERROR,"ThreadWork: pthread_mutex_lock failed with error %d", 
cabd: cdbthreadwork:00000164: // pthread_err); 
cabd: cdbthreadwork:00000189: // elog(ERROR,"ThreadWork: pthread_mutex_unlock failed with error %d", 
cabd: cdbthreadwork:00000190: // pthread_err); 
cabd: cdbthreadwork:00000215: // elog(ERROR,"ThreadWork: pthread_cond_signal failed with error %d", 
cabd: cdbthreadwork:00000216: // pthread_err); 
cabd: cdbthreadwork:00000245: // elog(ERROR,"ThreadWork: pthread_cond_wait failed with error %d", 
cabd: cdbthreadwork:00000246: // pthread_err); 
cabd: cdbthreadwork:00000282: // elog(ERROR,"ThreadWork: pthread_cond_wait failed with error %d", 
cabd: cdbthreadwork:00000283: // pthread_err); 
aaaaa GP_IGNORE: caai: cdbtimer - ./backend/cdb/cdbtimer.c
caai: cdbtimer:00000097:  elog( FATAL, "Old timer values not provided" ); 
aaaaa GP_IGNORE: caaf: cdbtm - ./backend/cdb/cdbtm.c
caaf: cdbtm:00000178:  elog(FATAL, "Expected segment distributed transaction context to be '%s', found '%s'", 
caaf: cdbtm:00000179:  DtxContextToString(requiredCurrentContext), 
caaf: cdbtm:00000180:  DtxContextToString(DistributedTransactionContext)); 
caaf: cdbtm:00000322:  elog(FATAL, "getDtxLogInfo found current distributed transaction is NULL"); 
caaf: cdbtm:00000518:  elog(ERROR, "DTM transaction is not active (%s, detail = '%s')", debugCaller, debugDetail); 
caaf: cdbtm:00000530:  elog(ERROR, "DTM transaction is not active (state = %s, %s, detail = '%s')", 
caaf: cdbtm:00000531:  DtxStateToString(currentGxact->state), debugCaller, debugDetail); 
caaf: cdbtm:00000561:  ereport(ERROR, (errmsg("Global transaction upgrade from single segment to entire cluster failed for gid = \"%s\" due to error", 
caaf: cdbtm:00000562:  currentGxact->gid))); 
caaf: cdbtm:00000637:  elog(ERROR, "The distributed transaction 'Prepare' broadcast failed to one or more segments for gid = %s.", 
caaf: cdbtm:00000638:  currentGxact->gid); 
caaf: cdbtm:00000722:  elog(WARNING, "The distributed transaction 'Commit Prepared' broadcast failed to one or more segments for gid = %s.", 
caaf: cdbtm:00000723:  currentGxact->gid); 
caaf: cdbtm:00000734:  elog(NOTICE, "Releasing segworker group to retry broadcast."); 
caaf: cdbtm:00000813:  elog(WARNING, "The distributed transaction 'Abort' broadcast failed to one or more segments for gid = %s.", 
caaf: cdbtm:00000814:  currentGxact->gid); 
caaf: cdbtm:00000819:  elog(NOTICE, "Releasing segworker groups to finish aborting the transaction."); 
caaf: cdbtm:00000867:  elog(WARNING, "The distributed transaction '%s' broadcast failed to one or more segments for gid = %s.", 
caaf: cdbtm:00000868:  abortString, currentGxact->gid); 
caaf: cdbtm:00000878:  elog(NOTICE, "Releasing segworker groups to retry broadcast."); 
caaf: cdbtm:00000996:  elog(FATAL, "A retry of the distributed transaction '%s Prepared' broadcast failed to one or more segments for gid = %s.", 
caaf: cdbtm:00000997:  prepareKind, currentGxact->gid); 
caaf: cdbtm:00000999:  elog(NOTICE, "Retry of the distributed transaction '%s Prepared' broadcast succeeded to the segments for gid = %s.", 
caaf: cdbtm:00001000:  prepareKind, currentGxact->gid); 
caaf: cdbtm:00001072:  elog(FATAL, "Crash recovery retry of the distributed transaction 'Abort Prepared' broadcast failed to one or more segments for gid = %s. System will retry again later", gid); 
caaf: cdbtm:00001164:  elog(WARNING, "Releasing segworker groups since one or more segment connections failed. This will abort the transactions in the segments that did not get prepared."); 
caaf: cdbtm:00001189:  elog(NOTICE, "Releasing segworker groups to finish aborting the transaction."); 
caaf: cdbtm:00001203:  elog(FATAL, "Unable to complete the 'Abort Prepared' broadcast for gid '%s'", 
caaf: cdbtm:00001204:  currentGxact->gid); 
caaf: cdbtm:00001248:  elog(FATAL, "Unable to complete the 'Abort Prepared' broadcast for gid '%s'", 
caaf: cdbtm:00001249:  currentGxact->gid); 
caaf: cdbtm:00001446:  elog(FATAL, "DTM initialization: failure during startup/recovery, could not retry, check segment status"); 
caaf: cdbtm:00001465:  elog(FATAL, "DTM initialization: failure during startup/recovery, retry failed, check segment status"); 
caaf: cdbtm:00001515:  elog(FATAL, "could not initialize transaction manager share memory"); 
caaf: cdbtm:00001764:  ereport(ERROR, 
caaf: cdbtm:00001765:  (errcode_for_file_access(), 
caaf: cdbtm:00001766:  errmsg("could not create save DTM redo file \"%s\"", 
caaf: cdbtm:00001767:  path))); 
caaf: cdbtm:00001795:  ereport(ERROR, 
caaf: cdbtm:00001796:  (errcode_for_file_access(), 
caaf: cdbtm:00001797:  errmsg("could not write save DTM redo file : %m"))); 
caaf: cdbtm:00001850:  elog(ERROR, "Bad redo length (expected %d and found %d)", 
caaf: cdbtm:00001851:  (int)sizeof(TMGXACT_UTILITY_MODE_REDO), read_len); 
caaf: cdbtm:00001855:  ereport(ERROR, 
caaf: cdbtm:00001856:  (errcode_for_file_access(), 
caaf: cdbtm:00001857:  errmsg("error reading DTM redo file: %m"))); 
caaf: cdbtm:00001933:  ereport(FATAL, 
caaf: cdbtm:00001934:  (errmsg("the limit of %d distributed transactions has been reached.", 
caaf: cdbtm:00001935:  max_tm_gxacts), 
caaf: cdbtm:00001936:  errdetail("The global user configuration (GUC) server parameter max_prepared_transactions controls this limit."))); 
caaf: cdbtm:00002354:  elog(FATAL, "Should not see this transitional state with TM lock held -- dtx state \"%s\" not expected here", 
caaf: cdbtm:00002355:  DtxStateToString(state)); 
caaf: cdbtm:00002359:  elog(FATAL, "Cannot also be inserting COMMITTED into log buffer from another process with TM lock held"); 
caaf: cdbtm:00002363:  elog(FATAL, "Cannot also be inserting FORGET COMMITTED into log buffer from another process with TM lock held"); 
caaf: cdbtm:00002396:  elog(ERROR, "Too many distributed transactions for snapshot"); 
caaf: cdbtm:00002484:  ereport(FATAL, 
caaf: cdbtm:00002485:  (errmsg("the limit of %d distributed transactions has been reached.", 
caaf: cdbtm:00002486:  max_tm_gxacts), 
caaf: cdbtm:00002487:  errdetail("The global user configuration (GUC) server parameter max_prepared_transactions controls this limit."))); 
caaf: cdbtm:00002548:  elog(FATAL, "releaseGxact expected currentGxact to not be NULL"); 
caaf: cdbtm:00002756:  elog(FATAL, "Should not see this transitional state with TM lock held -- dtx state \"%s\" not expected here", 
caaf: cdbtm:00002757:  DtxStateToString(state)); 
caaf: cdbtm:00002761:  elog(FATAL, "Cannot also be buffering COMMITTED from another process with TM lock held"); 
caaf: cdbtm:00002765:  elog(FATAL, "Cannot also be buffering FORGET COMMITTED from another process with TM lock held"); 
caaf: cdbtm:00002847:  ereport(FATAL, 
caaf: cdbtm:00002848:  (errmsg("reached limit of %u global transactions per start", LastDistributedTransactionId))); 
caaf: cdbtm:00002975:  elog(NOTICE, "Releasing segworker groups for deferred recovery."); 
caaf: cdbtm:00003109:  ereport(ERROR, (errcode(ERRCODE_INTERNAL_ERROR), 
caaf: cdbtm:00003110:  errmsg("DTM Log recovery failed. There are still unresolved " 
caaf: cdbtm:00003111:  "in-doubt transactions on some of the segment databaes " 
caaf: cdbtm:00003112:  "that were not able to be resolved for an unknown reason. "), 
caaf: cdbtm:00003113:  errdetail("Here is a list of in-doubt transactions in the system: %s", 
caaf: cdbtm:00003114:  indoubtBuff.data), 
caaf: cdbtm:00003115:  errhint("Try restarting the Greenplum Database array. If the problem persists " 
caaf: cdbtm:00003116:  " an Administrator will need to resolve these transactions " 
caaf: cdbtm:00003117:  " manually."))); 
caaf: cdbtm:00003402:  elog(ERROR, "setupRegularDtxContext finds unexpected DistributedTransactionContext = '%s'", 
caaf: cdbtm:00003403:  DtxContextToString(DistributedTransactionContext)); 
caaf: cdbtm:00003516:  elog(ERROR, "setupQEDtxContext not expecting distributed begin or snapshot when no Snapshot slot exists"); 
caaf: cdbtm:00003581:  elog(ERROR, "Starting an explicit distributed transaction in segment -- cannot already be in a transaction"); 
caaf: cdbtm:00003605:  elog(ERROR, 
caaf: cdbtm:00003606:  "Going to start a local implicit transaction in segment using a distribute " 
caaf: cdbtm:00003607:  "snapshot -- cannot already be in a transaction"); 
caaf: cdbtm:00003635:  elog(NOTICE, "We should have left this transition state '%s' at the end of the previous command...", 
caaf: cdbtm:00003636:  DtxContextToString(DistributedTransactionContext)); 
caaf: cdbtm:00003642:  elog(ERROR, "Cannot have an explicit BEGIN statement..."); 
caaf: cdbtm:00003647:  elog(ERROR, "We should have left this transition state '%s' at the end of the previous command", 
caaf: cdbtm:00003648:  DtxContextToString(DistributedTransactionContext)); 
caaf: cdbtm:00003665:  elog(ERROR, "We should not be trying to execute a query in state '%s'", 
caaf: cdbtm:00003666:  DtxContextToString(DistributedTransactionContext)); 
caaf: cdbtm:00003704:  elog(FATAL, "Expected currentGxact to be NULL at this point. Found gid =%s, gxid = %u (state = %s, caller = %s)", 
caaf: cdbtm:00003705:  currentGxact->gid, currentGxact->gxid, DtxStateToString(currentGxact->state), debugCaller); 
caaf: cdbtm:00003776:  ereport(ERROR, (errmsg("Global transaction BEGIN failed for gid = \"%s\" due to error", 
caaf: cdbtm:00003777:  currentGxact->gid))); 
caaf: cdbtm:00003812:  elog(ERROR, "Prepare of distributed transaction %s failed", gid); 
caaf: cdbtm:00003926:  elog(FATAL, "Unexpected segment distributed transaction context: '%s'", 
caaf: cdbtm:00003927:  DtxContextToString(DistributedTransactionContext)); 
caaf: cdbtm:00003955:  elog(ERROR, "Distributed transaction %s not found", gid); 
caaf: cdbtm:00003969:  elog(FATAL, "Unexpected segment distribute transaction context: '%s'", 
caaf: cdbtm:00003970:  DtxContextToString(DistributedTransactionContext)); 
caaf: cdbtm:00003986:  elog(ERROR, "Distributed transaction %s not found", gid); 
caaf: cdbtm:00004046:  elog(ERROR, "Unrecognized dtx protocol command: %d", 
caaf: cdbtm:00004047:  (int) dtxProtocolCommand); 
aaaaa GP_IGNORE: caba: cdbtmutils - ./backend/cdb/cdbtmutils.c
caba: cdbtmutils:00000056:  elog(ERROR, "Bad distributed transaction identifier \"%s\"", gid); 
caba: cdbtmutils:00000129:  elog(NOTICE, "%s --> Now would be a good time to debug pid = %d", caller, MyProcPid); 
aaaaa GP_IGNORE: caah: cdbutil - ./backend/cdb/cdbutil.c
caah: cdbutil:00000268:  ereport(ERROR, 
caah: cdbutil:00000269:  (errcode(ERRCODE_CARDINALITY_VIOLATION), 
caah: cdbutil:00000270:  errmsg("Greenplum Database number of segment databases cannot be 0"))); 
caah: cdbutil:00000274:  ereport(ERROR, 
caah: cdbutil:00000275:  (errcode(ERRCODE_CARDINALITY_VIOLATION), 
caah: cdbutil:00000276:  errmsg("Greenplum Database number of entry databases cannot be 0"))); 
caah: cdbutil:00000308:  ereport(ERROR, 
caah: cdbutil:00000309:  (errcode(ERRCODE_DATA_EXCEPTION), 
caah: cdbutil:00000310:  errmsg("Greenplum Database number of segments inconsistency: count is %d from pg_catalog.%s table, but %d from getCdbComponentDatabases()", 
caah: cdbutil:00000311:  getgpsegmentCount(), GpIdRelationName, component_databases->total_segments))); 
caah: cdbutil:00000328:  ereport(ERROR, 
caah: cdbutil:00000329:  (errcode(ERRCODE_DATA_EXCEPTION), 
caah: cdbutil:00000330:  errmsg("Cannot locate entry database represented by this db in gp_segment_configuration: dbid %d content %d", 
caah: cdbutil:00000331:  GpIdentity.dbid, Gp_segment))); 
caah: cdbutil:00000353:  ereport(ERROR, 
caah: cdbutil:00000354:  (errcode(ERRCODE_DATA_EXCEPTION), 
caah: cdbutil:00000355:  errmsg("Content values not valid in %s table. They must be in the range 0 to %d inclusive", 
caah: cdbutil:00000356:  GpSegmentConfigRelationName, getgpsegmentCount() - 1))); 
caah: cdbutil:00000361:  ereport(ERROR, 
caah: cdbutil:00000362:  (errcode(ERRCODE_DATA_EXCEPTION), 
caah: cdbutil:00000363:  errmsg("Content values not valid in %s table. They must be in the range 0 to %d inclusive", 
caah: cdbutil:00000364:  GpSegmentConfigRelationName, getgpsegmentCount() - 1))); 
caah: cdbutil:00000419:  elog(ERROR, "No alive segment in the cluster."); 
caah: cdbutil:00001117:  elog(ERROR, "master_standby_dbid() executed on execution segment"); 
caah: cdbutil:00001154:  elog(ERROR, "dbid_get_dbinfo() executed on execution segment"); 
caah: cdbutil:00001259:  elog(ERROR, "could not find configuration entry for dbid %i", dbid); 
caah: cdbutil:00001285:  elog(ERROR, "get_contentid_from_dbid() executed on execution segment"); 
caah: cdbutil:00001331:  elog(ERROR, "contentid_get_dbid() executed on execution segment"); 
caah: cdbutil:00001387:  elog(ERROR, "my_mirror_dbid() executed on execution segment"); 
aaaaa GP_IGNORE: caah: cdbvars - ./backend/cdb/cdbvars.c
caah: cdbvars:00000428:  elog(ERROR, "GpIdentity is not set"); 
caah: cdbvars:00000920:  elog(ERROR, "Unknown interconnect type. (current type is '%s')", gpvars_show_gp_interconnect_type()); 
caah: cdbvars:00000927:  elog(WARNING, "Nil-Interconnect diagnostic mode enabled (tuple will be dropped)."); 
caah: cdbvars:00000935:  elog(WARNING, "Nil-Interconnect diagnostic mode disabled."); 
caah: cdbvars:00000976:  elog(ERROR, "Unknown interconnect flow control method. (current method is '%s')", gpvars_show_gp_interconnect_fc_method()); 
caah: cdbvars:00001032:  elog(ERROR, "Unknown autostats mode. (current type is '%s')", autostats_mode_string); 
caah: cdbvars:00001133:  ereport(ERROR, 
caah: cdbvars:00001134:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
caah: cdbvars:00001135:  errmsg("must be superuser to set gp_enable_gpperfmon"))); 
caah: cdbvars:00001153:  ereport(ERROR, 
caah: cdbvars:00001154:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
caah: cdbvars:00001155:  errmsg("must be superuser to set gp_gpperfmon_send_interval"))); 
caah: cdbvars:00001210:  ereport(WARNING, 
caah: cdbvars:00001211:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
caah: cdbvars:00001212:  errmsg("gp_hash_index is deprecated and has no effect"))); 
caah: cdbvars:00001235:  elog(ERROR, "unknown resource queue memory policy: current policy is '%s'", gpvars_show_gp_resqueue_memory_policy()); 
caah: cdbvars:00001269:  elog(ERROR, "Invalid input for statement_mem. Must be less than max_statement_mem (%d kB).", max_statement_mem); 
aaaaa GP_IGNORE: cabb: cdbworkfile - ./backend/cdb/cdbworkfile.c
cabb: cdbworkfile:00000113:  ereport(ERROR, (errmsg("Workfile I/O error: %m."), 
cabb: cdbworkfile:00000114:  errdetail("Failed to seek to offset " UINT64_FORMAT 
cabb: cdbworkfile:00000115:  "in file of size " UINT64_FORMAT " bytes.", 
cabb: cdbworkfile:00000116:  seekto, 
cabb: cdbworkfile:00000117:  workfile->len) 
cabb: cdbworkfile:00000118:  )); 
cabb: cdbworkfile:00000146:  ereport(ERROR, (errmsg("Workfile I/O error: Unexpected eof " 
cabb: cdbworkfile:00000147:  "at offset " UINT64_FORMAT ".", 
cabb: cdbworkfile:00000148:  seekto + nread), 
cabb: cdbworkfile:00000149:  errdetail("Failed to read " UINT64_FORMAT " bytes " 
cabb: cdbworkfile:00000150:  "starting at offset " UINT64_FORMAT ". " 
cabb: cdbworkfile:00000151:  "File size " UINT64_FORMAT "bytes.", 
cabb: cdbworkfile:00000152:  (uint64)len, 
cabb: cdbworkfile:00000153:  seekto, 
cabb: cdbworkfile:00000154:  workfile->len) 
cabb: cdbworkfile:00000155:  )); 
cabb: cdbworkfile:00000183:  ereport(ERROR, (errcode_for_file_access(), 
cabb: cdbworkfile:00000184:  errmsg("Workfile I/O error: %m."), 
cabb: cdbworkfile:00000185:  errdetail("Failed to write " UINT64_FORMAT " bytes " 
cabb: cdbworkfile:00000186:  "starting at offset " UINT64_FORMAT ". " 
cabb: cdbworkfile:00000187:  "File size " UINT64_FORMAT "bytes.", 
cabb: cdbworkfile:00000188:  (uint64)len, 
cabb: cdbworkfile:00000189:  seekto, 
cabb: cdbworkfile:00000190:  workfile->len) 
cabb: cdbworkfile:00000191:  )); 
cabb: cdbworkfile:00000470:  elog(ERROR, "Workfile I/O error: SetPos offset " UINT64_FORMAT 
cabb: cdbworkfile:00000471:  " exceeds subfile size " UINT64_FORMAT, 
cabb: cdbworkfile:00000472:  newoffset, 
cabb: cdbworkfile:00000473:  it->extoffset); 
aaaaa GP_IGNORE: caaj: cdbmotion - ./backend/cdb/motion/cdbmotion.c
caaj: cdbmotion:00000691:  elog(ERROR, "Received tuple-chunk of size %u; smaller than" 
caaj: cdbmotion:00000692:  " chunk header size %d!", tcItem->chunk_length, 
caaj: cdbmotion:00000693:  TUPLE_CHUNK_HEADER_SIZE); 
caaj: cdbmotion:00000750:  elog(FATAL, "Motion layer node %d cleanup - did not receive" 
caaj: cdbmotion:00000751:  " end-of-stream from sender %d.", motNodeID, i); 
caaj: cdbmotion:00000847:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caaj: cdbmotion:00000848:  errmsg("Interconnect Error: Unexpected Motion Node Id: %d. This means" 
caaj: cdbmotion:00000849:  " a motion node that wasn't setup is requesting interconnect" 
caaj: cdbmotion:00000850:  " resources.", motNodeID))); 
caaj: cdbmotion:00000903:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
caaj: cdbmotion:00000904:  errmsg("Could not allocate entry for tuple chunk sorter."))); 
caaj: cdbmotion:00001019:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caaj: cdbmotion:00001020:  errmsg("Received TC_WHOLE chunk from [src=%d,mn=%d] after" 
caaj: cdbmotion:00001021:  " partial tuple data.", srcRoute, motNodeID))); 
caaj: cdbmotion:00001036:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caaj: cdbmotion:00001037:  errmsg("Received TC_PARTIAL_START chunk from [src=%d,mn=%d]" 
caaj: cdbmotion:00001038:  " after partial tuple data.", srcRoute, motNodeID))); 
caaj: cdbmotion:00001057:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caaj: cdbmotion:00001058:  errmsg("Received TC_PARTIAL_MID chunk from [src=%d,mn=%d]" 
caaj: cdbmotion:00001059:  " without any leading tuple data.", srcRoute, motNodeID))); 
caaj: cdbmotion:00001078:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caaj: cdbmotion:00001079:  errmsg("Received TC_PARTIAL_END chunk from [src=%d,mn=%d]" 
caaj: cdbmotion:00001080:  " without any leading tuple data.", srcRoute, motNodeID))); 
caaj: cdbmotion:00001097:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caaj: cdbmotion:00001098:  errmsg("Received TC_END_OF_STREAM chunk from [src=%d,mn=%d]" 
caaj: cdbmotion:00001099:  " after partial tuple data.", srcRoute, motNodeID))); 
caaj: cdbmotion:00001106:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caaj: cdbmotion:00001107:  errmsg("Received end-of-stream chunk from" 
caaj: cdbmotion:00001108:  " [src=%d,mn=%d] when already marked as at end-of-stream.", 
caaj: cdbmotion:00001109:  srcRoute, motNodeID))); 
caaj: cdbmotion:00001128:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
caaj: cdbmotion:00001129:  errmsg("Received tuple chunk of unrecognized type %d (len %d)" 
caaj: cdbmotion:00001130:  " from [src=%d,mn=%d].", 
caaj: cdbmotion:00001131:  tcType, tcItem->chunk_length, srcRoute, motNodeID))); 
aaaaa GP_IGNORE: iaaj: icxcommon - ./backend/cdb/motion/ic_common.c
iaaj: icxcommon:00000206:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaaj: icxcommon:00000207:  errmsg("Interconnect error parsing message: insufficient data received."), 
iaaj: icxcommon:00000208:  errdetail("conn->msgSize %d bytesProcessed %d < chunk-header %d", 
iaaj: icxcommon:00000209:  conn->msgSize, bytesProcessed, TUPLE_CHUNK_HEADER_SIZE))); 
iaaj: icxcommon:00000231:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaaj: icxcommon:00000232:  errmsg("Interconnect error parsing message"), 
iaaj: icxcommon:00000233:  errdetail("tcSize %d > max %d header %d processed %d/%d from %p", 
iaaj: icxcommon:00000234:  tcSize, Gp_max_packet_size, 
iaaj: icxcommon:00000235:  TUPLE_CHUNK_HEADER_SIZE, bytesProcessed, conn->msgSize, conn->msgPos))); 
iaaj: icxcommon:00000250:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaaj: icxcommon:00000251:  errmsg("Interconnect error parsing message"), 
iaaj: icxcommon:00000252:  errdetail("tcSize %d >= conn->msgSize %d", tcSize, conn->msgSize))); 
iaaj: icxcommon:00000358:  elog(FATAL, "SendTupleChunkToAMS: no transport-states."); 
iaaj: icxcommon:00000360:  elog(FATAL, "SendTupleChunkToAMS: transport states inactive"); 
iaaj: icxcommon:00000437:  elog(FATAL, "getTransportDirectBuffer: no transport states"); 
iaaj: icxcommon:00000441:  elog(FATAL, "getTransportDirectBuffer: inactive transport states"); 
iaaj: icxcommon:00000445:  elog(FATAL, "getTransportDirectBuffer: can't direct-transport to broadcast"); 
iaaj: icxcommon:00000495:  elog(FATAL, "putTransportDirectBuffer: no transport states"); 
iaaj: icxcommon:00000499:  elog(FATAL, "putTransportDirectBuffer: inactive transport states"); 
iaaj: icxcommon:00000503:  elog(FATAL, "putTransportDirectBuffer: can't direct-transport to broadcast"); 
iaaj: icxcommon:00000536:  elog(FATAL, "DeregisterReadInterest: no transport states"); 
iaaj: icxcommon:00000598:  elog(ERROR, "Invalid Sequence Access. Sequence server info is invalid."); 
iaaj: icxcommon:00000630:  elog(ERROR, "SetupSequenceServer: memory allocation failed."); 
iaaj: icxcommon:00000697:  ereport(ERROR, 
iaaj: icxcommon:00000698:  (errmsg("could not translate host addr \"%s\", port \"%d\" to address: %s", 
iaaj: icxcommon:00000699:  seqServerHost, seqServerPort, gai_strerror(ret)))); 
iaaj: icxcommon:00000704:  elog(ERROR,"socket() call failed: %m"); 
iaaj: icxcommon:00000709:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaaj: icxcommon:00000710:  errmsg("Interconnect Error: Could not connect to seqserver."), 
iaaj: icxcommon:00000711:  errdetail("%m%s", "connect"))); 
iaaj: icxcommon:00000718:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaaj: icxcommon:00000719:  errmsg("Interconnect Error: Could not set seqserver socket" 
iaaj: icxcommon:00000720:  "to non-blocking mode."), 
iaaj: icxcommon:00000721:  errdetail("%m%s sockfd=%d", "fcntl", savedSeqServerFd))); 
iaaj: icxcommon:00000735:  elog(FATAL, "SetupUDPInterconnect: unknown interconnect-type"); 
iaaj: icxcommon:00000740:  elog(FATAL, "SetupInterconnect: already initialized."); 
iaaj: icxcommon:00000745:  elog(FATAL, "SetupInterconnect: no slice table ?"); 
iaaj: icxcommon:00000781:  elog(FATAL, "no transport-states."); 
iaaj: icxcommon:00000876:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaaj: icxcommon:00000877:  errmsg("Interconnect Error: A HTAB entry for motion node %d already exists.", motNodeID), 
iaaj: icxcommon:00000878:  errdetail("conns %p numConns %d first sock %d highreadsock %d", pEntry->conns, pEntry->numConns, pEntry->conns[0].sockfd, pEntry->highReadSock))); 
iaaj: icxcommon:00000935:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaaj: icxcommon:00000936:  errmsg("Interconnect Error: Unexpected Motion Node Id: %d. During remove. (size %d)", 
iaaj: icxcommon:00000937:  motNodeID, transportStates->size))); 
iaaj: icxcommon:00000941:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaaj: icxcommon:00000942:  errmsg("Interconnect Error: Unexpected Motion Node Id: %d. During remove. State not valid", 
iaaj: icxcommon:00000943:  motNodeID))); 
aaaaa GP_IGNORE: iaag: icxtcp - ./backend/cdb/motion/ic_tcp.c
iaag: icxtcp:00000237:  elog(ERROR,"getaddrinfo says %s",gai_strerror(s)); 
iaag: icxtcp:00000332:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00000333:  errmsg("Interconnect Error: Could not set up tcp listener socket."), 
iaag: icxtcp:00000334:  errdetail("%m%s", fun))); 
iaag: icxtcp:00000452:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00000453:  errmsg("Interconnect error reading an incoming packet."), 
iaag: icxtcp:00000454:  errdetail("%m%s from seg%d at %s", 
iaag: icxtcp:00000455:  "select", 
iaag: icxtcp:00000456:  conn->remoteContentId, 
iaag: icxtcp:00000457:  conn->remoteHostAndPort))); 
iaag: icxtcp:00000464:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00000465:  errmsg("Interconnect error reading an incoming packet."), 
iaag: icxtcp:00000466:  errdetail("%m%s from seg%d at %s", 
iaag: icxtcp:00000467:  "read", 
iaag: icxtcp:00000468:  conn->remoteContentId, 
iaag: icxtcp:00000469:  conn->remoteHostAndPort))); 
iaag: icxtcp:00000478:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00000479:  errmsg("Interconnect error: connection closed prematurely."), 
iaag: icxtcp:00000480:  errdetail("from Remote Connection: contentId=%d at %s", 
iaag: icxtcp:00000481:  conn->remoteContentId, conn->remoteHostAndPort))); 
iaag: icxtcp:00000667:  ereport(ERROR, 
iaag: icxtcp:00000668:  (errmsg("could not translate host addr \"%s\", port \"%d\" to address: %s", 
iaag: icxtcp:00000669:  cdbProc->listenerAddr, cdbProc->listenerPort, gai_strerror(ret)))); 
iaag: icxtcp:00000680:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00000681:  errmsg("Interconnect error setting up outgoing " 
iaag: icxtcp:00000682:  "connection."), 
iaag: icxtcp:00000683:  errdetail("%m%s", "socket"))); 
iaag: icxtcp:00000688:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00000689:  errmsg("Interconnect error setting up outgoing " 
iaag: icxtcp:00000690:  "connection."), 
iaag: icxtcp:00000691:  errdetail("%m%s", "fcntl(O_NONBLOCK)"))); 
iaag: icxtcp:00000698:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00000699:  errmsg("Interconnect error setting up outgoing " 
iaag: icxtcp:00000700:  "connection."), 
iaag: icxtcp:00000701:  errdetail("%m %s", "setsockopt(SO_REUSEADDR)"))); 
iaag: icxtcp:00000756:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00000757:  errmsg("Interconnect error setting up outgoing " 
iaag: icxtcp:00000758:  "connection."), 
iaag: icxtcp:00000759:  errdetail("Could not bind to local addr %s. %m", 
iaag: icxtcp:00000760:  debugmsg))); 
iaag: icxtcp:00000833:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00000834:  errmsg("Interconnect could not connect to seg%d %s", 
iaag: icxtcp:00000835:  conn->remoteContentId, 
iaag: icxtcp:00000836:  conn->remoteHostAndPort), 
iaag: icxtcp:00000837:  errdetail("%m%s sockfd=%d", 
iaag: icxtcp:00000838:  "getsockopt(SO_ERROR)", 
iaag: icxtcp:00000839:  conn->sockfd))); 
iaag: icxtcp:00000905:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00000906:  errmsg("Interconnect error after making connection."), 
iaag: icxtcp:00000907:  errdetail("%m%s sockfd=%d remote=%s", 
iaag: icxtcp:00000908:  "getsockname", 
iaag: icxtcp:00000909:  conn->sockfd, 
iaag: icxtcp:00000910:  conn->remoteHostAndPort))); 
iaag: icxtcp:00000959:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00000960:  errmsg("Interconnect error writing registration " 
iaag: icxtcp:00000961:  "message to seg%d at %s", 
iaag: icxtcp:00000962:  conn->remoteContentId, 
iaag: icxtcp:00000963:  conn->remoteHostAndPort), 
iaag: icxtcp:00000964:  errdetail("%m%s pid=%d sockfd=%d local=%s", 
iaag: icxtcp:00000965:  "write", 
iaag: icxtcp:00000966:  conn->cdbProc->pid, 
iaag: icxtcp:00000967:  conn->sockfd, 
iaag: icxtcp:00000968:  conn->localHostAndPort))); 
iaag: icxtcp:00001038:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00001039:  errmsg("Interconnect error reading register message " 
iaag: icxtcp:00001040:  "from %s", conn->remoteHostAndPort), 
iaag: icxtcp:00001041:  errdetail("%m%s sockfd=%d local=%s", 
iaag: icxtcp:00001042:  "read", 
iaag: icxtcp:00001043:  conn->sockfd, 
iaag: icxtcp:00001044:  conn->localHostAndPort))); 
iaag: icxtcp:00001065:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00001066:  errmsg("Interconnect error reading register message " 
iaag: icxtcp:00001067:  "from %s: format not recognized", 
iaag: icxtcp:00001068:  conn->remoteHostAndPort), 
iaag: icxtcp:00001069:  errdetail("msgBytes=%d expected=%d sockfd=%d local=%s", 
iaag: icxtcp:00001070:  msg.msgBytes, (int)sizeof(*regMsg), 
iaag: icxtcp:00001071:  conn->sockfd, conn->localHostAndPort))); 
iaag: icxtcp:00001102:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00001103:  errmsg("Interconnect error: Invalid registration " 
iaag: icxtcp:00001104:  "message received from %s.", 
iaag: icxtcp:00001105:  conn->remoteHostAndPort), 
iaag: icxtcp:00001106:  errdetail("sendSlice=%d recvSlice=%d srcContentId=%d " 
iaag: icxtcp:00001107:  "srcPid=%d srcListenerPort=%d " 
iaag: icxtcp:00001108:  "srcSessionId=%d srcCommandCount=%d motnode=%d", 
iaag: icxtcp:00001109:  msg.sendSliceIndex, msg.recvSliceIndex, 
iaag: icxtcp:00001110:  msg.srcContentId, msg.srcPid, 
iaag: icxtcp:00001111:  msg.srcListenerPort, msg.srcSessionId, 
iaag: icxtcp:00001112:  msg.srcCommandCount, msg.sendSliceIndex))); 
iaag: icxtcp:00001136:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00001137:  errmsg("Interconnect error: Invalid registration " 
iaag: icxtcp:00001138:  "message received from %s.", 
iaag: icxtcp:00001139:  conn->remoteHostAndPort), 
iaag: icxtcp:00001140:  errdetail("sendSlice=%d srcContentId=%d " 
iaag: icxtcp:00001141:  "srcPid=%d srcListenerPort=%d", 
iaag: icxtcp:00001142:  msg.sendSliceIndex, msg.srcContentId, 
iaag: icxtcp:00001143:  msg.srcPid, msg.srcListenerPort))); 
iaag: icxtcp:00001155:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00001156:  errmsg("Interconnect error: Duplicate registration " 
iaag: icxtcp:00001157:  "message received from %s.", 
iaag: icxtcp:00001158:  conn->remoteHostAndPort), 
iaag: icxtcp:00001159:  errdetail("Already accepted registration from %s for " 
iaag: icxtcp:00001160:  "sendSlice=%d srcContentId=%d " 
iaag: icxtcp:00001161:  "srcPid=%d srcListenerPort=%d", 
iaag: icxtcp:00001162:  newConn->remoteHostAndPort, 
iaag: icxtcp:00001163:  msg.sendSliceIndex, msg.srcContentId, 
iaag: icxtcp:00001164:  msg.srcPid, msg.srcListenerPort))); 
iaag: icxtcp:00001272:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00001273:  errmsg("Interconnect error on listener port %d", 
iaag: icxtcp:00001274:  Gp_listener_port), 
iaag: icxtcp:00001275:  errdetail("%m%s sockfd=%d", 
iaag: icxtcp:00001276:  "accept", 
iaag: icxtcp:00001277:  TCP_listenerFd))); 
iaag: icxtcp:00001284:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00001285:  errmsg("Interconnect error on listener port %d", 
iaag: icxtcp:00001286:  Gp_listener_port), 
iaag: icxtcp:00001287:  errdetail("%m%s sockfd=%d", 
iaag: icxtcp:00001288:  "accept", 
iaag: icxtcp:00001289:  TCP_listenerFd))); 
iaag: icxtcp:00001323:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00001324:  errmsg("Interconnect error after accepting connection."), 
iaag: icxtcp:00001325:  errdetail("%m%s sockfd=%d remote=%s", 
iaag: icxtcp:00001326:  "getsockname", 
iaag: icxtcp:00001327:  newsockfd, 
iaag: icxtcp:00001328:  conn->remoteHostAndPort))); 
iaag: icxtcp:00001336:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00001337:  errmsg("Interconnect error after accepting connection."), 
iaag: icxtcp:00001338:  errdetail("%m%s sockfd=%d remote=%s local=%s", 
iaag: icxtcp:00001339:  "fcntl(O_NONBLOCK)", 
iaag: icxtcp:00001340:  newsockfd, 
iaag: icxtcp:00001341:  conn->remoteHostAndPort, 
iaag: icxtcp:00001342:  conn->localHostAndPort))); 
iaag: icxtcp:00001376:  elog(FATAL, "SetupTCPInterconnect: already initialized."); 
iaag: icxtcp:00001380:  elog(FATAL, "SetupTCPInterconnect: no slice table ?"); 
iaag: icxtcp:00001486:  elog(FATAL, "SetupTCPInterconnect: bad listener"); 
iaag: icxtcp:00001500:  elog(FATAL, "SetupTCPInterconnect: incomplete connection bad state or bad fd"); 
iaag: icxtcp:00001569:  elog(FATAL, "SetupTCPInterconnect: bad fd, mcsConnecting"); 
iaag: icxtcp:00001579:  elog(FATAL, "SetupTCPInterconnect: bad fd, mcsSendRegMsg"); 
iaag: icxtcp:00001588:  elog(FATAL, "SetupTCPInterconnect: bad connection state"); 
iaag: icxtcp:00001608:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00001609:  errmsg("Interconnect timeout: Unable to " 
iaag: icxtcp:00001610:  "complete setup of all connections " 
iaag: icxtcp:00001611:  "within time limit."), 
iaag: icxtcp:00001612:  errdetail("Completed %d of %d incoming and " 
iaag: icxtcp:00001613:  "%d of %d outgoing connections. " 
iaag: icxtcp:00001614:  "gp_interconnect_setup_timeout = %d " 
iaag: icxtcp:00001615:  "seconds.", 
iaag: icxtcp:00001616:  incoming_count, expectedTotalIncoming, 
iaag: icxtcp:00001617:  outgoing_count, expectedTotalOutgoing, 
iaag: icxtcp:00001618:  interconnect_setup_timeout) 
iaag: icxtcp:00001619:  )); 
iaag: icxtcp:00001641:  elog(FATAL, "SetupInterconnect: invalid outgoing count"); 
iaag: icxtcp:00001733:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00001734:  errmsg("Interconnect error: %m%s", "select"))); 
iaag: icxtcp:00001833:  elog(FATAL, "SetupInterconnect: bad outgoing state"); 
iaag: icxtcp:00001857:  elog(FATAL, "SetupInterconnect: extra select events."); 
iaag: icxtcp:00002619:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00002620:  errmsg("Interconnect error receiving an incoming packet."), 
iaag: icxtcp:00002621:  errdetail("%m%s", "select"))); 
iaag: icxtcp:00002671:  elog(FATAL, "RecvTupleChunkFromAnyTCP: didn't receive, and didn't get cancelled"); 
iaag: icxtcp:00002688:  elog(FATAL, "SendEosTCP: missing interconnect context."); 
iaag: icxtcp:00002692:  elog(FATAL, "SendEosTCP: context and teardown inactive."); 
iaag: icxtcp:00002816:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00002817:  errmsg("Interconnect error writing an outgoing packet: %m"), 
iaag: icxtcp:00002818:  errdetail("error during select() call (error:%d).\n" 
iaag: icxtcp:00002819:  "For Remote Connection: contentId=%d at %s", 
iaag: icxtcp:00002820:  errno, conn->remoteContentId, 
iaag: icxtcp:00002821:  conn->remoteHostAndPort))); 
iaag: icxtcp:00002853:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxtcp:00002854:  errmsg("Interconnect error writing an outgoing packet"), 
iaag: icxtcp:00002855:  errdetail("error during send() call (error:%d).\n" 
iaag: icxtcp:00002856:  "For Remote Connection: contentId=%d at %s", 
iaag: icxtcp:00002857:  errno, conn->remoteContentId, 
iaag: icxtcp:00002858:  conn->remoteHostAndPort))); 
aaaaa GP_IGNORE: iaag: icxudp - ./backend/cdb/motion/ic_udp.c
iaag: icxudp:00001144:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00001145:  errmsg("Interconnect encountered an error"), 
iaag: icxudp:00001146:  errdetail("%m%s", "in receive background thread,"))); 
iaag: icxudp:00001233:  elog(ERROR, "getaddrinfo says %s", gai_strerror(s)); 
iaag: icxudp:00001344:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00001345:  errmsg("Interconnect Error: Could not set up udp listener socket."), 
iaag: icxudp:00001346:  errdetail("%m%s", fun))); 
iaag: icxudp:00001397:  ereport(FATAL, (errcode(ERRCODE_OUT_OF_MEMORY), 
iaag: icxudp:00001398:  errmsg("failed to initialize connection htab for startup cache"))); 
iaag: icxudp:00001449:  ereport(FATAL, (errcode(ERRCODE_INTERNAL_ERROR), 
iaag: icxudp:00001450:  errmsg("InitMotionLayerIPC: failed to create thread"), 
iaag: icxudp:00001451:  errdetail("pthread_create() failed with err %d", pthread_err))); 
iaag: icxudp:00001966:  elog(FATAL, "putRxBufferAndSendAck: buffer is NULL"); 
iaag: icxudp:00002024:  elog(FATAL, "Interconnect error: tried to release a NULL buffer"); 
iaag: icxudp:00002204:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00002205:  errmsg("Interconnect Error: Could not set up udp listener socket."), 
iaag: icxudp:00002206:  errdetail("%m%s", fun))); 
iaag: icxudp:00002824:  elog(ERROR, "Interconnect error: getting signal from socket buffer failed."); 
iaag: icxudp:00002869:  elog(ERROR, "Interconnect error: signal polling failed."); 
iaag: icxudp:00003029:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00003030:  errmsg("Interconnect Error: Could not parse remote listener" 
iaag: icxudp:00003031:  "address: '%s' port '%d': %s", listenerAddr,listenerPort,gai_strerror(ret)), 
iaag: icxudp:00003032:  errdetail("getaddrinfo() unable to parse address: '%s'", 
iaag: icxudp:00003033:  listenerAddr))); 
iaag: icxudp:00003091:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00003092:  errmsg("Interconnect Error: Could not get port from socket."), 
iaag: icxudp:00003093:  errdetail("%m"))); 
iaag: icxudp:00003144:  elog(ERROR, "Trying to use an IPv4 (AF_INET) socket to send to an IPv6 address"); 
iaag: icxudp:00003209:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00003210:  errmsg(CDB_MOTION_LOST_CONTACT_STRING))); 
iaag: icxudp:00003514:  elog(FATAL, "SetupUDPInterconnect: already initialized."); 
iaag: icxudp:00003518:  elog(FATAL, "SetupUDPInterconnect: no slice table ?"); 
iaag: icxudp:00003829:  elog(FATAL, "freelist NULL: count %d max %d buf %p", rx_buffer_pool.count, rx_buffer_pool.maxCount, rx_buffer_pool.freeList); 
iaag: icxudp:00004070:  elog(FATAL, "RecvTupleChunkFromAnyUDP: missing context"); 
iaag: icxudp:00004074:  elog(FATAL, "RecvTupleChunkFromAnyUDP: interconnect context not active!"); 
iaag: icxudp:00004179:  elog(FATAL, "RecvTupleChunkFromUDP: missing context"); 
iaag: icxudp:00004183:  elog(FATAL, "RecvTupleChunkFromUDP: interconnect context not active!"); 
iaag: icxudp:00004467:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00004468:  errmsg("Interconnect error waiting for peer ack"), 
iaag: icxudp:00004469:  errdetail("During recvfrom() call.\n"))); 
iaag: icxudp:00004730:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00004731:  errmsg("Interconnect error writing an outgoing packet: %m"), 
iaag: icxudp:00004732:  errdetail("error during sendto() call (error:%d).\n" 
iaag: icxudp:00004733:  "For Remote Connection: contentId=%d at %s", 
iaag: icxudp:00004734:  errno, conn->remoteContentId, 
iaag: icxudp:00004735:  conn->remoteHostAndPort))); 
iaag: icxudp:00005185:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00005186:  errmsg("Interconnect encountered a network error, please check your network"), 
iaag: icxudp:00005187:  errdetail("Failed to send packet (seq %d) to %s (pid %d cid %d) after %d retries in %d seconds", buf->pkt->seq, buf->conn->remoteHostAndPort, buf->pkt->dstPid, buf->pkt->dstContentId, buf->nRetry, Gp_interconnect_transmit_timeout))); 
iaag: icxudp:00005299:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00005300:  errmsg("Interconnect encountered a network error, please check your network"), 
iaag: icxudp:00005301:  errdetail("Did not get any response from %s (pid %d cid %d) in %d seconds", conn->remoteHostAndPort, conn->conn_info.dstPid, conn->conn_info.dstContentId, Gp_interconnect_transmit_timeout))); 
iaag: icxudp:00005327:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00005328:  errmsg("Interconnect error waiting for peer ack"), 
iaag: icxudp:00005329:  errdetail("During poll() call.\n"))); 
iaag: icxudp:00005578:  elog(FATAL, "SendEosUDP: missing interconnect context."); 
iaag: icxudp:00005582:  elog(FATAL, "SendEosUDP: context and teardown inactive."); 
iaag: icxudp:00005903:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00005904:  errmsg("Interconnect error segment lost contact with master (recv)"))); 
iaag: icxudp:00005906:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
iaag: icxudp:00005907:  errmsg("Interconnect error master lost contact with client (recv)"))); 
aaaaa GP_IGNORE: taag: tupser - ./backend/cdb/motion/tupser.c
taag: tupser:00000087:  ereport(ERROR, (errcode(ERRCODE_PROTOCOL_VIOLATION), 
taag: tupser:00000088:  errmsg("deserialize data underflow"))); 
taag: tupser:00000166:  elog(ERROR,"Can't serialize transient record types"); 
taag: tupser:00000191:  elog(ERROR, "cache lookup failed for type %u", attrInfo->atttypid); 
taag: tupser:00000195:  ereport(ERROR, 
taag: tupser:00000196:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taag: tupser:00000197:  errmsg("type %s is only a shell", 
taag: tupser:00000198:  format_type_be(attrInfo->atttypid)))); 
taag: tupser:00000205:  ereport(ERROR, 
taag: tupser:00000206:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
taag: tupser:00000207:  errmsg("no output function available for type %s", 
taag: tupser:00000208:  format_type_be(attrInfo->atttypid)))); 
taag: tupser:00000210:  ereport(ERROR, 
taag: tupser:00000211:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
taag: tupser:00000212:  errmsg("no input function available for type %s", 
taag: tupser:00000213:  format_type_be(attrInfo->atttypid)))); 
taag: tupser:00000344:  ereport(FATAL, (errcode(ERRCODE_OUT_OF_MEMORY), 
taag: tupser:00000345:  errmsg("Could not allocate space for new chunk. %d of %d bytes in %d chunks", tcList->serialized_data_length, datalen, tcList->num_chunks))); 
taag: tupser:00000397:  ereport(FATAL, (errcode(ERRCODE_OUT_OF_MEMORY), 
taag: tupser:00000398:  errmsg("Could not allocate space for first chunk item in new chunk list."))); 
taag: tupser:00000412:  ereport(FATAL, (errcode(ERRCODE_OUT_OF_MEMORY), 
taag: tupser:00000413:  errmsg("Could not allocate space for first chunk item in new chunk list."))); 
taag: tupser:00000627:  ereport(ERROR, 
taag: tupser:00000628:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
taag: tupser:00000629:  errmsg("Conversion function takes %d args",attrInfo->recv_finfo.fn_nargs))); 
taag: tupser:00001005:  ereport(ERROR, 
taag: tupser:00001006:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
taag: tupser:00001007:  errmsg("Conversion function takes %d args",attrInfo->recv_finfo.fn_nargs))); 
taag: tupser:00001013:  ereport(ERROR, 
taag: tupser:00001014:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
taag: tupser:00001015:  errmsg("incorrect binary data format"))); 
taag: tupser:00001088:  ereport(ERROR, (errcode(ERRCODE_PROTOCOL_VIOLATION), 
taag: tupser:00001089:  errmsg("Single chunk's type must be TC_WHOLE."))); 
taag: tupser:00001097:  ereport(ERROR, (errcode(ERRCODE_PROTOCOL_VIOLATION), 
taag: tupser:00001098:  errmsg("First chunk of collection must have type" 
taag: tupser:00001099:  " TC_PARTIAL_START."))); 
taag: tupser:00001110:  ereport(ERROR, (errcode(ERRCODE_PROTOCOL_VIOLATION), 
taag: tupser:00001111:  errmsg("Last chunk of collection must have type" 
taag: tupser:00001112:  " TC_PARTIAL_END."))); 
taag: tupser:00001120:  ereport(ERROR, (errcode(ERRCODE_PROTOCOL_VIOLATION), 
taag: tupser:00001121:  errmsg("Last chunk of collection must have type" 
taag: tupser:00001122:  " TC_PARTIAL_MID."))); 
taag: tupser:00001182:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
taag: tupser:00001183:  errmsg("Interconnect error: cannot convert chunks to a heap tuple."), 
taag: tupser:00001184:  errdetail("tuple len %d < nullslen %d + headersize (%d)", 
taag: tupser:00001185:  tshp->tuplen, nullslen, (int)sizeof(TupSerHeader)))); 
aaaaa GP_IGNORE: aabd: aggregatecmds - ./backend/commands/aggregatecmds.c
aabd: aggregatecmds:00000115:  ereport(WARNING, 
aabd: aggregatecmds:00000116:  (errcode(ERRCODE_SYNTAX_ERROR), 
aabd: aggregatecmds:00000117:  errmsg("aggregate attribute \"%s\" not recognized", 
aabd: aggregatecmds:00000118:  defel->defname))); 
aabd: aggregatecmds:00000125:  ereport(ERROR, 
aabd: aggregatecmds:00000126:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
aabd: aggregatecmds:00000127:  errmsg("aggregate stype must be specified"))); 
aabd: aggregatecmds:00000129:  ereport(ERROR, 
aabd: aggregatecmds:00000130:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
aabd: aggregatecmds:00000131:  errmsg("aggregate sfunc must be specified"))); 
aabd: aggregatecmds:00000137:  ereport(ERROR, 
aabd: aggregatecmds:00000138:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
aabd: aggregatecmds:00000139:  errmsg("ordered aggregate prefunc is not supported"))); 
aabd: aggregatecmds:00000154:  ereport(ERROR, 
aabd: aggregatecmds:00000155:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
aabd: aggregatecmds:00000156:  errmsg("aggregate input type must be specified"), 
aabd: aggregatecmds:00000157:  errOmitLocation(true))); 
aabd: aggregatecmds:00000180:  ereport(ERROR, 
aabd: aggregatecmds:00000181:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
aabd: aggregatecmds:00000182:  errmsg("basetype is redundant with aggregate input type specification"))); 
aabd: aggregatecmds:00000207:  ereport(ERROR, 
aabd: aggregatecmds:00000208:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
aabd: aggregatecmds:00000209:  errmsg("aggregate transition data type cannot be %s", 
aabd: aggregatecmds:00000210:  format_type_be(transTypeId)))); 
aabd: aggregatecmds:00000263:  ereport(NOTICE, 
aabd: aggregatecmds:00000264:  (errmsg("aggregate %s(%s) does not exist, skipping", 
aabd: aggregatecmds:00000265:  NameListToString(aggName), 
aabd: aggregatecmds:00000266:  TypeNameListToString(aggArgs)))); 
aabd: aggregatecmds:00000276:  elog(ERROR, "cache lookup failed for function %u", procOid); 
aabd: aggregatecmds:00000330:  elog(ERROR, "cache lookup failed for function %u", procOid); 
aabd: aggregatecmds:00000346:  ereport(ERROR, 
aabd: aggregatecmds:00000347:  (errcode(ERRCODE_DUPLICATE_FUNCTION), 
aabd: aggregatecmds:00000348:  errmsg("function %s already exists in schema \"%s\"", 
aabd: aggregatecmds:00000349:  funcname_signature_string(newname, 
aabd: aggregatecmds:00000350:  procForm->pronargs, 
aabd: aggregatecmds:00000351:  procForm->proargtypes.values), 
aabd: aggregatecmds:00000352:  get_namespace_name(namespaceOid)))); 
aaaaa GP_IGNORE: aaaf: alter - ./backend/commands/alter.c
aaaf: alter:00000054:  ereport(ERROR, 
aaaf: alter:00000055:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename aggregate statement yet") )); 
aaaf: alter:00000063:  ereport(ERROR, 
aaaf: alter:00000064:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename conversion statement yet") )); 
aaaf: alter:00000072:  ereport(ERROR, 
aaaf: alter:00000073:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename database statement yet") )); 
aaaf: alter:00000081:  ereport(ERROR, 
aaaf: alter:00000082:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename protocol statement yet") )); 
aaaf: alter:00000090:  ereport(ERROR, 
aaaf: alter:00000091:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename function statement yet") )); 
aaaf: alter:00000099:  ereport(ERROR, 
aaaf: alter:00000100:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename language statement yet") )); 
aaaf: alter:00000108:  ereport(ERROR, 
aaaf: alter:00000109:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename operator class statement yet") )); 
aaaf: alter:00000121:  ereport(ERROR, 
aaaf: alter:00000122:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename schema statement yet") )); 
aaaf: alter:00000130:  ereport(ERROR, 
aaaf: alter:00000131:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename tablespace statement yet") )); 
aaaf: alter:00000139:  ereport(ERROR, 
aaaf: alter:00000140:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename filespace statement yet") )); 
aaaf: alter:00000148:  ereport(ERROR, 
aaaf: alter:00000149:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename filesystem statement yet") )); 
aaaf: alter:00000157:  ereport(ERROR, 
aaaf: alter:00000158:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename index statement yet") )); 
aaaf: alter:00000187:  ereport(ERROR, 
aaaf: alter:00000188:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support rename trigger statement yet") )); 
aaaf: alter:00000219:  elog(ERROR, "unrecognized rename stmt type: %d", 
aaaf: alter:00000220:  (int) stmt->renameType); 
aaaf: alter:00000234:  ereport(ERROR, 
aaaf: alter:00000235:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter aggregate schema statement yet") )); 
aaaf: alter:00000241:  ereport(ERROR, 
aaaf: alter:00000242:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter function schema statement yet") )); 
aaaf: alter:00000248:  ereport(ERROR, 
aaaf: alter:00000249:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter sequence schema statement yet") )); 
aaaf: alter:00000256:  ereport(ERROR, 
aaaf: alter:00000257:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter type schema statement yet") )); 
aaaf: alter:00000259:  ereport(ERROR, 
aaaf: alter:00000260:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter domain schema statement yet") )); 
aaaf: alter:00000265:  elog(ERROR, "unrecognized AlterObjectSchemaStmt type: %d", 
aaaf: alter:00000266:  (int) stmt->objectType); 
aaaf: alter:00000283:  ereport(ERROR, 
aaaf: alter:00000284:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter aggregate owner statement yet") )); 
aaaf: alter:00000290:  ereport(ERROR, 
aaaf: alter:00000291:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter conversion owner statement yet") )); 
aaaf: alter:00000297:  ereport(ERROR, 
aaaf: alter:00000298:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter database owner statement yet") )); 
aaaf: alter:00000304:  ereport(ERROR, 
aaaf: alter:00000305:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter function owner statement yet") )); 
aaaf: alter:00000311:  ereport(ERROR, 
aaaf: alter:00000312:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter operator owner statement yet") )); 
aaaf: alter:00000322:  ereport(ERROR, 
aaaf: alter:00000323:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter operator class owner statement yet") )); 
aaaf: alter:00000329:  ereport(ERROR, 
aaaf: alter:00000330:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter schema owner statement yet") )); 
aaaf: alter:00000336:  ereport(ERROR, 
aaaf: alter:00000337:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter tablespace owner statement yet") )); 
aaaf: alter:00000343:  ereport(ERROR, 
aaaf: alter:00000344:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter filespace owner statement yet") )); 
aaaf: alter:00000351:  ereport(ERROR, 
aaaf: alter:00000352:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter type owner statement yet") )); 
aaaf: alter:00000358:  ereport(ERROR, 
aaaf: alter:00000359:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter foreign data wrapper owner statement yet") )); 
aaaf: alter:00000366:  ereport(ERROR, 
aaaf: alter:00000367:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter foreign server owner statement yet") )); 
aaaf: alter:00000373:  ereport(ERROR, 
aaaf: alter:00000374:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter external protocol owner statement yet") )); 
aaaf: alter:00000379:  elog(ERROR, "unrecognized AlterOwnerStmt type: %d", 
aaaf: alter:00000380:  (int) stmt->objectType); 
aaaaa GP_IGNORE: aaah: analyze - ./backend/commands/analyze.c
aaah: analyze:00000471:  ereport(WARNING, 
aaah: analyze:00000472:  (errmsg("skipping \"%s\" --- cannot analyze indexes, views, external tables or special system tables", 
aaah: analyze:00000473:  RelationGetRelationName(candidateRelation)))); 
aaah: analyze:00000485:  ereport(WARNING, 
aaah: analyze:00000486:  (errmsg("skipping \"%s\" --- analyze for PXF tables is turned off by 'pxf_enable_stat_collection'", 
aaah: analyze:00000487:  RelationGetRelationName(candidateRelation)))); 
aaah: analyze:00000550:  ereport(WARNING, 
aaah: analyze:00000551:  (errmsg("Skipping \"%s\" --- only table or database owner can analyze it", 
aaah: analyze:00000552:  RelationGetRelationName(candidateRelation)))); 
aaah: analyze:00000630:  ereport(ERROR, 
aaah: analyze:00000631:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
aaah: analyze:00000632:  errmsg("Attribute %s has been dropped in relation %s.", 
aaah: analyze:00000633:  attributeName, get_rel_name(relationOid)))); 
aaah: analyze:00000645:  ereport(ERROR, 
aaah: analyze:00000646:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
aaah: analyze:00000647:  errmsg("Relation %s does not have an attribute named %s.", 
aaah: analyze:00000648:  get_rel_name(relationOid),attributeName))); 
aaah: analyze:00000789:  ereport(WARNING, 
aaah: analyze:00000790:  (errmsg("skipping \"%s\" --- error returned: %s", 
aaah: analyze:00000791:  RelationGetRelationName(relation), 
aaah: analyze:00000792:  err_msg.data))); 
aaah: analyze:00001068:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
aaah: analyze:00001069:  errmsg("Unable to connect to execute internal query."))); 
aaah: analyze:00001247:  elog(ERROR, "ANALYZE unable to generate accurate statistics on table %s.%s. Try lowering gp_analyze_relative_error", 
aaah: analyze:00001248:  quote_identifier(schemaName), 
aaah: analyze:00001249:  quote_identifier(tableName)); 
aaaaa GP_IGNORE: aaaf: async - ./backend/commands/async.c
aaaf: async:00000342:  ereport(ERROR, 
aaaf: async:00000343:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaaf: async:00000344:  errmsg("cannot PREPARE a transaction that has executed LISTEN or UNLISTEN"))); 
aaaaa GP_IGNORE: caah: cluster - ./backend/commands/cluster.c
caah: cluster:00000121:  ereport(ERROR, 
caah: cluster:00000122:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caah: cluster:00000123:  errmsg("cannot cluster temporary tables of other sessions"))); 
caah: cluster:00000147:  elog(ERROR, "cache lookup failed for index %u", indexOid); 
caah: cluster:00000160:  ereport(ERROR, 
caah: cluster:00000161:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: cluster:00000162:  errmsg("there is no previously clustered index for table \"%s\"", 
caah: cluster:00000163:  stmt->relation->relname), 
caah: cluster:00000164:  errOmitLocation(true))); 
caah: cluster:00000175:  ereport(ERROR, 
caah: cluster:00000176:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: cluster:00000177:  errmsg("index \"%s\" for table \"%s\" does not exist", 
caah: cluster:00000178:  stmt->indexname, stmt->relation->relname))); 
caah: cluster:00000437:  ereport(ERROR, 
caah: cluster:00000438:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caah: cluster:00000439:  errmsg("\"%s\" is not an index for table \"%s\"", 
caah: cluster:00000440:  RelationGetRelationName(OldIndex), 
caah: cluster:00000441:  RelationGetRelationName(OldHeap)))); 
caah: cluster:00000450:  ereport(ERROR, 
caah: cluster:00000451:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caah: cluster:00000452:  errmsg("cannot cluster on partial index \"%s\"", 
caah: cluster:00000453:  RelationGetRelationName(OldIndex)))); 
caah: cluster:00000456:  ereport(ERROR, 
caah: cluster:00000457:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caah: cluster:00000458:  errmsg("cannot cluster on index \"%s\" because access method does not support clustering", 
caah: cluster:00000459:  RelationGetRelationName(OldIndex)))); 
caah: cluster:00000476:  ereport(ERROR, 
caah: cluster:00000477:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caah: cluster:00000478:  errmsg("cannot cluster on index \"%s\" because access method does not handle null values", 
caah: cluster:00000479:  RelationGetRelationName(OldIndex)), 
caah: cluster:00000480:  recheck 
caah: cluster:00000481:  ? errhint("You may be able to work around this by marking column \"%s\" NOT NULL, or use ALTER TABLE ... SET WITHOUT CLUSTER to remove the cluster specification from the table.", 
caah: cluster:00000482:  NameStr(OldHeap->rd_att->attrs[colno - 1]->attname)) 
caah: cluster:00000483:  : errhint("You may be able to work around this by marking column \"%s\" NOT NULL.", 
caah: cluster:00000484:  NameStr(OldHeap->rd_att->attrs[colno - 1]->attname)))); 
caah: cluster:00000492:  ereport(ERROR, 
caah: cluster:00000493:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caah: cluster:00000494:  errmsg("cannot cluster on expressional index \"%s\" because its index access method does not handle null values", 
caah: cluster:00000495:  RelationGetRelationName(OldIndex)))); 
caah: cluster:00000503:  ereport(ERROR, 
caah: cluster:00000504:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caah: cluster:00000505:  errmsg("cannot cluster on invalid index \"%s\"", 
caah: cluster:00000506:  RelationGetRelationName(OldIndex)))); 
caah: cluster:00000516:  ereport(ERROR, 
caah: cluster:00000517:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caah: cluster:00000518:  errmsg("\"%s\" is a system catalog", 
caah: cluster:00000519:  RelationGetRelationName(OldHeap)))); 
caah: cluster:00000526:  ereport(ERROR, 
caah: cluster:00000527:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caah: cluster:00000528:  errmsg("cannot cluster temporary tables of other sessions"))); 
caah: cluster:00000568:  elog(ERROR, "cache lookup failed for index %u", indexOid); 
caah: cluster:00000601:  elog(ERROR, "cache lookup failed for index %u", thisIndexOid); 
caah: cluster:00000784:  elog(ERROR, "cache lookup failed for relation %u", OIDOldHeap); 
caah: cluster:00000968:  elog(ERROR, "expected one dependency record for %s table, found %ld", 
caah: cluster:00000969:  tabletype, count); 
caah: cluster:00000976:  elog(ERROR, "expected one dependency record for %s table, found %ld", 
caah: cluster:00000977:  tabletype, count); 
caah: cluster:00001049:  elog(ERROR, "cache lookup failed for relation %u", r1); 
caah: cluster:00001055:  elog(ERROR, "cache lookup failed for relation %u", r1); 
caah: cluster:00001068:  elog(ERROR, "cache lookup failed for relation %u", r2); 
caah: cluster:00001379:  elog(ERROR, "segment recieved incomplete oidInfo from master"); 
caah: cluster:00001387:  elog(ERROR, "populate_oidInfo from unexpected dispatch mode"); 
aaaaa GP_IGNORE: caah: comment - ./backend/commands/comment.c
caah: comment:00000163:  elog(ERROR, "unrecognized object type: %d", 
caah: comment:00000164:  (int) stmt->objtype); 
caah: comment:00000450:  ereport(ERROR, 
caah: comment:00000451:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caah: comment:00000452:  errmsg("\"%s\" is not an index", 
caah: comment:00000453:  RelationGetRelationName(relation)))); 
caah: comment:00000457:  ereport(ERROR, 
caah: comment:00000458:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caah: comment:00000459:  errmsg("\"%s\" is not a sequence", 
caah: comment:00000460:  RelationGetRelationName(relation)))); 
caah: comment:00000464:  ereport(ERROR, 
caah: comment:00000465:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caah: comment:00000466:  errmsg("\"%s\" is not a table", 
caah: comment:00000467:  RelationGetRelationName(relation)))); 
caah: comment:00000471:  ereport(ERROR, 
caah: comment:00000472:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caah: comment:00000473:  errmsg("\"%s\" is not a view", 
caah: comment:00000474:  RelationGetRelationName(relation)))); 
caah: comment:00000509:  elog(ERROR, "must specify relation and attribute"); 
caah: comment:00000527:  ereport(ERROR, 
caah: comment:00000528:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
caah: comment:00000529:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
caah: comment:00000530:  attrname, RelationGetRelationName(relation)))); 
caah: comment:00000557:  ereport(ERROR, 
caah: comment:00000558:  (errcode(ERRCODE_SYNTAX_ERROR), 
caah: comment:00000559:  errmsg("database name may not be qualified"))); 
caah: comment:00000574:  ereport(WARNING, 
caah: comment:00000575:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
caah: comment:00000576:  errmsg("database \"%s\" does not exist", database))); 
caah: comment:00000605:  ereport(ERROR, 
caah: comment:00000606:  (errcode(ERRCODE_SYNTAX_ERROR), 
caah: comment:00000607:  errmsg("tablespace name may not be qualified"))); 
caah: comment:00000613:  ereport(ERROR, 
caah: comment:00000614:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00000615:  errmsg("tablespace \"%s\" does not exist", tablespace))); 
caah: comment:00000644:  ereport(ERROR, 
caah: comment:00000645:  (errcode(ERRCODE_SYNTAX_ERROR), 
caah: comment:00000646:  errmsg("filespace name may not be qualified"))); 
caah: comment:00000654:  ereport(ERROR, 
caah: comment:00000655:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00000656:  errmsg("filespace \"%s\" does not exist", filespace))); 
caah: comment:00000683:  ereport(ERROR, 
caah: comment:00000684:  (errcode(ERRCODE_SYNTAX_ERROR), 
caah: comment:00000685:  errmsg("role name may not be qualified"))); 
caah: comment:00000692:  ereport(ERROR, 
caah: comment:00000693:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
caah: comment:00000694:  errmsg("must be member of role \"%s\" to comment upon it", role))); 
caah: comment:00000716:  ereport(ERROR, 
caah: comment:00000717:  (errcode(ERRCODE_SYNTAX_ERROR), 
caah: comment:00000718:  errmsg("schema name may not be qualified"))); 
caah: comment:00000728:  ereport(ERROR, 
caah: comment:00000729:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
caah: comment:00000730:  errmsg("schema \"%s\" does not exist", namespace))); 
caah: comment:00000791:  ereport(ERROR, 
caah: comment:00000792:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00000793:  errmsg("rule \"%s\" does not exist", rulename))); 
caah: comment:00000799:  ereport(ERROR, 
caah: comment:00000800:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
caah: comment:00000801:  errmsg("there are multiple rules named \"%s\"", rulename), 
caah: comment:00000802:  errhint("Specify a relation name as well as a rule name."))); 
caah: comment:00000836:  ereport(ERROR, 
caah: comment:00000837:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00000838:  errmsg("rule \"%s\" for relation \"%s\" does not exist", 
caah: comment:00000839:  rulename, RelationGetRelationName(relation)))); 
caah: comment:00000996:  elog(ERROR, "must specify relation and trigger"); 
caah: comment:00001029:  ereport(ERROR, 
caah: comment:00001030:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00001031:  errmsg("trigger \"%s\" for table \"%s\" does not exist", 
caah: comment:00001032:  trigname, RelationGetRelationName(relation)))); 
caah: comment:00001068:  elog(ERROR, "must specify relation and constraint"); 
caah: comment:00001102:  ereport(ERROR, 
caah: comment:00001103:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
caah: comment:00001104:  errmsg("table \"%s\" has multiple constraints named \"%s\"", 
caah: comment:00001105:  RelationGetRelationName(relation), conName))); 
caah: comment:00001114:  ereport(ERROR, 
caah: comment:00001115:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00001116:  errmsg("constraint \"%s\" for table \"%s\" does not exist", 
caah: comment:00001117:  conName, RelationGetRelationName(relation)))); 
caah: comment:00001143:  ereport(ERROR, 
caah: comment:00001144:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00001145:  errmsg("conversion \"%s\" does not exist", 
caah: comment:00001146:  NameListToString(qualname)), 
caah: comment:00001147:  errOmitLocation(true))); 
caah: comment:00001174:  ereport(ERROR, 
caah: comment:00001175:  (errcode(ERRCODE_SYNTAX_ERROR), 
caah: comment:00001176:  errmsg("language name may not be qualified"))); 
caah: comment:00001186:  ereport(ERROR, 
caah: comment:00001187:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
caah: comment:00001188:  errmsg("language \"%s\" does not exist", language))); 
caah: comment:00001192:  ereport(ERROR, 
caah: comment:00001193:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
caah: comment:00001194:  errmsg("must be superuser to comment on procedural language"))); 
caah: comment:00001232:  ereport(ERROR, 
caah: comment:00001233:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00001234:  errmsg("access method \"%s\" does not exist", 
caah: comment:00001235:  amname))); 
caah: comment:00001269:  ereport(ERROR, 
caah: comment:00001270:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00001271:  errmsg("operator class \"%s\" does not exist for access method \"%s\"", 
caah: comment:00001272:  opcname, amname))); 
caah: comment:00001286:  ereport(ERROR, 
caah: comment:00001287:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00001288:  errmsg("operator class \"%s\" does not exist for access method \"%s\"", 
caah: comment:00001289:  NameListToString(qualname), amname))); 
caah: comment:00001335:  elog(ERROR, "unrecognized node type: %d", 
caah: comment:00001336:  (int) nodeTag(node)); 
caah: comment:00001343:  ereport(ERROR, 
caah: comment:00001344:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00001345:  errmsg("large object %u does not exist", loid))); 
caah: comment:00001393:  ereport(ERROR, 
caah: comment:00001394:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00001395:  errmsg("cast from type %s to type %s does not exist", 
caah: comment:00001396:  TypeNameToString(sourcetype), 
caah: comment:00001397:  TypeNameToString(targettype)))); 
caah: comment:00001403:  ereport(ERROR, 
caah: comment:00001404:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
caah: comment:00001405:  errmsg("must be owner of type %s or type %s", 
caah: comment:00001406:  TypeNameToString(sourcetype), 
caah: comment:00001407:  TypeNameToString(targettype)))); 
caah: comment:00001431:  ereport(ERROR, 
caah: comment:00001432:  (errcode(ERRCODE_SYNTAX_ERROR), 
caah: comment:00001433:  errmsg("resource queue name may not be qualified"))); 
caah: comment:00001446:  ereport(ERROR, 
caah: comment:00001447:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
caah: comment:00001448:  errmsg("resource queue \"%s\" does not exist", queueName))); 
caah: comment:00001454:  ereport(ERROR, 
caah: comment:00001455:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
caah: comment:00001456:  errmsg("must be superuser to comment on resource queue"))); 
aaaaa GP_IGNORE: cabe: conversioncmds - ./backend/commands/conversioncmds.c
cabe: conversioncmds:00000069:  ereport(ERROR, 
cabe: conversioncmds:00000070:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabe: conversioncmds:00000071:  errmsg("source encoding \"%s\" does not exist", 
cabe: conversioncmds:00000072:  from_encoding_name))); 
cabe: conversioncmds:00000076:  ereport(ERROR, 
cabe: conversioncmds:00000077:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabe: conversioncmds:00000078:  errmsg("destination encoding \"%s\" does not exist", 
cabe: conversioncmds:00000079:  to_encoding_name))); 
cabe: conversioncmds:00000090:  ereport(ERROR, 
cabe: conversioncmds:00000091:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
cabe: conversioncmds:00000092:  errmsg("encoding conversion function %s must return type \"void\"", 
cabe: conversioncmds:00000093:  NameListToString(func_name)))); 
cabe: conversioncmds:00000139:  ereport(ERROR, 
cabe: conversioncmds:00000140:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabe: conversioncmds:00000141:  errmsg("conversion \"%s\" does not exist", 
cabe: conversioncmds:00000142:  NameListToString(name)))); 
cabe: conversioncmds:00000147:  ereport(NOTICE, 
cabe: conversioncmds:00000148:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabe: conversioncmds:00000149:  errmsg("conversion \"%s\" does not exist, skipping", 
cabe: conversioncmds:00000150:  NameListToString(name)))); 
cabe: conversioncmds:00000188:  ereport(ERROR, 
cabe: conversioncmds:00000189:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabe: conversioncmds:00000190:  errmsg("conversion \"%s\" does not exist", 
cabe: conversioncmds:00000191:  NameListToString(name)))); 
cabe: conversioncmds:00000203:  elog(ERROR, "cache lookup failed for conversion %u", conversionOid); 
cabe: conversioncmds:00000216:  ereport(ERROR, 
cabe: conversioncmds:00000217:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
cabe: conversioncmds:00000218:  errmsg("conversion \"%s\" already exists in schema \"%s\"", 
cabe: conversioncmds:00000219:  newname, get_namespace_name(namespaceOid)))); 
cabe: conversioncmds:00000254:  ereport(ERROR, 
cabe: conversioncmds:00000255:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
cabe: conversioncmds:00000256:  errmsg("conversion \"%s\" does not exist", 
cabe: conversioncmds:00000257:  NameListToString(name)))); 
cabe: conversioncmds:00000305:  elog(ERROR, "cache lookup failed for conversion %u", conversionOid); 
aaaaa GP_IGNORE: caae: copy - ./backend/commands/copy.c
caae: copy:00000309:  ereport(ERROR, \ 
caae: copy:00000310:  (errcode(ERRCODE_T_R_GP_REJECT_LIMIT_REACHED), \ 
caae: copy:00000311:  (errmsg("%s", finalmsg) \ 
caae: copy:00000312:  ),errOmitLocation(true))); \ 
caae: copy:00000313: } 
caae: copy:00000314:  
caae: copy:00000315: /* 
caae: copy:00000316:  * Send copy start/stop messages for frontend copies. These have changed 
caae: copy:00000317:  * in past protocol redesigns. 
caae: copy:00000318:  */ 
caae: copy:00000319: static void 
caae: copy:00000320: SendCopyBegin(CopyState cstate) 
caae: copy:00000321: { 
caae: copy:00000322:  if (PG_PROTOCOL_MAJOR(FrontendProtocol) >= 3) 
caae: copy:00000323:  { 
caae: copy:00000324:  /* new way */ 
caae: copy:00000325:  StringInfoData buf; 
caae: copy:00000476:  ereport(ERROR, 
caae: copy:00000477:  (errcode_for_file_access(), 
caae: copy:00000478:  errmsg("could not write to COPY file: %m"))); 
caae: copy:00000487:  ereport(FATAL, 
caae: copy:00000488:  (errcode(ERRCODE_CONNECTION_FAILURE), 
caae: copy:00000489:  errmsg("connection lost during COPY to stdout"))); 
caae: copy:00000532:  ereport(ERROR, 
caae: copy:00000533:  (errcode_for_file_access(), 
caae: copy:00000534:  errmsg("could not write to COPY file: %m"))); 
caae: copy:00000541:  ereport(FATAL, 
caae: copy:00000542:  (errcode(ERRCODE_CONNECTION_FAILURE), 
caae: copy:00000543:  errmsg("connection lost during COPY to stdout"))); 
caae: copy:00000594:  ereport(ERROR, 
caae: copy:00000595:  (errcode(ERRCODE_CONNECTION_FAILURE), 
caae: copy:00000596:  errmsg("unexpected EOF on client connection"))); 
caae: copy:00000614:  ereport(ERROR, 
caae: copy:00000615:  (errcode(ERRCODE_CONNECTION_FAILURE), 
caae: copy:00000616:  errmsg("unexpected EOF on client connection"))); 
caae: copy:00000618:  ereport(ERROR, 
caae: copy:00000619:  (errcode(ERRCODE_CONNECTION_FAILURE), 
caae: copy:00000620:  errmsg("unexpected EOF on client connection"))); 
caae: copy:00000630:  ereport(ERROR, 
caae: copy:00000631:  (errcode(ERRCODE_QUERY_CANCELED), 
caae: copy:00000632:  errmsg("COPY from stdin failed: %s", 
caae: copy:00000633:  pq_getmsgstring(cstate->fe_msgbuf)))); 
caae: copy:00000646:  ereport(ERROR, 
caae: copy:00000647:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
caae: copy:00000648:  errmsg("unexpected message type 0x%02X during COPY from stdin", 
caae: copy:00000649:  mtype))); 
caae: copy:00000707:  ereport(ERROR, 
caae: copy:00000708:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000709:  errmsg("delimiter must be a single byte character, or \'off\'"))); 
caae: copy:00000715:  ereport(ERROR, 
caae: copy:00000716:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000717:  errmsg("delimiter must be a single ASCII character, or \'off\'"))); 
caae: copy:00000722:  ereport(ERROR, 
caae: copy:00000723:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caae: copy:00000724:  errmsg("delimiter cannot be newline or carriage return"))); 
caae: copy:00000728:  ereport(ERROR, 
caae: copy:00000729:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caae: copy:00000730:  errmsg("null representation cannot use newline or carriage return"))); 
caae: copy:00000733:  ereport(ERROR, 
caae: copy:00000734:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caae: copy:00000735:  errmsg("delimiter cannot be backslash"))); 
caae: copy:00000738:  ereport(ERROR, 
caae: copy:00000739:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000740:  errmsg("delimiter must not appear in the NULL specification"))); 
caae: copy:00000754:  ereport(ERROR, 
caae: copy:00000755:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caae: copy:00000756:  errmsg("delimiter cannot be \"%s\"", delim))); 
caae: copy:00000769:  ereport(ERROR, 
caae: copy:00000770:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000771:  errmsg("Using no delimiter is only supported for external tables"))); 
caae: copy:00000774:  ereport(ERROR, 
caae: copy:00000775:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000776:  errmsg("Using no delimiter is only possible for a single column table"))); 
caae: copy:00000791:  ereport(NOTICE, 
caae: copy:00000792:  (errmsg("HEADER means that each one of the data files " 
caae: copy:00000793:  "has a header row."))); 
caae: copy:00000798:  ereport(ERROR, 
caae: copy:00000799:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
caae: copy:00000800:  errmsg("HEADER is not yet supported for writable external tables"))); 
caae: copy:00000809:  ereport(ERROR, 
caae: copy:00000810:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000811:  errmsg("quote available only in CSV mode"), 
caae: copy:00000812:  errOmitLocation(true))); 
caae: copy:00000815:  ereport(ERROR, 
caae: copy:00000816:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000817:  errmsg("quote must be a single character"), 
caae: copy:00000818:  errOmitLocation(true))); 
caae: copy:00000821:  ereport(ERROR, 
caae: copy:00000822:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000823:  errmsg("CSV quote character must not appear in the NULL specification"))); 
caae: copy:00000826:  ereport(ERROR, 
caae: copy:00000827:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caae: copy:00000828:  errmsg("delimiter and quote must be different"))); 
caae: copy:00000834:  ereport(ERROR, 
caae: copy:00000835:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000836:  errmsg("escape in CSV format must be a single character"), 
caae: copy:00000837:  errOmitLocation(true))); 
caae: copy:00000842:  ereport(ERROR, 
caae: copy:00000843:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caae: copy:00000844:  errmsg("escape representation in text format cannot use newline or carriage return"))); 
caae: copy:00000849:  ereport(ERROR, 
caae: copy:00000850:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000851:  errmsg("escape must be a single character, or [OFF/off] to disable escapes"))); 
caae: copy:00000858:  ereport(ERROR, 
caae: copy:00000859:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000860:  errmsg("force quote available only in CSV mode"))); 
caae: copy:00000862:  ereport(ERROR, 
caae: copy:00000863:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000864:  errmsg("force quote only available for data unloading, not loading"))); 
caae: copy:00000870:  ereport(ERROR, 
caae: copy:00000871:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000872:  errmsg("force not null available only in CSV mode"))); 
caae: copy:00000874:  ereport(ERROR, 
caae: copy:00000875:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000876:  errmsg("force not null only available for data loading, not unloading"))); 
caae: copy:00000879:  ereport(ERROR, 
caae: copy:00000880:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000881:  errmsg("fill missing fields only available for data loading, not unloading"))); 
caae: copy:00000890:  ereport(ERROR, 
caae: copy:00000891:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
caae: copy:00000892:  errmsg("newline currently available for data loading only, not unloading"))); 
caae: copy:00000899:  ereport(ERROR, 
caae: copy:00000900:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00000901:  errmsg("invalid value for NEWLINE (%s)", newline), 
caae: copy:00000902:  errhint("valid options are: 'LF', 'CRLF', 'CR'"))); 
caae: copy:00000968:  ereport(ERROR, 
caae: copy:00000969:  (errcode(ERRCODE_SYNTAX_ERROR), 
caae: copy:00000970:  errmsg("BINARY is not supported"))); 
caae: copy:00000975:  ereport(ERROR, 
caae: copy:00000976:  (errcode(ERRCODE_SYNTAX_ERROR), 
caae: copy:00000977:  errmsg("conflicting or redundant options"))); 
caae: copy:00000983:  ereport(ERROR, 
caae: copy:00000984:  (errcode(ERRCODE_SYNTAX_ERROR), 
caae: copy:00000985:  errmsg("conflicting or redundant options"))); 
caae: copy:00000991:  ereport(ERROR, 
caae: copy:00000992:  (errcode(ERRCODE_SYNTAX_ERROR), 
caae: copy:00000993:  errmsg("conflicting or redundant options"))); 
caae: copy:00001008:  ereport(ERROR, 
caae: copy:00001009:  (errcode(ERRCODE_SYNTAX_ERROR), 
caae: copy:00001010:  errmsg("conflicting or redundant options"))); 
caae: copy:00001016:  ereport(ERROR, 
caae: copy:00001017:  (errcode(ERRCODE_SYNTAX_ERROR), 
caae: copy:00001018:  errmsg("conflicting or redundant options"))); 
caae: copy:00001024:  ereport(ERROR, 
caae: copy:00001025:  (errcode(ERRCODE_SYNTAX_ERROR), 
caae: copy:00001026:  errmsg("conflicting or redundant options"))); 
caae: copy:00001032:  ereport(ERROR, 
caae: copy:00001033:  (errcode(ERRCODE_SYNTAX_ERROR), 
caae: copy:00001034:  errmsg("conflicting or redundant options"))); 
caae: copy:00001040:  ereport(ERROR, 
caae: copy:00001041:  (errcode(ERRCODE_SYNTAX_ERROR), 
caae: copy:00001042:  errmsg("conflicting or redundant options"))); 
caae: copy:00001048:  ereport(ERROR, 
caae: copy:00001049:  (errcode(ERRCODE_SYNTAX_ERROR), 
caae: copy:00001050:  errmsg("conflicting or redundant options"))); 
caae: copy:00001056:  ereport(ERROR, 
caae: copy:00001057:  (errcode(ERRCODE_SYNTAX_ERROR), 
caae: copy:00001058:  errmsg("conflicting or redundant options"))); 
caae: copy:00001064:  ereport(ERROR, 
caae: copy:00001065:  (errcode(ERRCODE_SYNTAX_ERROR), 
caae: copy:00001066:  errmsg("conflicting or redundant options"))); 
caae: copy:00001070:  elog(ERROR, "option \"%s\" not recognized", 
caae: copy:00001071:  defel->defname); 
caae: copy:00001107:  ereport(ERROR, 
caae: copy:00001108:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
caae: copy:00001109:  errmsg("COPY single row error handling only available using COPY FROM"))); 
caae: copy:00001119:  ereport(ERROR, 
caae: copy:00001120:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
caae: copy:00001121:  errmsg("KEEP may only be specified with a LOG INTO errortable clause"))); 
caae: copy:00001176:  ereport(ERROR, 
caae: copy:00001177:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
caae: copy:00001178:  errmsg("must be superuser to COPY to or from a file"), 
caae: copy:00001179:  errhint("Anyone can COPY to stdout or from stdin. " 
caae: copy:00001180:  "psql's \\copy command also works for anyone."))); 
caae: copy:00001208:  ereport(ERROR, 
caae: copy:00001209:  (errcode(ERRCODE_INVALID_NAME), 
caae: copy:00001210:  errmsg("relative path not allowed for COPY to file"))); 
caae: copy:00001217:  ereport(ERROR, 
caae: copy:00001218:  (errcode_for_file_access(), 
caae: copy:00001219:  errmsg("could not open file \"%s\" for writing: %m", 
caae: copy:00001220:  cstate->filename), 
caae: copy:00001221:  errOmitLocation(true))); 
caae: copy:00001230:  ereport(ERROR, 
caae: copy:00001231:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caae: copy:00001232:  errmsg("\"%s\" is a directory", cstate->filename))); 
caae: copy:00001263:  ereport(ERROR, 
caae: copy:00001264:  (errcode(ERRCODE_READ_ONLY_SQL_TRANSACTION), 
caae: copy:00001265:  errmsg("transaction is read-only"))); 
caae: copy:00001269:  ereport(ERROR, 
caae: copy:00001270:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
caae: copy:00001271:  errmsg("table \"%s\" does not have OIDs", 
caae: copy:00001272:  RelationGetRelationName(cstate->rel)))); 
caae: copy:00001289:  ereport(ERROR, 
caae: copy:00001290:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00001291:  errmsg("COPY (SELECT) WITH OIDS is not supported"), 
caae: copy:00001292:  errOmitLocation(true))); 
caae: copy:00001295:  ereport(ERROR, 
caae: copy:00001296:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caae: copy:00001297:  errmsg("COPY (SELECT INTO) is not supported"), 
caae: copy:00001298:  errOmitLocation(true))); 
caae: copy:00001326:  elog(ERROR, "unexpected rewrite result"); 
caae: copy:00001382:  ereport(ERROR, 
caae: copy:00001383:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
caae: copy:00001384:  errmsg("FORCE QUOTE column \"%s\" not referenced by COPY", 
caae: copy:00001385:  NameStr(tupDesc->attrs[attnum - 1]->attname)))); 
caae: copy:00001404:  ereport(ERROR, 
caae: copy:00001405:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
caae: copy:00001406:  errmsg("FORCE NOT NULL column \"%s\" not referenced by COPY", 
caae: copy:00001407:  NameStr(tupDesc->attrs[attnum - 1]->attname)))); 
caae: copy:00001464:  ereport(ERROR, 
caae: copy:00001465:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caae: copy:00001466:  errmsg("cannot copy to view \"%s\"", 
caae: copy:00001467:  RelationGetRelationName(cstate->rel)))); 
caae: copy:00001469:  ereport(ERROR, 
caae: copy:00001470:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caae: copy:00001471:  errmsg("cannot copy to sequence \"%s\"", 
caae: copy:00001472:  RelationGetRelationName(cstate->rel)))); 
caae: copy:00001474:  ereport(ERROR, 
caae: copy:00001475:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caae: copy:00001476:  errmsg("cannot copy to non-table relation \"%s\"", 
caae: copy:00001477:  RelationGetRelationName(cstate->rel)))); 
caae: copy:00001481:  ereport(ERROR, 
caae: copy:00001482:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
caae: copy:00001483:  errmsg("COPY single row error handling only available for distributed user tables"))); 
caae: copy:00001499:  ereport(ERROR, 
caae: copy:00001500:  (errcode_for_file_access(), 
caae: copy:00001501:  errmsg("could not open file \"%s\" for reading: %m", 
caae: copy:00001502:  cstate->filename), 
caae: copy:00001503:  errOmitLocation(true))); 
caae: copy:00001512:  ereport(ERROR, 
caae: copy:00001513:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caae: copy:00001514:  errmsg("\"%s\" is a directory", cstate->filename))); 
caae: copy:00001590:  ereport(ERROR, 
caae: copy:00001591:  (errcode_for_file_access(), 
caae: copy:00001592:  errmsg("could not write to file \"%s\": %m", 
caae: copy:00001593:  cstate->filename))); 
caae: copy:00001668:  ereport(ERROR, 
caae: copy:00001669:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caae: copy:00001670:  errmsg("cannot copy from view \"%s\"", 
caae: copy:00001671:  RelationGetRelationName(cstate->rel)), 
caae: copy:00001672:  errhint("Try the COPY (SELECT ...) TO variant."), 
caae: copy:00001673:  errOmitLocation(true))); 
caae: copy:00001675:  ereport(ERROR, 
caae: copy:00001676:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caae: copy:00001677:  errmsg("cannot copy from sequence \"%s\"", 
caae: copy:00001678:  RelationGetRelationName(cstate->rel)), 
caae: copy:00001679:  errOmitLocation(true))); 
caae: copy:00001681:  ereport(ERROR, 
caae: copy:00001682:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caae: copy:00001683:  errmsg("cannot copy from non-table relation \"%s\"", 
caae: copy:00001684:  RelationGetRelationName(cstate->rel)), 
caae: copy:00001685:  errOmitLocation(true))); 
caae: copy:00001689:  ereport(ERROR, 
caae: copy:00001690:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
caae: copy:00001691:  errmsg("cannot copy from external relation \"%s\"", 
caae: copy:00001692:  RelationGetRelationName(cstate->rel)), 
caae: copy:00001693:  errhint("Try the COPY (SELECT ...) TO variant."), 
caae: copy:00001694:  errOmitLocation(true))); 
caae: copy:00001734:  ereport(ERROR, 
caae: copy:00001735:  (errcode_for_file_access(), 
caae: copy:00001736:  errmsg("could not write to file \"%s\": %m", 
caae: copy:00001737:  cstate->filename))); 
caae: copy:00001968:  ereport(ERROR, 
caae: copy:00001969:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00001970:  errmsg("%s", cdbcopy_err.data))); 
caae: copy:00001972:  ereport(ERROR, 
caae: copy:00001973:  (errcode(ERRCODE_IO_ERROR), 
caae: copy:00001974:  errmsg("%s", cdbcopy_err.data))); 
caae: copy:00002185:  elog(ERROR, "OIDS=TRUE is not allowed on tables that use column-oriented storage. Use OIDS=FALSE"); 
caae: copy:00003123:  ereport(ERROR, 
caae: copy:00003124:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00003125:  errmsg("null OID in COPY data."))); 
caae: copy:00003157:  ereport(ERROR, 
caae: copy:00003158:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00003159:  errmsg("invalid OID in COPY data."))); 
caae: copy:00003380:  elog(FATAL, "Bad or undefined policy. (%p)", part_policy); 
caae: copy:00003509:  ereport(ERROR, 
caae: copy:00003510:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00003511:  errmsg("%s", cdbcopy_err.data), 
caae: copy:00003512:  errOmitLocation(true))); 
caae: copy:00003514:  ereport(ERROR, 
caae: copy:00003515:  (errcode(ERRCODE_IO_ERROR), 
caae: copy:00003516:  errmsg("%s", cdbcopy_err.data), 
caae: copy:00003517:  errOmitLocation(true))); 
caae: copy:00003891:  ereport(ERROR, 
caae: copy:00003892:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00003893:  errmsg("null OID in COPY data."))); 
caae: copy:00003921:  ereport(ERROR, 
caae: copy:00003922:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00003923:  errmsg("invalid OID in COPY data."))); 
caae: copy:00004112:  elog(ERROR, "triggers are not supported on tables that use column-oriented storage"); 
caae: copy:00004734:  ereport(ERROR, 
caae: copy:00004735:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00004736:  errmsg("data line too long. likely due to invalid csv data"))); 
caae: copy:00004866:  ereport(ERROR, 
caae: copy:00004867:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00004868:  errmsg("data line too long. likely due to invalid csv data"))); 
caae: copy:00005048:  ereport(ERROR, 
caae: copy:00005049:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00005050:  errmsg("extra data after last expected column"), 
caae: copy:00005051:  errOmitLocation(true))); 
caae: copy:00005098:  ereport(ERROR, 
caae: copy:00005099:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00005100:  errmsg("missing data for column \"%s\"", 
caae: copy:00005101:  NameStr(attr[lfirst_int(lnext(cur)) - 1]->attname)), 
caae: copy:00005102:  errOmitLocation(true))); 
caae: copy:00005105:  ereport(ERROR, 
caae: copy:00005106:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00005107:  errmsg("missing data for column \"%s\", found empty data line", 
caae: copy:00005108:  NameStr(attr[lfirst_int(lnext(cur)) - 1]->attname)), 
caae: copy:00005109:  errOmitLocation(true))); 
caae: copy:00005116:  ereport(ERROR, 
caae: copy:00005117:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00005118:  errmsg("extra data after last expected column"), 
caae: copy:00005119:  errOmitLocation(true))); 
caae: copy:00005417:  ereport(ERROR, 
caae: copy:00005418:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00005419:  errmsg("extra data after last expected column"), 
caae: copy:00005420:  errOmitLocation(true))); 
caae: copy:00005430:  ereport(ERROR, 
caae: copy:00005431:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00005432:  errmsg("unterminated CSV quoted field"), 
caae: copy:00005433:  errOmitLocation(true))); 
caae: copy:00005448:  ereport(ERROR, 
caae: copy:00005449:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00005450:  errmsg("missing data for column \"%s\"", 
caae: copy:00005451:  NameStr(attr[m + 1]->attname)), 
caae: copy:00005452:  errOmitLocation(true))); 
caae: copy:00005455:  ereport(ERROR, 
caae: copy:00005456:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00005457:  errmsg("missing data for column \"%s\", found empty data line", 
caae: copy:00005458:  NameStr(attr[m + 1]->attname)), 
caae: copy:00005459:  errOmitLocation(true))); 
caae: copy:00005490:  ereport(ERROR, 
caae: copy:00005491:  (errcode(ERRCODE_BAD_COPY_FILE_FORMAT), 
caae: copy:00005492:  errmsg("extra data after last expected column"), 
caae: copy:00005493:  errOmitLocation(true))); 
caae: copy:00005976:  ereport(ERROR, 
caae: copy:00005977:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
caae: copy:00005978:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
caae: copy:00005979:  name, RelationGetRelationName(rel)), 
caae: copy:00005980:  errOmitLocation(true))); 
caae: copy:00005982:  ereport(ERROR, 
caae: copy:00005983:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
caae: copy:00005984:  errmsg("column \"%s\" does not exist", 
caae: copy:00005985:  name), 
caae: copy:00005986:  errOmitLocation(true))); 
caae: copy:00005990:  ereport(ERROR, 
caae: copy:00005991:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
caae: copy:00005992:  errmsg("column \"%s\" specified more than once", 
caae: copy:00005993:  name))); 
caae: copy:00006056:  ereport(ERROR, 
caae: copy:00006057:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
caae: copy:00006058:  errmsg("COPY metadata not found. This probably means that there is a " 
caae: copy:00006059:  "mixture of newline types in the data. Use the NEWLINE keyword " 
caae: copy:00006060:  "in order to resolve this reliably."))); 
caae: copy:00006735:  ereport(ERROR, 
caae: copy:00006736:  (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
caae: copy:00006737:  errmsg("internal error in CopySetEolType. Trying to set NEWLINE %s", 
caae: copy:00006738:  cstate->eol_str))); 
aaaaa GP_IGNORE: daba: dbcommands - ./backend/commands/dbcommands.c
daba: dbcommands:00000224:  elog(ERROR, "Failed to fetch gp_relation_node tuple at TID %s", 
daba: dbcommands:00000225:  ItemPointerToString(&tuple.t_self)); 
daba: dbcommands:00000491:  ereport(ERROR, 
daba: dbcommands:00000492:  (errcode_for_file_access(), 
daba: dbcommands:00000493:  errmsg("could not open file \"%s\": %m", srcFileName))); 
daba: dbcommands:00000511:  ereport(ERROR, 
daba: dbcommands:00000512:  (errcode_for_file_access(), 
daba: dbcommands:00000513:  errmsg("could not open file \"%s\": %s", 
daba: dbcommands:00000514:  dstFileName, 
daba: dbcommands:00000515:  strerror(primaryError)))); 
daba: dbcommands:00000530:  ereport(ERROR, 
daba: dbcommands:00000531:  (errcode_for_file_access(), 
daba: dbcommands:00000532:  errmsg("could not read from position: " INT64_FORMAT " in file '%s' : %m", 
daba: dbcommands:00000533:  readOffset, 
daba: dbcommands:00000534:  srcFileName))); 
daba: dbcommands:00000546:  ereport(ERROR, 
daba: dbcommands:00000547:  (errcode_for_file_access(), 
daba: dbcommands:00000548:  errmsg("could not write file \"%s\": %s", 
daba: dbcommands:00000549:  dstFileName, 
daba: dbcommands:00000550:  strerror(primaryError)))); 
daba: dbcommands:00000567:  ereport(ERROR, 
daba: dbcommands:00000568:  (errcode_for_file_access(), 
daba: dbcommands:00000569:  errmsg("could not flush (fsync) file \"%s\": %s", 
daba: dbcommands:00000570:  dstFileName, 
daba: dbcommands:00000571:  strerror(primaryError)))); 
daba: dbcommands:00000643:  elog(NOTICE, " Create database dispatch before persistence work!"); 
daba: dbcommands:00000663:  ereport(ERROR, 
daba: dbcommands:00000664:  (errcode(ERRCODE_SYNTAX_ERROR), 
daba: dbcommands:00000665:  errmsg("conflicting or redundant options"))); 
daba: dbcommands:00000671:  ereport(ERROR, 
daba: dbcommands:00000672:  (errcode(ERRCODE_SYNTAX_ERROR), 
daba: dbcommands:00000673:  errmsg("conflicting or redundant options"))); 
daba: dbcommands:00000679:  ereport(ERROR, 
daba: dbcommands:00000680:  (errcode(ERRCODE_SYNTAX_ERROR), 
daba: dbcommands:00000681:  errmsg("conflicting or redundant options"))); 
daba: dbcommands:00000687:  ereport(ERROR, 
daba: dbcommands:00000688:  (errcode(ERRCODE_SYNTAX_ERROR), 
daba: dbcommands:00000689:  errmsg("conflicting or redundant options"))); 
daba: dbcommands:00000695:  ereport(ERROR, 
daba: dbcommands:00000696:  (errcode(ERRCODE_SYNTAX_ERROR), 
daba: dbcommands:00000697:  errmsg("conflicting or redundant options"))); 
daba: dbcommands:00000702:  ereport(WARNING, 
daba: dbcommands:00000703:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
daba: dbcommands:00000704:  errmsg("LOCATION is not supported anymore"), 
daba: dbcommands:00000705:  errhint("Consider using tablespaces instead."))); 
daba: dbcommands:00000708:  elog(ERROR, "option \"%s\" not recognized", 
daba: dbcommands:00000709:  defel->defname); 
daba: dbcommands:00000726:  ereport(ERROR, 
daba: dbcommands:00000727:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
daba: dbcommands:00000728:  errmsg("%d is not a valid encoding code", 
daba: dbcommands:00000729:  encoding))); 
daba: dbcommands:00000735:  ereport(ERROR, 
daba: dbcommands:00000736:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
daba: dbcommands:00000737:  errmsg("%s is not a valid encoding name", 
daba: dbcommands:00000738:  encoding_name))); 
daba: dbcommands:00000742:  elog(ERROR, "unrecognized node type: %d", 
daba: dbcommands:00000743:  nodeTag(dencoding->arg)); 
daba: dbcommands:00000747:  ereport(ERROR, 
daba: dbcommands:00000748:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
daba: dbcommands:00000749:  errmsg("server encoding 'SQL_ASCII' is not supported"))); 
daba: dbcommands:00000769:  ereport(ERROR, 
daba: dbcommands:00000770:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
daba: dbcommands:00000771:  errmsg("permission denied to create database"))); 
daba: dbcommands:00000791:  ereport(ERROR, 
daba: dbcommands:00000792:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
daba: dbcommands:00000793:  errmsg("template database \"%s\" does not exist", 
daba: dbcommands:00000794:  dbtemplate))); 
daba: dbcommands:00000803:  ereport(ERROR, 
daba: dbcommands:00000804:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
daba: dbcommands:00000805:  errmsg("permission denied to copy database \"%s\"", 
daba: dbcommands:00000806:  dbtemplate))); 
daba: dbcommands:00000807:  ereport(ERROR, 
daba: dbcommands:00000808:  (errcode(ERRCODE_CDB_FEATURE_NOT_SUPPORTED), 
daba: dbcommands:00000809:  errmsg("copy non template database is not supported"))); 
daba: dbcommands:00000818:  ereport(ERROR, 
daba: dbcommands:00000819:  (errcode(ERRCODE_OBJECT_IN_USE), 
daba: dbcommands:00000820:  errmsg("source database \"%s\" is being accessed by other users", 
daba: dbcommands:00000821:  dbtemplate))); 
daba: dbcommands:00000829:  ereport(ERROR, 
daba: dbcommands:00000830:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
daba: dbcommands:00000831:  errmsg("invalid server encoding %d", encoding))); 
daba: dbcommands:00000840:  ereport(ERROR, 
daba: dbcommands:00000841:  (errmsg("Encoding mismatch"), 
daba: dbcommands:00000842:  errdetail("The encoding you selected (%s) and the encoding that the\n" 
daba: dbcommands:00000843:  "selected locale uses (%s) do not match. This would lead to\n" 
daba: dbcommands:00000844:  "misbehavior in various character string processing functions.\n", 
daba: dbcommands:00000845:  pg_encoding_to_char(encoding), 
daba: dbcommands:00000846:  lc_ctype))); 
daba: dbcommands:00000850:  ereport(ERROR, 
daba: dbcommands:00000851:  (errmsg("Encoding mismatch"), 
daba: dbcommands:00000852:  errdetail("The encoding you selected (%s) and the encoding that the\n" 
daba: dbcommands:00000853:  "selected locale uses (%s) do not match. This would lead to\n" 
daba: dbcommands:00000854:  "misbehavior in various character string processing functions.\n", 
daba: dbcommands:00000855:  pg_encoding_to_char(encoding), 
daba: dbcommands:00000856:  lc_collate))); 
daba: dbcommands:00000869:  ereport(ERROR, 
daba: dbcommands:00000870:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
daba: dbcommands:00000871:  errmsg("tablespace \"%s\" does not exist", 
daba: dbcommands:00000872:  tablespacename))); 
daba: dbcommands:00000882:  ereport(ERROR, 
daba: dbcommands:00000883:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
daba: dbcommands:00000884:  errmsg("pg_global cannot be used as default tablespace"))); 
daba: dbcommands:00000888:  ereport(ERROR, 
daba: dbcommands:00000889:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
daba: dbcommands:00000890:  errmsg("Creating database on tablespace 'pg_default' is not allowed"))); 
daba: dbcommands:00000914:  ereport(ERROR, 
daba: dbcommands:00000915:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
daba: dbcommands:00000916:  errmsg("cannot assign new default tablespace \"%s\"", 
daba: dbcommands:00000917:  tablespacename), 
daba: dbcommands:00000918:  errdetail("There is a conflict because database \"%s\" already has some tables in this tablespace.", 
daba: dbcommands:00000919:  dbtemplate))); 
daba: dbcommands:00000939:  ereport(ERROR, 
daba: dbcommands:00000940:  (errcode(ERRCODE_DUPLICATE_DATABASE), 
daba: dbcommands:00000941:  errmsg("database \"%s\" already exists", dbname))); 
daba: dbcommands:00001064:  elog(NOTICE, "collect phase: %s", 
daba: dbcommands:00001065:  pg_rusage_show(&ru_start)); 
daba: dbcommands:00001082:  elog(NOTICE, "check phase: %s", 
daba: dbcommands:00001083:  pg_rusage_show(&ru_start)); 
daba: dbcommands:00001100:  elog(NOTICE, "created db dirs phase: %s", 
daba: dbcommands:00001101:  pg_rusage_show(&ru_start)); 
daba: dbcommands:00001242:  elog(NOTICE, "copy stored relations phase: %s", 
daba: dbcommands:00001243:  pg_rusage_show(&ru_start)); 
daba: dbcommands:00001341:  ereport(ERROR, 
daba: dbcommands:00001342:  (errcode(ERRCODE_OBJECT_IN_USE), 
daba: dbcommands:00001343:  errmsg("cannot drop the currently open database"))); 
daba: dbcommands:00001359:  ereport(ERROR, 
daba: dbcommands:00001360:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
daba: dbcommands:00001361:  errmsg("database \"%s\" does not exist", dbname))); 
daba: dbcommands:00001381:  ereport(NOTICE, 
daba: dbcommands:00001382:  (errmsg("database \"%s\" does not exist, skipping", 
daba: dbcommands:00001383:  dbname))); 
daba: dbcommands:00001402:  ereport(ERROR, 
daba: dbcommands:00001403:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
daba: dbcommands:00001404:  errmsg("cannot drop a template database"))); 
daba: dbcommands:00001411:  ereport(ERROR, 
daba: dbcommands:00001412:  (errcode(ERRCODE_OBJECT_IN_USE), 
daba: dbcommands:00001413:  errmsg("database \"%s\" is being accessed by other users", 
daba: dbcommands:00001414:  dbname))); 
daba: dbcommands:00001431:  elog(ERROR, "cache lookup failed for database %u", db_id); 
daba: dbcommands:00001504:  elog(ERROR, "Found %d parentless gp_relation_node entries", 
daba: dbcommands:00001505:  info->parentlessGpRelationNodesCount); 
daba: dbcommands:00001641:  ereport(ERROR, 
daba: dbcommands:00001642:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
daba: dbcommands:00001643:  errmsg("database \"%s\" does not exist", oldname))); 
daba: dbcommands:00001652:  ereport(ERROR, 
daba: dbcommands:00001653:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
daba: dbcommands:00001654:  errmsg("current database may not be renamed"))); 
daba: dbcommands:00001661:  ereport(ERROR, 
daba: dbcommands:00001662:  (errcode(ERRCODE_OBJECT_IN_USE), 
daba: dbcommands:00001663:  errmsg("database \"%s\" is being accessed by other users", 
daba: dbcommands:00001664:  oldname))); 
daba: dbcommands:00001668:  ereport(ERROR, 
daba: dbcommands:00001669:  (errcode(ERRCODE_DUPLICATE_DATABASE), 
daba: dbcommands:00001670:  errmsg("database \"%s\" already exists", newname))); 
daba: dbcommands:00001679:  ereport(ERROR, 
daba: dbcommands:00001680:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
daba: dbcommands:00001681:  errmsg("permission denied to rename database"))); 
daba: dbcommands:00001694:  elog(ERROR, "cache lookup failed for database %u", db_id); 
daba: dbcommands:00001747:  ereport(ERROR, 
daba: dbcommands:00001748:  (errcode(ERRCODE_SYNTAX_ERROR), 
daba: dbcommands:00001749:  errmsg("conflicting or redundant options"))); 
daba: dbcommands:00001753:  elog(ERROR, "option \"%s\" not recognized", 
daba: dbcommands:00001754:  defel->defname); 
daba: dbcommands:00001776:  ereport(ERROR, 
daba: dbcommands:00001777:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
daba: dbcommands:00001778:  errmsg("database \"%s\" does not exist", stmt->dbname))); 
daba: dbcommands:00001858:  ereport(ERROR, 
daba: dbcommands:00001859:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
daba: dbcommands:00001860:  errmsg("database \"%s\" does not exist", stmt->dbname))); 
daba: dbcommands:00001977:  ereport(ERROR, 
daba: dbcommands:00001978:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
daba: dbcommands:00001979:  errmsg("database \"%s\" does not exist", dbname))); 
daba: dbcommands:00002018:  ereport(ERROR, 
daba: dbcommands:00002019:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
daba: dbcommands:00002020:  errmsg("permission denied to change owner of database"))); 
daba: dbcommands:00002408:  ereport(WARNING, 
daba: dbcommands:00002409:  (errmsg("could not remove database directory \"%s\"", 
daba: dbcommands:00002410:  dst_path))); 
aaaaa GP_IGNORE: daag: define - ./backend/commands/define.c
daag: define:00000065:  ereport(ERROR, 
daag: define:00000066:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000067:  errmsg("%s requires a parameter", 
daag: define:00000068:  def->defname))); 
daag: define:00000092:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(def->arg)); 
daag: define:00000104:  ereport(ERROR, 
daag: define:00000105:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000106:  errmsg("%s requires a numeric value", 
daag: define:00000107:  def->defname))); 
daag: define:00000115:  ereport(ERROR, 
daag: define:00000116:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000117:  errmsg("%s requires a numeric value", 
daag: define:00000118:  def->defname))); 
daag: define:00000164:  ereport(ERROR, 
daag: define:00000165:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000166:  errmsg("%s requires a Boolean value", 
daag: define:00000167:  def->defname))); 
daag: define:00000178:  ereport(ERROR, 
daag: define:00000179:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000180:  errmsg("%s requires a numeric value", 
daag: define:00000181:  def->defname))); 
daag: define:00000196:  ereport(ERROR, 
daag: define:00000197:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000198:  errmsg("%s requires a numeric value", 
daag: define:00000199:  def->defname))); 
daag: define:00000211:  ereport(ERROR, 
daag: define:00000212:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000213:  errmsg("%s requires a parameter", 
daag: define:00000214:  def->defname))); 
daag: define:00000225:  ereport(ERROR, 
daag: define:00000226:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000227:  errmsg("argument of %s must be a name", 
daag: define:00000228:  def->defname))); 
daag: define:00000243:  ereport(ERROR, 
daag: define:00000244:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000245:  errmsg("%s requires a parameter", 
daag: define:00000246:  def->defname))); 
daag: define:00000255:  ereport(ERROR, 
daag: define:00000256:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000257:  errmsg("argument of %s must be a type name", 
daag: define:00000258:  def->defname))); 
daag: define:00000271:  ereport(ERROR, 
daag: define:00000272:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000273:  errmsg("%s requires a parameter", 
daag: define:00000274:  def->defname))); 
daag: define:00000280:  ereport(ERROR, 
daag: define:00000281:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000282:  errmsg("%s requires an integer value", 
daag: define:00000283:  def->defname))); 
daag: define:00000299:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(def->arg)); 
daag: define:00000301:  ereport(ERROR, 
daag: define:00000302:  (errcode(ERRCODE_SYNTAX_ERROR), 
daag: define:00000303:  errmsg("invalid argument for %s: \"%s\"", 
daag: define:00000304:  def->defname, defGetString(def)))); 
aaaaa GP_IGNORE: eaah: explain - ./backend/commands/explain.c
eaah: explain:00000249:  elog(NOTICE, "Optimizer failed to produce plan"); 
eaah: explain:00002178:  elog(ERROR, "no tlist entry for key %d", keyresno); 
eaah: explain:00002262:  elog(ERROR, "no tlist entry for key %d", keyresno); 
eaah: explain:00002329:  elog(WARNING, "Gather Motion %s error: no tlist item %d", 
eaah: explain:00002330:  qlabel, keyresno); 
eaah: explain:00002377:  elog(ERROR, "cache lookup failed for index %u", indexId); 
aaaaa GP_IGNORE: eabf: extprotocolcmds - ./backend/commands/extprotocolcmds.c
eabf: extprotocolcmds:00000069:  ereport(ERROR, 
eabf: extprotocolcmds:00000070:  (errcode(ERRCODE_SYNTAX_ERROR), 
eabf: extprotocolcmds:00000071:  errmsg("protocol attribute \"%s\" not recognized", 
eabf: extprotocolcmds:00000072:  defel->defname))); 
eabf: extprotocolcmds:00000079:  ereport(ERROR, 
eabf: extprotocolcmds:00000080:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
eabf: extprotocolcmds:00000081:  errmsg("protocol must be specify at least a readfunc or a writefunc"))); 
eabf: extprotocolcmds:00000128:  ereport(ERROR, 
eabf: extprotocolcmds:00000129:  (errcode(ERRCODE_SYNTAX_ERROR), 
eabf: extprotocolcmds:00000130:  errmsg("protocol name may not be qualified"))); 
eabf: extprotocolcmds:00000140:  ereport(ERROR, 
eabf: extprotocolcmds:00000141:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
eabf: extprotocolcmds:00000142:  errmsg("protocol \"%s\" does not exist", 
eabf: extprotocolcmds:00000143:  protocolName))); 
eabf: extprotocolcmds:00000148:  ereport(NOTICE, 
eabf: extprotocolcmds:00000149:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
eabf: extprotocolcmds:00000150:  errmsg("protocol \"%s\" does not exist, skipping", 
eabf: extprotocolcmds:00000151:  protocolName))); 
eabf: extprotocolcmds:00000216:  ereport(ERROR, 
eabf: extprotocolcmds:00000217:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
eabf: extprotocolcmds:00000218:  errmsg("protocol \"%s\" does not exist", 
eabf: extprotocolcmds:00000219:  name))); 
eabf: extprotocolcmds:00000228:  ereport(ERROR, 
eabf: extprotocolcmds:00000229:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
eabf: extprotocolcmds:00000230:  errmsg("internal error: protocol \"%s\" has no owner defined", 
eabf: extprotocolcmds:00000231:  name))); 
eabf: extprotocolcmds:00000240:  ereport(ERROR, 
eabf: extprotocolcmds:00000241:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
eabf: extprotocolcmds:00000242:  errmsg("internal error: protocol \"%s\" has no trust attribute defined", 
eabf: extprotocolcmds:00000243:  name))); 
eabf: extprotocolcmds:00000276:  ereport(ERROR, 
eabf: extprotocolcmds:00000277:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
eabf: extprotocolcmds:00000278:  errmsg("untrusted protocol \"%s\" can't be owned by non superuser", 
eabf: extprotocolcmds:00000279:  name))); 
eabf: extprotocolcmds:00000347:  ereport(ERROR, 
eabf: extprotocolcmds:00000348:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
eabf: extprotocolcmds:00000349:  errmsg("protocol \"%s\" does not exist", 
eabf: extprotocolcmds:00000350:  oldname))); 
eabf: extprotocolcmds:00000359:  ereport(ERROR, 
eabf: extprotocolcmds:00000360:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
eabf: extprotocolcmds:00000361:  errmsg("internal error: protocol \"%s\" has no owner defined", 
eabf: extprotocolcmds:00000362:  oldname))); 
aaaaa GP_IGNORE: faaj: filespace - ./backend/commands/filespace.c
faaj: filespace:00000106:  elog(ERROR, "internal error: filespace prefix too long \"%s\"", prefix); 
faaj: filespace:00000115:  elog(ERROR, "internal error: filespace prefix too long \"%s\"", prefix); 
faaj: filespace:00000123:  elog(ERROR, "internal error: filespace prefix too long \"%s\"", prefix); 
faaj: filespace:00000130:  elog(ERROR, "internal error: filespace prefix too long \"%s\"", prefix); 
faaj: filespace:00000180:  elog(ERROR, "cannot create filespaces in utility mode"); 
faaj: filespace:00000184:  ereport(ERROR, 
faaj: filespace:00000185:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
faaj: filespace:00000186:  errmsg("permission denied to create filespace \"%s\"", 
faaj: filespace:00000187:  stmt->filespacename), 
faaj: filespace:00000188:  errhint("Must be superuser to create a filespace."))); 
faaj: filespace:00000202:  ereport(ERROR, 
faaj: filespace:00000203:  (errcode(ERRCODE_RESERVED_NAME), 
faaj: filespace:00000204:  errmsg("unacceptable filespace name \"%s\"", 
faaj: filespace:00000205:  stmt->filespacename), 
faaj: filespace:00000206:  errdetail("The prefix \"%s\" is reserved for system filespaces.", 
faaj: filespace:00000207:  GetReservedPrefix(stmt->filespacename)))); 
faaj: filespace:00000236:  ereport(ERROR, 
faaj: filespace:00000237:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaj: filespace:00000238:  errmsg("replica num "INT64_FORMAT" out of range", rep), 
faaj: filespace:00000239:  errdetail("Replica num should be in range [0, %d).", 
faaj: filespace:00000240:  FS_MAX_REPLICA_NUM))); 
faaj: filespace:00000245:  ereport(ERROR, 
faaj: filespace:00000246:  (errcode(ERRCODE_SYNTAX_ERROR), 
faaj: filespace:00000247:  errmsg("filesystem attribute \"%s\" not recognized", 
faaj: filespace:00000248:  defel->defname))); 
faaj: filespace:00000269:  ereport(ERROR, 
faaj: filespace:00000270:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
faaj: filespace:00000271:  errmsg("filespace \"%s\" already exists", 
faaj: filespace:00000272:  stmt->filespacename))); 
faaj: filespace:00000330:  ereport(ERROR, 
faaj: filespace:00000331:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
faaj: filespace:00000332:  errmsg("multiple filespace locations specified " 
faaj: filespace:00000333:  "for dbid %d", dbid))); 
faaj: filespace:00000358:  ereport(ERROR, 
faaj: filespace:00000359:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
faaj: filespace:00000360:  errmsg("missing filespace location for dbid %d", 
faaj: filespace:00000361:  dbid))); 
faaj: filespace:00000378:  ereport(ERROR, 
faaj: filespace:00000379:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
faaj: filespace:00000380:  errmsg("missing filespace location for dbid %d", 
faaj: filespace:00000381:  dbid))); 
faaj: filespace:00000403:  ereport(ERROR, 
faaj: filespace:00000404:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
faaj: filespace:00000405:  errmsg("filespace location specified for non-existent " 
faaj: filespace:00000406:  "dbid %d", segElem->dbid))); 
faaj: filespace:00000449:  elog(ERROR, "filespace location not specified for dbid %d", 
faaj: filespace:00000450:  GpIdentity.dbid); 
faaj: filespace:00000572:  ereport(ERROR, 
faaj: filespace:00000573:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
faaj: filespace:00000574:  errmsg("filespace locations does not have the same prefix for dbid: %d", fse->dbid))); 
faaj: filespace:00000637:  ereport(ERROR, 
faaj: filespace:00000638:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
faaj: filespace:00000639:  errmsg("filespace location cannot contain \"://\" or any of these characters: \"{}\"" 
faaj: filespace:00000640:  "dbid %d, location:%s", fse->dbid, fse->location))); 
faaj: filespace:00000650:  ereport(ERROR, 
faaj: filespace:00000651:  (errcode_for_file_access(), 
faaj: filespace:00000652:  errmsg("%s: File exists", encoded))); 
faaj: filespace:00000731:  ereport(ERROR, 
faaj: filespace:00000732:  (errcode(ERRCODE_SYNTAX_ERROR), 
faaj: filespace:00000733:  errmsg("filespace name may not be qualified"))); 
faaj: filespace:00000738:  ereport(ERROR, 
faaj: filespace:00000739:  (errcode(ERRCODE_SYNTAX_ERROR), 
faaj: filespace:00000740:  errmsg("syntax at or near \"cascade\""))); 
faaj: filespace:00000758:  ereport(NOTICE, 
faaj: filespace:00000759:  (errmsg("filespace \"%s\" does not exist, skipping", 
faaj: filespace:00000760:  fsname))); 
faaj: filespace:00000765:  ereport(ERROR, 
faaj: filespace:00000766:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
faaj: filespace:00000767:  errmsg("filespace \"%s\" does not exist", fsname))); 
faaj: filespace:00000777:  ereport(ERROR, 
faaj: filespace:00000778:  (errmsg("cannot drop filespace %s because it is required " 
faaj: filespace:00000779:  "by the database system", fsname))); 
faaj: filespace:00000786:  ereport(ERROR, 
faaj: filespace:00000787:  (errmsg("cannot drop filespace %s because it is used " 
faaj: filespace:00000788:  "by transaction files\n" 
faaj: filespace:00000789:  "Use gpfilespace --movetransfilespace <newFilespaceName> to move transaction files to a different filespace\n" 
faaj: filespace:00000790:  "and then attempt DROP FILESPACE", fsname))); 
faaj: filespace:00000863:  elog(ERROR, "cache lookup failed for filespace %u", fsoid); 
faaj: filespace:00000900:  ereport(ERROR, 
faaj: filespace:00000901:  (errcode(ERRCODE_SYNTAX_ERROR), 
faaj: filespace:00000902:  errmsg("filespace name may not be qualified"))); 
faaj: filespace:00000918:  ereport(ERROR, 
faaj: filespace:00000919:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
faaj: filespace:00000920:  errmsg("filespace \"%s\" does not exist", fsname))); 
faaj: filespace:00000926:  ereport(ERROR, 
faaj: filespace:00000927:  (errcode(ERRCODE_RESERVED_NAME), 
faaj: filespace:00000928:  errmsg("permission denied: \"%s\" is a system filespace", 
faaj: filespace:00000929:  fsname))); 
faaj: filespace:00001016:  ereport(ERROR, 
faaj: filespace:00001017:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
faaj: filespace:00001018:  errmsg("filespace \"%s\" does not exist", 
faaj: filespace:00001019:  oldname))); 
faaj: filespace:00001025:  ereport(ERROR, 
faaj: filespace:00001026:  (errcode(ERRCODE_RESERVED_NAME), 
faaj: filespace:00001027:  errmsg("permission denied: \"%s\" is a system filespace", 
faaj: filespace:00001028:  oldname))); 
faaj: filespace:00001038:  ereport(ERROR, 
faaj: filespace:00001039:  (errcode(ERRCODE_RESERVED_NAME), 
faaj: filespace:00001040:  errmsg("unacceptable filespace name \"%s\"", newname), 
faaj: filespace:00001041:  errdetail("The prefix \"%s\" is reserved for system filespaces.", 
faaj: filespace:00001042:  GetReservedPrefix(newname)))); 
faaj: filespace:00001052:  ereport(ERROR, 
faaj: filespace:00001053:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
faaj: filespace:00001054:  errmsg("filespace \"%s\" already exists", newname))); 
faaj: filespace:00001134:  elog(ERROR, "lookup failed for filespace %u", fsoid); 
faaj: filespace:00001189:  ereport(ERROR, 
faaj: filespace:00001190:  (errcode(ERRCODE_INVALID_NAME), 
faaj: filespace:00001191:  errmsg("filespace location \"%s\" " 
faaj: filespace:00001192:  "cannot contain single quotes", path))); 
faaj: filespace:00001200:  ereport(ERROR, 
faaj: filespace:00001201:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
faaj: filespace:00001202:  errmsg("filespace location \"%s\" " 
faaj: filespace:00001203:  "must be an absolute path", path))); 
faaj: filespace:00001209:  ereport(ERROR, 
faaj: filespace:00001210:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
faaj: filespace:00001211:  errmsg("filespace location \"%s\" is too long", 
faaj: filespace:00001212:  path), 
faaj: filespace:00001213:  errhint("maximum length %d characters", 
faaj: filespace:00001214:  MAX_FILESPACE_PATH))); 
faaj: filespace:00001256:  ereport(ERROR, 
faaj: filespace:00001257:  (errcode_for_file_access(), 
faaj: filespace:00001258:  errmsg("%s: File exists", path))); 
faaj: filespace:00001267:  ereport(ERROR, 
faaj: filespace:00001268:  (errcode_for_file_access(), 
faaj: filespace:00001269:  errmsg("%s: No such file or directory", 
faaj: filespace:00001270:  parentdir))); 
faaj: filespace:00001274:  ereport(ERROR, 
faaj: filespace:00001275:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
faaj: filespace:00001276:  errmsg("%s: Not a directory", parentdir))); 
faaj: filespace:00001290:  ereport(ERROR, 
faaj: filespace:00001291:  (errcode_for_file_access(), 
faaj: filespace:00001292:  errmsg("%s: Permission denied", path))); 
faaj: filespace:00001351:  ereport(ERROR, 
faaj: filespace:00001352:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
faaj: filespace:00001353:  errmsg("duplicate filespace locations: " 
faaj: filespace:00001354:  "(%d: '%s', %d: '%s')", 
faaj: filespace:00001355:  fse2->dbid, fse2->location, 
faaj: filespace:00001356:  fse1->dbid, fse1->location))); 
faaj: filespace:00001455:  ereport(ERROR, 
faaj: filespace:00001456:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
faaj: filespace:00001457:  errmsg("same filespace locations specified " 
faaj: filespace:00001458:  "for dbid %d and dbid %d", elem->primary->dbid, fse->dbid))); 
faaj: filespace:00001491:  ereport(ERROR, 
faaj: filespace:00001492:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
faaj: filespace:00001493:  errmsg("filespace locations specified " 
faaj: filespace:00001494:  "for dbid %d is not same with its primary or mirror", elem->primary->dbid))); 
faaj: filespace:00001515:  ereport(ERROR, 
faaj: filespace:00001516:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
faaj: filespace:00001517:  errmsg("filespace \"%s\" is not empty", 
faaj: filespace:00001518:  get_filespace_name(fsoid)))); 
aaaaa GP_IGNORE: fabe: filesystemcmds - ./backend/commands/filesystemcmds.c
fabe: filesystemcmds:00000080:  ereport(ERROR, 
fabe: filesystemcmds:00000081:  (errcode(ERRCODE_SYNTAX_ERROR), 
fabe: filesystemcmds:00000082:  errmsg("filesystem attribute \"%s\" duplicated", 
fabe: filesystemcmds:00000083:  defel->defname))); 
fabe: filesystemcmds:00000094:  ereport(ERROR, 
fabe: filesystemcmds:00000095:  (errcode(ERRCODE_SYNTAX_ERROR), 
fabe: filesystemcmds:00000096:  errmsg("filesystem attribute \"%s\" not recognized", 
fabe: filesystemcmds:00000097:  defel->defname))); 
fabe: filesystemcmds:00000101:  ereport(ERROR, 
fabe: filesystemcmds:00000102:  (errcode(ERRCODE_SYNTAX_ERROR), 
fabe: filesystemcmds:00000103:  errmsg("filesystem function \"%s\" duplicated", 
fabe: filesystemcmds:00000104:  defel->defname))); 
fabe: filesystemcmds:00000112:  ereport(ERROR, 
fabe: filesystemcmds:00000113:  (errcode(ERRCODE_SYNTAX_ERROR), 
fabe: filesystemcmds:00000114:  errmsg("filesystem need %s but not specified", fsysLibFileName))); 
fabe: filesystemcmds:00000117:  ereport(ERROR, 
fabe: filesystemcmds:00000118:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabe: filesystemcmds:00000119:  errmsg("filesystem need %d funcs but only get %d", FSYS_FUNC_TOTALNUM, funcNum))); 
fabe: filesystemcmds:00000171:  ereport(ERROR, 
fabe: filesystemcmds:00000172:  (errcode(ERRCODE_SYNTAX_ERROR), 
fabe: filesystemcmds:00000173:  errmsg("filesystem name may not be qualified"))); 
fabe: filesystemcmds:00000183:  ereport(ERROR, 
fabe: filesystemcmds:00000184:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabe: filesystemcmds:00000185:  errmsg("filesystem \"%s\" does not exist", 
fabe: filesystemcmds:00000186:  fsysName))); 
fabe: filesystemcmds:00000191:  ereport(NOTICE, 
fabe: filesystemcmds:00000192:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabe: filesystemcmds:00000193:  errmsg("filesystem \"%s\" does not exist, skipping", 
fabe: filesystemcmds:00000194:  fsysName))); 
fabe: filesystemcmds:00000277:  ereport(ERROR, 
fabe: filesystemcmds:00000278:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabe: filesystemcmds:00000279:  errmsg("filesystem \"%s\" does not exist", 
fabe: filesystemcmds:00000280:  name))); 
fabe: filesystemcmds:00000290:  ereport(ERROR, 
fabe: filesystemcmds:00000291:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabe: filesystemcmds:00000292:  errmsg("internal error: filesystem \"%s\" has no owner defined", 
fabe: filesystemcmds:00000293:  name))); 
fabe: filesystemcmds:00000303:  ereport(ERROR, 
fabe: filesystemcmds:00000304:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabe: filesystemcmds:00000305:  errmsg("internal error: filesystem \"%s\" has no trust attribute defined", 
fabe: filesystemcmds:00000306:  name))); 
fabe: filesystemcmds:00000339:  ereport(ERROR, 
fabe: filesystemcmds:00000340:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
fabe: filesystemcmds:00000341:  errmsg("untrusted filesystem \"%s\" can't be owned by non superuser", 
fabe: filesystemcmds:00000342:  name))); 
fabe: filesystemcmds:00000395:  elog(ERROR, "rename filesystem rename not supported yet"); 
fabe: filesystemcmds:00000431:  ereport(ERROR, 
fabe: filesystemcmds:00000432:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabe: filesystemcmds:00000433:  errmsg("filesystem \"%s\" does not exist", 
fabe: filesystemcmds:00000434:  oldname))); 
fabe: filesystemcmds:00000444:  ereport(ERROR, 
fabe: filesystemcmds:00000445:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabe: filesystemcmds:00000446:  errmsg("internal error: filesystem \"%s\" has no owner defined", 
fabe: filesystemcmds:00000447:  oldname))); 
aaaaa GP_IGNORE: fabb: foreigncmds - ./backend/commands/foreigncmds.c
fabb: foreigncmds:00000136:  ereport(ERROR, 
fabb: foreigncmds:00000137:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabb: foreigncmds:00000138:  errmsg("option \"%s\" not found", 
fabb: foreigncmds:00000139:  od->defname), 
fabb: foreigncmds:00000140:  errOmitLocation(true))); 
fabb: foreigncmds:00000146:  ereport(ERROR, 
fabb: foreigncmds:00000147:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabb: foreigncmds:00000148:  errmsg("option \"%s\" not found", 
fabb: foreigncmds:00000149:  od->defname), 
fabb: foreigncmds:00000150:  errOmitLocation(true))); 
fabb: foreigncmds:00000157:  ereport(ERROR, 
fabb: foreigncmds:00000158:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
fabb: foreigncmds:00000159:  errmsg("option \"%s\" provided more than once", 
fabb: foreigncmds:00000160:  od->defname), 
fabb: foreigncmds:00000161:  errOmitLocation(true))); 
fabb: foreigncmds:00000166:  elog(ERROR, "unrecognized action %d on option \"%s\"", 
fabb: foreigncmds:00000167:  (int) od->defaction, od->defname); 
fabb: foreigncmds:00000218:  ereport(ERROR, 
fabb: foreigncmds:00000219:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
fabb: foreigncmds:00000220:  errmsg("permission denied to change owner of foreign-data wrapper \"%s\"", 
fabb: foreigncmds:00000221:  name), 
fabb: foreigncmds:00000222:  errhint("Must be superuser to change owner of a foreign-data wrapper."), 
fabb: foreigncmds:00000223:  errOmitLocation(true))); 
fabb: foreigncmds:00000227:  ereport(ERROR, 
fabb: foreigncmds:00000228:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
fabb: foreigncmds:00000229:  errmsg("permission denied to change owner of foreign-data wrapper \"%s\"", 
fabb: foreigncmds:00000230:  name), 
fabb: foreigncmds:00000231:  errhint("The owner of a foreign-data wrapper must be a superuser."), 
fabb: foreigncmds:00000232:  errOmitLocation(true))); 
fabb: foreigncmds:00000246:  ereport(ERROR, 
fabb: foreigncmds:00000247:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabb: foreigncmds:00000248:  errmsg("foreign-data wrapper \"%s\" does not exist", name), 
fabb: foreigncmds:00000249:  errOmitLocation(true))); 
fabb: foreigncmds:00000297:  ereport(ERROR, 
fabb: foreigncmds:00000298:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabb: foreigncmds:00000299:  errmsg("server \"%s\" does not exist", name), 
fabb: foreigncmds:00000300:  errOmitLocation(true))); 
fabb: foreigncmds:00000376:  ereport(ERROR, 
fabb: foreigncmds:00000377:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
fabb: foreigncmds:00000378:  errmsg("permission denied to create foreign-data wrapper \"%s\"", 
fabb: foreigncmds:00000379:  stmt->fdwname), 
fabb: foreigncmds:00000380:  errhint("Must be superuser to create a foreign-data wrapper."), 
fabb: foreigncmds:00000381:  errOmitLocation(true))); 
fabb: foreigncmds:00000390:  ereport(ERROR, 
fabb: foreigncmds:00000391:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
fabb: foreigncmds:00000392:  errmsg("foreign-data wrapper \"%s\" already exists", 
fabb: foreigncmds:00000393:  stmt->fdwname), 
fabb: foreigncmds:00000394:  errOmitLocation(true))); 
fabb: foreigncmds:00000482:  ereport(ERROR, 
fabb: foreigncmds:00000483:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
fabb: foreigncmds:00000484:  errmsg("permission denied to alter foreign-data wrapper \"%s\"", 
fabb: foreigncmds:00000485:  stmt->fdwname), 
fabb: foreigncmds:00000486:  errhint("Must be superuser to alter a foreign-data wrapper."), 
fabb: foreigncmds:00000487:  errOmitLocation(true))); 
fabb: foreigncmds:00000501:  ereport(ERROR, 
fabb: foreigncmds:00000502:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabb: foreigncmds:00000503:  errmsg("foreign-data wrapper \"%s\" does not exist", stmt->fdwname), 
fabb: foreigncmds:00000504:  errOmitLocation(true))); 
fabb: foreigncmds:00000523:  ereport(WARNING, 
fabb: foreigncmds:00000524:  (errmsg("changing the foreign-data wrapper validator can cause " 
fabb: foreigncmds:00000525:  "the options for dependent objects to become invalid"), 
fabb: foreigncmds:00000526:  errOmitLocation(true))); 
fabb: foreigncmds:00000593:  ereport(ERROR, 
fabb: foreigncmds:00000594:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
fabb: foreigncmds:00000595:  errmsg("permission denied to drop foreign-data wrapper \"%s\"", 
fabb: foreigncmds:00000596:  stmt->fdwname), 
fabb: foreigncmds:00000597:  errhint("Must be superuser to drop a foreign-data wrapper."), 
fabb: foreigncmds:00000598:  errOmitLocation(true))); 
fabb: foreigncmds:00000603:  ereport(ERROR, 
fabb: foreigncmds:00000604:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabb: foreigncmds:00000605:  errmsg("foreign-data wrapper \"%s\" does not exist", 
fabb: foreigncmds:00000606:  stmt->fdwname), 
fabb: foreigncmds:00000607:  errOmitLocation(true))); 
fabb: foreigncmds:00000610:  ereport(NOTICE, 
fabb: foreigncmds:00000611:  (errmsg("foreign-data wrapper \"%s\" does not exist, skipping", 
fabb: foreigncmds:00000612:  stmt->fdwname), 
fabb: foreigncmds:00000613:  errOmitLocation(true))); 
fabb: foreigncmds:00000645:  elog(ERROR, "cache lookup failed for foreign-data wrapper %u", fdwId); 
fabb: foreigncmds:00000677:  ereport(ERROR, 
fabb: foreigncmds:00000678:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
fabb: foreigncmds:00000679:  errmsg("server \"%s\" already exists", 
fabb: foreigncmds:00000680:  stmt->servername), 
fabb: foreigncmds:00000681:  errOmitLocation(true))); 
fabb: foreigncmds:00000792:  ereport(ERROR, 
fabb: foreigncmds:00000793:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabb: foreigncmds:00000794:  errmsg("server \"%s\" does not exist", stmt->servername), 
fabb: foreigncmds:00000795:  errOmitLocation(true))); 
fabb: foreigncmds:00000883:  ereport(ERROR, 
fabb: foreigncmds:00000884:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabb: foreigncmds:00000885:  errmsg("server \"%s\" does not exist", stmt->servername), 
fabb: foreigncmds:00000886:  errOmitLocation(true))); 
fabb: foreigncmds:00000889:  ereport(NOTICE, 
fabb: foreigncmds:00000890:  (errmsg("server \"%s\" does not exist, skipping", 
fabb: foreigncmds:00000891:  stmt->servername), 
fabb: foreigncmds:00000892:  errOmitLocation(true))); 
fabb: foreigncmds:00000926:  elog(ERROR, "cache lookup failed for foreign server %u", srvId); 
fabb: foreigncmds:00001005:  ereport(ERROR, 
fabb: foreigncmds:00001006:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
fabb: foreigncmds:00001007:  errmsg("user mapping \"%s\" already exists for server %s", 
fabb: foreigncmds:00001008:  MappingUserName(useId), 
fabb: foreigncmds:00001009:  stmt->servername), 
fabb: foreigncmds:00001010:  errOmitLocation(true))); 
fabb: foreigncmds:00001091:  ereport(ERROR, 
fabb: foreigncmds:00001092:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabb: foreigncmds:00001093:  errmsg("user mapping \"%s\" does not exist for the server", 
fabb: foreigncmds:00001094:  MappingUserName(useId)), 
fabb: foreigncmds:00001095:  errOmitLocation(true))); 
fabb: foreigncmds:00001111:  elog(ERROR, "cache lookup failed for user mapping %u", umId); 
fabb: foreigncmds:00001185:  elog(NOTICE, "role \"%s\" does not exist, skipping", stmt->username); 
fabb: foreigncmds:00001192:  ereport(ERROR, 
fabb: foreigncmds:00001193:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabb: foreigncmds:00001194:  errmsg("server \"%s\" does not exist", 
fabb: foreigncmds:00001195:  stmt->servername), 
fabb: foreigncmds:00001196:  errOmitLocation(true))); 
fabb: foreigncmds:00001198:  ereport(NOTICE, (errmsg("server does not exist, skipping"), 
fabb: foreigncmds:00001199:  errOmitLocation(true))); 
fabb: foreigncmds:00001214:  ereport(ERROR, 
fabb: foreigncmds:00001215:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabb: foreigncmds:00001216:  errmsg("user mapping \"%s\" does not exist for the server", 
fabb: foreigncmds:00001217:  MappingUserName(useId)), 
fabb: foreigncmds:00001218:  errOmitLocation(true))); 
fabb: foreigncmds:00001221:  ereport(NOTICE, 
fabb: foreigncmds:00001222:  (errmsg("user mapping \"%s\" does not exist for the server, skipping", 
fabb: foreigncmds:00001223:  MappingUserName(useId)))); 
fabb: foreigncmds:00001256:  elog(ERROR, "cache lookup failed for user mapping %u", umId); 
fabb: foreigncmds:00001365:  ereport(ERROR, 
fabb: foreigncmds:00001366:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabb: foreigncmds:00001367:  errmsg("foreign table object id \"%d\" does not exist", 
fabb: foreigncmds:00001368:  relid))); 
aaaaa GP_IGNORE: fabc: functioncmds - ./backend/commands/functioncmds.c
fabc: functioncmds:00000089:  ereport(ERROR, 
fabc: functioncmds:00000090:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000091:  errmsg("SQL function cannot return shell type %s", 
fabc: functioncmds:00000092:  TypeNameToString(returnType)))); 
fabc: functioncmds:00000094:  ereport(NOTICE, 
fabc: functioncmds:00000095:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
fabc: functioncmds:00000096:  errmsg("return type %s is only a shell", 
fabc: functioncmds:00000097:  TypeNameToString(returnType)))); 
fabc: functioncmds:00000115:  ereport(ERROR, 
fabc: functioncmds:00000116:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabc: functioncmds:00000117:  errmsg("type \"%s\" does not exist", typnam))); 
fabc: functioncmds:00000129:  ereport(NOTICE, 
fabc: functioncmds:00000130:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabc: functioncmds:00000131:  errmsg("type \"%s\" is not yet defined", typnam), 
fabc: functioncmds:00000132:  errdetail("Creating a shell type definition."))); 
fabc: functioncmds:00000205:  ereport(ERROR, 
fabc: functioncmds:00000206:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000207:  errmsg("SQL function cannot accept shell type %s", 
fabc: functioncmds:00000208:  TypeNameToString(t)))); 
fabc: functioncmds:00000210:  ereport(NOTICE, 
fabc: functioncmds:00000211:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
fabc: functioncmds:00000212:  errmsg("argument type %s is only a shell", 
fabc: functioncmds:00000213:  TypeNameToString(t)))); 
fabc: functioncmds:00000218:  ereport(ERROR, 
fabc: functioncmds:00000219:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabc: functioncmds:00000220:  errmsg("type %s does not exist", 
fabc: functioncmds:00000221:  TypeNameToString(t)))); 
fabc: functioncmds:00000226:  ereport(ERROR, 
fabc: functioncmds:00000227:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000228:  errmsg("functions cannot accept set arguments"))); 
fabc: functioncmds:00000247:  ereport(ERROR, 
fabc: functioncmds:00000248:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000249:  errmsg("VARIADIC parameter must be the last input parameter"))); 
fabc: functioncmds:00000256:  ereport(ERROR, 
fabc: functioncmds:00000257:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000258:  errmsg("functions cannot return \"anytable\" arguments"))); 
fabc: functioncmds:00000268:  ereport(ERROR, 
fabc: functioncmds:00000269:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000270:  errmsg("functions cannot return \"anytable\" arguments"))); 
fabc: functioncmds:00000281:  elog(ERROR, "unrecognized function parameter mode: %c", fp->mode); 
fabc: functioncmds:00000301:  ereport(ERROR, 
fabc: functioncmds:00000302:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
fabc: functioncmds:00000303:  errmsg("functions cannot have multiple \"anytable\" arguments"))); 
fabc: functioncmds:00000383:  ereport(ERROR, 
fabc: functioncmds:00000384:  (errcode(ERRCODE_SYNTAX_ERROR), 
fabc: functioncmds:00000385:  errmsg("conflicting or redundant options"))); 
fabc: functioncmds:00000402:  elog(ERROR, "invalid volatility \"%s\"", str); 
fabc: functioncmds:00000422:  elog(ERROR, "invalid data access \"%s\"", str); 
fabc: functioncmds:00000443:  ereport(ERROR, 
fabc: functioncmds:00000444:  (errcode(ERRCODE_SYNTAX_ERROR), 
fabc: functioncmds:00000445:  errmsg("conflicting options"), 
fabc: functioncmds:00000446:  errhint("IMMUTABLE conflicts with READS SQL DATA."))); 
fabc: functioncmds:00000450:  ereport(ERROR, 
fabc: functioncmds:00000451:  (errcode(ERRCODE_SYNTAX_ERROR), 
fabc: functioncmds:00000452:  errmsg("conflicting options"), 
fabc: functioncmds:00000453:  errhint("IMMUTABLE conflicts with MODIFIES SQL DATA."))); 
fabc: functioncmds:00000457:  ereport(ERROR, 
fabc: functioncmds:00000458:  (errcode(ERRCODE_SYNTAX_ERROR), 
fabc: functioncmds:00000459:  errmsg("conflicting options"), 
fabc: functioncmds:00000460:  errhint("A SQL function cannot specify NO SQL."))); 
fabc: functioncmds:00000494:  ereport(ERROR, 
fabc: functioncmds:00000495:  (errcode(ERRCODE_SYNTAX_ERROR), 
fabc: functioncmds:00000496:  errmsg("conflicting or redundant options"))); 
fabc: functioncmds:00000502:  ereport(ERROR, 
fabc: functioncmds:00000503:  (errcode(ERRCODE_SYNTAX_ERROR), 
fabc: functioncmds:00000504:  errmsg("conflicting or redundant options"))); 
fabc: functioncmds:00000517:  elog(ERROR, "option \"%s\" not recognized", 
fabc: functioncmds:00000518:  defel->defname); 
fabc: functioncmds:00000526:  ereport(ERROR, 
fabc: functioncmds:00000527:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000528:  errmsg("no function body specified"))); 
fabc: functioncmds:00000536:  ereport(ERROR, 
fabc: functioncmds:00000537:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000538:  errmsg("no language specified"))); 
fabc: functioncmds:00000552:  ereport(ERROR, 
fabc: functioncmds:00000553:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabc: functioncmds:00000554:  errmsg("language \"%s\" does not exist", *languageName), 
fabc: functioncmds:00000555:  (PLTemplateExists(*languageName) ? 
fabc: functioncmds:00000556:  errhint("Use CREATE LANGUAGE to load the language into the database.") : 0))); 
fabc: functioncmds:00000628:  ereport(WARNING, 
fabc: functioncmds:00000629:  (errcode(ERRCODE_SYNTAX_ERROR), 
fabc: functioncmds:00000630:  errmsg("unrecognized function attribute \"%s\" ignored", 
fabc: functioncmds:00000631:  param->defname))); 
fabc: functioncmds:00000671:  ereport(ERROR, 
fabc: functioncmds:00000672:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000673:  errmsg("only one AS item needed for language \"%s\"", 
fabc: functioncmds:00000674:  languageName), 
fabc: functioncmds:00000675:  errOmitLocation(true))); 
fabc: functioncmds:00000709:  ereport(ERROR, 
fabc: functioncmds:00000710:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000711:  errmsg("DESCRIBE only supported for functions returning \"record\""), 
fabc: functioncmds:00000712:  errOmitLocation(true))); 
fabc: functioncmds:00000730:  ereport(ERROR, 
fabc: functioncmds:00000731:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000732:  errmsg("DESCRIBE is not supported for functions " 
fabc: functioncmds:00000733:  "with OUT parameters"), 
fabc: functioncmds:00000734:  errOmitLocation(true))); 
fabc: functioncmds:00000738:  ereport(ERROR, 
fabc: functioncmds:00000739:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000740:  errmsg("DESCRIBE is not supported for functions " 
fabc: functioncmds:00000741:  "that return TABLE"), 
fabc: functioncmds:00000742:  errOmitLocation(true))); 
fabc: functioncmds:00000747:  elog(ERROR, "unrecognized function parameter mode: %c", modes[i]); 
fabc: functioncmds:00000768:  ereport(ERROR, 
fabc: functioncmds:00000769:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
fabc: functioncmds:00000770:  errmsg("function %s does not exist", 
fabc: functioncmds:00000771:  func_signature_string(describeQualName, nargs, inputTypeOids)), 
fabc: functioncmds:00000772:  errOmitLocation(true))); 
fabc: functioncmds:00000776:  ereport(ERROR, 
fabc: functioncmds:00000777:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000778:  errmsg("return type of function %s is not \"internal\"", 
fabc: functioncmds:00000779:  func_signature_string(describeQualName, nargs, inputTypeOids)), 
fabc: functioncmds:00000780:  errOmitLocation(true))); 
fabc: functioncmds:00000784:  ereport(ERROR, 
fabc: functioncmds:00000785:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000786:  errmsg("function %s returns a set", 
fabc: functioncmds:00000787:  func_signature_string(describeQualName, nargs, inputTypeOids)), 
fabc: functioncmds:00000788:  errOmitLocation(true))); 
fabc: functioncmds:00000906:  ereport(ERROR, 
fabc: functioncmds:00000907:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000908:  errmsg("function result type must be %s because of OUT parameters", 
fabc: functioncmds:00000909:  format_type_be(requiredResultType)), 
fabc: functioncmds:00000910:  errOmitLocation(true))); 
fabc: functioncmds:00000921:  ereport(ERROR, 
fabc: functioncmds:00000922:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
fabc: functioncmds:00000923:  errmsg("function result type must be specified"))); 
fabc: functioncmds:00001020:  ereport(NOTICE, 
fabc: functioncmds:00001021:  (errmsg("function %s(%s) does not exist, skipping", 
fabc: functioncmds:00001022:  NameListToString(functionName), 
fabc: functioncmds:00001023:  TypeNameListToString(argTypes)))); 
fabc: functioncmds:00001036:  elog(ERROR, "cache lookup failed for function %u", funcOid); 
fabc: functioncmds:00001046:  ereport(ERROR, 
fabc: functioncmds:00001047:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
fabc: functioncmds:00001048:  errmsg("\"%s\" is an aggregate function", 
fabc: functioncmds:00001049:  NameListToString(functionName)), 
fabc: functioncmds:00001050:  errhint("Use DROP AGGREGATE to drop aggregate functions."))); 
fabc: functioncmds:00001056:  ereport(NOTICE, 
fabc: functioncmds:00001057:  (errcode(ERRCODE_WARNING), 
fabc: functioncmds:00001058:  errmsg("removing built-in function \"%s\"", 
fabc: functioncmds:00001059:  NameListToString(functionName)))); 
fabc: functioncmds:00001106:  elog(ERROR, "cache lookup failed for function %u", funcOid); 
fabc: functioncmds:00001128:  elog(ERROR, 
fabc: functioncmds:00001129:  "cache lookup failed for pg_aggregate tuple for function %u", 
fabc: functioncmds:00001130:  funcOid); 
fabc: functioncmds:00001166:  elog(ERROR, "cache lookup failed for function %u", procOid); 
fabc: functioncmds:00001170:  ereport(ERROR, 
fabc: functioncmds:00001171:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
fabc: functioncmds:00001172:  errmsg("\"%s\" is an aggregate function", 
fabc: functioncmds:00001173:  NameListToString(name)), 
fabc: functioncmds:00001174:  errhint("Use ALTER AGGREGATE to rename aggregate functions."))); 
fabc: functioncmds:00001189:  ereport(ERROR, 
fabc: functioncmds:00001190:  (errcode(ERRCODE_DUPLICATE_FUNCTION), 
fabc: functioncmds:00001191:  errmsg("function %s already exists in schema \"%s\"", 
fabc: functioncmds:00001192:  funcname_signature_string(newname, 
fabc: functioncmds:00001193:  procForm->pronargs, 
fabc: functioncmds:00001194:  procForm->proargtypes.values), 
fabc: functioncmds:00001195:  get_namespace_name(namespaceOid)))); 
fabc: functioncmds:00001243:  elog(ERROR, "cache lookup failed for function %u", procOid); 
fabc: functioncmds:00001246:  ereport(ERROR, 
fabc: functioncmds:00001247:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
fabc: functioncmds:00001248:  errmsg("\"%s\" is an aggregate function", 
fabc: functioncmds:00001249:  NameListToString(name)), 
fabc: functioncmds:00001250:  errhint("Use ALTER AGGREGATE to change owner of aggregate functions."))); 
fabc: functioncmds:00001280:  elog(ERROR, "cache lookup failed for function %u", procOid); 
fabc: functioncmds:00001406:  elog(ERROR, "cache lookup failed for function %u", funcOid); 
fabc: functioncmds:00001416:  ereport(ERROR, 
fabc: functioncmds:00001417:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
fabc: functioncmds:00001418:  errmsg("\"%s\" is an aggregate function", 
fabc: functioncmds:00001419:  NameListToString(stmt->func->funcname)))); 
fabc: functioncmds:00001431:  elog(ERROR, "option \"%s\" not recognized", defel->defname); 
fabc: functioncmds:00001507:  elog(ERROR, "cache lookup failed for function %u", funcOid); 
fabc: functioncmds:00001511:  elog(ERROR, "function %u doesn't return OPAQUE", funcOid); 
fabc: functioncmds:00001549:  elog(ERROR, "cache lookup failed for function %u", funcOid); 
fabc: functioncmds:00001554:  elog(ERROR, "function %u doesn't take OPAQUE", funcOid); 
fabc: functioncmds:00001593:  ereport(ERROR, 
fabc: functioncmds:00001594:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
fabc: functioncmds:00001595:  errmsg("source data type %s is a pseudo-type", 
fabc: functioncmds:00001596:  TypeNameToString(stmt->sourcetype)))); 
fabc: functioncmds:00001599:  ereport(ERROR, 
fabc: functioncmds:00001600:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
fabc: functioncmds:00001601:  errmsg("target data type %s is a pseudo-type", 
fabc: functioncmds:00001602:  TypeNameToString(stmt->targettype)))); 
fabc: functioncmds:00001607:  ereport(ERROR, 
fabc: functioncmds:00001608:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
fabc: functioncmds:00001609:  errmsg("must be owner of type %s or type %s", 
fabc: functioncmds:00001610:  TypeNameToString(stmt->sourcetype), 
fabc: functioncmds:00001611:  TypeNameToString(stmt->targettype)))); 
fabc: functioncmds:00001631:  elog(ERROR, "cache lookup failed for function %u", funcid); 
fabc: functioncmds:00001636:  ereport(ERROR, 
fabc: functioncmds:00001637:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
fabc: functioncmds:00001638:  errmsg("cast function must take one to three arguments"))); 
fabc: functioncmds:00001640:  ereport(ERROR, 
fabc: functioncmds:00001641:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
fabc: functioncmds:00001642:  errmsg("argument of cast function must match source data type"))); 
fabc: functioncmds:00001644:  ereport(ERROR, 
fabc: functioncmds:00001645:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
fabc: functioncmds:00001646:  errmsg("second argument of cast function must be type integer"))); 
fabc: functioncmds:00001648:  ereport(ERROR, 
fabc: functioncmds:00001649:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
fabc: functioncmds:00001650:  errmsg("third argument of cast function must be type boolean"))); 
fabc: functioncmds:00001652:  ereport(ERROR, 
fabc: functioncmds:00001653:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
fabc: functioncmds:00001654:  errmsg("return data type of cast function must match target data type"))); 
fabc: functioncmds:00001663:  ereport(ERROR, 
fabc: functioncmds:00001664:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
fabc: functioncmds:00001665:  errmsg("cast function must not be volatile"))); 
fabc: functioncmds:00001668:  ereport(ERROR, 
fabc: functioncmds:00001669:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
fabc: functioncmds:00001670:  errmsg("cast function must not be an aggregate function"))); 
fabc: functioncmds:00001672:  ereport(ERROR, 
fabc: functioncmds:00001673:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
fabc: functioncmds:00001674:  errmsg("cast function must not return a set"))); 
fabc: functioncmds:00001696:  ereport(ERROR, 
fabc: functioncmds:00001697:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
fabc: functioncmds:00001698:  errmsg("must be superuser to create a cast WITHOUT FUNCTION"))); 
fabc: functioncmds:00001711:  ereport(ERROR, 
fabc: functioncmds:00001712:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
fabc: functioncmds:00001713:  errmsg("source and target data types are not physically compatible"))); 
fabc: functioncmds:00001721:  ereport(ERROR, 
fabc: functioncmds:00001722:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
fabc: functioncmds:00001723:  errmsg("source data type and target data type are the same"))); 
fabc: functioncmds:00001738:  elog(ERROR, "unrecognized CoercionContext: %d", stmt->context); 
fabc: functioncmds:00001763:  ereport(ERROR, 
fabc: functioncmds:00001764:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
fabc: functioncmds:00001765:  errmsg("cast from type %s to type %s already exists", 
fabc: functioncmds:00001766:  TypeNameToString(stmt->sourcetype), 
fabc: functioncmds:00001767:  TypeNameToString(stmt->targettype)))); 
fabc: functioncmds:00001854:  ereport(ERROR, 
fabc: functioncmds:00001855:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
fabc: functioncmds:00001856:  errmsg("cast from type %s to type %s does not exist", 
fabc: functioncmds:00001857:  TypeNameToString(stmt->sourcetype), 
fabc: functioncmds:00001858:  TypeNameToString(stmt->targettype)))); 
fabc: functioncmds:00001860:  ereport(NOTICE, 
fabc: functioncmds:00001861:  (errmsg("cast from type %s to type %s does not exist, skipping", 
fabc: functioncmds:00001862:  TypeNameToString(stmt->sourcetype), 
fabc: functioncmds:00001863:  TypeNameToString(stmt->targettype)))); 
fabc: functioncmds:00001871:  ereport(ERROR, 
fabc: functioncmds:00001872:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
fabc: functioncmds:00001873:  errmsg("must be owner of type %s or type %s", 
fabc: functioncmds:00001874:  TypeNameToString(stmt->sourcetype), 
fabc: functioncmds:00001875:  TypeNameToString(stmt->targettype)))); 
fabc: functioncmds:00001905:  elog(ERROR, "could not find tuple for cast %u", castOid); 
fabc: functioncmds:00001950:  elog(ERROR, "cache lookup failed for function %u", procOid); 
fabc: functioncmds:00001959:  ereport(ERROR, 
fabc: functioncmds:00001960:  (errcode(ERRCODE_DUPLICATE_FUNCTION), 
fabc: functioncmds:00001961:  errmsg("function \"%s\" is already in schema \"%s\"", 
fabc: functioncmds:00001962:  NameListToString(name), 
fabc: functioncmds:00001963:  newschema))); 
fabc: functioncmds:00001967:  ereport(ERROR, 
fabc: functioncmds:00001968:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
fabc: functioncmds:00001969:  errmsg("cannot move objects into or out of temporary schemas"))); 
fabc: functioncmds:00001973:  ereport(ERROR, 
fabc: functioncmds:00001974:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
fabc: functioncmds:00001975:  errmsg("cannot move objects into or out of TOAST schema"))); 
fabc: functioncmds:00001979:  ereport(ERROR, 
fabc: functioncmds:00001980:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
fabc: functioncmds:00001981:  errmsg("cannot move objects into or out of AO SEGMENT schema"))); 
fabc: functioncmds:00001994:  ereport(ERROR, 
fabc: functioncmds:00001995:  (errcode(ERRCODE_DUPLICATE_FUNCTION), 
fabc: functioncmds:00001996:  errmsg("function \"%s\" already exists in schema \"%s\"", 
fabc: functioncmds:00001997:  NameStr(proc->proname), 
fabc: functioncmds:00001998:  newschema))); 
fabc: functioncmds:00002011:  elog(ERROR, "failed to change schema dependency for function \"%s\"", 
fabc: functioncmds:00002012:  NameListToString(name)); 
fabc: functioncmds:00002043:  elog(ERROR, "cache lookup failed for function %u", funcOid); 
fabc: functioncmds:00002073:  elog(ERROR, "invalid data access option for function %u", funcOid); 
aaaaa GP_IGNORE: iaaj: indexcmds - ./backend/commands/indexcmds.c
iaaj: indexcmds:00000170:  ereport(ERROR, 
iaaj: indexcmds:00000171:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
iaaj: indexcmds:00000172:  errmsg("must specify at least one column"))); 
iaaj: indexcmds:00000174:  ereport(ERROR, 
iaaj: indexcmds:00000175:  (errcode(ERRCODE_TOO_MANY_COLUMNS), 
iaaj: indexcmds:00000176:  errmsg("cannot use more than %d columns in an index", 
iaaj: indexcmds:00000177:  INDEX_MAX_KEYS))); 
iaaj: indexcmds:00000200:  ereport(ERROR, 
iaaj: indexcmds:00000201:  (errcode(ERRCODE_UNDEFINED_TABLE), 
iaaj: indexcmds:00000202:  errmsg("relation \"%s.%s\" does not exist", 
iaaj: indexcmds:00000203:  heapRelation->schemaname, heapRelation->relname), 
iaaj: indexcmds:00000204:  errOmitLocation(true))); 
iaaj: indexcmds:00000206:  ereport(ERROR, 
iaaj: indexcmds:00000207:  (errcode(ERRCODE_UNDEFINED_TABLE), 
iaaj: indexcmds:00000208:  errmsg("relation \"%s\" does not exist", 
iaaj: indexcmds:00000209:  heapRelation->relname), 
iaaj: indexcmds:00000210:  errOmitLocation(true))); 
iaaj: indexcmds:00000219:  ereport(ERROR, 
iaaj: indexcmds:00000220:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
iaaj: indexcmds:00000221:  errmsg("cannot create indexes on external tables."))); 
iaaj: indexcmds:00000226:  ereport(ERROR, 
iaaj: indexcmds:00000227:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
iaaj: indexcmds:00000228:  errmsg("\"%s\" is not a table", 
iaaj: indexcmds:00000229:  heapRelation->relname), 
iaaj: indexcmds:00000230:  errOmitLocation(true))); 
iaaj: indexcmds:00000236:  ereport(ERROR, 
iaaj: indexcmds:00000237:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaj: indexcmds:00000238:  errmsg("cannot create indexes on temporary tables of other sessions"), 
iaaj: indexcmds:00000239:  errOmitLocation(true))); 
iaaj: indexcmds:00000268:  ereport(ERROR, 
iaaj: indexcmds:00000269:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
iaaj: indexcmds:00000270:  errmsg("tablespace \"%s\" does not exist", 
iaaj: indexcmds:00000271:  tableSpaceName), 
iaaj: indexcmds:00000272:  errOmitLocation(true))); 
iaaj: indexcmds:00000360:  ereport(NOTICE, 
iaaj: indexcmds:00000361:  (errmsg("substituting access method \"gist\" for obsolete method \"rtree\""))); 
iaaj: indexcmds:00000374:  ereport(ERROR, 
iaaj: indexcmds:00000375:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
iaaj: indexcmds:00000376:  errmsg("access method \"%s\" does not exist", 
iaaj: indexcmds:00000377:  accessMethodName))); 
iaaj: indexcmds:00000383:  ereport(ERROR, 
iaaj: indexcmds:00000384:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaj: indexcmds:00000385:  errmsg("hash indexes are not supported"))); 
iaaj: indexcmds:00000389:  ereport(ERROR, 
iaaj: indexcmds:00000390:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaj: indexcmds:00000391:  errmsg("GIN indexes are not supported"))); 
iaaj: indexcmds:00000394:  ereport(ERROR, 
iaaj: indexcmds:00000395:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaj: indexcmds:00000396:  errmsg("access method \"%s\" does not support unique indexes", 
iaaj: indexcmds:00000397:  accessMethodName))); 
iaaj: indexcmds:00000399:  ereport(ERROR, 
iaaj: indexcmds:00000400:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaj: indexcmds:00000401:  errmsg("access method \"%s\" does not support multicolumn indexes", 
iaaj: indexcmds:00000402:  accessMethodName))); 
iaaj: indexcmds:00000405:  ereport(ERROR, 
iaaj: indexcmds:00000406:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaj: indexcmds:00000407:  errmsg("append-only tables do not support unique indexes"))); 
iaaj: indexcmds:00000420:  ereport(ERROR, 
iaaj: indexcmds:00000421:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
iaaj: indexcmds:00000422:  errmsg("index expressions and predicates may refer only to the table being indexed"))); 
iaaj: indexcmds:00000448:  ereport(ERROR, 
iaaj: indexcmds:00000449:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
iaaj: indexcmds:00000450:  errmsg("multiple primary keys for table \"%s\" are not allowed", 
iaaj: indexcmds:00000451:  RelationGetRelationName(rel)))); 
iaaj: indexcmds:00000465:  ereport(ERROR, 
iaaj: indexcmds:00000466:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaj: indexcmds:00000467:  errmsg("primary keys cannot be expressions"))); 
iaaj: indexcmds:00000497:  ereport(ERROR, 
iaaj: indexcmds:00000498:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
iaaj: indexcmds:00000499:  errmsg("column \"%s\" named in key does not exist", 
iaaj: indexcmds:00000500:  key->name))); 
iaaj: indexcmds:00000632:  ereport(NOTICE, 
iaaj: indexcmds:00000633:  (errmsg("%s %s will create implicit index \"%s\" for table \"%s\"", 
iaaj: indexcmds:00000634:  is_alter_table ? "ALTER TABLE / ADD" : "CREATE TABLE /", 
iaaj: indexcmds:00000635:  primary ? "PRIMARY KEY" : "UNIQUE", 
iaaj: indexcmds:00000636:  indexRelationName, RelationGetRelationName(rel)))); 
iaaj: indexcmds:00000717:  * Wait for QEs to finish. Exit via ereport(ERROR,...) if error. 
iaaj: indexcmds:00000718:  */ 
iaaj: indexcmds:00000719:  if (stmt->concurrent) 
iaaj: indexcmds:00000720:  { 
iaaj: indexcmds:00000721:  volatile struct CdbDispatcherState ds = {NULL, NULL}; 
iaaj: indexcmds:00000864:  elog(ERROR, "cache lookup failed for index %u", indexRelationId); 
iaaj: indexcmds:00000903:  ereport(ERROR, 
iaaj: indexcmds:00000904:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaj: indexcmds:00000905:  errmsg("cannot use subquery in index predicate"), 
iaaj: indexcmds:00000906:  errOmitLocation(true))); 
iaaj: indexcmds:00000908:  ereport(ERROR, 
iaaj: indexcmds:00000909:  (errcode(ERRCODE_GROUPING_ERROR), 
iaaj: indexcmds:00000910:  errmsg("cannot use aggregate in index predicate"), 
iaaj: indexcmds:00000911:  errOmitLocation(true))); 
iaaj: indexcmds:00000913:  ereport(ERROR, 
iaaj: indexcmds:00000914:  (errcode(ERRCODE_SYNTAX_ERROR), 
iaaj: indexcmds:00000915:  errmsg("cannot use window function in index predicate"), 
iaaj: indexcmds:00000916:  errOmitLocation(true))); 
iaaj: indexcmds:00000922:  ereport(ERROR, 
iaaj: indexcmds:00000923:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
iaaj: indexcmds:00000924:  errmsg("functions in index predicate must be marked IMMUTABLE"), 
iaaj: indexcmds:00000925:  errOmitLocation(true))); 
iaaj: indexcmds:00000964:  ereport(ERROR, 
iaaj: indexcmds:00000965:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
iaaj: indexcmds:00000966:  errmsg("column \"%s\" named in key does not exist", 
iaaj: indexcmds:00000967:  attribute->name))); 
iaaj: indexcmds:00000969:  ereport(ERROR, 
iaaj: indexcmds:00000970:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
iaaj: indexcmds:00000971:  errmsg("column \"%s\" does not exist", 
iaaj: indexcmds:00000972:  attribute->name))); 
iaaj: indexcmds:00001003:  ereport(ERROR, 
iaaj: indexcmds:00001004:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaj: indexcmds:00001005:  errmsg("cannot use subquery in index expression"))); 
iaaj: indexcmds:00001007:  ereport(ERROR, 
iaaj: indexcmds:00001008:  (errcode(ERRCODE_GROUPING_ERROR), 
iaaj: indexcmds:00001009:  errmsg("cannot use aggregate function in index expression"))); 
iaaj: indexcmds:00001011:  ereport(ERROR, 
iaaj: indexcmds:00001012:  (errcode(ERRCODE_SYNTAX_ERROR), 
iaaj: indexcmds:00001013:  errmsg("cannot use window function in index expression"))); 
iaaj: indexcmds:00001022:  ereport(ERROR, 
iaaj: indexcmds:00001023:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
iaaj: indexcmds:00001024:  errmsg("functions in index expression must be marked IMMUTABLE"))); 
iaaj: indexcmds:00001082:  ereport(ERROR, 
iaaj: indexcmds:00001083:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
iaaj: indexcmds:00001084:  errmsg("data type %s has no default operator class for access method \"%s\"", 
iaaj: indexcmds:00001085:  format_type_be(attrType), accessMethodName), 
iaaj: indexcmds:00001086:  errhint("You must specify an operator class for the index or define a default operator class for the data type."))); 
iaaj: indexcmds:00001119:  ereport(ERROR, 
iaaj: indexcmds:00001120:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
iaaj: indexcmds:00001121:  errmsg("operator class \"%s\" does not exist for access method \"%s\"", 
iaaj: indexcmds:00001122:  opcname, accessMethodName))); 
iaaj: indexcmds:00001134:  ereport(ERROR, 
iaaj: indexcmds:00001135:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
iaaj: indexcmds:00001136:  errmsg("operator class \"%s\" does not exist for access method \"%s\"", 
iaaj: indexcmds:00001137:  NameListToString(opclass), accessMethodName))); 
iaaj: indexcmds:00001147:  ereport(ERROR, 
iaaj: indexcmds:00001148:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
iaaj: indexcmds:00001149:  errmsg("operator class \"%s\" does not accept data type %s", 
iaaj: indexcmds:00001150:  NameListToString(opclass), format_type_be(attrType)))); 
iaaj: indexcmds:00001215:  ereport(ERROR, 
iaaj: indexcmds:00001216:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
iaaj: indexcmds:00001217:  errmsg("there are multiple default operator classes for data type %s", 
iaaj: indexcmds:00001218:  format_type_be(type_id)))); 
iaaj: indexcmds:00001402:  elog(ERROR, "cache lookup failed for index %u", indexoid); 
iaaj: indexcmds:00001451:  elog(ERROR, "cache lookup failed for index %u", indexoid); 
iaaj: indexcmds:00001499:  elog(ERROR, "index \"%s\" does not exist", relation->relname); 
iaaj: indexcmds:00001503:  ereport(ERROR, 
iaaj: indexcmds:00001504:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
iaaj: indexcmds:00001505:  errmsg("\"%s\" is not an index", 
iaaj: indexcmds:00001506:  relation->relname))); 
iaaj: indexcmds:00001520:  ereport(WARNING, 
iaaj: indexcmds:00001521:  (errmsg("Only dropped the index \"%s\"", relation->relname), 
iaaj: indexcmds:00001522:  errhint("To drop other indexes on child partitions, drop each one explicitly."))); 
iaaj: indexcmds:00001551:  elog(ERROR, "cache lookup failed for relation %u", indOid); 
iaaj: indexcmds:00001554:  ereport(ERROR, 
iaaj: indexcmds:00001555:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
iaaj: indexcmds:00001556:  errmsg("\"%s\" is not an index", 
iaaj: indexcmds:00001557:  stmt->relation->relname))); 
iaaj: indexcmds:00001630:  elog(ERROR, "cache lookup failed for relation %u", heapOid); 
iaaj: indexcmds:00001634:  ereport(ERROR, 
iaaj: indexcmds:00001635:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
iaaj: indexcmds:00001636:  errmsg("\"%s\" is not a table", 
iaaj: indexcmds:00001637:  stmt->relation->relname))); 
iaaj: indexcmds:00001646:  ereport(ERROR, 
iaaj: indexcmds:00001647:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
iaaj: indexcmds:00001648:  errmsg("shared table \"%s\" can only be reindexed in stand-alone mode", 
iaaj: indexcmds:00001649:  stmt->relation->relname))); 
iaaj: indexcmds:00001657:  ereport(NOTICE, 
iaaj: indexcmds:00001658:  (errmsg("table \"%s\" has no indexes", 
iaaj: indexcmds:00001659:  stmt->relation->relname))); 
iaaj: indexcmds:00001686:  ereport(ERROR, 
iaaj: indexcmds:00001687:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaj: indexcmds:00001688:  errmsg("can only reindex the currently open database"))); 
iaaj: indexcmds:00001784:  ereport(NOTICE, 
iaaj: indexcmds:00001785:  (errmsg("table \"%s\" was reindexed", 
iaaj: indexcmds:00001786:  get_rel_name(relid)))); 
aaaaa GP_IGNORE: laai: lockcmds - ./backend/commands/lockcmds.c
laai: lockcmds:00000071:  ereport(ERROR, 
laai: lockcmds:00000072:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
laai: lockcmds:00000073:  errmsg("\"%s\" is not a table", 
laai: lockcmds:00000074:  relation->relname))); 
aaaaa GP_IGNORE: oabb: opclasscmds - ./backend/commands/opclasscmds.c
oabb: opclasscmds:00000119:  ereport(ERROR, 
oabb: opclasscmds:00000120:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
oabb: opclasscmds:00000121:  errmsg("access method \"%s\" does not exist", 
oabb: opclasscmds:00000122:  stmt->amname))); 
oabb: opclasscmds:00000155:  ereport(ERROR, 
oabb: opclasscmds:00000156:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
oabb: opclasscmds:00000157:  errmsg("must be superuser to create an operator class"))); 
oabb: opclasscmds:00000191:  ereport(ERROR, 
oabb: opclasscmds:00000192:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
oabb: opclasscmds:00000193:  errmsg("invalid operator number %d," 
oabb: opclasscmds:00000194:  " must be between 1 and %d", 
oabb: opclasscmds:00000195:  item->number, numOperators))); 
oabb: opclasscmds:00000235:  ereport(ERROR, 
oabb: opclasscmds:00000236:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
oabb: opclasscmds:00000237:  errmsg("invalid procedure number %d," 
oabb: opclasscmds:00000238:  " must be between 1 and %d", 
oabb: opclasscmds:00000239:  item->number, numProcs))); 
oabb: opclasscmds:00000259:  ereport(ERROR, 
oabb: opclasscmds:00000260:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
oabb: opclasscmds:00000261:  errmsg("storage type specified more than once"))); 
oabb: opclasscmds:00000273:  elog(ERROR, "unrecognized item type: %d", item->itemtype); 
oabb: opclasscmds:00000287:  ereport(ERROR, 
oabb: opclasscmds:00000288:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
oabb: opclasscmds:00000289:  errmsg("storage type may not be different from data type for access method \"%s\"", 
oabb: opclasscmds:00000290:  stmt->amname))); 
oabb: opclasscmds:00000315:  ereport(ERROR, 
oabb: opclasscmds:00000316:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
oabb: opclasscmds:00000317:  errmsg("operator class \"%s\" for access method \"%s\" already exists", 
oabb: opclasscmds:00000318:  opcname, stmt->amname))); 
oabb: opclasscmds:00000342:  ereport(ERROR, 
oabb: opclasscmds:00000343:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
oabb: opclasscmds:00000344:  errmsg("could not make operator class \"%s\" be default for type %s", 
oabb: opclasscmds:00000345:  opcname, 
oabb: opclasscmds:00000346:  TypeNameToString(stmt->datatype)), 
oabb: opclasscmds:00000347:  errdetail("Operator class \"%s\" already is the default.", 
oabb: opclasscmds:00000348:  NameStr(opclass->opcname)))); 
oabb: opclasscmds:00000483:  elog(ERROR, "cache lookup failed for operator %u", operOid); 
oabb: opclasscmds:00000491:  ereport(ERROR, 
oabb: opclasscmds:00000492:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
oabb: opclasscmds:00000493:  errmsg("btree operators must be binary"))); 
oabb: opclasscmds:00000495:  ereport(ERROR, 
oabb: opclasscmds:00000496:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
oabb: opclasscmds:00000497:  errmsg("btree operators must return boolean"))); 
oabb: opclasscmds:00000499:  ereport(ERROR, 
oabb: opclasscmds:00000500:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
oabb: opclasscmds:00000501:  errmsg("btree operators must have index type as left input"))); 
oabb: opclasscmds:00000544:  elog(ERROR, "cache lookup failed for function %u", procOid); 
oabb: opclasscmds:00000552:  ereport(ERROR, 
oabb: opclasscmds:00000553:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
oabb: opclasscmds:00000554:  errmsg("btree procedures must have two arguments"))); 
oabb: opclasscmds:00000556:  ereport(ERROR, 
oabb: opclasscmds:00000557:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
oabb: opclasscmds:00000558:  errmsg("btree procedures must return integer"))); 
oabb: opclasscmds:00000560:  ereport(ERROR, 
oabb: opclasscmds:00000561:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
oabb: opclasscmds:00000562:  errmsg("btree procedures must have index type as first input"))); 
oabb: opclasscmds:00000594:  ereport(ERROR, 
oabb: opclasscmds:00000595:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
oabb: opclasscmds:00000596:  errmsg("procedure number %d appears more than once", 
oabb: opclasscmds:00000597:  member->number))); 
oabb: opclasscmds:00000599:  ereport(ERROR, 
oabb: opclasscmds:00000600:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
oabb: opclasscmds:00000601:  errmsg("operator number %d appears more than once", 
oabb: opclasscmds:00000602:  member->number))); 
oabb: opclasscmds:00000723:  ereport(ERROR, 
oabb: opclasscmds:00000724:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
oabb: opclasscmds:00000725:  errmsg("access method \"%s\" does not exist", 
oabb: opclasscmds:00000726:  stmt->amname))); 
oabb: opclasscmds:00000760:  ereport(ERROR, 
oabb: opclasscmds:00000761:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
oabb: opclasscmds:00000762:  errmsg("operator class \"%s\" does not exist for access method \"%s\"", 
oabb: opclasscmds:00000763:  opcname, stmt->amname))); 
oabb: opclasscmds:00000765:  ereport(NOTICE, 
oabb: opclasscmds:00000766:  (errmsg("operator class \"%s\" does not exist for access method \"%s\"", 
oabb: opclasscmds:00000767:  opcname, stmt->amname))); 
oabb: opclasscmds:00000786:  ereport(ERROR, 
oabb: opclasscmds:00000787:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
oabb: opclasscmds:00000788:  errmsg("operator class \"%s\" does not exist for access method \"%s\"", 
oabb: opclasscmds:00000789:  NameListToString(stmt->opclassname), stmt->amname))); 
oabb: opclasscmds:00000791:  ereport(NOTICE, 
oabb: opclasscmds:00000792:  (errmsg("operator class \"%s\" does not exist for access method \"%s\"", 
oabb: opclasscmds:00000793:  NameListToString(stmt->opclassname), stmt->amname))); 
oabb: opclasscmds:00000886:  ereport(ERROR, 
oabb: opclasscmds:00000887:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
oabb: opclasscmds:00000888:  errmsg("access method \"%s\" does not exist", 
oabb: opclasscmds:00000889:  access_method))); 
oabb: opclasscmds:00000916:  ereport(ERROR, 
oabb: opclasscmds:00000917:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
oabb: opclasscmds:00000918:  errmsg("operator class \"%s\" does not exist for access method \"%s\"", 
oabb: opclasscmds:00000919:  opcname, access_method))); 
oabb: opclasscmds:00000927:  ereport(ERROR, 
oabb: opclasscmds:00000928:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
oabb: opclasscmds:00000929:  errmsg("operator class \"%s\" does not exist for access method \"%s\"", 
oabb: opclasscmds:00000930:  opcname, access_method))); 
oabb: opclasscmds:00000940:  elog(ERROR, "cache lookup failed for opclass %u", opcOid); 
oabb: opclasscmds:00000956:  ereport(ERROR, 
oabb: opclasscmds:00000957:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
oabb: opclasscmds:00000958:  errmsg("operator class \"%s\" for access method \"%s\" already exists in schema \"%s\"", 
oabb: opclasscmds:00000959:  newname, access_method, 
oabb: opclasscmds:00000960:  get_namespace_name(namespaceOid)))); 
oabb: opclasscmds:00001003:  elog(ERROR, "cache lookup failed for opclass %u", opcOid); 
oabb: opclasscmds:00001033:  ereport(ERROR, 
oabb: opclasscmds:00001034:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
oabb: opclasscmds:00001035:  errmsg("access method \"%s\" does not exist", 
oabb: opclasscmds:00001036:  access_method))); 
oabb: opclasscmds:00001065:  ereport(ERROR, 
oabb: opclasscmds:00001066:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
oabb: opclasscmds:00001067:  errmsg("operator class \"%s\" does not exist for access method \"%s\"", 
oabb: opclasscmds:00001068:  opcname, access_method))); 
oabb: opclasscmds:00001076:  ereport(ERROR, 
oabb: opclasscmds:00001077:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
oabb: opclasscmds:00001078:  errmsg("operator class \"%s\" does not exist for access method \"%s\"", 
oabb: opclasscmds:00001079:  opcname, access_method))); 
oabb: opclasscmds:00001089:  elog(ERROR, "cache lookup failed for opclass %u", opcOid); 
aaaaa GP_IGNORE: oabc: operatorcmds - ./backend/commands/operatorcmds.c
oabc: operatorcmds:00000109:  ereport(ERROR, 
oabc: operatorcmds:00000110:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
oabc: operatorcmds:00000111:  errmsg("setof type not allowed for operator argument"))); 
oabc: operatorcmds:00000117:  ereport(ERROR, 
oabc: operatorcmds:00000118:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
oabc: operatorcmds:00000119:  errmsg("setof type not allowed for operator argument"))); 
oabc: operatorcmds:00000144:  ereport(WARNING, 
oabc: operatorcmds:00000145:  (errcode(ERRCODE_SYNTAX_ERROR), 
oabc: operatorcmds:00000146:  errmsg("operator attribute \"%s\" not recognized", 
oabc: operatorcmds:00000147:  defel->defname))); 
oabc: operatorcmds:00000154:  ereport(ERROR, 
oabc: operatorcmds:00000155:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
oabc: operatorcmds:00000156:  errmsg("operator procedure must be specified"))); 
oabc: operatorcmds:00000240:  ereport(NOTICE, 
oabc: operatorcmds:00000241:  (errmsg("operator %s does not exist, skipping", 
oabc: operatorcmds:00000242:  NameListToString(operatorName)))); 
oabc: operatorcmds:00000255:  elog(ERROR, "cache lookup failed for operator %u", operOid); 
oabc: operatorcmds:00000293:  elog(ERROR, "cache lookup failed for operator %u", operOid); 
oabc: operatorcmds:00000351:  elog(ERROR, "cache lookup failed for operator %u", operOid); 
aaaaa GP_IGNORE: paba: portalcmds - ./backend/commands/portalcmds.c
paba: portalcmds:00000059:  elog(ERROR, "PerformCursorOpen called for non-cursor query"); 
paba: portalcmds:00000066:  ereport(ERROR, 
paba: portalcmds:00000067:  (errcode(ERRCODE_INVALID_CURSOR_NAME), 
paba: portalcmds:00000068:  errmsg("invalid cursor name: must not be empty"))); 
paba: portalcmds:00000087:  /*ereport(ERROR, 
paba: portalcmds:00000088:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
paba: portalcmds:00000089:  errmsg("scrollable cursors are not yet supported in Greenplum Database")));*/ 
paba: portalcmds:00000090:  
paba: portalcmds:00000091:  cstmt->options -= CURSOR_OPT_SCROLL; 
paba: portalcmds:00000202:  ereport(ERROR, 
paba: portalcmds:00000203:  (errcode(ERRCODE_INVALID_CURSOR_NAME), 
paba: portalcmds:00000204:  errmsg("invalid cursor name: must not be empty"), 
paba: portalcmds:00000205:  errOmitLocation(true))); 
paba: portalcmds:00000211:  ereport(ERROR, 
paba: portalcmds:00000212:  (errcode(ERRCODE_UNDEFINED_CURSOR), 
paba: portalcmds:00000213:  errmsg("cursor \"%s\" does not exist", stmt->portalname), 
paba: portalcmds:00000214:  errOmitLocation(true))); 
paba: portalcmds:00000249:  ereport(ERROR, 
paba: portalcmds:00000250:  (errcode(ERRCODE_INVALID_CURSOR_NAME), 
paba: portalcmds:00000251:  errmsg("invalid cursor name: must not be empty"), 
paba: portalcmds:00000252:  errOmitLocation(true))); 
paba: portalcmds:00000260:  ereport(ERROR, 
paba: portalcmds:00000261:  (errcode(ERRCODE_UNDEFINED_CURSOR), 
paba: portalcmds:00000262:  errmsg("cursor \"%s\" does not exist", name), 
paba: portalcmds:00000263:  errOmitLocation(true))); 
paba: portalcmds:00000444:  ereport(ERROR, 
paba: portalcmds:00000445:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paba: portalcmds:00000446:  errmsg("portal \"%s\" cannot be run", portal->name))); 
paba: portalcmds:00000529:  ereport(ERROR, 
paba: portalcmds:00000530:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paba: portalcmds:00000531:  errmsg("could not reposition held cursor"))); 
paba: portalcmds:00000538:  elog(ERROR, "unexpected end of tuple stream"); 
aaaaa GP_IGNORE: paah: prepare - ./backend/commands/prepare.c
paah: prepare:00000078:  ereport(ERROR, 
paah: prepare:00000079:  (errcode(ERRCODE_INVALID_PSTATEMENT_DEFINITION), 
paah: prepare:00000080:  errmsg("invalid statement name: must not be empty"))); 
paah: prepare:00000101:  ereport(ERROR, 
paah: prepare:00000102:  (errcode(ERRCODE_INVALID_PSTATEMENT_DEFINITION), 
paah: prepare:00000103:  errmsg("utility statements cannot be prepared"), 
paah: prepare:00000104:  errOmitLocation(true))); 
paah: prepare:00000218:  ereport(ERROR, 
paah: prepare:00000219:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paah: prepare:00000220:  errmsg("prepared statement is not a SELECT"))); 
paah: prepare:00000229:  ereport(ERROR, 
paah: prepare:00000230:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paah: prepare:00000231:  errmsg("prepared statement is not a SELECT"), 
paah: prepare:00000232:  errOmitLocation(true))); 
paah: prepare:00000301:  elog(ERROR, "wrong number of arguments"); 
paah: prepare:00000385:  ereport(ERROR, 
paah: prepare:00000386:  (errcode(ERRCODE_DUPLICATE_PSTATEMENT), 
paah: prepare:00000387:  errmsg("prepared statement \"%s\" already exists", 
paah: prepare:00000388:  stmt_name), 
paah: prepare:00000389:  errOmitLocation(true))); 
paah: prepare:00000418:  elog(ERROR, "duplicate prepared statement \"%s\"", 
paah: prepare:00000419:  stmt_name); 
paah: prepare:00000456:  ereport(ERROR, 
paah: prepare:00000457:  (errcode(ERRCODE_UNDEFINED_PSTATEMENT), 
paah: prepare:00000458:  errmsg("prepared statement \"%s\" does not exist", 
paah: prepare:00000459:  stmt_name), 
paah: prepare:00000460:  errOmitLocation(true))); 
paah: prepare:00000697:  ereport(ERROR, 
paah: prepare:00000698:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paah: prepare:00000699:  errmsg("prepared statement is not a SELECT"), 
paah: prepare:00000700:  errOmitLocation(true))); 
paah: prepare:00000743:  ereport(ERROR, 
paah: prepare:00000744:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: prepare:00000745:  errmsg("set-valued function called in context that cannot accept a set"))); 
paah: prepare:00000747:  ereport(ERROR, 
paah: prepare:00000748:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: prepare:00000749:  errmsg("materialize mode required, but it is not " \ 
paah: prepare:00000750:  "allowed in this context"))); 
aaaaa GP_IGNORE: paai: proclang - ./backend/commands/proclang.c
paai: proclang:00000070:  ereport(ERROR, 
paai: proclang:00000071:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
paai: proclang:00000072:  errmsg("must be superuser to create procedural language"), 
paai: proclang:00000073:  errOmitLocation(true))); 
paai: proclang:00000101:  ereport(NOTICE, 
paai: proclang:00000102:  (errmsg("language \"plpgsql\" already exists, skipping"))); 
paai: proclang:00000107:  ereport(ERROR, 
paai: proclang:00000108:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
paai: proclang:00000109:  errmsg("language \"%s\" already exists", languageName), 
paai: proclang:00000110:  errOmitLocation(true))); 
paai: proclang:00000127:  ereport(NOTICE, 
paai: proclang:00000128:  (errmsg("using pg_pltemplate information instead of " 
paai: proclang:00000129:  "CREATE LANGUAGE parameters"), 
paai: proclang:00000130:  errOmitLocation(true))); 
paai: proclang:00000143:  ereport(ERROR, 
paai: proclang:00000144:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paai: proclang:00000145:  errmsg("function %s must return type \"language_handler\"", 
paai: proclang:00000146:  NameListToString(funcname)), 
paai: proclang:00000147:  errOmitLocation(true))); 
paai: proclang:00000223:  ereport(ERROR, 
paai: proclang:00000224:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paai: proclang:00000225:  errmsg("unsupported language \"%s\"", 
paai: proclang:00000226:  languageName), 
paai: proclang:00000227:  errhint("The supported languages are listed in the pg_pltemplate system catalog."), 
paai: proclang:00000228:  errOmitLocation(true))); 
paai: proclang:00000246:  ereport(WARNING, 
paai: proclang:00000247:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paai: proclang:00000248:  errmsg("changing return type of function %s from \"opaque\" to \"language_handler\"", 
paai: proclang:00000249:  NameListToString(stmt->plhandler)), 
paai: proclang:00000250:  errOmitLocation(true))); 
paai: proclang:00000254:  ereport(ERROR, 
paai: proclang:00000255:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paai: proclang:00000256:  errmsg("function %s must return type \"language_handler\"", 
paai: proclang:00000257:  NameListToString(stmt->plhandler)), 
paai: proclang:00000258:  errOmitLocation(true))); 
paai: proclang:00000438:  ereport(ERROR, 
paai: proclang:00000439:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
paai: proclang:00000440:  errmsg("must be superuser to drop procedural language"), 
paai: proclang:00000441:  errOmitLocation(true))); 
paai: proclang:00000459:  ereport(ERROR, 
paai: proclang:00000460:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paai: proclang:00000461:  errmsg("language \"%s\" does not exist", languageName), 
paai: proclang:00000462:  errOmitLocation(true))); 
paai: proclang:00000464:  ereport(NOTICE, 
paai: proclang:00000465:  (errmsg("language \"%s\" does not exist, skipping", 
paai: proclang:00000466:  languageName), 
paai: proclang:00000467:  errOmitLocation(true))); 
paai: proclang:00000500:  elog(ERROR, "cache lookup failed for language %u", langOid); 
paai: proclang:00000533:  ereport(ERROR, 
paai: proclang:00000534:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paai: proclang:00000535:  errmsg("language \"%s\" does not exist", oldname), 
paai: proclang:00000536:  errOmitLocation(true))); 
paai: proclang:00000545:  ereport(ERROR, 
paai: proclang:00000546:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
paai: proclang:00000547:  errmsg("language \"%s\" already exists", newname), 
paai: proclang:00000548:  errOmitLocation(true))); 
paai: proclang:00000553:  ereport(ERROR, 
paai: proclang:00000554:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
paai: proclang:00000555:  errmsg("must be superuser to rename procedural language"), 
paai: proclang:00000556:  errOmitLocation(true))); 
aaaaa GP_IGNORE: qaaf: queue - ./backend/commands/queue.c
qaaf: queue:00000125:  ereport(ERROR, 
qaaf: queue:00000126:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00000127:  errmsg("Invalid parameter value \"%s\" for " 
qaaf: queue:00000128:  "resource type \"%s\". " 
qaaf: queue:00000129:  "Value must be in kB, MB or GB.", 
qaaf: queue:00000130:  pResSetting, restyp))); 
qaaf: queue:00000135:  ereport(ERROR, 
qaaf: queue:00000136:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00000137:  errmsg("Invalid parameter value \"%s\" for " 
qaaf: queue:00000138:  "resource type \"%s\". " 
qaaf: queue:00000139:  "Value must be at least %dkB", 
qaaf: queue:00000140:  pResSetting, restyp, (int) MIN_RESOURCEQUEUE_MEMORY_LIMIT_KB))); 
qaaf: queue:00000183:  ereport(ERROR, 
qaaf: queue:00000184:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00000185:  errmsg("unknown resource type \"%d\"", 
qaaf: queue:00000186:  resTypeInt))); 
qaaf: queue:00000192:  ereport(ERROR, 
qaaf: queue:00000193:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00000194:  errmsg("Invalid parameter value \"%s\" for " 
qaaf: queue:00000195:  "resource type \"%s\"", 
qaaf: queue:00000196:  pResSetting, restyp))); 
qaaf: queue:00000341:  ereport(ERROR, 
qaaf: queue:00000342:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00000343:  errmsg("option \"%s\" is not a valid resource type", 
qaaf: queue:00000344:  defel->defname))); 
qaaf: queue:00000374:  ereport(ERROR, 
qaaf: queue:00000375:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00000376:  errmsg("option \"%s\" cannot be disabled", 
qaaf: queue:00000377:  defel->defname))); 
qaaf: queue:00000395:  ereport(ERROR, 
qaaf: queue:00000396:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00000397:  errmsg("required option \"%s\" cannot be disabled", 
qaaf: queue:00000398:  defel->defname))); 
qaaf: queue:00000425:  ereport(ERROR, 
qaaf: queue:00000426:  (errcode(ERRCODE_SYNTAX_ERROR), 
qaaf: queue:00000427:  errmsg("conflicting or redundant option for \"%s\"", 
qaaf: queue:00000428:  defel->defname))); 
qaaf: queue:00000770:  ereport(ERROR, 
qaaf: queue:00000771:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
qaaf: queue:00000772:  errmsg("must be superuser to create resource queues"))); 
qaaf: queue:00000793:  ereport(ERROR, 
qaaf: queue:00000794:  (errcode(ERRCODE_SYNTAX_ERROR), 
qaaf: queue:00000795:  errmsg("conflicting or redundant options"))); 
qaaf: queue:00000801:  ereport(ERROR, 
qaaf: queue:00000802:  (errcode(ERRCODE_SYNTAX_ERROR), 
qaaf: queue:00000803:  errmsg("conflicting or redundant options"))); 
qaaf: queue:00000809:  ereport(ERROR, 
qaaf: queue:00000810:  (errcode(ERRCODE_SYNTAX_ERROR), 
qaaf: queue:00000811:  errmsg("conflicting or redundant options"))); 
qaaf: queue:00000817:  ereport(ERROR, 
qaaf: queue:00000818:  (errcode(ERRCODE_SYNTAX_ERROR), 
qaaf: queue:00000819:  errmsg("conflicting or redundant options"))); 
qaaf: queue:00000826:  ereport(ERROR, 
qaaf: queue:00000827:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00000828:  errmsg("option \"%s\" is not a valid resource type", 
qaaf: queue:00000829:  defel->defname))); 
qaaf: queue:00000841:  elog(ERROR, "option \"%s\" not recognized", 
qaaf: queue:00000842:  defel->defname); 
qaaf: queue:00000851:  ereport(ERROR, 
qaaf: queue:00000852:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00000853:  errmsg("active threshold cannot be less than %d or equal to 0", 
qaaf: queue:00000854:  INVALID_RES_LIMIT_THRESHOLD))); 
qaaf: queue:00000861:  ereport(ERROR, 
qaaf: queue:00000862:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00000863:  errmsg("cost threshold cannot be less than %d or equal to 0", 
qaaf: queue:00000864:  INVALID_RES_LIMIT_THRESHOLD))); 
qaaf: queue:00000876:  ereport(ERROR, 
qaaf: queue:00000877:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00000878:  errmsg("min_cost threshold cannot be negative"))); 
qaaf: queue:00000886:  ereport(ERROR, 
qaaf: queue:00000887:  (errcode(ERRCODE_SYNTAX_ERROR), 
qaaf: queue:00000888:  errmsg("at least one threshold (\"ACTIVE_STATEMENTS\", \"MAX_COST\") must be specified"), 
qaaf: queue:00000889:  errOmitLocation(true))); 
qaaf: queue:00000894:  ereport(ERROR, 
qaaf: queue:00000895:  (errcode(ERRCODE_SYNTAX_ERROR), 
qaaf: queue:00000896:  errmsg("the value for at least one threshold (\"ACTIVE_STATEMENTS\", \"MAX_COST\") must be different from no limit (%d)", 
qaaf: queue:00000897:  INVALID_RES_LIMIT_THRESHOLD), 
qaaf: queue:00000898:  errOmitLocation(true))); 
qaaf: queue:00000905:  ereport(ERROR, 
qaaf: queue:00000906:  (errcode(ERRCODE_RESERVED_NAME), 
qaaf: queue:00000907:  errmsg("resource queue name \"%s\" is reserved", 
qaaf: queue:00000908:  stmt->queue), 
qaaf: queue:00000909:  errOmitLocation(true))); 
qaaf: queue:00000938:  ereport(ERROR, 
qaaf: queue:00000939:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
qaaf: queue:00000940:  errmsg("resource queue \"%s\" already exists", 
qaaf: queue:00000941:  stmt->queue))); 
qaaf: queue:00001021:  ereport(ERROR, 
qaaf: queue:00001022:  (errcode(ERRCODE_INSUFFICIENT_RESOURCES), 
qaaf: queue:00001023:  errmsg("insufficient resource queues available"), 
qaaf: queue:00001024:  errhint("Increase max_resource_queues"))); 
qaaf: queue:00001028:  ereport(WARNING, 
qaaf: queue:00001029:  (errmsg("resource scheduling is disabled"), 
qaaf: queue:00001030:  errhint("To enable set resource_scheduler=on"))); 
qaaf: queue:00001095:  ereport(ERROR, 
qaaf: queue:00001096:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
qaaf: queue:00001097:  errmsg("must be superuser to alter resource queues"))); 
qaaf: queue:00001118:  ereport(ERROR, 
qaaf: queue:00001119:  (errcode(ERRCODE_SYNTAX_ERROR), 
qaaf: queue:00001120:  errmsg("conflicting or redundant options"))); 
qaaf: queue:00001134:  ereport(ERROR, 
qaaf: queue:00001135:  (errcode(ERRCODE_SYNTAX_ERROR), 
qaaf: queue:00001136:  errmsg("conflicting or redundant options"))); 
qaaf: queue:00001150:  ereport(ERROR, 
qaaf: queue:00001151:  (errcode(ERRCODE_SYNTAX_ERROR), 
qaaf: queue:00001152:  errmsg("conflicting or redundant options"))); 
qaaf: queue:00001166:  ereport(ERROR, 
qaaf: queue:00001167:  (errcode(ERRCODE_SYNTAX_ERROR), 
qaaf: queue:00001168:  errmsg("conflicting or redundant options"))); 
qaaf: queue:00001184:  ereport(ERROR, 
qaaf: queue:00001185:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00001186:  errmsg("option \"%s\" is not a valid resource type", 
qaaf: queue:00001187:  defel->defname))); 
qaaf: queue:00001197:  ereport(ERROR, 
qaaf: queue:00001198:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00001199:  errmsg("option \"%s\" is not a valid resource type", 
qaaf: queue:00001200:  defel->defname))); 
qaaf: queue:00001211:  elog(ERROR, "option \"%s\" not recognized", 
qaaf: queue:00001212:  defel->defname); 
qaaf: queue:00001242:  ereport(ERROR, 
qaaf: queue:00001243:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00001244:  errmsg("active threshold cannot be less than %d or equal to 0", 
qaaf: queue:00001245:  INVALID_RES_LIMIT_THRESHOLD), 
qaaf: queue:00001246:  errOmitLocation(true))); 
qaaf: queue:00001253:  ereport(ERROR, 
qaaf: queue:00001254:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00001255:  errmsg("cost threshold must be equal to %d or greater than 0", 
qaaf: queue:00001256:  INVALID_RES_LIMIT_THRESHOLD), 
qaaf: queue:00001257:  errOmitLocation(true))); 
qaaf: queue:00001270:  ereport(ERROR, 
qaaf: queue:00001271:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00001272:  errmsg("min_cost threshold cannot be negative"), 
qaaf: queue:00001273:  errOmitLocation(true))); 
qaaf: queue:00001290:  ereport(ERROR, 
qaaf: queue:00001291:  (errcode(ERRCODE_SYNTAX_ERROR), 
qaaf: queue:00001292:  errmsg("at least one threshold, overcommit or ignore limit must be specified"), 
qaaf: queue:00001293:  errOmitLocation(true))); 
qaaf: queue:00001319:  ereport(ERROR, 
qaaf: queue:00001320:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
qaaf: queue:00001321:  errmsg("resource queue \"%s\" does not exist", 
qaaf: queue:00001322:  stmt->queue), 
qaaf: queue:00001323:  errOmitLocation(true))); 
qaaf: queue:00001393:  ereport(ERROR, 
qaaf: queue:00001394:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
qaaf: queue:00001395:  errmsg("the value for at least one threshold (\"ACTIVE_STATEMENTS\", \"MAX_COST\") must be different from no limit (%d)", 
qaaf: queue:00001396:  INVALID_RES_LIMIT_THRESHOLD))); 
qaaf: queue:00001453:  ereport(ERROR, 
qaaf: queue:00001454:  (errcode(ERRCODE_INVALID_LIMIT_VALUE), 
qaaf: queue:00001455:  errmsg("thresholds cannot be less than current values"))); 
qaaf: queue:00001457:  ereport(ERROR, 
qaaf: queue:00001458:  (errcode(ERRCODE_INVALID_LIMIT_VALUE), 
qaaf: queue:00001459:  errmsg("disabling overcommit cannot leave queue in possibly overcommitted state"))); 
qaaf: queue:00001461:  ereport(ERROR, 
qaaf: queue:00001462:  (errcode(ERRCODE_INTERNAL_ERROR), 
qaaf: queue:00001463:  errmsg("queue hash table corrupted"))); 
qaaf: queue:00001470:  ereport(WARNING, 
qaaf: queue:00001471:  (errmsg("resource scheduling is disabled"), 
qaaf: queue:00001472:  errhint("To enable set resource_scheduler=on"))); 
qaaf: queue:00001509:  ereport(ERROR, 
qaaf: queue:00001510:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
qaaf: queue:00001511:  errmsg("must be superuser to drop resource queues"))); 
qaaf: queue:00001535:  ereport(ERROR, 
qaaf: queue:00001536:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
qaaf: queue:00001537:  errmsg("resource queue \"%s\" does not exist", 
qaaf: queue:00001538:  stmt->queue))); 
qaaf: queue:00001554:  ereport(ERROR, 
qaaf: queue:00001555:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
qaaf: queue:00001556:  errmsg("resource queue \"%s\" is used by at least one role", 
qaaf: queue:00001557:  stmt->queue))); 
qaaf: queue:00001562:  ereport(ERROR, 
qaaf: queue:00001563:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
qaaf: queue:00001564:  errmsg("cannot drop default resource queue \"%s\"", 
qaaf: queue:00001565:  stmt->queue))); 
qaaf: queue:00001595:  ereport(ERROR, 
qaaf: queue:00001596:  (errcode(ERRCODE_INSUFFICIENT_RESOURCES), 
qaaf: queue:00001597:  errmsg("resource queue cannot be dropped as is in use"))); 
qaaf: queue:00001601:  ereport(WARNING, 
qaaf: queue:00001602:  (errmsg("resource scheduling is disabled"), 
qaaf: queue:00001603:  errhint("To enable set resource_scheduler=on"))); 
aaaaa GP_IGNORE: saba: schemacmds - ./backend/commands/schemacmds.c
saba: schemacmds:00000116:  ereport(ERROR, 
saba: schemacmds:00000117:  (errcode(ERRCODE_RESERVED_NAME), 
saba: schemacmds:00000118:  errmsg("unacceptable schema name \"%s\"", schemaName), 
saba: schemacmds:00000119:  errdetail("The prefix \"%s\" is reserved for system schemas.", 
saba: schemacmds:00000120:  GetReservedPrefix(schemaName)))); 
saba: schemacmds:00000222:  ereport(ERROR, 
saba: schemacmds:00000223:  (errcode(ERRCODE_SYNTAX_ERROR), 
saba: schemacmds:00000224:  errmsg("schema name may not be qualified"))); 
saba: schemacmds:00000247:  ereport(ERROR, 
saba: schemacmds:00000248:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
saba: schemacmds:00000249:  errmsg("schema \"%s\" does not exist", schemaName), 
saba: schemacmds:00000250:  errOmitLocation(true))); 
saba: schemacmds:00000254:  ereport(NOTICE, 
saba: schemacmds:00000255:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
saba: schemacmds:00000256:  errmsg("schema \"%s\" does not exist, skipping", 
saba: schemacmds:00000257:  schemaName))); 
saba: schemacmds:00000271:  ereport(ERROR, 
saba: schemacmds:00000272:  (errcode(ERRCODE_RESERVED_NAME), 
saba: schemacmds:00000273:  errmsg("cannot drop schema %s because it is required by the database system", schemaName))); 
saba: schemacmds:00000305:  elog(ERROR, "cache lookup failed for namespace %u", schemaOid); 
saba: schemacmds:00000338:  ereport(ERROR, 
saba: schemacmds:00000339:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
saba: schemacmds:00000340:  errmsg("schema \"%s\" does not exist", oldname))); 
saba: schemacmds:00000349:  ereport(ERROR, 
saba: schemacmds:00000350:  (errcode(ERRCODE_DUPLICATE_SCHEMA), 
saba: schemacmds:00000351:  errmsg("schema \"%s\" already exists", newname))); 
saba: schemacmds:00000368:  ereport(ERROR, 
saba: schemacmds:00000369:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
saba: schemacmds:00000370:  errmsg("permission denied to ALTER SCHEMA \"%s\"", oldname), 
saba: schemacmds:00000371:  errdetail("Schema %s is reserved for system use.", oldname))); 
saba: schemacmds:00000376:  ereport(ERROR, 
saba: schemacmds:00000377:  (errcode(ERRCODE_RESERVED_NAME), 
saba: schemacmds:00000378:  errmsg("unacceptable schema name \"%s\"", newname), 
saba: schemacmds:00000379:  errdetail("The prefix \"%s\" is reserved for system schemas.", 
saba: schemacmds:00000380:  GetReservedPrefix(newname)))); 
saba: schemacmds:00000421:  elog(ERROR, "cache lookup failed for schema %u", oid); 
saba: schemacmds:00000456:  ereport(ERROR, 
saba: schemacmds:00000457:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
saba: schemacmds:00000458:  errmsg("schema \"%s\" does not exist", name))); 
saba: schemacmds:00000462:  ereport(ERROR, 
saba: schemacmds:00000463:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
saba: schemacmds:00000464:  errmsg("permission denied to ALTER SCHEMA \"%s\"", name), 
saba: schemacmds:00000465:  errdetail("Schema %s is reserved for system use.", name))); 
aaaaa GP_IGNORE: saai: sequence - ./backend/commands/sequence.c
saai: sequence:00000325:  elog(ERROR, "Cound not find persistent information for sequence %u/%u/%u", 
saai: sequence:00000326:  rel->rd_node.spcNode, 
saai: sequence:00000327:  rel->rd_node.dbNode, 
saai: sequence:00000328:  rel->rd_node.relNode); 
saai: sequence:00000350:  elog(ERROR, 
saai: sequence:00000351:  "Sequence_FetchGpRelationNodeForXLog has invalid TID (0,0) for relation %u/%u/%u '%s', serial number " INT64_FORMAT, 
saai: sequence:00000352:  rel->rd_node.spcNode, 
saai: sequence:00000353:  rel->rd_node.dbNode, 
saai: sequence:00000354:  rel->rd_node.relNode, 
saai: sequence:00000355:  NameStr(rel->rd_rel->relname), 
saai: sequence:00000356:  rel->rd_segfile0_relationnodeinfos[0].persistentSerialNum); 
saai: sequence:00000828:  ereport(ERROR, 
saai: sequence:00000829:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
saai: sequence:00000830:  errmsg("permission denied for sequence %s", 
saai: sequence:00000831:  RelationGetRelationName(seqrel)))); 
saai: sequence:00001074:  ereport(ERROR, 
saai: sequence:00001075:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
saai: sequence:00001076:  errmsg("currval() not supported"))); 
saai: sequence:00001084:  ereport(ERROR, 
saai: sequence:00001085:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
saai: sequence:00001086:  errmsg("permission denied for sequence %s", 
saai: sequence:00001087:  RelationGetRelationName(seqrel)))); 
saai: sequence:00001090:  ereport(ERROR, 
saai: sequence:00001091:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
saai: sequence:00001092:  errmsg("currval of sequence \"%s\" is not yet defined in this session", 
saai: sequence:00001093:  RelationGetRelationName(seqrel)))); 
saai: sequence:00001111:  ereport(ERROR, 
saai: sequence:00001112:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
saai: sequence:00001113:  errmsg("lastval() not supported"))); 
saai: sequence:00001117:  ereport(ERROR, 
saai: sequence:00001118:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
saai: sequence:00001119:  errmsg("lastval is not yet defined in this session"))); 
saai: sequence:00001128:  ereport(ERROR, 
saai: sequence:00001129:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
saai: sequence:00001130:  errmsg("lastval is not yet defined in this session"))); 
saai: sequence:00001140:  ereport(ERROR, 
saai: sequence:00001141:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
saai: sequence:00001142:  errmsg("permission denied for sequence %s", 
saai: sequence:00001143:  RelationGetRelationName(seqrel)))); 
saai: sequence:00001176:  ereport(ERROR, 
saai: sequence:00001177:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
saai: sequence:00001178:  errmsg("setval() not supported in this context"))); 
saai: sequence:00001185:  ereport(ERROR, 
saai: sequence:00001186:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
saai: sequence:00001187:  errmsg("permission denied for sequence %s", 
saai: sequence:00001188:  RelationGetRelationName(seqrel)))); 
saai: sequence:00001207:  ereport(ERROR, 
saai: sequence:00001208:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
saai: sequence:00001209:  errmsg("setval: value %s is out of bounds for sequence \"%s\" (%s..%s)", 
saai: sequence:00001210:  bufv, RelationGetRelationName(seqrel), 
saai: sequence:00001211:  bufm, bufx))); 
saai: sequence:00001380:  ereport(ERROR, 
saai: sequence:00001381:  (errcode(ERRCODE_OUT_OF_MEMORY), 
saai: sequence:00001382:  errmsg("out of memory"))); 
saai: sequence:00001397:  ereport(ERROR, 
saai: sequence:00001398:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
saai: sequence:00001399:  errmsg("\"%s\" is not a sequence", 
saai: sequence:00001400:  RelationGetRelationName(seqrel)))); 
saai: sequence:00001426:  elog(ERROR, "bad magic number in sequence \"%s\": %08X", 
saai: sequence:00001427:  RelationGetRelationName(rel), sm->magic); 
saai: sequence:00001467:  ereport(ERROR, 
saai: sequence:00001468:  (errcode(ERRCODE_SYNTAX_ERROR), 
saai: sequence:00001469:  errmsg("conflicting or redundant options"))); 
saai: sequence:00001480:  ereport(ERROR, 
saai: sequence:00001481:  (errcode(ERRCODE_SYNTAX_ERROR), 
saai: sequence:00001482:  errmsg("conflicting or redundant options"))); 
saai: sequence:00001488:  ereport(ERROR, 
saai: sequence:00001489:  (errcode(ERRCODE_SYNTAX_ERROR), 
saai: sequence:00001490:  errmsg("conflicting or redundant options"))); 
saai: sequence:00001496:  ereport(ERROR, 
saai: sequence:00001497:  (errcode(ERRCODE_SYNTAX_ERROR), 
saai: sequence:00001498:  errmsg("conflicting or redundant options"))); 
saai: sequence:00001504:  ereport(ERROR, 
saai: sequence:00001505:  (errcode(ERRCODE_SYNTAX_ERROR), 
saai: sequence:00001506:  errmsg("conflicting or redundant options"))); 
saai: sequence:00001512:  ereport(ERROR, 
saai: sequence:00001513:  (errcode(ERRCODE_SYNTAX_ERROR), 
saai: sequence:00001514:  errmsg("conflicting or redundant options"))); 
saai: sequence:00001520:  ereport(ERROR, 
saai: sequence:00001521:  (errcode(ERRCODE_SYNTAX_ERROR), 
saai: sequence:00001522:  errmsg("conflicting or redundant options"))); 
saai: sequence:00001526:  elog(ERROR, "option \"%s\" not recognized", 
saai: sequence:00001527:  defel->defname); 
saai: sequence:00001535:  ereport(ERROR, 
saai: sequence:00001536:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
saai: sequence:00001537:  errmsg("INCREMENT must not be zero"))); 
saai: sequence:00001581:  ereport(ERROR, 
saai: sequence:00001582:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
saai: sequence:00001583:  errmsg("MINVALUE (%s) must be less than MAXVALUE (%s)", 
saai: sequence:00001584:  bufm, bufx))); 
saai: sequence:00001612:  ereport(ERROR, 
saai: sequence:00001613:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
saai: sequence:00001614:  errmsg("START value (%s) can't be less than MINVALUE (%s)", 
saai: sequence:00001615:  bufs, bufm))); 
saai: sequence:00001624:  ereport(ERROR, 
saai: sequence:00001625:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
saai: sequence:00001626:  errmsg("START value (%s) can't be greater than MAXVALUE (%s)", 
saai: sequence:00001627:  bufs, bufm))); 
saai: sequence:00001639:  ereport(ERROR, 
saai: sequence:00001640:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
saai: sequence:00001641:  errmsg("CACHE (%s) must be greater than zero", 
saai: sequence:00001642:  buf))); 
saai: sequence:00001670:  ereport(ERROR, 
saai: sequence:00001671:  (errcode(ERRCODE_SYNTAX_ERROR), 
saai: sequence:00001672:  errmsg("invalid OWNED BY option"), 
saai: sequence:00001673:  errhint("Specify OWNED BY table.column or OWNED BY NONE."))); 
saai: sequence:00001693:  ereport(ERROR, 
saai: sequence:00001694:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
saai: sequence:00001695:  errmsg("referenced relation \"%s\" is not a table", 
saai: sequence:00001696:  RelationGetRelationName(tablerel)))); 
saai: sequence:00001700:  ereport(ERROR, 
saai: sequence:00001701:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
saai: sequence:00001702:  errmsg("sequence must have same owner as table it is linked to"))); 
saai: sequence:00001704:  ereport(ERROR, 
saai: sequence:00001705:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
saai: sequence:00001706:  errmsg("sequence must be in same schema as table it is linked to"))); 
saai: sequence:00001711:  ereport(ERROR, 
saai: sequence:00001712:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
saai: sequence:00001713:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
saai: sequence:00001714:  attrname, RelationGetRelationName(tablerel)))); 
aaaaa GP_IGNORE: taaj: tablecmds - ./backend/commands/tablecmds.c
taaj: tablecmds:00000416:  ereport(ERROR, 
taaj: tablecmds:00000417:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
taaj: tablecmds:00000418:  errmsg("Creating table on tablespace 'pg_default' is not allowed"))); 
taaj: tablecmds:00000465:  ereport(ERROR, 
taaj: tablecmds:00000466:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00000467:  errmsg("ON COMMIT can only be used on temporary tables"), 
taaj: tablecmds:00000468:  errOmitLocation(true))); 
taaj: tablecmds:00000520:  ereport(ERROR, 
taaj: tablecmds:00000521:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00000522:  errmsg("tablespace \"%s\" does not exist", 
taaj: tablecmds:00000523:  stmt->tablespacename), 
taaj: tablecmds:00000524:  errOmitLocation(true))); 
taaj: tablecmds:00000640:  ereport(ERROR, 
taaj: tablecmds:00000641:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: tablecmds:00000642:  errmsg( 
taaj: tablecmds:00000643:  "OIDS=TRUE is not allowed on partitioned tables. " 
taaj: tablecmds:00000644:  "Use OIDS=FALSE" 
taaj: tablecmds:00000645:  ), 
taaj: tablecmds:00000646:  errOmitLocation(true))); 
taaj: tablecmds:00000824:  ereport(ERROR, 
taaj: tablecmds:00000825:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00000826:  errmsg("Invalid EXECUTE clause. Found an empty command string"), 
taaj: tablecmds:00000827:  errOmitLocation(true))); 
taaj: tablecmds:00000832:  ereport(ERROR, 
taaj: tablecmds:00000833:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
taaj: tablecmds:00000834:  errmsg("Internal error: unknown external table type"), 
taaj: tablecmds:00000835:  errOmitLocation(true))); 
taaj: tablecmds:00000851:  ereport(ERROR, 
taaj: tablecmds:00000852:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taaj: tablecmds:00000853:  errmsg("must be superuser to create an EXECUTE external web table"), 
taaj: tablecmds:00000854:  errOmitLocation(true))); 
taaj: tablecmds:00000867:  ereport(ERROR, 
taaj: tablecmds:00000868:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taaj: tablecmds:00000869:  errmsg("must be superuser to create an external table with a file protocol"), 
taaj: tablecmds:00000870:  errOmitLocation(true))); 
taaj: tablecmds:00000894:  ereport(ERROR, 
taaj: tablecmds:00000895:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00000896:  errmsg("role \"%s\" does not exist (in DefineExternalRelation)", 
taaj: tablecmds:00000897:  GetUserNameFromId(userid)))); 
taaj: tablecmds:00000906:  ereport(ERROR, 
taaj: tablecmds:00000907:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taaj: tablecmds:00000908:  errmsg("permission denied: no privilege to create a writable gpfdist(s) external table"), 
taaj: tablecmds:00000909:  errOmitLocation(true))); 
taaj: tablecmds:00000918:  ereport(ERROR, 
taaj: tablecmds:00000919:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taaj: tablecmds:00000920:  errmsg("permission denied: no privilege to create a readable gpfdist(s) external table"), 
taaj: tablecmds:00000921:  errOmitLocation(true))); 
taaj: tablecmds:00000931:  ereport(ERROR, 
taaj: tablecmds:00000932:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taaj: tablecmds:00000933:  errmsg("permission denied: no privilege to create an http external table"), 
taaj: tablecmds:00000934:  errOmitLocation(true))); 
taaj: tablecmds:00000956:  ereport(ERROR, 
taaj: tablecmds:00000957:  (errcode(ERRCODE_INTERNAL_ERROR), 
taaj: tablecmds:00000958:  errmsg("internal error in DefineExternalRelation. " 
taaj: tablecmds:00000959:  "protocol is %d, writable is %d", 
taaj: tablecmds:00000960:  uri->protocol, iswritable))); 
taaj: tablecmds:00000998:  ereport(ERROR, 
taaj: tablecmds:00000999:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00001000:  errmsg("KEEP is not supported in the external table definition. " 
taaj: tablecmds:00001001:  "Error table will be dropped when its external table is " 
taaj: tablecmds:00001002:  "dropped."), 
taaj: tablecmds:00001003:  errOmitLocation(true))); 
taaj: tablecmds:00001021:  ereport(ERROR, 
taaj: tablecmds:00001022:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00001023:  errmsg("conflicting or redundant ENCODING specification"), 
taaj: tablecmds:00001024:  errOmitLocation(true))); 
taaj: tablecmds:00001038:  ereport(ERROR, 
taaj: tablecmds:00001039:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00001040:  errmsg("%d is not a valid encoding code", 
taaj: tablecmds:00001041:  encoding), 
taaj: tablecmds:00001042:  errOmitLocation(true))); 
taaj: tablecmds:00001048:  ereport(ERROR, 
taaj: tablecmds:00001049:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00001050:  errmsg("%s is not a valid encoding name", 
taaj: tablecmds:00001051:  encoding_name), 
taaj: tablecmds:00001052:  errOmitLocation(true))); 
taaj: tablecmds:00001056:  elog(ERROR, "unrecognized node type: %d", 
taaj: tablecmds:00001057:  nodeTag(dencoding->arg)); 
taaj: tablecmds:00001228:  * via ereport(ERROR,...) if unsuccessful. 
taaj: tablecmds:00001229:  */ 
taaj: tablecmds:00001230:  cdbdisp_finishCommand(&ds, NULL, NULL); 
taaj: tablecmds:00001395:  elog(ERROR, "relation \"%s\" does not exist", relation->relname); 
taaj: tablecmds:00001405:  ereport(ERROR, 
taaj: tablecmds:00001406:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
taaj: tablecmds:00001407:  errmsg("cannot drop partition \"%s\" directly", 
taaj: tablecmds:00001408:  get_rel_name(relOid)), 
taaj: tablecmds:00001409:  errhint("Table \"%s\" is a child partition of table " 
taaj: tablecmds:00001410:  "\"%s\". To drop it, use ALTER TABLE \"%s\"%s...", 
taaj: tablecmds:00001411:  get_rel_name(relOid), get_rel_name(master), 
taaj: tablecmds:00001412:  get_rel_name(master), pretty ? pretty : "" ), 
taaj: tablecmds:00001413:  errOmitLocation(true))); 
taaj: tablecmds:00001488:  elog(ERROR, "cache lookup failed for relation %u", relOid); 
taaj: tablecmds:00001565:  ereport(ERROR, 
taaj: tablecmds:00001566:  (errcode(ERRCODE_UNDEFINED_TABLE), 
taaj: tablecmds:00001567:  errmsg("relation \"%s.%s\" does not exist", 
taaj: tablecmds:00001568:  rv->schemaname, rv->relname), 
taaj: tablecmds:00001569:  errOmitLocation(true))); 
taaj: tablecmds:00001571:  ereport(ERROR, 
taaj: tablecmds:00001572:  (errcode(ERRCODE_UNDEFINED_TABLE), 
taaj: tablecmds:00001573:  errmsg("relation \"%s\" does not exist", 
taaj: tablecmds:00001574:  rv->relname), 
taaj: tablecmds:00001575:  errOmitLocation(true))); 
taaj: tablecmds:00001657:  ereport(NOTICE, 
taaj: tablecmds:00001658:  (errmsg("truncate cascades to table \"%s\"", 
taaj: tablecmds:00001659:  RelationGetRelationName(rel)), 
taaj: tablecmds:00001660:  errOmitLocation(true))); 
taaj: tablecmds:00001714:  ereport(ERROR, 
taaj: tablecmds:00001715:  ( errcode(ERRCODE_GP_COMMAND_ERROR), 
taaj: tablecmds:00001716:  errmsg("TRUNCATE on heap table is not supported."))); 
taaj: tablecmds:00001765:  ereport(ERROR, 
taaj: tablecmds:00001766:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00001767:  errmsg("\"%s\" is not a table", 
taaj: tablecmds:00001768:  RelationGetRelationName(rel)), 
taaj: tablecmds:00001769:  errOmitLocation(true))); 
taaj: tablecmds:00001772:  ereport(ERROR, 
taaj: tablecmds:00001773:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00001774:  errmsg("\"%s\" is an external relation and can't be truncated", 
taaj: tablecmds:00001775:  RelationGetRelationName(rel)), 
taaj: tablecmds:00001776:  errOmitLocation(true))); 
taaj: tablecmds:00001785:  ereport(ERROR, 
taaj: tablecmds:00001786:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taaj: tablecmds:00001787:  errmsg("permission denied: \"%s\" is a system catalog", 
taaj: tablecmds:00001788:  RelationGetRelationName(rel)), 
taaj: tablecmds:00001789:  errOmitLocation(true))); 
taaj: tablecmds:00001796:  ereport(ERROR, 
taaj: tablecmds:00001797:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00001798:  errmsg("cannot truncate system relation \"%s\"", 
taaj: tablecmds:00001799:  RelationGetRelationName(rel)), 
taaj: tablecmds:00001800:  errOmitLocation(true))); 
taaj: tablecmds:00001807:  ereport(ERROR, 
taaj: tablecmds:00001808:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00001809:  errmsg("cannot truncate temporary tables of other sessions"), 
taaj: tablecmds:00001810:  errOmitLocation(true))); 
taaj: tablecmds:00001905:  ereport(ERROR, 
taaj: tablecmds:00001906:  (errcode(ERRCODE_TOO_MANY_COLUMNS), 
taaj: tablecmds:00001907:  errmsg("tables can have at most %d columns", 
taaj: tablecmds:00001908:  MaxHeapAttributeNumber))); 
taaj: tablecmds:00001927:  ereport(ERROR, 
taaj: tablecmds:00001928:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
taaj: tablecmds:00001929:  errmsg("column \"%s\" duplicated", 
taaj: tablecmds:00001930:  coldef->colname), 
taaj: tablecmds:00001931:  errOmitLocation(true))); 
taaj: tablecmds:00001953:  ereport(ERROR, 
taaj: tablecmds:00001954:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00001955:  errmsg("inherited relation \"%s\" is not a table", 
taaj: tablecmds:00001956:  parent->relname), 
taaj: tablecmds:00001957:  errOmitLocation(true))); 
taaj: tablecmds:00001960:  ereport(ERROR, 
taaj: tablecmds:00001961:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00001962:  errmsg("cannot inherit from temporary relation \"%s\"", 
taaj: tablecmds:00001963:  parent->relname), 
taaj: tablecmds:00001964:  errOmitLocation(true))); 
taaj: tablecmds:00001968:  ereport(ERROR, 
taaj: tablecmds:00001969:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00001970:  errmsg("cannot inherit relation \"%s\" as it is column oriented", 
taaj: tablecmds:00001971:  parent->relname), 
taaj: tablecmds:00001972:  errOmitLocation(true))); 
taaj: tablecmds:00001985:  ereport(ERROR, 
taaj: tablecmds:00001986:  (errcode(ERRCODE_DUPLICATE_TABLE), 
taaj: tablecmds:00001987:  errmsg("inherited relation \"%s\" duplicated", 
taaj: tablecmds:00001988:  parent->relname), 
taaj: tablecmds:00001989:  errOmitLocation(true))); 
taaj: tablecmds:00002046:  ereport(NOTICE, 
taaj: tablecmds:00002047:  (errmsg("merging multiple inherited definitions of column \"%s\"", 
taaj: tablecmds:00002048:  attributeName))); 
taaj: tablecmds:00002052:  ereport(ERROR, 
taaj: tablecmds:00002053:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taaj: tablecmds:00002054:  errmsg("inherited column \"%s\" has a type conflict", 
taaj: tablecmds:00002055:  attributeName), 
taaj: tablecmds:00002056:  errdetail("%s versus %s", 
taaj: tablecmds:00002057:  TypeNameToString(def->typname), 
taaj: tablecmds:00002058:  format_type_be(attribute->atttypid)), 
taaj: tablecmds:00002059:  errOmitLocation(true))); 
taaj: tablecmds:00002217:  ereport(NOTICE, 
taaj: tablecmds:00002218:  (errmsg("merging column \"%s\" with inherited definition", 
taaj: tablecmds:00002219:  attributeName))); 
taaj: tablecmds:00002223:  ereport(ERROR, 
taaj: tablecmds:00002224:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taaj: tablecmds:00002225:  errmsg("column \"%s\" has a type conflict", 
taaj: tablecmds:00002226:  attributeName), 
taaj: tablecmds:00002227:  errdetail("%s versus %s", 
taaj: tablecmds:00002228:  TypeNameToString(def->typname), 
taaj: tablecmds:00002229:  TypeNameToString(newdef->typname)))); 
taaj: tablecmds:00002257:  ereport(ERROR, 
taaj: tablecmds:00002258:  (errcode(ERRCODE_TOO_MANY_COLUMNS), 
taaj: tablecmds:00002259:  errmsg("tables can have at most %d columns", 
taaj: tablecmds:00002260:  MaxHeapAttributeNumber))); 
taaj: tablecmds:00002274:  ereport(ERROR, 
taaj: tablecmds:00002275:  (errcode(ERRCODE_INVALID_COLUMN_DEFINITION), 
taaj: tablecmds:00002276:  errmsg("column \"%s\" inherits conflicting default values", 
taaj: tablecmds:00002277:  def->colname), 
taaj: tablecmds:00002278:  errhint("To resolve the conflict, specify a default explicitly."))); 
taaj: tablecmds:00002577:  elog(ERROR, "cache lookup failed for relation %u", relationId); 
taaj: tablecmds:00002646:  ereport(ERROR, 
taaj: tablecmds:00002647:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taaj: tablecmds:00002648:  errmsg("permission denied: \"%s\" is a system catalog", 
taaj: tablecmds:00002649:  RelationGetRelationName(targetrelation)))); 
taaj: tablecmds:00002690:  ereport(ERROR, 
taaj: tablecmds:00002691:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00002692:  errmsg("inherited column \"%s\" must be renamed in child tables too", 
taaj: tablecmds:00002693:  oldattname))); 
taaj: tablecmds:00002702:  ereport(ERROR, 
taaj: tablecmds:00002703:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
taaj: tablecmds:00002704:  errmsg("column \"%s\" does not exist", 
taaj: tablecmds:00002705:  oldattname), 
taaj: tablecmds:00002706:  errOmitLocation(true))); 
taaj: tablecmds:00002711:  ereport(ERROR, 
taaj: tablecmds:00002712:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00002713:  errmsg("cannot rename system column \"%s\"", 
taaj: tablecmds:00002714:  oldattname))); 
taaj: tablecmds:00002721:  ereport(ERROR, 
taaj: tablecmds:00002722:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00002723:  errmsg("cannot rename inherited column \"%s\"", 
taaj: tablecmds:00002724:  oldattname))); 
taaj: tablecmds:00002736:  ereport(ERROR, 
taaj: tablecmds:00002737:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
taaj: tablecmds:00002738:  errmsg("column \"%s\" of relation \"%s\" already exists", 
taaj: tablecmds:00002739:  newattname, RelationGetRelationName(targetrelation)), 
taaj: tablecmds:00002740:  errOmitLocation(true))); 
taaj: tablecmds:00002775:  elog(ERROR, "cache lookup failed for index %u", indexoid); 
taaj: tablecmds:00002878:  ereport(ERROR, 
taaj: tablecmds:00002879:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
taaj: tablecmds:00002880:  errmsg("cannot rename partition \"%s\" directly", 
taaj: tablecmds:00002881:  get_rel_name(myrelid)), 
taaj: tablecmds:00002882:  errhint("Table \"%s\" is a child partition of table " 
taaj: tablecmds:00002883:  "\"%s\". To rename it, use ALTER TABLE \"%s\"%s...", 
taaj: tablecmds:00002884:  get_rel_name(myrelid), get_rel_name(master), 
taaj: tablecmds:00002885:  get_rel_name(master), pretty ? pretty : "" ), 
taaj: tablecmds:00002886:  errOmitLocation(true))); 
taaj: tablecmds:00002901:  ereport(ERROR, 
taaj: tablecmds:00002902:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00002903:  errmsg("relation \"%d\" does not exist", myrelid))); 
taaj: tablecmds:00002922:  ereport(ERROR, 
taaj: tablecmds:00002923:  (errcode(ERRCODE_DUPLICATE_TABLE), 
taaj: tablecmds:00002924:  errmsg("relation \"%s\" already exists", 
taaj: tablecmds:00002925:  newrelname), 
taaj: tablecmds:00002926:  errOmitLocation(true))); 
taaj: tablecmds:00002945:  ereport(WARNING, 
taaj: tablecmds:00002946:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00002947:  errmsg("type \"%s\" does not exist", oldrelname))); 
taaj: tablecmds:00003026:  ereport(WARNING, 
taaj: tablecmds:00003027:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: tablecmds:00003028:  errmsg("renamed %d partitions, " 
taaj: tablecmds:00003029:  "skipped %d child partitions " 
taaj: tablecmds:00003030:  "due to name truncation", 
taaj: tablecmds:00003031:  renamed, skipped), 
taaj: tablecmds:00003032:  errOmitLocation(true))); 
taaj: tablecmds:00003308:  ereport(ERROR, 
taaj: tablecmds:00003309:  (errcode(ERRCODE_OBJECT_IN_USE), 
taaj: tablecmds:00003310:  /* translator: first %s is a SQL command, eg ALTER TABLE */ 
taaj: tablecmds:00003311:  errmsg("cannot %s \"%s\" because " 
taaj: tablecmds:00003312:  "it is being used by active queries in this session", 
taaj: tablecmds:00003313:  stmt, RelationGetRelationName(rel)))); 
taaj: tablecmds:00003317:  ereport(ERROR, 
taaj: tablecmds:00003318:  (errcode(ERRCODE_OBJECT_IN_USE), 
taaj: tablecmds:00003319:  /* translator: first %s is a SQL command, eg ALTER TABLE */ 
taaj: tablecmds:00003320:  errmsg("cannot %s \"%s\" because " 
taaj: tablecmds:00003321:  "it has pending trigger events", 
taaj: tablecmds:00003322:  stmt, RelationGetRelationName(rel)))); 
taaj: tablecmds:00003340:  ereport(ERROR, 
taaj: tablecmds:00003341:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00003342:  errmsg("\"%s\" is a foreign table", RelationGetRelationName(rel)), 
taaj: tablecmds:00003343:  errhint("Use ALTER FOREIGN TABLE instead"), 
taaj: tablecmds:00003344:  errOmitLocation(true))); 
taaj: tablecmds:00003357:  ereport(WARNING, 
taaj: tablecmds:00003358:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00003359:  errmsg("\"%s\" is an external table. ALTER TABLE for external tables is deprecated.", RelationGetRelationName(rel)), 
taaj: tablecmds:00003360:  errhint("Use ALTER EXTERNAL TABLE instead"), 
taaj: tablecmds:00003361:  errOmitLocation(true))); 
taaj: tablecmds:00003365:  ereport(ERROR, 
taaj: tablecmds:00003366:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00003367:  errmsg("\"%s\" is an external table", RelationGetRelationName(rel)), 
taaj: tablecmds:00003368:  errhint("Use ALTER EXTERNAL TABLE instead"), 
taaj: tablecmds:00003369:  errOmitLocation(true))); 
taaj: tablecmds:00003374:  ereport(ERROR, 
taaj: tablecmds:00003375:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00003376:  errmsg("\"%s\" is a base table", RelationGetRelationName(rel)), 
taaj: tablecmds:00003377:  errhint("Use ALTER TABLE instead"), 
taaj: tablecmds:00003378:  errOmitLocation(true))); 
taaj: tablecmds:00003434:  ereport(ERROR, 
taaj: tablecmds:00003435:  (errcode(ERRCODE_INVALID_COLUMN_DEFINITION), 
taaj: tablecmds:00003436:  errmsg("Unsupported ALTER command for table type %s", 
taaj: tablecmds:00003437:  (RelationIsExternal(rel) ? "external" : "foreign")), 
taaj: tablecmds:00003438:  errOmitLocation(true))); 
taaj: tablecmds:00003445:  ereport(ERROR, 
taaj: tablecmds:00003446:  (errcode(ERRCODE_INVALID_COLUMN_DEFINITION), 
taaj: tablecmds:00003447:  errmsg("Unsupported ALTER command for table type %s. No constraints allowed.", 
taaj: tablecmds:00003448:  (RelationIsExternal(rel) ? "external" : "foreign")), 
taaj: tablecmds:00003449:  errOmitLocation(true))); 
taaj: tablecmds:00003597:  ereport(ERROR, 
taaj: tablecmds:00003598:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter index statement yet") )); 
taaj: tablecmds:00003603:  ereport(ERROR, 
taaj: tablecmds:00003604:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter foreign table statement yet") )); 
taaj: tablecmds:00003609:  ereport(ERROR, 
taaj: tablecmds:00003610:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter external table statement yet") )); 
taaj: tablecmds:00003632:  ereport(ERROR, 
taaj: tablecmds:00003633:  (errcode(ERRCODE_OBJECT_IN_USE), 
taaj: tablecmds:00003634:  errmsg("relation \"%s\" is being used by active queries in this session", 
taaj: tablecmds:00003635:  RelationGetRelationName(rel)))); 
taaj: tablecmds:00003940:  ereport(ERROR, 
taaj: tablecmds:00003941:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
taaj: tablecmds:00003942:  errmsg("ALTER TABLE ... ADD INDEX is not supported"))); 
taaj: tablecmds:00003980:  ereport(ERROR, 
taaj: tablecmds:00003981:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00003982:  errmsg("can't place a %s constraint on just part of " 
taaj: tablecmds:00003983:  "partitioned table \"%s\"", 
taaj: tablecmds:00003984:  what,RelationGetRelationName(rel)), 
taaj: tablecmds:00003985:  errhint("Constrain the whole table or create a " 
taaj: tablecmds:00003986:  "part-wise UNIQUE index instead."))); 
taaj: tablecmds:00004071:  ereport(ERROR, 
taaj: tablecmds:00004072:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
taaj: tablecmds:00004073:  errmsg("ALTER TABLE ... CLUSTER is not supported"))); 
taaj: tablecmds:00004075:  ereport(ERROR, 
taaj: tablecmds:00004076:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
taaj: tablecmds:00004077:  errmsg("ALTER TABLE ... SET WITHOUT CLUSTER is not supported"))); 
taaj: tablecmds:00004099:  ereport(ERROR, 
taaj: tablecmds:00004100:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
taaj: tablecmds:00004101:  errmsg("ALTER TABLE ... SET TABLESPACE is not supported"))); 
taaj: tablecmds:00004131:  ereport(ERROR, 
taaj: tablecmds:00004132:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00004133:  errmsg("SET TABLESPACE is not supported in utility mode"))); 
taaj: tablecmds:00004163:  ereport(ERROR, 
taaj: tablecmds:00004164:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00004165:  errmsg("can't set the distribution" 
taaj: tablecmds:00004166:  " policy of \"%s\"", 
taaj: tablecmds:00004167:  RelationGetRelationName(rel)), 
taaj: tablecmds:00004168:  errhint("Distribution policy may be set" 
taaj: tablecmds:00004169:  " for an entire partitioned table" 
taaj: tablecmds:00004170:  " or one of its leaf parts;" 
taaj: tablecmds:00004171:  " not for an interior branch." 
taaj: tablecmds:00004172:  ), 
taaj: tablecmds:00004173:  errOmitLocation(true))); 
taaj: tablecmds:00004187:  ereport(ERROR, 
taaj: tablecmds:00004188:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00004189:  errmsg("can't set the distribution policy " 
taaj: tablecmds:00004190:  "of ONLY \"%s\"", 
taaj: tablecmds:00004191:  RelationGetRelationName(rel)), 
taaj: tablecmds:00004192:  errhint("Distribution policy may be set " 
taaj: tablecmds:00004193:  "for an entire partitioned table" 
taaj: tablecmds:00004194:  " or one of its leaf parts." 
taaj: tablecmds:00004195:  ), 
taaj: tablecmds:00004196:  errOmitLocation(true))); 
taaj: tablecmds:00004217:  ereport(ERROR, 
taaj: tablecmds:00004218:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00004219:  errmsg("cannot SET DISTRIBUTED BY for %s", 
taaj: tablecmds:00004220:  RelationGetRelationName(rel)), 
taaj: tablecmds:00004221:  errhint("Leaf distribution policy must be" 
taaj: tablecmds:00004222:  " random or match that of the" 
taaj: tablecmds:00004223:  " entire partitioned table."), 
taaj: tablecmds:00004224:  errOmitLocation(true) 
taaj: tablecmds:00004225:  )); 
taaj: tablecmds:00004237:  ereport(ERROR, 
taaj: tablecmds:00004238:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
taaj: tablecmds:00004239:  errmsg("ALTER TABLE ... ENABLE TRIGGER is not supported"))); 
taaj: tablecmds:00004243:  ereport(ERROR, 
taaj: tablecmds:00004244:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
taaj: tablecmds:00004245:  errmsg("ALTER TABLE ... DISABLE TRIGGER is not supported"))); 
taaj: tablecmds:00004265:  ereport(ERROR, 
taaj: tablecmds:00004266:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00004267:  errmsg("EXCHANGE is not supported in utility mode"))); 
taaj: tablecmds:00004275:  ereport(ERROR, 
taaj: tablecmds:00004276:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
taaj: tablecmds:00004277:  errmsg("ALTER TABLE ... MERGE PARTITION is not supported"))); 
taaj: tablecmds:00004290:  ereport(ERROR, 
taaj: tablecmds:00004291:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00004292:  errmsg("MERGE is not supported in utility mode"))); 
taaj: tablecmds:00004319:  ereport(ERROR, 
taaj: tablecmds:00004320:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
taaj: tablecmds:00004321:  errmsg("cannot merge HASH partition%s " 
taaj: tablecmds:00004322:  "of relation \"%s\"", 
taaj: tablecmds:00004323:  prule1->partIdStr, 
taaj: tablecmds:00004324:  RelationGetRelationName(rel)))); 
taaj: tablecmds:00004385:  ereport(ERROR, 
taaj: tablecmds:00004386:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00004387:  errmsg("SPLIT is not supported in utility mode"))); 
taaj: tablecmds:00004419:  ereport(ERROR, 
taaj: tablecmds:00004420:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00004421:  errmsg("cannot split partition with child " 
taaj: tablecmds:00004422:  "partitions"), 
taaj: tablecmds:00004423:  errhint("Try splitting the child partitions."), 
taaj: tablecmds:00004424:  errOmitLocation(true))); 
taaj: tablecmds:00004436:  ereport(ERROR, 
taaj: tablecmds:00004437:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00004438:  errmsg("AT clause cannot be used when splitting " 
taaj: tablecmds:00004439:  "a default RANGE partition"), 
taaj: tablecmds:00004440:  errOmitLocation(true))); 
taaj: tablecmds:00004444:  ereport(ERROR, 
taaj: tablecmds:00004445:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00004446:  errmsg("cannot SPLIT DEFAULT PARTITION " 
taaj: tablecmds:00004447:  "with LIST"), 
taaj: tablecmds:00004448:  errhint("Use SPLIT with the AT clause instead."), 
taaj: tablecmds:00004449:  errOmitLocation(true))); 
taaj: tablecmds:00004454:  ereport(ERROR, 
taaj: tablecmds:00004455:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00004456:  errmsg("SPLIT is not supported for " 
taaj: tablecmds:00004457:  "HASH partitions"), 
taaj: tablecmds:00004458:  errOmitLocation(true))); 
taaj: tablecmds:00004516:  ereport(ERROR, 
taaj: tablecmds:00004517:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00004518:  errmsg("partition being split has " 
taaj: tablecmds:00004519:  "%i column%s but parameter " 
taaj: tablecmds:00004520:  "has %i column%s", 
taaj: tablecmds:00004521:  parnatts, 
taaj: tablecmds:00004522:  parnatts > 1 ? "s" : "", 
taaj: tablecmds:00004523:  list_length(vals), 
taaj: tablecmds:00004524:  list_length(vals) > 1 ? "s" : ""), 
taaj: tablecmds:00004525:  errOmitLocation(true))); 
taaj: tablecmds:00004669:  ereport(ERROR, 
taaj: tablecmds:00004670:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00004671:  errmsg("AT clause parameter is not " 
taaj: tablecmds:00004672:  "a member of the target " 
taaj: tablecmds:00004673:  "partition specification"), 
taaj: tablecmds:00004674:  errOmitLocation(true))); 
taaj: tablecmds:00004680:  ereport(ERROR, 
taaj: tablecmds:00004681:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00004682:  errmsg("AT clause cannot contain all " 
taaj: tablecmds:00004683:  "values in partition%s", 
taaj: tablecmds:00004684:  prule1->partIdStr), 
taaj: tablecmds:00004685:  errOmitLocation(true))); 
taaj: tablecmds:00004765:  ereport(ERROR, 
taaj: tablecmds:00004766:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00004767:  errmsg("AT clause parameter is not " 
taaj: tablecmds:00004768:  "a member of the target " 
taaj: tablecmds:00004769:  "partition specification"), 
taaj: tablecmds:00004770:  errOmitLocation(true))); 
taaj: tablecmds:00004795:  ereport(ERROR, 
taaj: tablecmds:00004796:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taaj: tablecmds:00004797:  errmsg("both INTO partitions " 
taaj: tablecmds:00004798:  "already exist"), 
taaj: tablecmds:00004799:  errOmitLocation(true))); 
taaj: tablecmds:00004804:  ereport(ERROR, 
taaj: tablecmds:00004805:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00004806:  errmsg("default partition name missing " 
taaj: tablecmds:00004807:  "from INTO clause"), 
taaj: tablecmds:00004808:  errOmitLocation(true))); 
taaj: tablecmds:00004851:  ereport(ERROR, 
taaj: tablecmds:00004852:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taaj: tablecmds:00004853:  errmsg("cannot split into an existing partition"), 
taaj: tablecmds:00004854:  errOmitLocation(true))); 
taaj: tablecmds:00004905:  ereport(ERROR, 
taaj: tablecmds:00004906:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00004907:  errmsg("SET TABLESPACE is not supported in utility mode"))); 
taaj: tablecmds:00004929:  ereport(ERROR, 
taaj: tablecmds:00004930:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
taaj: tablecmds:00004931:  errmsg("ALTER TABLE ... MODIFY PARTITION is not supported"))); 
taaj: tablecmds:00004935:  elog(ERROR, "unrecognized alter table type: %d", 
taaj: tablecmds:00004936:  (int) cmd->subtype); 
taaj: tablecmds:00005271:  elog(ERROR, "unrecognized alter table type: %d", 
taaj: tablecmds:00005272:  (int) cmd->subtype); 
taaj: tablecmds:00005333:  elog(ERROR, 
taaj: tablecmds:00005334:  "internal alter table cannot allocate new relfilenodes"); 
taaj: tablecmds:00005343:  ereport(ERROR, 
taaj: tablecmds:00005344:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00005345:  errmsg("cannot rewrite system relation \"%s\"", 
taaj: tablecmds:00005346:  RelationGetRelationName(rel)))); 
taaj: tablecmds:00005353:  ereport(ERROR, 
taaj: tablecmds:00005354:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00005355:  errmsg("cannot rewrite temporary tables of other sessions"))); 
taaj: tablecmds:00005580:  elog(ERROR, "unrecognized constraint type: %d", 
taaj: tablecmds:00005581:  (int) con->contype); 
taaj: tablecmds:00005723:  ereport(ERROR, 
taaj: tablecmds:00005724:  (errcode(ERRCODE_NOT_NULL_VIOLATION), 
taaj: tablecmds:00005725:  errmsg("column \"%s\" contains null values", 
taaj: tablecmds:00005726:  NameStr(newTupDesc->attrs[attn]->attname)), 
taaj: tablecmds:00005727:  errOmitLocation(true))); 
taaj: tablecmds:00005740:  ereport(ERROR, 
taaj: tablecmds:00005741:  (errcode(ERRCODE_CHECK_VIOLATION), 
taaj: tablecmds:00005742:  errmsg("exchange table contains " 
taaj: tablecmds:00005743:  "a row which violates the " 
taaj: tablecmds:00005744:  "partitioning " 
taaj: tablecmds:00005745:  "specification of \"%s\"", 
taaj: tablecmds:00005746:  get_rel_name(tab->relid)), 
taaj: tablecmds:00005747:  errOmitLocation(true))); 
taaj: tablecmds:00005749:  ereport(ERROR, 
taaj: tablecmds:00005750:  (errcode(ERRCODE_CHECK_VIOLATION), 
taaj: tablecmds:00005751:  errmsg("check constraint \"%s\" is violated by some row", 
taaj: tablecmds:00005752:  con->name), 
taaj: tablecmds:00005753:  errOmitLocation(true))); 
taaj: tablecmds:00005760:  elog(ERROR, "unrecognized constraint type: %d", 
taaj: tablecmds:00005761:  (int) con->contype); 
taaj: tablecmds:00005858:  ereport(ERROR, 
taaj: tablecmds:00005859:  (errcode(ERRCODE_NOT_NULL_VIOLATION), 
taaj: tablecmds:00005860:  errmsg("column \"%s\" contains null values", 
taaj: tablecmds:00005861:  NameStr(newTupDesc->attrs[attn]->attname)), 
taaj: tablecmds:00005862:  errOmitLocation(true))); 
taaj: tablecmds:00005873:  ereport(ERROR, 
taaj: tablecmds:00005874:  (errcode(ERRCODE_CHECK_VIOLATION), 
taaj: tablecmds:00005875:  errmsg("check constraint \"%s\" is violated by some row", 
taaj: tablecmds:00005876:  con->name), 
taaj: tablecmds:00005877:  errOmitLocation(true))); 
taaj: tablecmds:00005883:  elog(ERROR, "unrecognized constraint type: %d", 
taaj: tablecmds:00005884:  (int) con->contype); 
taaj: tablecmds:00006009:  ereport(ERROR, 
taaj: tablecmds:00006010:  (errcode(ERRCODE_CHECK_VIOLATION), 
taaj: tablecmds:00006011:  errmsg("check constraint \"%s\" is violated", 
taaj: tablecmds:00006012:  con->name 
taaj: tablecmds:00006013:  ), 
taaj: tablecmds:00006014:  errOmitLocation(true))); 
taaj: tablecmds:00006020:  elog(ERROR, "Unrecognized constraint type: %d", 
taaj: tablecmds:00006021:  (int) con->contype); 
taaj: tablecmds:00006216:  ereport(ERROR, 
taaj: tablecmds:00006217:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00006218:  errmsg("can't %s \"%s\"; it is a partitioned table or part thereof", 
taaj: tablecmds:00006219:  alterTableCmdString(subtype), 
taaj: tablecmds:00006220:  RelationGetRelationName(rel)), 
taaj: tablecmds:00006221:  errOmitLocation(true))); 
taaj: tablecmds:00006225:  ereport(ERROR, 
taaj: tablecmds:00006226:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00006227:  errmsg("can't %s \"%s\"; it is part of a partitioned table", 
taaj: tablecmds:00006228:  alterTableCmdString(subtype), 
taaj: tablecmds:00006229:  RelationGetRelationName(rel)), 
taaj: tablecmds:00006230:  errhint("You may be able to perform the operation on the partitioned table as a whole."), 
taaj: tablecmds:00006231:  errOmitLocation(true))); 
taaj: tablecmds:00006250:  ereport(ERROR, 
taaj: tablecmds:00006251:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00006252:  errmsg("\"%s\" is not a table or view", 
taaj: tablecmds:00006253:  RelationGetRelationName(rel)), 
taaj: tablecmds:00006254:  errOmitLocation(true))); 
taaj: tablecmds:00006266:  ereport(ERROR, 
taaj: tablecmds:00006267:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00006268:  errmsg("\"%s\" is not a table", 
taaj: tablecmds:00006269:  RelationGetRelationName(rel)), 
taaj: tablecmds:00006270:  errOmitLocation(true))); 
taaj: tablecmds:00006279:  ereport(ERROR, 
taaj: tablecmds:00006280:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taaj: tablecmds:00006281:  errmsg("permission denied: \"%s\" is a system catalog", 
taaj: tablecmds:00006282:  RelationGetRelationName(rel)), 
taaj: tablecmds:00006283:  errOmitLocation(true))); 
taaj: tablecmds:00006298:  ereport(ERROR, 
taaj: tablecmds:00006299:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00006300:  errmsg("\"%s\" is not a table or index", 
taaj: tablecmds:00006301:  RelationGetRelationName(rel)), 
taaj: tablecmds:00006302:  errOmitLocation(true))); 
taaj: tablecmds:00006310:  ereport(ERROR, 
taaj: tablecmds:00006311:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taaj: tablecmds:00006312:  errmsg("permission denied: \"%s\" is a system catalog", 
taaj: tablecmds:00006313:  RelationGetRelationName(rel)))); 
taaj: tablecmds:00006447:  ereport(ERROR, 
taaj: tablecmds:00006448:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00006449:  errmsg("cannot alter table \"%s\" because column \"%s\".\"%s\" uses its rowtype", 
taaj: tablecmds:00006450:  origTblName, 
taaj: tablecmds:00006451:  RelationGetRelationName(rel), 
taaj: tablecmds:00006452:  NameStr(att->attname)), 
taaj: tablecmds:00006453:  errOmitLocation(true))); 
taaj: tablecmds:00006455:  ereport(ERROR, 
taaj: tablecmds:00006456:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00006457:  errmsg("cannot alter type \"%s\" because column \"%s\".\"%s\" uses it", 
taaj: tablecmds:00006458:  origTypeName, 
taaj: tablecmds:00006459:  RelationGetRelationName(rel), 
taaj: tablecmds:00006460:  NameStr(att->attname)), 
taaj: tablecmds:00006461:  errOmitLocation(true))); 
taaj: tablecmds:00006496:  ereport(ERROR, 
taaj: tablecmds:00006497:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00006498:  errmsg("ENCODING clause supplied for table that is " 
taaj: tablecmds:00006499:  "not column oriented"))); 
taaj: tablecmds:00006510:  ereport(ERROR, 
taaj: tablecmds:00006511:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00006512:  errmsg("column must be added to child tables too"))); 
taaj: tablecmds:00006624:  ereport(ERROR, 
taaj: tablecmds:00006625:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
taaj: tablecmds:00006626:  errmsg("ADD COLUMN with no default value in append-only tables" 
taaj: tablecmds:00006627:  " is not yet supported."), 
taaj: tablecmds:00006628:  errOmitLocation(true) 
taaj: tablecmds:00006629:  )); 
taaj: tablecmds:00006660:  ereport(ERROR, 
taaj: tablecmds:00006661:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taaj: tablecmds:00006662:  errmsg("child table \"%s\" has different type for column \"%s\"", 
taaj: tablecmds:00006663:  RelationGetRelationName(rel), colDef->colname), 
taaj: tablecmds:00006664:  errOmitLocation(true))); 
taaj: tablecmds:00006683:  ereport(NOTICE, 
taaj: tablecmds:00006684:  (errmsg("merging definition of column \"%s\" for child \"%s\"", 
taaj: tablecmds:00006685:  colDef->colname, RelationGetRelationName(rel)), 
taaj: tablecmds:00006686:  errOmitLocation(true))); 
taaj: tablecmds:00006705:  elog(ERROR, "cache lookup failed for relation %u", myrelid); 
taaj: tablecmds:00006728:  ereport(ERROR, 
taaj: tablecmds:00006729:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
taaj: tablecmds:00006730:  errmsg("column \"%s\" of relation \"%s\" already exists", 
taaj: tablecmds:00006731:  colDef->colname, RelationGetRelationName(rel)), 
taaj: tablecmds:00006732:  errOmitLocation(true))); 
taaj: tablecmds:00006738:  ereport(ERROR, 
taaj: tablecmds:00006739:  (errcode(ERRCODE_TOO_MANY_COLUMNS), 
taaj: tablecmds:00006740:  errmsg("tables can have at most %d columns", 
taaj: tablecmds:00006741:  MaxHeapAttributeNumber))); 
taaj: tablecmds:00006856:  elog(ERROR, "failed to coerce base type to domain"); 
taaj: tablecmds:00006902:  ereport(ERROR, 
taaj: tablecmds:00006903:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00006904:  errmsg("ENCODING clause not supported on non " 
taaj: tablecmds:00006905:  "column orientated table"))); 
taaj: tablecmds:00006986:  ereport(ERROR, 
taaj: tablecmds:00006987:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
taaj: tablecmds:00006988:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
taaj: tablecmds:00006989:  colName, RelationGetRelationName(rel)), 
taaj: tablecmds:00006990:  errOmitLocation(true))); 
taaj: tablecmds:00006996:  ereport(ERROR, 
taaj: tablecmds:00006997:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00006998:  errmsg("cannot alter system column \"%s\"", 
taaj: tablecmds:00006999:  colName))); 
taaj: tablecmds:00007025:  elog(ERROR, "cache lookup failed for index %u", indexoid); 
taaj: tablecmds:00007038:  ereport(ERROR, 
taaj: tablecmds:00007039:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00007040:  errmsg("column \"%s\" is in a primary key", 
taaj: tablecmds:00007041:  colName), 
taaj: tablecmds:00007042:  errOmitLocation(true))); 
taaj: tablecmds:00007098:  ereport(ERROR, 
taaj: tablecmds:00007099:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
taaj: tablecmds:00007100:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
taaj: tablecmds:00007101:  colName, RelationGetRelationName(rel)), 
taaj: tablecmds:00007102:  errOmitLocation(true))); 
taaj: tablecmds:00007108:  ereport(ERROR, 
taaj: tablecmds:00007109:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00007110:  errmsg("cannot alter system column \"%s\"", 
taaj: tablecmds:00007111:  colName))); 
taaj: tablecmds:00007154:  ereport(ERROR, 
taaj: tablecmds:00007155:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
taaj: tablecmds:00007156:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
taaj: tablecmds:00007157:  colName, RelationGetRelationName(rel)), 
taaj: tablecmds:00007158:  errOmitLocation(true))); 
taaj: tablecmds:00007162:  ereport(ERROR, 
taaj: tablecmds:00007163:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00007164:  errmsg("cannot alter system column \"%s\"", 
taaj: tablecmds:00007165:  colName))); 
taaj: tablecmds:00007216:  ereport(ERROR, 
taaj: tablecmds:00007217:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00007218:  errmsg("\"%s\" is not a table or index", 
taaj: tablecmds:00007219:  RelationGetRelationName(rel)), 
taaj: tablecmds:00007220:  errOmitLocation(true))); 
taaj: tablecmds:00007246:  ereport(ERROR, 
taaj: tablecmds:00007247:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: tablecmds:00007248:  errmsg("statistics target %d is too low", 
taaj: tablecmds:00007249:  newtarget))); 
taaj: tablecmds:00007254:  ereport(WARNING, 
taaj: tablecmds:00007255:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: tablecmds:00007256:  errmsg("lowering statistics target to %d", 
taaj: tablecmds:00007257:  newtarget))); 
taaj: tablecmds:00007267:  ereport(ERROR, 
taaj: tablecmds:00007268:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
taaj: tablecmds:00007269:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
taaj: tablecmds:00007270:  colName, RelationGetRelationName(rel)))); 
taaj: tablecmds:00007274:  ereport(ERROR, 
taaj: tablecmds:00007275:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00007276:  errmsg("cannot alter system column \"%s\"", 
taaj: tablecmds:00007277:  colName))); 
taaj: tablecmds:00007326:  ereport(ERROR, 
taaj: tablecmds:00007327:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: tablecmds:00007328:  errmsg("invalid storage type \"%s\"", 
taaj: tablecmds:00007329:  storagemode))); 
taaj: tablecmds:00007340:  ereport(ERROR, 
taaj: tablecmds:00007341:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
taaj: tablecmds:00007342:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
taaj: tablecmds:00007343:  colName, RelationGetRelationName(rel)), 
taaj: tablecmds:00007344:  errOmitLocation(true))); 
taaj: tablecmds:00007348:  ereport(ERROR, 
taaj: tablecmds:00007349:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00007350:  errmsg("cannot alter system column \"%s\"", 
taaj: tablecmds:00007351:  colName))); 
taaj: tablecmds:00007360:  ereport(ERROR, 
taaj: tablecmds:00007361:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00007362:  errmsg("column data type %s can only have storage PLAIN", 
taaj: tablecmds:00007363:  format_type_be(attrtuple->atttypid)))); 
taaj: tablecmds:00007418:  ereport(ERROR, 
taaj: tablecmds:00007419:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
taaj: tablecmds:00007420:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
taaj: tablecmds:00007421:  colName, RelationGetRelationName(rel)))); 
taaj: tablecmds:00007428:  ereport(ERROR, 
taaj: tablecmds:00007429:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00007430:  errmsg("cannot drop system column \"%s\"", 
taaj: tablecmds:00007431:  colName), 
taaj: tablecmds:00007432:  errOmitLocation(true))); 
taaj: tablecmds:00007436:  ereport(ERROR, 
taaj: tablecmds:00007437:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00007438:  errmsg("cannot drop inherited column \"%s\"", 
taaj: tablecmds:00007439:  colName), 
taaj: tablecmds:00007440:  errOmitLocation(true))); 
taaj: tablecmds:00007449:  ereport(ERROR, 
taaj: tablecmds:00007450:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00007451:  errmsg("cannot drop partitioning column \"%s\"", 
taaj: tablecmds:00007452:  colName), 
taaj: tablecmds:00007453:  errOmitLocation(true))); 
taaj: tablecmds:00007476:  ereport(NOTICE, 
taaj: tablecmds:00007477:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00007478:  errmsg("Dropping a column that is part of the " 
taaj: tablecmds:00007479:  "distribution policy forces a " 
taaj: tablecmds:00007480:  "NULL distribution policy"), 
taaj: tablecmds:00007481:  errOmitLocation(true))); 
taaj: tablecmds:00007515:  elog(ERROR, "cache lookup failed for attribute \"%s\" of relation %u", 
taaj: tablecmds:00007516:  colName, childrelid); 
taaj: tablecmds:00007520:  elog(ERROR, "relation %u has non-inherited attribute \"%s\"", 
taaj: tablecmds:00007521:  childrelid, colName); 
taaj: tablecmds:00007602:  elog(ERROR, "cache lookup failed for relation %u", 
taaj: tablecmds:00007603:  RelationGetRelid(rel)); 
taaj: tablecmds:00007802:  elog(ERROR, "unrecognized constraint type: %d", 
taaj: tablecmds:00007803:  (int) constr->contype); 
taaj: tablecmds:00007819:  ereport(ERROR, 
taaj: tablecmds:00007820:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taaj: tablecmds:00007821:  errmsg("constraint \"%s\" for relation \"%s\" already exists", 
taaj: tablecmds:00007822:  fkconstraint->constr_name, 
taaj: tablecmds:00007823:  RelationGetRelationName(rel)), 
taaj: tablecmds:00007824:  errOmitLocation(true))); 
taaj: tablecmds:00007839:  elog(ERROR, "unrecognized node type: %d", 
taaj: tablecmds:00007840:  (int) nodeTag(newConstraint)); 
taaj: tablecmds:00007986:  ereport(ERROR, 
taaj: tablecmds:00007987:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00007988:  errmsg("referenced relation \"%s\" is not a table", 
taaj: tablecmds:00007989:  RelationGetRelationName(pkrel)), 
taaj: tablecmds:00007990:  errOmitLocation(true))); 
taaj: tablecmds:00007999:  ereport(ERROR, 
taaj: tablecmds:00008000:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taaj: tablecmds:00008001:  errmsg("permission denied: \"%s\" is a system catalog", 
taaj: tablecmds:00008002:  RelationGetRelationName(pkrel)), 
taaj: tablecmds:00008003:  errOmitLocation(true))); 
taaj: tablecmds:00008022:  ereport(ERROR, 
taaj: tablecmds:00008023:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00008024:  errmsg("cannot reference temporary table from permanent table constraint"), 
taaj: tablecmds:00008025:  errOmitLocation(true))); 
taaj: tablecmds:00008030:  ereport(ERROR, 
taaj: tablecmds:00008031:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00008032:  errmsg("cannot reference permanent table from temporary table constraint"), 
taaj: tablecmds:00008033:  errOmitLocation(true))); 
taaj: tablecmds:00008042:  ereport(ERROR, 
taaj: tablecmds:00008043:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00008044:  errmsg("cannot reference just part of a partitioned table"), 
taaj: tablecmds:00008045:  errOmitLocation(true))); 
taaj: tablecmds:00008087:  ereport(ERROR, 
taaj: tablecmds:00008088:  (errcode(ERRCODE_INVALID_FOREIGN_KEY), 
taaj: tablecmds:00008089:  errmsg("number of referencing and referenced columns for foreign key disagree"), 
taaj: tablecmds:00008090:  errOmitLocation(true))); 
taaj: tablecmds:00008110:  ereport(ERROR, 
taaj: tablecmds:00008111:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
taaj: tablecmds:00008112:  errmsg("foreign key constraint \"%s\" " 
taaj: tablecmds:00008113:  "cannot be implemented", 
taaj: tablecmds:00008114:  fkconstraint->constr_name), 
taaj: tablecmds:00008115:  errdetail("Key columns \"%s\" and \"%s\" " 
taaj: tablecmds:00008116:  "are of incompatible types: %s and %s.", 
taaj: tablecmds:00008117:  strVal(list_nth(fkconstraint->fk_attrs, i)), 
taaj: tablecmds:00008118:  strVal(list_nth(fkconstraint->pk_attrs, i)), 
taaj: tablecmds:00008119:  format_type_be(fktypoid[i]), 
taaj: tablecmds:00008120:  format_type_be(pktypoid[i])), 
taaj: tablecmds:00008121:  errOmitLocation(true))); 
taaj: tablecmds:00008129:  ereport(WARNING, 
taaj: tablecmds:00008130:  (errmsg("foreign key constraint \"%s\" " 
taaj: tablecmds:00008131:  "will require costly sequential scans", 
taaj: tablecmds:00008132:  fkconstraint->constr_name), 
taaj: tablecmds:00008133:  errdetail("Key columns \"%s\" and \"%s\" " 
taaj: tablecmds:00008134:  "are of different types: %s and %s.", 
taaj: tablecmds:00008135:  strVal(list_nth(fkconstraint->fk_attrs, i)), 
taaj: tablecmds:00008136:  strVal(list_nth(fkconstraint->pk_attrs, i)), 
taaj: tablecmds:00008137:  format_type_be(fktypoid[i]), 
taaj: tablecmds:00008138:  format_type_be(pktypoid[i])), 
taaj: tablecmds:00008139:  errOmitLocation(true))); 
taaj: tablecmds:00008223:  ereport(ERROR, 
taaj: tablecmds:00008224:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
taaj: tablecmds:00008225:  errmsg("column \"%s\" referenced in foreign key constraint does not exist", 
taaj: tablecmds:00008226:  attname), 
taaj: tablecmds:00008227:  errOmitLocation(true))); 
taaj: tablecmds:00008229:  ereport(ERROR, 
taaj: tablecmds:00008230:  (errcode(ERRCODE_TOO_MANY_COLUMNS), 
taaj: tablecmds:00008231:  errmsg("cannot have more than %d keys in a foreign key", 
taaj: tablecmds:00008232:  INDEX_MAX_KEYS))); 
taaj: tablecmds:00008294:  elog(ERROR, "cache lookup failed for index %u", indexoid); 
taaj: tablecmds:00008310:  ereport(ERROR, 
taaj: tablecmds:00008311:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00008312:  errmsg("there is no primary key for referenced table \"%s\"", 
taaj: tablecmds:00008313:  RelationGetRelationName(pkrel)), 
taaj: tablecmds:00008314:  errOmitLocation(true))); 
taaj: tablecmds:00008386:  elog(ERROR, "cache lookup failed for index %u", indexoid); 
taaj: tablecmds:00008451:  ereport(ERROR, 
taaj: tablecmds:00008452:  (errcode(ERRCODE_INVALID_FOREIGN_KEY), 
taaj: tablecmds:00008453:  errmsg("there is no unique constraint matching given keys for referenced table \"%s\"", 
taaj: tablecmds:00008454:  RelationGetRelationName(pkrel)), 
taaj: tablecmds:00008455:  errOmitLocation(true))); 
taaj: tablecmds:00008607:  ereport(ERROR, 
taaj: tablecmds:00008608:  (errcode(ERRCODE_INVALID_FOREIGN_KEY), 
taaj: tablecmds:00008609:  errmsg("number of referencing and referenced columns for foreign key disagree"), 
taaj: tablecmds:00008610:  errOmitLocation(true))); 
taaj: tablecmds:00008653:  ereport(WARNING, 
taaj: tablecmds:00008654:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00008655:  errmsg("Referential integrity (FOREIGN KEY) constraints are not supported in Greenplum Database, will not be enforced."), 
taaj: tablecmds:00008656:  errOmitLocation(true))); 
taaj: tablecmds:00008726:  elog(ERROR, "unrecognized FK action type: %d", 
taaj: tablecmds:00008727:  (int) fkconstraint->fk_del_action); 
taaj: tablecmds:00008800:  elog(ERROR, "unrecognized FK action type: %d", 
taaj: tablecmds:00008801:  (int) fkconstraint->fk_upd_action); 
taaj: tablecmds:00008847:  elog(ERROR, "unrecognized match type: %d", 
taaj: tablecmds:00008848:  (int) match_type); 
taaj: tablecmds:00008889:  ereport(ERROR, 
taaj: tablecmds:00008890:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00008891:  errmsg("constraint \"%s\" does not exist", 
taaj: tablecmds:00008892:  constrName), 
taaj: tablecmds:00008893:  errOmitLocation(true))); 
taaj: tablecmds:00008896:  ereport(NOTICE, 
taaj: tablecmds:00008897:  (errmsg("multiple constraints named \"%s\" were dropped", 
taaj: tablecmds:00008898:  constrName), 
taaj: tablecmds:00008899:  errOmitLocation(true))); 
taaj: tablecmds:00008939:  ereport(ERROR, 
taaj: tablecmds:00008940:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
taaj: tablecmds:00008941:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
taaj: tablecmds:00008942:  colName, RelationGetRelationName(rel)), 
taaj: tablecmds:00008943:  errOmitLocation(true))); 
taaj: tablecmds:00008949:  ereport(ERROR, 
taaj: tablecmds:00008950:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00008951:  errmsg("cannot alter system column \"%s\"", 
taaj: tablecmds:00008952:  colName), 
taaj: tablecmds:00008953:  errOmitLocation(true))); 
taaj: tablecmds:00008957:  ereport(ERROR, 
taaj: tablecmds:00008958:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00008959:  errmsg("cannot alter inherited column \"%s\"", 
taaj: tablecmds:00008960:  colName), 
taaj: tablecmds:00008961:  errOmitLocation(true))); 
taaj: tablecmds:00008996:  ereport(ERROR, 
taaj: tablecmds:00008997:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taaj: tablecmds:00008998:  errmsg("transform expression must not return a set"), 
taaj: tablecmds:00008999:  errOmitLocation(true))); 
taaj: tablecmds:00009003:  ereport(ERROR, 
taaj: tablecmds:00009004:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00009005:  errmsg("cannot use subquery in transform expression"), 
taaj: tablecmds:00009006:  errOmitLocation(true))); 
taaj: tablecmds:00009008:  ereport(ERROR, 
taaj: tablecmds:00009009:  (errcode(ERRCODE_GROUPING_ERROR), 
taaj: tablecmds:00009010:  errmsg("cannot use aggregate function in transform expression"), 
taaj: tablecmds:00009011:  errOmitLocation(true))); 
taaj: tablecmds:00009013:  ereport(ERROR, 
taaj: tablecmds:00009014:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00009015:  errmsg("cannot use window function in transform expression"), 
taaj: tablecmds:00009016:  errOmitLocation(true))); 
taaj: tablecmds:00009033:  ereport(ERROR, 
taaj: tablecmds:00009034:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taaj: tablecmds:00009035:  errmsg("column \"%s\" cannot be cast to type \"%s\"", 
taaj: tablecmds:00009036:  colName, TypeNameToString(typname)), 
taaj: tablecmds:00009037:  errOmitLocation(true))); 
taaj: tablecmds:00009062:  ereport(ERROR, 
taaj: tablecmds:00009063:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00009064:  errmsg("type of inherited column \"%s\" must be changed in child tables too", 
taaj: tablecmds:00009065:  colName), 
taaj: tablecmds:00009066:  errOmitLocation(true))); 
taaj: tablecmds:00009102:  ereport(ERROR, 
taaj: tablecmds:00009103:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
taaj: tablecmds:00009104:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
taaj: tablecmds:00009105:  colName, RelationGetRelationName(rel)), 
taaj: tablecmds:00009106:  errOmitLocation(true))); 
taaj: tablecmds:00009113:  ereport(ERROR, 
taaj: tablecmds:00009114:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00009115:  errmsg("cannot alter type of column \"%s\" twice", 
taaj: tablecmds:00009116:  colName), 
taaj: tablecmds:00009117:  errOmitLocation(true))); 
taaj: tablecmds:00009173:  ereport(ERROR, 
taaj: tablecmds:00009174:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taaj: tablecmds:00009175:  errmsg("default for column \"%s\" cannot be cast to type \"%s\"", 
taaj: tablecmds:00009176:  colName, TypeNameToString(typname)), 
taaj: tablecmds:00009177:  errOmitLocation(true))); 
taaj: tablecmds:00009217:  elog(ERROR, "cannot alter type of a pinned column"); 
taaj: tablecmds:00009252:  ereport(ERROR, 
taaj: tablecmds:00009253:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00009254:  errmsg("Changing the type of a column that is part of the distribution policy and used in a unique index is not allowed"), 
taaj: tablecmds:00009255:  errOmitLocation(true))); 
taaj: tablecmds:00009273:  elog(ERROR, "unexpected object depending on column: %s", 
taaj: tablecmds:00009274:  getObjectDescription(&foundObject)); 
taaj: tablecmds:00009301:  ereport(ERROR, 
taaj: tablecmds:00009302:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00009303:  errmsg("Changing the type of a column that is used in a UNIQUE or PRIMARY KEY constraint is not allowed"), 
taaj: tablecmds:00009304:  errOmitLocation(true))); 
taaj: tablecmds:00009342:  ereport(ERROR, 
taaj: tablecmds:00009343:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00009344:  errmsg("cannot alter type of a column used by a view or rule"), 
taaj: tablecmds:00009345:  errdetail("%s depends on column \"%s\"", 
taaj: tablecmds:00009346:  getObjectDescription(&foundObject), 
taaj: tablecmds:00009347:  colName), 
taaj: tablecmds:00009348:  errOmitLocation(true))); 
taaj: tablecmds:00009374:  elog(ERROR, "unexpected object depending on column: %s", 
taaj: tablecmds:00009375:  getObjectDescription(&foundObject)); 
taaj: tablecmds:00009379:  elog(ERROR, "unrecognized object class: %u", 
taaj: tablecmds:00009380:  foundObject.classId); 
taaj: tablecmds:00009408:  elog(ERROR, "found unexpected dependency type '%c'", 
taaj: tablecmds:00009409:  foundDep->deptype); 
taaj: tablecmds:00009412:  elog(ERROR, "found unexpected dependency for column"); 
taaj: tablecmds:00009434:  ereport(ERROR, 
taaj: tablecmds:00009435:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00009436:  errmsg("cannot alter type of a column used in " 
taaj: tablecmds:00009437:  "a partitioning key"), 
taaj: tablecmds:00009438:  errOmitLocation(true))); 
taaj: tablecmds:00009446:  ereport(ERROR, 
taaj: tablecmds:00009447:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00009448:  errmsg("cannot alter type of a column used in " 
taaj: tablecmds:00009449:  "a distribution policy"), 
taaj: tablecmds:00009450:  errOmitLocation(true))); 
taaj: tablecmds:00009545:  ereport(ERROR, 
taaj: tablecmds:00009546:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00009547:  errmsg("cannot alter indexed column"), 
taaj: tablecmds:00009548:  errhint("DROP the index first, and recreate it after the ALTER"), 
taaj: tablecmds:00009549:  errOmitLocation(true))); 
taaj: tablecmds:00009669:  elog(ERROR, "unexpected statement type: %d", 
taaj: tablecmds:00009670:  (int) cmd->subtype); 
taaj: tablecmds:00009677:  elog(ERROR, "unexpected statement type: %d", 
taaj: tablecmds:00009678:  (int) nodeTag(query->utilityStmt)); 
taaj: tablecmds:00009721:  elog(ERROR, "cache lookup failed for relation %u", relationOid); 
taaj: tablecmds:00009742:  ereport(WARNING, 
taaj: tablecmds:00009743:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00009744:  errmsg("cannot change owner of index \"%s\"", 
taaj: tablecmds:00009745:  NameStr(tuple_class->relname)), 
taaj: tablecmds:00009746:  errhint("Change the ownership of the index's table, instead."), 
taaj: tablecmds:00009747:  errOmitLocation(true))); 
taaj: tablecmds:00009761:  ereport(ERROR, 
taaj: tablecmds:00009762:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00009763:  errmsg("cannot change owner of sequence \"%s\"", 
taaj: tablecmds:00009764:  NameStr(tuple_class->relname)), 
taaj: tablecmds:00009765:  errdetail("Sequence \"%s\" is linked to table \"%s\".", 
taaj: tablecmds:00009766:  NameStr(tuple_class->relname), 
taaj: tablecmds:00009767:  get_rel_name(tableId)), 
taaj: tablecmds:00009768:  errOmitLocation(true))); 
taaj: tablecmds:00009779:  ereport(ERROR, 
taaj: tablecmds:00009780:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00009781:  errmsg("\"%s\" is not a table, view, or sequence", 
taaj: tablecmds:00009782:  NameStr(tuple_class->relname)), 
taaj: tablecmds:00009783:  errOmitLocation(true))); 
taaj: tablecmds:00010014:  ereport(ERROR, 
taaj: tablecmds:00010015:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00010016:  errmsg("index \"%s\" for table \"%s\" does not exist", 
taaj: tablecmds:00010017:  indexName, RelationGetRelationName(rel)), 
taaj: tablecmds:00010018:  errOmitLocation(true))); 
taaj: tablecmds:00010075:  ereport(ERROR, 
taaj: tablecmds:00010076:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00010077:  errmsg("tablespace \"%s\" does not exist", tablespacename))); 
taaj: tablecmds:00010096:  ereport(ERROR, 
taaj: tablecmds:00010097:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00010098:  errmsg("cannot have multiple SET TABLESPACE subcommands"), 
taaj: tablecmds:00010099:  errOmitLocation(true))); 
taaj: tablecmds:00010136:  ereport(ERROR, 
taaj: tablecmds:00010137:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00010138:  errmsg("conflicting SET TABLESPACE subcommands for \"%s\"", 
taaj: tablecmds:00010139:  RelationGetRelationName(partrel)), 
taaj: tablecmds:00010140:  errOmitLocation(true))); 
taaj: tablecmds:00010186:  elog(ERROR, "cache lookup failed for relation %u", relid); 
taaj: tablecmds:00010210:  ereport(ERROR, 
taaj: tablecmds:00010211:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00010212:  errmsg("cannot SET reloption \"%s\"", 
taaj: tablecmds:00010213:  def->defname))); 
taaj: tablecmds:00010231:  ereport(ERROR, 
taaj: tablecmds:00010232:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00010233:  errmsg("altering reloptions for append only tables" 
taaj: tablecmds:00010234:  " is not permitted"), 
taaj: tablecmds:00010235:  errOmitLocation(true))); 
taaj: tablecmds:00010243:  ereport(ERROR, 
taaj: tablecmds:00010244:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00010245:  errmsg("\"%s\" is not a table, index, or TOAST table", 
taaj: tablecmds:00010246:  RelationGetRelationName(rel)), 
taaj: tablecmds:00010247:  errOmitLocation(true))); 
taaj: tablecmds:00010350:  ereport(ERROR, 
taaj: tablecmds:00010351:  (errcode_for_file_access(), 
taaj: tablecmds:00010352:  errmsg("could not open file \"%s\": %m", srcFileName))); 
taaj: tablecmds:00010371:  ereport(ERROR, 
taaj: tablecmds:00010372:  (errcode_for_file_access(), 
taaj: tablecmds:00010373:  errmsg("could not open file \"%s\" for relation '%s': %s", 
taaj: tablecmds:00010374:  dstFileName, 
taaj: tablecmds:00010375:  relationName, 
taaj: tablecmds:00010376:  strerror(primaryError)))); 
taaj: tablecmds:00010391:  ereport(ERROR, 
taaj: tablecmds:00010392:  (errcode_for_file_access(), 
taaj: tablecmds:00010393:  errmsg("could not read from position: " INT64_FORMAT " in file '%s' : %m", 
taaj: tablecmds:00010394:  readOffset, 
taaj: tablecmds:00010395:  srcFileName))); 
taaj: tablecmds:00010407:  ereport(ERROR, 
taaj: tablecmds:00010408:  (errcode_for_file_access(), 
taaj: tablecmds:00010409:  errmsg("could not write file \"%s\": %s", 
taaj: tablecmds:00010410:  dstFileName, 
taaj: tablecmds:00010411:  strerror(primaryError)))); 
taaj: tablecmds:00010432:  ereport(ERROR, 
taaj: tablecmds:00010433:  (errcode_for_file_access(), 
taaj: tablecmds:00010434:  errmsg("could not flush (fsync) file \"%s\" for relation '%s': %s", 
taaj: tablecmds:00010435:  dstFileName, 
taaj: tablecmds:00010436:  relationName, 
taaj: tablecmds:00010437:  strerror(primaryError)))); 
taaj: tablecmds:00010651:  ereport(ERROR, 
taaj: tablecmds:00010652:  (errmsg("Append-only %u/%u/%u row segment file #%d information missing", 
taaj: tablecmds:00010653:  rel->rd_node.spcNode, 
taaj: tablecmds:00010654:  rel->rd_node.dbNode, 
taaj: tablecmds:00010655:  rel->rd_node.relNode, 
taaj: tablecmds:00010656:  segmentFileNum))); 
taaj: tablecmds:00010691:  ereport(ERROR, 
taaj: tablecmds:00010692:  (errmsg("Append-only %u/%u/%u column logical segment file #%d information for missing (physical segment #%d, column %d)", 
taaj: tablecmds:00010693:  rel->rd_node.spcNode, 
taaj: tablecmds:00010694:  rel->rd_node.dbNode, 
taaj: tablecmds:00010695:  rel->rd_node.relNode, 
taaj: tablecmds:00010696:  actualSegmentNum, 
taaj: tablecmds:00010697:  segmentFileNum, 
taaj: tablecmds:00010698:  columnNum))); 
taaj: tablecmds:00010808:  elog(ERROR, "cache lookup failed for relation %u, tablespace %u, relation file node %u", 
taaj: tablecmds:00010809:  tableOid, 
taaj: tablecmds:00010810:  oldTablespace, 
taaj: tablecmds:00010811:  rel->rd_rel->relfilenode); 
taaj: tablecmds:00010897:  ereport(ERROR, 
taaj: tablecmds:00010898:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00010899:  errmsg("cannot move system relation \"%s\"", 
taaj: tablecmds:00010900:  RelationGetRelationName(rel)), 
taaj: tablecmds:00010901:  errOmitLocation(true))); 
taaj: tablecmds:00010908:  ereport(ERROR, 
taaj: tablecmds:00010909:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00010910:  errmsg("cannot move temporary tables of other sessions"), 
taaj: tablecmds:00010911:  errOmitLocation(true))); 
taaj: tablecmds:00010938:  elog(ERROR, "cache lookup failed for relation %u", tableOid); 
taaj: tablecmds:00011353:  ereport(ERROR, 
taaj: tablecmds:00011354:  (errcode(ERRCODE_DUPLICATE_TABLE), 
taaj: tablecmds:00011355:  errmsg("inherited relation \"%s\" duplicated", 
taaj: tablecmds:00011356:  RelationGetRelationName(parent_rel)), 
taaj: tablecmds:00011357:  errOmitLocation(true))); 
taaj: tablecmds:00011378:  ereport(ERROR, 
taaj: tablecmds:00011379:  (errcode(ERRCODE_DUPLICATE_TABLE), 
taaj: tablecmds:00011380:  errmsg("circular inheritance not allowed"), 
taaj: tablecmds:00011381:  errdetail("\"%s\" is already a child of \"%s\".", 
taaj: tablecmds:00011382:  RelationGetRelationName(parent_rel), 
taaj: tablecmds:00011383:  RelationGetRelationName(child_rel)), 
taaj: tablecmds:00011384:  errOmitLocation(true))); 
taaj: tablecmds:00011388:  ereport(ERROR, 
taaj: tablecmds:00011389:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00011390:  errmsg("table \"%s\" without OIDs cannot inherit from table \"%s\" with OIDs", 
taaj: tablecmds:00011391:  RelationGetRelationName(child_rel), 
taaj: tablecmds:00011392:  RelationGetRelationName(parent_rel)), 
taaj: tablecmds:00011393:  errOmitLocation(true))); 
taaj: tablecmds:00011466:  ereport(ERROR, 
taaj: tablecmds:00011467:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00011468:  errmsg("cannot inherit from temporary relation \"%s\"", 
taaj: tablecmds:00011469:  RelationGetRelationName(parent_rel)), 
taaj: tablecmds:00011470:  errOmitLocation(true))); 
taaj: tablecmds:00011530:  elog(ERROR, "null conbin for constraint %u", HeapTupleGetOid(contup)); 
taaj: tablecmds:00011600:  ereport(ERROR, 
taaj: tablecmds:00011601:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
taaj: tablecmds:00011602:  errmsg("column \"%s\" does not exist in parent table \"%s\"", 
taaj: tablecmds:00011603:  inhAttrName, 
taaj: tablecmds:00011604:  RelationGetRelationName(parent_rel)), 
taaj: tablecmds:00011605:  errOmitLocation(true))); 
taaj: tablecmds:00011628:  ereport(ERROR, 
taaj: tablecmds:00011629:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taaj: tablecmds:00011630:  errmsg("child table \"%s\" has different type for column \"%s\"", 
taaj: tablecmds:00011631:  RelationGetRelationName(child_rel), 
taaj: tablecmds:00011632:  attributeName), 
taaj: tablecmds:00011633:  errOmitLocation(true))); 
taaj: tablecmds:00011636:  ereport(ERROR, 
taaj: tablecmds:00011637:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taaj: tablecmds:00011638:  errmsg("column \"%s\" in child table must be marked NOT NULL", 
taaj: tablecmds:00011639:  attributeName), 
taaj: tablecmds:00011640:  errOmitLocation(true))); 
taaj: tablecmds:00011680:  ereport(ERROR, 
taaj: tablecmds:00011681:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taaj: tablecmds:00011682:  errmsg("child table is missing column \"%s\"", 
taaj: tablecmds:00011683:  attributeName), 
taaj: tablecmds:00011684:  errOmitLocation(true))); 
taaj: tablecmds:00011772:  ereport(ERROR, 
taaj: tablecmds:00011773:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taaj: tablecmds:00011774:  errmsg("child table is missing constraint \"%s\"", 
taaj: tablecmds:00011775:  NameStr(parent_con->conname)), 
taaj: tablecmds:00011776:  errOmitLocation(true))); 
taaj: tablecmds:00011782:  ereport(ERROR, 
taaj: tablecmds:00011783:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taaj: tablecmds:00011784:  errmsg("constraint definition for check constraint \"%s\" does not match", 
taaj: tablecmds:00011785:  NameStr(parent_con->conname)), 
taaj: tablecmds:00011786:  errOmitLocation(true))); 
taaj: tablecmds:00011865:  ereport(ERROR, 
taaj: tablecmds:00011866:  (errcode(ERRCODE_UNDEFINED_TABLE), 
taaj: tablecmds:00011867:  errmsg("relation \"%s\" is not a parent of relation \"%s\"", 
taaj: tablecmds:00011868:  RelationGetRelationName(parent_rel), 
taaj: tablecmds:00011869:  RelationGetRelationName(rel)), 
taaj: tablecmds:00011870:  errOmitLocation(true))); 
taaj: tablecmds:00011986:  elog(ERROR, "cache lookup failed for relation %u", relid); 
taaj: tablecmds:00012146:  elog(ERROR, "cache lookup failed for relation %u", relid); 
taaj: tablecmds:00012637:  elog(ERROR, "could not lookup namespace %d", typnamespace); 
taaj: tablecmds:00012776:  ereport(ERROR, 
taaj: tablecmds:00012777:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taaj: tablecmds:00012778:  errmsg("permission denied: \"%s\" is a system catalog", 
taaj: tablecmds:00012779:  RelationGetRelationName(rel)), 
taaj: tablecmds:00012780:  errOmitLocation(true))); 
taaj: tablecmds:00012795:  ereport(ERROR, 
taaj: tablecmds:00012796:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00012797:  errmsg("SET DISTRIBUTED BY not supported in utility mode"))); 
taaj: tablecmds:00012803:  ereport(ERROR, 
taaj: tablecmds:00012804:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00012805:  errmsg("%s not supported on non-distributed tables", 
taaj: tablecmds:00012806:  ldistro ? "SET DISTRIBUTED BY" : "SET WITH"), 
taaj: tablecmds:00012807:  errOmitLocation(true))); 
taaj: tablecmds:00012828:  ereport(ERROR, 
taaj: tablecmds:00012829:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00012830:  errmsg("option \"%s\" not supported", 
taaj: tablecmds:00012831:  def->defname), 
taaj: tablecmds:00012832:  errOmitLocation(true))); 
taaj: tablecmds:00012855:  ereport(ERROR, 
taaj: tablecmds:00012856:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: tablecmds:00012857:  errmsg("invalid orientation option"), 
taaj: tablecmds:00012858:  errhint("valid orientation option is \"column\" or \"row\""), 
taaj: tablecmds:00012859:  errOmitLocation(true))); 
taaj: tablecmds:00012869:  ereport(ERROR, 
taaj: tablecmds:00012870:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: tablecmds:00012871:  errmsg("\"%s\" specified more than once", 
taaj: tablecmds:00012872:  reorg_str), 
taaj: tablecmds:00012873:  errOmitLocation(true))); 
taaj: tablecmds:00012885:  ereport(ERROR, 
taaj: tablecmds:00012886:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: tablecmds:00012887:  errmsg("Invalid REORGANIZE option"), 
taaj: tablecmds:00012888:  errhint("valid REORGANIZE option is \"true\" or \"false\""), 
taaj: tablecmds:00012889:  errOmitLocation(true))); 
taaj: tablecmds:00012896:  ereport(ERROR, 
taaj: tablecmds:00012897:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: tablecmds:00012898:  errmsg("specify orientation requires appendonly"), 
taaj: tablecmds:00012899:  errOmitLocation(true))); 
taaj: tablecmds:00012916:  ereport(ERROR, 
taaj: tablecmds:00012917:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: tablecmds:00012918:  errmsg("%s must be set to true when changing storage " 
taaj: tablecmds:00012919:  "type", reorg_str), 
taaj: tablecmds:00012920:  errOmitLocation(true))); 
taaj: tablecmds:00012943:  ereport(WARNING, 
taaj: tablecmds:00012944:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taaj: tablecmds:00012945:  errmsg("distribution policy of relation \"%s\" " 
taaj: tablecmds:00012946:  "already set to DISTRIBUTED RANDOMLY", 
taaj: tablecmds:00012947:  RelationGetRelationName(rel)), 
taaj: tablecmds:00012948:  errhint("Use ALTER TABLE \"%s\" " 
taaj: tablecmds:00012949:  "SET WITH (REORGANIZE=TRUE) " 
taaj: tablecmds:00012950:  "DISTRIBUTED RANDOMLY " 
taaj: tablecmds:00012951:  "to force a random redistribution", 
taaj: tablecmds:00012952:  RelationGetRelationName(rel)), 
taaj: tablecmds:00012953:  errOmitLocation(true))); 
taaj: tablecmds:00013022:  ereport(ERROR, 
taaj: tablecmds:00013023:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taaj: tablecmds:00013024:  errmsg("distribution policy must be a " 
taaj: tablecmds:00013025:  "unique set of columns"), 
taaj: tablecmds:00013026:  errhint("Column \"%s\" appears " 
taaj: tablecmds:00013027:  "more than once", colName), 
taaj: tablecmds:00013028:  errOmitLocation(true))); 
taaj: tablecmds:00013030:  ereport(ERROR, 
taaj: tablecmds:00013031:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
taaj: tablecmds:00013032:  errmsg("column \"%s\" of " 
taaj: tablecmds:00013033:  "relation \"%s\" does not exist", 
taaj: tablecmds:00013034:  colName, 
taaj: tablecmds:00013035:  RelationGetRelationName(rel)), 
taaj: tablecmds:00013036:  errOmitLocation(true))); 
taaj: tablecmds:00013042:  ereport(ERROR, 
taaj: tablecmds:00013043:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00013044:  errmsg("cannot distribute by system column \"%s\"", 
taaj: tablecmds:00013045:  colName), 
taaj: tablecmds:00013046:  errOmitLocation(true))); 
taaj: tablecmds:00013088:  ereport(WARNING, 
taaj: tablecmds:00013089:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taaj: tablecmds:00013090:  errmsg("distribution policy of relation \"%s\" " 
taaj: tablecmds:00013091:  "already set to (%s)", 
taaj: tablecmds:00013092:  RelationGetRelationName(rel), 
taaj: tablecmds:00013093:  dist), 
taaj: tablecmds:00013094:  errhint("Use ALTER TABLE \"%s\" " 
taaj: tablecmds:00013095:  "SET WITH (REORGANIZE=TRUE) " 
taaj: tablecmds:00013096:  "DISTRIBUTED BY (%s) " 
taaj: tablecmds:00013097:  "to force redistribution", 
taaj: tablecmds:00013098:  RelationGetRelationName(rel), 
taaj: tablecmds:00013099:  dist), 
taaj: tablecmds:00013100:  errOmitLocation(true))); 
taaj: tablecmds:00013386:  elog(ERROR, "cache lookup failure: cannot find pg_index entry for OID %u", 
taaj: tablecmds:00013387:  toid); 
taaj: tablecmds:00013566:  ereport(ERROR, 
taaj: tablecmds:00013567:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00013568:  errmsg("%s is not partitioned", lrelname), 
taaj: tablecmds:00013569:  errOmitLocation(true))); 
taaj: tablecmds:00013583:  elog(ERROR, "unrecognized partitioning kind '%c'", 
taaj: tablecmds:00013584:  pNode->part->parkind); 
taaj: tablecmds:00013597:  ereport(ERROR, 
taaj: tablecmds:00013598:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00013599:  errmsg("cannot add HASH partition%s to %s", 
taaj: tablecmds:00013600:  namBuf, 
taaj: tablecmds:00013601:  lrelname), 
taaj: tablecmds:00013602:  errhint("recreate the table to increase the " 
taaj: tablecmds:00013603:  "number of partitions"), 
taaj: tablecmds:00013604:  errOmitLocation(true))); 
taaj: tablecmds:00013610:  ereport(ERROR, 
taaj: tablecmds:00013611:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00013612:  errmsg("cannot ADD partition%s to %s by rank or value", 
taaj: tablecmds:00013613:  namBuf, 
taaj: tablecmds:00013614:  lrelname), 
taaj: tablecmds:00013615:  errhint("use a named partition"), 
taaj: tablecmds:00013616:  errOmitLocation(true))); 
taaj: tablecmds:00013632:  ereport(ERROR, 
taaj: tablecmds:00013633:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00013634:  errmsg("cannot add %s partition%s to " 
taaj: tablecmds:00013635:  "%s with DEFAULT partition \"%s\"", 
taaj: tablecmds:00013636:  parTypName, 
taaj: tablecmds:00013637:  namBuf, 
taaj: tablecmds:00013638:  lrelname, 
taaj: tablecmds:00013639:  pNode->default_part->parname), 
taaj: tablecmds:00013640:  errhint("need to SPLIT partition \"%s\"", 
taaj: tablecmds:00013641:  pNode->default_part->parname), 
taaj: tablecmds:00013642:  errOmitLocation(true))); 
taaj: tablecmds:00013647:  ereport(ERROR, 
taaj: tablecmds:00013648:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00013649:  errmsg("cannot add a DEFAULT partition%s " 
taaj: tablecmds:00013650:  "to %s of type HASH", 
taaj: tablecmds:00013651:  namBuf, 
taaj: tablecmds:00013652:  lrelname), 
taaj: tablecmds:00013653:  errOmitLocation(true))); 
taaj: tablecmds:00013657:  ereport(ERROR, 
taaj: tablecmds:00013658:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taaj: tablecmds:00013659:  errmsg("DEFAULT partition \"%s\" for " 
taaj: tablecmds:00013660:  "%s already exists", 
taaj: tablecmds:00013661:  pNode->default_part->parname, 
taaj: tablecmds:00013662:  lrelname), 
taaj: tablecmds:00013663:  errOmitLocation(true))); 
taaj: tablecmds:00013671:  ereport(ERROR, 
taaj: tablecmds:00013672:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00013673:  errmsg("invalid use of boundary specification " 
taaj: tablecmds:00013674:  "for DEFAULT partition%s of %s", 
taaj: tablecmds:00013675:  namBuf, 
taaj: tablecmds:00013676:  lrelname), 
taaj: tablecmds:00013677:  errOmitLocation(true))); 
taaj: tablecmds:00013800:  ereport(ERROR, 
taaj: tablecmds:00013801:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00013802:  errmsg("cannot ALTER PARTITION for relation \"%s\"", 
taaj: tablecmds:00013803:  RelationGetRelationName(rel)), 
taaj: tablecmds:00013804:  errOmitLocation(true))); 
taaj: tablecmds:00013818:  ereport(ERROR, 
taaj: tablecmds:00013819:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00013820:  errmsg("cannot ALTER PARTITION for relation \"%s\"", 
taaj: tablecmds:00013821:  RelationGetRelationName(rel)), 
taaj: tablecmds:00013822:  errOmitLocation(true))); 
taaj: tablecmds:00013865:  ereport(ERROR, 
taaj: tablecmds:00013866:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00013867:  errmsg("cannot ALTER PARTITION ... SET " 
taaj: tablecmds:00013868:  "DISTRIBUTED BY for %s", 
taaj: tablecmds:00013869:  prule->relname), 
taaj: tablecmds:00013870:  errhint("distribution policy of " 
taaj: tablecmds:00013871:  "partition must match parent"), 
taaj: tablecmds:00013872:  errOmitLocation(true) 
taaj: tablecmds:00013873:  )); 
taaj: tablecmds:00013882:  ereport(NOTICE, 
taaj: tablecmds:00013883:  (errmsg("altering table \"%s\" " 
taaj: tablecmds:00013884:  "(%s)", 
taaj: tablecmds:00013885:  RelationGetRelationName(rel2), 
taaj: tablecmds:00013886:  prule->relname))); 
taaj: tablecmds:00013944:  ereport(ERROR, 
taaj: tablecmds:00013945:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00013946:  errmsg("cannot COALESCE PARTITION for relation \"%s\"", 
taaj: tablecmds:00013947:  RelationGetRelationName(rel)), 
taaj: tablecmds:00013948:  errOmitLocation(true))); 
taaj: tablecmds:00014002:  ereport(ERROR, 
taaj: tablecmds:00014003:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00014004:  errmsg("missing name or value for DROP for %s", 
taaj: tablecmds:00014005:  lrelname), 
taaj: tablecmds:00014006:  errOmitLocation(true))); 
taaj: tablecmds:00014008:  ereport(ERROR, 
taaj: tablecmds:00014009:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00014010:  errmsg("missing name or value for DROP"), 
taaj: tablecmds:00014011:  errOmitLocation(true))); 
taaj: tablecmds:00014026:  ereport(ERROR, 
taaj: tablecmds:00014027:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00014028:  errmsg("FOR expression matches " 
taaj: tablecmds:00014029:  "DEFAULT partition%s of %s", 
taaj: tablecmds:00014030:  prule->partIdStr, 
taaj: tablecmds:00014031:  prule->relname), 
taaj: tablecmds:00014032:  errhint("FOR expression may only specify " 
taaj: tablecmds:00014033:  "a non-default partition in this context."), 
taaj: tablecmds:00014034:  errOmitLocation(true))); 
taaj: tablecmds:00014046:  ereport(NOTICE, 
taaj: tablecmds:00014047:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00014048:  errmsg("partition \"%s\" of %s does not " 
taaj: tablecmds:00014049:  "exist, skipping", 
taaj: tablecmds:00014050:  strVal(locPid->partiddef), 
taaj: tablecmds:00014051:  lrelname 
taaj: tablecmds:00014052:  ), 
taaj: tablecmds:00014053:  errOmitLocation(true))); 
taaj: tablecmds:00014057:  ereport(NOTICE, 
taaj: tablecmds:00014058:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00014059:  errmsg("partition for specified value of " 
taaj: tablecmds:00014060:  "%s does not exist, skipping", 
taaj: tablecmds:00014061:  lrelname 
taaj: tablecmds:00014062:  ), 
taaj: tablecmds:00014063:  errOmitLocation(true))); 
taaj: tablecmds:00014067:  ereport(NOTICE, 
taaj: tablecmds:00014068:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00014069:  errmsg("partition for specified rank of " 
taaj: tablecmds:00014070:  "%s does not exist, skipping", 
taaj: tablecmds:00014071:  lrelname 
taaj: tablecmds:00014072:  ), 
taaj: tablecmds:00014073:  errOmitLocation(true))); 
taaj: tablecmds:00014077:  ereport(NOTICE, 
taaj: tablecmds:00014078:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00014079:  errmsg("partition for specified oid of " 
taaj: tablecmds:00014080:  "%s does not exist, skipping", 
taaj: tablecmds:00014081:  lrelname 
taaj: tablecmds:00014082:  ), 
taaj: tablecmds:00014083:  errOmitLocation(true))); 
taaj: tablecmds:00014086:  ereport(NOTICE, 
taaj: tablecmds:00014087:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00014088:  errmsg("DEFAULT partition for " 
taaj: tablecmds:00014089:  "%s does not exist, skipping", 
taaj: tablecmds:00014090:  lrelname 
taaj: tablecmds:00014091:  ), 
taaj: tablecmds:00014092:  errOmitLocation(true))); 
taaj: tablecmds:00014116:  ereport(ERROR, 
taaj: tablecmds:00014117:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
taaj: tablecmds:00014118:  errmsg("cannot drop HASH partition%s of %s", 
taaj: tablecmds:00014119:  prule->partIdStr, 
taaj: tablecmds:00014120:  prule->relname), 
taaj: tablecmds:00014121:  errhint("recreate the table to reduce the " 
taaj: tablecmds:00014122:  "number of partitions"), 
taaj: tablecmds:00014123:  errOmitLocation(true))); 
taaj: tablecmds:00014129:  ereport(ERROR, 
taaj: tablecmds:00014130:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
taaj: tablecmds:00014131:  errmsg("cannot drop partition%s of " 
taaj: tablecmds:00014132:  "%s -- only one remains", 
taaj: tablecmds:00014133:  prule->partIdStr, 
taaj: tablecmds:00014134:  prule->relname), 
taaj: tablecmds:00014135:  errhint("Use DROP TABLE \"%s\" to remove the " 
taaj: tablecmds:00014136:  "table and the final partition ", 
taaj: tablecmds:00014137:  RelationGetRelationName(rel)), 
taaj: tablecmds:00014138:  errOmitLocation(true))); 
taaj: tablecmds:00014140:  ereport(ERROR, 
taaj: tablecmds:00014141:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
taaj: tablecmds:00014142:  errmsg("cannot drop partition%s of " 
taaj: tablecmds:00014143:  "%s -- only one remains", 
taaj: tablecmds:00014144:  prule->partIdStr, 
taaj: tablecmds:00014145:  prule->relname), 
taaj: tablecmds:00014146:  errhint("DROP the parent partition to remove the " 
taaj: tablecmds:00014147:  "final partition "), 
taaj: tablecmds:00014148:  errOmitLocation(true))); 
taaj: tablecmds:00014189:  ereport(NOTICE, 
taaj: tablecmds:00014190:  (errmsg("dropped partition%s for %s and its children", 
taaj: tablecmds:00014191:  prule->partIdStr, 
taaj: tablecmds:00014192:  prule->relname))); 
taaj: tablecmds:00014196:  ereport(NOTICE, 
taaj: tablecmds:00014197:  (errmsg("dropped partition%s for %s", 
taaj: tablecmds:00014198:  prule->partIdStr, 
taaj: tablecmds:00014199:  prule->relname))); 
taaj: tablecmds:00014288:  ereport(ERROR, 
taaj: tablecmds:00014289:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00014290:  errmsg("cannot EXCHANGE PARTITION for " 
taaj: tablecmds:00014291:  "%s -- partition has children", 
taaj: tablecmds:00014292:  prule->relname 
taaj: tablecmds:00014293:  ), 
taaj: tablecmds:00014294:  errOmitLocation(true))); 
taaj: tablecmds:00014474:  ereport(NOTICE, 
taaj: tablecmds:00014475:  (errmsg("exchanged partition%s of " 
taaj: tablecmds:00014476:  "%s with relation \"%s\"", 
taaj: tablecmds:00014477:  orig_prule->partIdStr, 
taaj: tablecmds:00014478:  orig_prule->relname, 
taaj: tablecmds:00014479:  newname), 
taaj: tablecmds:00014480:  errOmitLocation(true))); 
taaj: tablecmds:00014555:  ereport(ERROR, 
taaj: tablecmds:00014556:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00014557:  errmsg("target of MERGE must be either \"%s\" or " 
taaj: tablecmds:00014558:  "\"%s\"", 
taaj: tablecmds:00014559:  get_rel_name(prule1->topRule->parchildrelid), 
taaj: tablecmds:00014560:  get_rel_name(prule2->topRule->parchildrelid)), 
taaj: tablecmds:00014561:  errOmitLocation(true))); 
taaj: tablecmds:00014594:  elog(NOTICE, "merging"); 
taaj: tablecmds:00014595:  elog(NOTICE, "%s", RelationGetRelationName(source)); 
taaj: tablecmds:00014597:  elog(NOTICE, "with %s", RelationGetRelationName(target)); 
taaj: tablecmds:00014599:  ereport(ERROR, 
taaj: tablecmds:00014600:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00014601:  errmsg("cannot MERGE PARTITION for relation \"%s\"", 
taaj: tablecmds:00014602:  RelationGetRelationName(rel)), 
taaj: tablecmds:00014603:  errOmitLocation(true))); 
taaj: tablecmds:00014655:  elog(ERROR, "unrecognized partitioning kind '%c'", 
taaj: tablecmds:00014656:  prule->pNode->part->parkind); 
taaj: tablecmds:00014663:  ereport(ERROR, 
taaj: tablecmds:00014664:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00014665:  errmsg("cannot MODIFY DEFAULT %s partition%s " 
taaj: tablecmds:00014666:  "for relation \"%s\"", 
taaj: tablecmds:00014667:  parTypName, 
taaj: tablecmds:00014668:  ((prule && prule->isName) ? prule->partIdStr : ""), 
taaj: tablecmds:00014669:  RelationGetRelationName(rel)), 
taaj: tablecmds:00014670:  errOmitLocation(true))); 
taaj: tablecmds:00014673:  ereport(ERROR, 
taaj: tablecmds:00014674:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00014675:  errmsg("invalid use of %s boundary specification " 
taaj: tablecmds:00014676:  "in partition%s of type %s", 
taaj: tablecmds:00014677:  "RANGE", 
taaj: tablecmds:00014678:  ((prule && prule->isName) ? prule->partIdStr : ""), 
taaj: tablecmds:00014679:  parTypName 
taaj: tablecmds:00014680:  ), 
taaj: tablecmds:00014681:  errOmitLocation(true))); 
taaj: tablecmds:00014684:  ereport(ERROR, 
taaj: tablecmds:00014685:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00014686:  errmsg("invalid use of %s boundary specification " 
taaj: tablecmds:00014687:  "in partition%s of type %s", 
taaj: tablecmds:00014688:  "LIST", 
taaj: tablecmds:00014689:  ((prule && prule->isName) ? prule->partIdStr : ""), 
taaj: tablecmds:00014690:  parTypName 
taaj: tablecmds:00014691:  ), 
taaj: tablecmds:00014692:  errOmitLocation(true))); 
taaj: tablecmds:00014726:  ereport(ERROR, 
taaj: tablecmds:00014727:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00014728:  errmsg("cannot MODIFY PARTITION for relation \"%s\"", 
taaj: tablecmds:00014729:  RelationGetRelationName(rel)), 
taaj: tablecmds:00014730:  errOmitLocation(true))); 
taaj: tablecmds:00014830:  ereport(ERROR, 
taaj: tablecmds:00014831:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00014832:  errmsg("name \"%s\" for child partition " 
taaj: tablecmds:00014833:  "is too long", 
taaj: tablecmds:00014834:  newpartname))); 
taaj: tablecmds:00014924:  ereport(NOTICE, 
taaj: tablecmds:00014925:  (errmsg("renamed partition%s to \"%s\" for %s", 
taaj: tablecmds:00014926:  prule->partIdStr, 
taaj: tablecmds:00014927:  newpartname, 
taaj: tablecmds:00014928:  prule->relname))); 
taaj: tablecmds:00014933:  ereport(WARNING, 
taaj: tablecmds:00014934:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: tablecmds:00014935:  errmsg("renamed %d partitions, skipped %d child partitions due to name truncation", 
taaj: tablecmds:00014936:  renamed, skipped), 
taaj: tablecmds:00014937:  errOmitLocation(true))); 
taaj: tablecmds:00014987:  ereport(NOTICE, 
taaj: tablecmds:00014988:  (errmsg("%s level %d " 
taaj: tablecmds:00014989:  "subpartition template specification " 
taaj: tablecmds:00014990:  "for relation \"%s\"", 
taaj: tablecmds:00014991:  "adding", 
taaj: tablecmds:00014992:  lvl, 
taaj: tablecmds:00014993:  RelationGetRelationName(rel)))); 
taaj: tablecmds:00014998:  ereport(ERROR, 
taaj: tablecmds:00014999:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00015000:  errmsg("relation \"%s\" does not have a " 
taaj: tablecmds:00015001:  "level %d " 
taaj: tablecmds:00015002:  "subpartition template specification", 
taaj: tablecmds:00015003:  RelationGetRelationName(rel), 
taaj: tablecmds:00015004:  lvl), 
taaj: tablecmds:00015005:  errOmitLocation(true))); 
taaj: tablecmds:00015013:  ereport(NOTICE, 
taaj: tablecmds:00015014:  (errmsg("%s level %d " 
taaj: tablecmds:00015015:  "subpartition template specification " 
taaj: tablecmds:00015016:  "for relation \"%s\"", 
taaj: tablecmds:00015017:  (pc->arg1) ? "replacing" : "dropped", 
taaj: tablecmds:00015018:  lvl, 
taaj: tablecmds:00015019:  RelationGetRelationName(rel)))); 
taaj: tablecmds:00015022:  elog(ERROR, 
taaj: tablecmds:00015023:  "could not drop " 
taaj: tablecmds:00015024:  "level %d " 
taaj: tablecmds:00015025:  "subpartition template specification " 
taaj: tablecmds:00015026:  "for relation \"%s\"", 
taaj: tablecmds:00015027:  lvl, 
taaj: tablecmds:00015028:  RelationGetRelationName(rel)); 
taaj: tablecmds:00015691:  ereport(ERROR, 
taaj: tablecmds:00015692:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00015693:  errmsg("relation \"%s\" does not have a " 
taaj: tablecmds:00015694:  "default partition", 
taaj: tablecmds:00015695:  RelationGetRelationName(rel)), 
taaj: tablecmds:00015696:  errOmitLocation(true))); 
taaj: tablecmds:00015778:  ereport(ERROR, 
taaj: tablecmds:00015779:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taaj: tablecmds:00015780:  errmsg("relation \"%s\" does not have a " 
taaj: tablecmds:00015781:  "default partition", 
taaj: tablecmds:00015782:  RelationGetRelationName(rel)), 
taaj: tablecmds:00015783:  errOmitLocation(true))); 
taaj: tablecmds:00015829:  ereport(ERROR, 
taaj: tablecmds:00015830:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taaj: tablecmds:00015831:  errmsg("both INTO partitions " 
taaj: tablecmds:00015832:  "already exist"), 
taaj: tablecmds:00015833:  errOmitLocation(true))); 
taaj: tablecmds:00016675:  ereport(NOTICE, 
taaj: tablecmds:00016676:  (errmsg("truncated partition%s for %s and its children", 
taaj: tablecmds:00016677:  prule->partIdStr, 
taaj: tablecmds:00016678:  prule->relname), 
taaj: tablecmds:00016679:  errOmitLocation(true))); 
taaj: tablecmds:00016683:  ereport(NOTICE, 
taaj: tablecmds:00016684:  (errmsg("truncated partition%s for %s", 
taaj: tablecmds:00016685:  prule->partIdStr, 
taaj: tablecmds:00016686:  prule->relname), 
taaj: tablecmds:00016687:  errOmitLocation(true))); 
taaj: tablecmds:00016712:  ereport(ERROR, 
taaj: tablecmds:00016713:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00016714:  errmsg("\"%s\" is a TOAST relation", 
taaj: tablecmds:00016715:  RelationGetRelationName(rel)), 
taaj: tablecmds:00016716:  errOmitLocation(true))); 
taaj: tablecmds:00016719:  ereport(ERROR, 
taaj: tablecmds:00016720:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00016721:  errmsg("\"%s\" is an Append Only segment listing relation", 
taaj: tablecmds:00016722:  RelationGetRelationName(rel)), 
taaj: tablecmds:00016723:  errOmitLocation(true))); 
taaj: tablecmds:00016726:  ereport(ERROR, 
taaj: tablecmds:00016727:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taaj: tablecmds:00016728:  errmsg("\"%s\" is an Append Only block directory relation", 
taaj: tablecmds:00016729:  RelationGetRelationName(rel)), 
taaj: tablecmds:00016730:  errOmitLocation(true))); 
taaj: tablecmds:00016739:  ereport(ERROR, 
taaj: tablecmds:00016740:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00016741:  errmsg("cannot move an owned sequence into another schema"), 
taaj: tablecmds:00016742:  errdetail("Sequence \"%s\" is linked to table \"%s\".", 
taaj: tablecmds:00016743:  RelationGetRelationName(rel), 
taaj: tablecmds:00016744:  get_rel_name(tableId)), 
taaj: tablecmds:00016745:  errOmitLocation(true))); 
taaj: tablecmds:00016752:  ereport(ERROR, 
taaj: tablecmds:00016753:  (errcode(ERRCODE_DUPLICATE_TABLE), 
taaj: tablecmds:00016754:  errmsg("relation \"%s\" is already in schema \"%s\"", 
taaj: tablecmds:00016755:  RelationGetRelationName(rel), 
taaj: tablecmds:00016756:  newschema), 
taaj: tablecmds:00016757:  errOmitLocation(true))); 
taaj: tablecmds:00016761:  ereport(ERROR, 
taaj: tablecmds:00016762:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00016763:  errmsg("cannot move objects into or out of temporary schemas"), 
taaj: tablecmds:00016764:  errOmitLocation(true))); 
taaj: tablecmds:00016768:  ereport(ERROR, 
taaj: tablecmds:00016769:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00016770:  errmsg("cannot move objects into or out of TOAST schema"), 
taaj: tablecmds:00016771:  errOmitLocation(true))); 
taaj: tablecmds:00016775:  ereport(ERROR, 
taaj: tablecmds:00016776:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00016777:  errmsg("cannot move objects into or out of AO SEGMENT schema"), 
taaj: tablecmds:00016778:  errOmitLocation(true))); 
taaj: tablecmds:00016854:  elog(ERROR, "cache lookup failed for relation %u", relOid); 
taaj: tablecmds:00016862:  ereport(ERROR, 
taaj: tablecmds:00016863:  (errcode(ERRCODE_DUPLICATE_TABLE), 
taaj: tablecmds:00016864:  errmsg("relation \"%s\" already exists in schema \"%s\"", 
taaj: tablecmds:00016865:  NameStr(classForm->relname), 
taaj: tablecmds:00016866:  get_namespace_name(newNspOid)), 
taaj: tablecmds:00016867:  errOmitLocation(true))); 
taaj: tablecmds:00016879:  elog(ERROR, "failed to change schema dependency for relation \"%s\"", 
taaj: tablecmds:00016880:  NameStr(classForm->relname)); 
taaj: tablecmds:00017229:  ereport(ERROR, 
taaj: tablecmds:00017230:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
taaj: tablecmds:00017231:  errmsg("location uri \"%s\" appears more than once", 
taaj: tablecmds:00017232:  uri1), 
taaj: tablecmds:00017233:  errOmitLocation(true))); 
taaj: tablecmds:00017318:  ereport(ERROR, 
taaj: tablecmds:00017319:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00017320:  errmsg("URI protocols must be the same for all data sources"), 
taaj: tablecmds:00017321:  errhint("Available protocols are 'http', 'file', 'pxf', 'gpfdist' and 'gpfdists'"), 
taaj: tablecmds:00017322:  errOmitLocation(true))); 
taaj: tablecmds:00017327:  ereport(ERROR, 
taaj: tablecmds:00017328:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017329:  errmsg("an EXTERNAL WEB TABLE may only use http URI\'s, problem in: \'%s\'", uri_str_final), 
taaj: tablecmds:00017330:  errhint("Use CREATE EXTERNAL TABLE instead."), 
taaj: tablecmds:00017331:  errOmitLocation(true))); 
taaj: tablecmds:00017334:  ereport(ERROR, 
taaj: tablecmds:00017335:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017336:  errmsg("http URI\'s can only be used in an external web table"), 
taaj: tablecmds:00017337:  errhint("Use CREATE EXTERNAL WEB TABLE instead."), 
taaj: tablecmds:00017338:  errOmitLocation(true))); 
taaj: tablecmds:00017341:  ereport(ERROR, 
taaj: tablecmds:00017342:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: tablecmds:00017343:  errmsg("unsupported URI protocol \'%s\' for writable external table", 
taaj: tablecmds:00017344:  (uri->protocol == URI_HTTP ? "http" : "file")), 
taaj: tablecmds:00017345:  errhint("Writable external tables may use \'gpfdist(s)\' URIs only."), 
taaj: tablecmds:00017346:  errOmitLocation(true))); 
taaj: tablecmds:00017349:  ereport(ERROR, 
taaj: tablecmds:00017350:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017351:  errmsg("Unsupported use of wildcard in a writable external web table definition: " 
taaj: tablecmds:00017352:  "\'%s\'", uri_str_final), 
taaj: tablecmds:00017353:  errhint("Specify the explicit path and file name to write into."))); 
taaj: tablecmds:00017356:  ereport(ERROR, 
taaj: tablecmds:00017357:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017358:  errmsg("Unsupported use of a directory name in a writable gpfdist(s) external table : " 
taaj: tablecmds:00017359:  "\'%s\'", uri_str_final), 
taaj: tablecmds:00017360:  errhint("Specify the explicit path and file name to write into."), 
taaj: tablecmds:00017361:  errOmitLocation(true))); 
taaj: tablecmds:00017412:  ereport(ERROR, 
taaj: tablecmds:00017413:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017414:  errmsg("ON clause must not have more than one element."), 
taaj: tablecmds:00017415:  errOmitLocation(true))); 
taaj: tablecmds:00017458:  ereport(ERROR, 
taaj: tablecmds:00017459:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
taaj: tablecmds:00017460:  errmsg("Unknown location code for EXECUTE in tablecmds."), 
taaj: tablecmds:00017461:  errOmitLocation(true))); 
taaj: tablecmds:00017501:  ereport(ERROR, 
taaj: tablecmds:00017502:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017503:  errmsg("unsupported format '%s'", formatname), 
taaj: tablecmds:00017504:  errhint("available formats are \"text\", \"csv\", or \"custom\""), 
taaj: tablecmds:00017505:  errOmitLocation(true))); 
taaj: tablecmds:00017549:  ereport(ERROR, 
taaj: tablecmds:00017550:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017551:  errmsg("conflicting or redundant options"), 
taaj: tablecmds:00017552:  errOmitLocation(true))); 
taaj: tablecmds:00017558:  ereport(ERROR, 
taaj: tablecmds:00017559:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017560:  errmsg("conflicting or redundant options"), 
taaj: tablecmds:00017561:  errOmitLocation(true))); 
taaj: tablecmds:00017567:  ereport(ERROR, 
taaj: tablecmds:00017568:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017569:  errmsg("conflicting or redundant options"), 
taaj: tablecmds:00017570:  errOmitLocation(true))); 
taaj: tablecmds:00017576:  ereport(ERROR, 
taaj: tablecmds:00017577:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017578:  errmsg("conflicting or redundant options"), 
taaj: tablecmds:00017579:  errOmitLocation(true))); 
taaj: tablecmds:00017585:  ereport(ERROR, 
taaj: tablecmds:00017586:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017587:  errmsg("conflicting or redundant options"), 
taaj: tablecmds:00017588:  errOmitLocation(true))); 
taaj: tablecmds:00017594:  ereport(ERROR, 
taaj: tablecmds:00017595:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017596:  errmsg("conflicting or redundant options"), 
taaj: tablecmds:00017597:  errOmitLocation(true))); 
taaj: tablecmds:00017604:  ereport(ERROR, 
taaj: tablecmds:00017605:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017606:  errmsg("conflicting or redundant options"), 
taaj: tablecmds:00017607:  errOmitLocation(true))); 
taaj: tablecmds:00017614:  ereport(ERROR, 
taaj: tablecmds:00017615:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017616:  errmsg("conflicting or redundant options"), 
taaj: tablecmds:00017617:  errOmitLocation(true))); 
taaj: tablecmds:00017623:  ereport(ERROR, 
taaj: tablecmds:00017624:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017625:  errmsg("conflicting or redundant options"), 
taaj: tablecmds:00017626:  errOmitLocation(true))); 
taaj: tablecmds:00017631:  ereport(ERROR, 
taaj: tablecmds:00017632:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017633:  errmsg("formatter option only valid for custom formatters"), 
taaj: tablecmds:00017634:  errOmitLocation(true))); 
taaj: tablecmds:00017637:  elog(ERROR, "option \"%s\" not recognized", 
taaj: tablecmds:00017638:  defel->defname); 
taaj: tablecmds:00017791:  ereport(ERROR, 
taaj: tablecmds:00017792:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017793:  errmsg("conflicting or redundant options"), 
taaj: tablecmds:00017794:  errOmitLocation(true))); 
taaj: tablecmds:00017808:  ereport(ERROR, 
taaj: tablecmds:00017809:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017810:  errmsg("format options must be less than %d bytes in size", maxlen), 
taaj: tablecmds:00017811:  errOmitLocation(true))); 
taaj: tablecmds:00017815:  ereport(ERROR, 
taaj: tablecmds:00017816:  (errcode(ERRCODE_SYNTAX_ERROR), 
taaj: tablecmds:00017817:  errmsg("no formatter function specified"), 
taaj: tablecmds:00017818:  errOmitLocation(true))); 
taaj: tablecmds:00017862:  ereport(ERROR, 
taaj: tablecmds:00017863:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
taaj: tablecmds:00017864:  errmsg("cannot exchange HASH partition%s " 
taaj: tablecmds:00017865:  "of relation \"%s\"", prule->partIdStr, 
taaj: tablecmds:00017866:  RelationGetRelationName(rel)))); 
taaj: tablecmds:00018051:  elog(ERROR, "validator function %u returned NULL", 
taaj: tablecmds:00018052:  fcinfo.flinfo->fn_oid); 
aaaaa GP_IGNORE: taba: tablespace - ./backend/commands/tablespace.c
taba: tablespace:00000123:  ereport(ERROR, 
taba: tablespace:00000124:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taba: tablespace:00000125:  errmsg("permission denied to create tablespace \"%s\"", 
taba: tablespace:00000126:  stmt->tablespacename), 
taba: tablespace:00000127:  errhint("Must be superuser to create a tablespace."))); 
taba: tablespace:00000141:  ereport(ERROR, 
taba: tablespace:00000142:  (errcode(ERRCODE_RESERVED_NAME), 
taba: tablespace:00000143:  errmsg("unacceptable tablespace name \"%s\"", 
taba: tablespace:00000144:  stmt->tablespacename), 
taba: tablespace:00000145:  errdetail("The prefix \"%s\" is reserved for system tablespaces.", 
taba: tablespace:00000146:  GetReservedPrefix(stmt->tablespacename)))); 
taba: tablespace:00000156:  ereport(ERROR, 
taba: tablespace:00000157:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taba: tablespace:00000158:  errmsg("filespace \"%s\" does not exist", 
taba: tablespace:00000159:  stmt->filespacename))); 
taba: tablespace:00000176:  ereport(ERROR, 
taba: tablespace:00000177:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taba: tablespace:00000178:  errmsg("permission denied to create tablespace \"%s\"", 
taba: tablespace:00000179:  stmt->tablespacename), 
taba: tablespace:00000180:  errhint("filespace %s is reserved for system use", 
taba: tablespace:00000181:  stmt->filespacename))); 
taba: tablespace:00000189:  ereport(ERROR, 
taba: tablespace:00000190:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taba: tablespace:00000191:  errmsg("tablespace \"%s\" already exists", 
taba: tablespace:00000192:  stmt->tablespacename))); 
taba: tablespace:00000319:  ereport(ERROR, 
taba: tablespace:00000320:  (errcode(ERRCODE_SYNTAX_ERROR), 
taba: tablespace:00000321:  errmsg("tablespace name may not be qualified"))); 
taba: tablespace:00000326:  ereport(ERROR, 
taba: tablespace:00000327:  (errcode(ERRCODE_SYNTAX_ERROR), 
taba: tablespace:00000328:  errmsg("syntax at or near \"cascade\""))); 
taba: tablespace:00000351:  ereport(ERROR, 
taba: tablespace:00000352:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taba: tablespace:00000353:  errmsg("tablespace \"%s\" does not exist", 
taba: tablespace:00000354:  tablespacename))); 
taba: tablespace:00000358:  ereport(NOTICE, 
taba: tablespace:00000359:  (errmsg("tablespace \"%s\" does not exist, skipping", 
taba: tablespace:00000360:  tablespacename))); 
taba: tablespace:00000424:  ereport(ERROR, 
taba: tablespace:00000425:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
taba: tablespace:00000426:  errmsg("tablespace \"%s\" is not empty", tablespacename))); 
taba: tablespace:00000524:  ereport(WARNING, 
taba: tablespace:00000525:  (errmsg("directory linked to \"%s\" does not exist", location) 
taba: tablespace:00000526:  )); 
taba: tablespace:00000579:  ereport(ERROR, 
taba: tablespace:00000580:  (errcode_for_file_access(), 
taba: tablespace:00000581:  errmsg("could not remove directory \"%s\": %m", 
taba: tablespace:00000582:  subfile))); 
taba: tablespace:00000599:  ereport(ERROR, 
taba: tablespace:00000600:  (errcode_for_file_access(), 
taba: tablespace:00000601:  errmsg("could not remove file \"%s\": %m", 
taba: tablespace:00000602:  subfile))); 
taba: tablespace:00000616:  ereport(ERROR, 
taba: tablespace:00000617:  (errcode_for_file_access(), 
taba: tablespace:00000618:  errmsg("could not remove directory \"%s\": %m", 
taba: tablespace:00000619:  location))); 
taba: tablespace:00000624:  ereport(ERROR, 
taba: tablespace:00000625:  (errcode_for_file_access(), 
taba: tablespace:00000626:  errmsg("could not remove symbolic link \"%s\": %m", 
taba: tablespace:00000627:  location))); 
taba: tablespace:00000640:  ereport(ERROR, 
taba: tablespace:00000641:  (errcode_for_file_access(), 
taba: tablespace:00000642:  errmsg("could not remove subdirectory \"%s\": %m", 
taba: tablespace:00000643:  tempstr))); 
taba: tablespace:00000718:  ereport(ERROR, 
taba: tablespace:00000719:  (errcode_for_file_access(), 
taba: tablespace:00000720:  errmsg("could not write to file \"%s\": %m", 
taba: tablespace:00000721:  fullname))); 
taba: tablespace:00000724:  ereport(ERROR, 
taba: tablespace:00000725:  (errcode_for_file_access(), 
taba: tablespace:00000726:  errmsg("could not write to file \"%s\": %m", 
taba: tablespace:00000727:  fullname))); 
taba: tablespace:00000792:  ereport(ERROR, 
taba: tablespace:00000793:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taba: tablespace:00000794:  errmsg("tablespace \"%s\" does not exist", 
taba: tablespace:00000795:  oldname))); 
taba: tablespace:00000807:  ereport(ERROR, 
taba: tablespace:00000808:  (errcode(ERRCODE_RESERVED_NAME), 
taba: tablespace:00000809:  errmsg("unacceptable tablespace name \"%s\"", newname), 
taba: tablespace:00000810:  errdetail("The prefix \"%s\" is reserved for system tablespaces.", 
taba: tablespace:00000811:  GetReservedPrefix(newname)))); 
taba: tablespace:00000820:  ereport(ERROR, 
taba: tablespace:00000821:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taba: tablespace:00000822:  errmsg("tablespace \"%s\" already exists", 
taba: tablespace:00000823:  newname))); 
taba: tablespace:00000868:  ereport(ERROR, 
taba: tablespace:00000869:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taba: tablespace:00000870:  errmsg("tablespace \"%s\" does not exist", name))); 
taba: tablespace:00000971:  ereport(ERROR, 
taba: tablespace:00000972:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taba: tablespace:00000973:  errmsg("tablespace \"%s\" does not exist", 
taba: tablespace:00000974:  newval))); 
taba: tablespace:00001086:  ereport(ERROR, 
taba: tablespace:00001087:  (errcode(ERRCODE_T_R_SERIALIZATION_FAILURE), 
taba: tablespace:00001088:  errmsg("could not serialize access to tablespace %s due to concurrent update", 
taba: tablespace:00001089:  tablespacename))); 
taba: tablespace:00001092:  elog(ERROR, "unrecognized heap_lock_tuple_status: %u", lockTest); 
taba: tablespace:00001156:  elog(ERROR, "lookup failed for tablespace %u", spc_oid); 
taba: tablespace:00001160:  elog(ERROR, "lookup failed for filespace OID for tablespace %u", spc_oid); 
taba: tablespace:00001240:  ereport(ERROR, 
taba: tablespace:00001241:  (errcode_for_file_access(), 
taba: tablespace:00001242:  errmsg("could not create location directory \"%s\": %m", 
taba: tablespace:00001243:  location))); 
taba: tablespace:00001252:  ereport(ERROR, 
taba: tablespace:00001253:  (errcode_for_file_access(), 
taba: tablespace:00001254:  errmsg("could not set permissions on directory \"%s\": %m", 
taba: tablespace:00001255:  location))); 
taba: tablespace:00001263:  ereport(ERROR, 
taba: tablespace:00001264:  (errcode_for_file_access(), 
taba: tablespace:00001265:  errmsg("could not create subdirectory \"%s\": %m", 
taba: tablespace:00001266:  sublocation))); 
taba: tablespace:00001280:  ereport(ERROR, 
taba: tablespace:00001281:  (errcode_for_file_access(), 
taba: tablespace:00001282:  errmsg("could not create symbolic link \"%s\": %m", 
taba: tablespace:00001283:  linkloc))); 
taba: tablespace:00001294:  ereport(ERROR, 
taba: tablespace:00001295:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
taba: tablespace:00001296:  errmsg("tablespace %u is not empty", 
taba: tablespace:00001297:  xlrec->ts_id))); 
taba: tablespace:00001342:  ereport(ERROR, 
taba: tablespace:00001343:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
taba: tablespace:00001344:  errmsg(msg, get_tablespace_name(reltablespace)), 
taba: tablespace:00001345:  errOmitLocation(true))); 
taba: tablespace:00001389:  ereport(ERROR, 
taba: tablespace:00001390:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
taba: tablespace:00001391:  errmsg("cannot access a shared tablespace from a local stored database"))); 
taba: tablespace:00001394:  ereport(ERROR, 
taba: tablespace:00001395:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
taba: tablespace:00001396:  errmsg("cannot access a local tablespace from a shared stored database"))); 
taba: tablespace:00001425:  elog(WARNING, "incosistent tablespace requirement"); 
taba: tablespace:00001451:  ereport(ERROR, 
taba: tablespace:00001452:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
taba: tablespace:00001453:  errmsg("tablespace \"%s\" does not support heap relation", 
taba: tablespace:00001454:  get_tablespace_name(reltablespace)), 
taba: tablespace:00001455:  errOmitLocation(true))); 
taba: tablespace:00001466:  ereport(ERROR, 
taba: tablespace:00001467:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
taba: tablespace:00001468:  errmsg("tablespace \"%s\" does not support heap relation", 
taba: tablespace:00001469:  get_tablespace_name(reltablespace)), 
taba: tablespace:00001470:  errOmitLocation(true))); 
aaaaa GP_IGNORE: taah: trigger - ./backend/commands/trigger.c
taah: trigger:00000136:  ereport(NOTICE, 
taah: trigger:00000137:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taah: trigger:00000138:  errmsg("could not determine referenced table for constraint \"%s\"", 
taah: trigger:00000139:  stmt->trigname))); 
taah: trigger:00000143:  ereport(ERROR, 
taah: trigger:00000144:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taah: trigger:00000145:  errmsg("\"%s\" is not a table", 
taah: trigger:00000146:  RelationGetRelationName(rel)))); 
taah: trigger:00000149:  ereport(ERROR, 
taah: trigger:00000150:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taah: trigger:00000151:  errmsg("permission denied: \"%s\" is a system catalog", 
taah: trigger:00000152:  RelationGetRelationName(rel)))); 
taah: trigger:00000230:  ereport(ERROR, 
taah: trigger:00000231:  (errcode(ERRCODE_SYNTAX_ERROR), 
taah: trigger:00000232:  errmsg("multiple INSERT events specified"))); 
taah: trigger:00000237:  ereport(ERROR, 
taah: trigger:00000238:  (errcode(ERRCODE_SYNTAX_ERROR), 
taah: trigger:00000239:  errmsg("multiple DELETE events specified"))); 
taah: trigger:00000244:  ereport(ERROR, 
taah: trigger:00000245:  (errcode(ERRCODE_SYNTAX_ERROR), 
taah: trigger:00000246:  errmsg("multiple UPDATE events specified"))); 
taah: trigger:00000250:  elog(ERROR, "unrecognized trigger event: %d", 
taah: trigger:00000251:  (int) stmt->actions[i]); 
taah: trigger:00000276:  ereport(ERROR, 
taah: trigger:00000277:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taah: trigger:00000278:  errmsg("trigger \"%s\" for relation \"%s\" already exists", 
taah: trigger:00000279:  trigname, stmt->relation->relname))); 
taah: trigger:00000302:  ereport(WARNING, 
taah: trigger:00000303:  (errmsg("changing return type of function %s from \"opaque\" to \"trigger\"", 
taah: trigger:00000304:  NameListToString(stmt->funcname)))); 
taah: trigger:00000308:  ereport(ERROR, 
taah: trigger:00000309:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taah: trigger:00000310:  errmsg("function %s must return type \"trigger\"", 
taah: trigger:00000311:  NameListToString(stmt->funcname)))); 
taah: trigger:00000429:  elog(ERROR, "cache lookup failed for relation %u", 
taah: trigger:00000430:  RelationGetRelid(rel)); 
taah: trigger:00000510:  ereport(ERROR, 
taah: trigger:00000511:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taah: trigger:00000512:  errmsg("trigger \"%s\" for table \"%s\" does not exist", 
taah: trigger:00000513:  trigname, get_rel_name(relid)))); 
taah: trigger:00000515:  ereport(NOTICE, 
taah: trigger:00000516:  (errmsg("trigger \"%s\" for table \"%s\" does not exist, skipping", 
taah: trigger:00000517:  trigname, get_rel_name(relid)))); 
taah: trigger:00000564:  elog(ERROR, "could not find tuple for trigger %u", trigOid); 
taah: trigger:00000574:  ereport(ERROR, 
taah: trigger:00000575:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taah: trigger:00000576:  errmsg("\"%s\" is not a table", 
taah: trigger:00000577:  RelationGetRelationName(rel)))); 
taah: trigger:00000580:  ereport(ERROR, 
taah: trigger:00000581:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taah: trigger:00000582:  errmsg("permission denied: \"%s\" is a system catalog", 
taah: trigger:00000583:  RelationGetRelationName(rel)))); 
taah: trigger:00000612:  elog(ERROR, "cache lookup failed for relation %u", relid); 
taah: trigger:00000616:  elog(ERROR, "relation \"%s\" has reltriggers = 0", 
taah: trigger:00000617:  RelationGetRelationName(rel)); 
taah: trigger:00000684:  ereport(ERROR, 
taah: trigger:00000685:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taah: trigger:00000686:  errmsg("trigger \"%s\" for relation \"%s\" already exists", 
taah: trigger:00000687:  newname, RelationGetRelationName(targetrel)))); 
taah: trigger:00000723:  ereport(ERROR, 
taah: trigger:00000724:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taah: trigger:00000725:  errmsg("trigger \"%s\" for table \"%s\" does not exist", 
taah: trigger:00000726:  oldname, RelationGetRelationName(targetrel)))); 
taah: trigger:00000802:  ereport(ERROR, 
taah: trigger:00000803:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
taah: trigger:00000804:  errmsg("permission denied: \"%s\" is a system trigger", 
taah: trigger:00000805:  NameStr(oldtrig->tgname)))); 
taah: trigger:00000832:  ereport(ERROR, 
taah: trigger:00000833:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taah: trigger:00000834:  errmsg("trigger \"%s\" for table \"%s\" does not exist", 
taah: trigger:00000835:  tgname, RelationGetRelationName(rel)))); 
taah: trigger:00000897:  elog(ERROR, "too many trigger records found for relation \"%s\"", 
taah: trigger:00000898:  RelationGetRelationName(relation)); 
taah: trigger:00000933:  elog(ERROR, "tgargs is null in trigger for relation \"%s\"", 
taah: trigger:00000934:  RelationGetRelationName(relation)); 
taah: trigger:00000953:  elog(ERROR, "%d trigger record(s) not found for relation \"%s\"", 
taah: trigger:00000954:  ntrigs - found, 
taah: trigger:00000955:  RelationGetRelationName(relation)); 
taah: trigger:00001327:  ereport(ERROR, 
taah: trigger:00001328:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
taah: trigger:00001329:  errmsg("trigger function %u returned null value", 
taah: trigger:00001330:  fcinfo.flinfo->fn_oid))); 
taah: trigger:00001385:  ereport(ERROR, 
taah: trigger:00001386:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
taah: trigger:00001387:  errmsg("BEFORE STATEMENT trigger cannot return a value"))); 
taah: trigger:00001451:  elog(ERROR, "Trigger is not supported on AOCS yet"); 
taah: trigger:00001501:  ereport(ERROR, 
taah: trigger:00001502:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
taah: trigger:00001503:  errmsg("BEFORE STATEMENT trigger cannot return a value"))); 
taah: trigger:00001632:  ereport(ERROR, 
taah: trigger:00001633:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
taah: trigger:00001634:  errmsg("BEFORE STATEMENT trigger cannot return a value"))); 
taah: trigger:00001765:  ereport(ERROR, 
taah: trigger:00001766:  (errcode(ERRCODE_T_R_SERIALIZATION_FAILURE), 
taah: trigger:00001767:  errmsg("could not serialize access due to concurrent update"))); 
taah: trigger:00001794:  elog(ERROR, "unrecognized heap_lock_tuple status: %u", test); 
taah: trigger:00002117:  elog(ERROR, "could not find trigger %u", tgoid); 
taah: trigger:00002138:  elog(ERROR, "failed to fetch old tuple for AFTER trigger"); 
taah: trigger:00002147:  elog(ERROR, "failed to fetch new tuple for AFTER trigger"); 
taah: trigger:00002406:  elog(ERROR, "relation %u has no triggers", 
taah: trigger:00002407:  event->ate_relid); 
taah: trigger:00003040:  ereport(ERROR, 
taah: trigger:00003041:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taah: trigger:00003042:  errmsg("cross-database references are not implemented: \"%s.%s.%s\"", 
taah: trigger:00003043:  constraint->catalogname, constraint->schemaname, 
taah: trigger:00003044:  constraint->relname))); 
taah: trigger:00003132:  ereport(ERROR, 
taah: trigger:00003133:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taah: trigger:00003134:  errmsg("constraint \"%s\" is not deferrable", 
taah: trigger:00003135:  constraint->relname))); 
taah: trigger:00003158:  ereport(ERROR, 
taah: trigger:00003159:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taah: trigger:00003160:  errmsg("constraint \"%s\" does not exist", 
taah: trigger:00003161:  constraint->relname))); 
taah: trigger:00003317:  elog(ERROR, "AfterTriggerSaveEvent() called outside of transaction"); 
aaaaa GP_IGNORE: taai: typecmds - ./backend/commands/typecmds.c
taai: typecmds:00000143:  ereport(ERROR, 
taai: typecmds:00000144:  (errcode(ERRCODE_INVALID_NAME), 
taai: typecmds:00000145:  errmsg("type names must be %d characters or less", 
taai: typecmds:00000146:  NAMEDATALEN - 2))); 
taai: typecmds:00000211:  ereport(ERROR, 
taai: typecmds:00000212:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taai: typecmds:00000213:  errmsg("type \"%s\" already exists", typeName), 
taai: typecmds:00000214:  errOmitLocation(true))); 
taai: typecmds:00000247:  ereport(ERROR, 
taai: typecmds:00000248:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taai: typecmds:00000249:  errmsg("array element type cannot be %s", 
taai: typecmds:00000250:  format_type_be(elemType)), 
taai: typecmds:00000251:  errOmitLocation(true))); 
taai: typecmds:00000280:  ereport(ERROR, 
taai: typecmds:00000281:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taai: typecmds:00000282:  errmsg("alignment \"%s\" not recognized", a), 
taai: typecmds:00000283:  errOmitLocation(true))); 
taai: typecmds:00000298:  ereport(ERROR, 
taai: typecmds:00000299:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taai: typecmds:00000300:  errmsg("storage \"%s\" not recognized", a), 
taai: typecmds:00000301:  errOmitLocation(true))); 
taai: typecmds:00000326:  ereport(WARNING, 
taai: typecmds:00000327:  (errcode(ERRCODE_SYNTAX_ERROR), 
taai: typecmds:00000328:  errmsg("type attribute \"%s\" not recognized", 
taai: typecmds:00000329:  defel->defname), 
taai: typecmds:00000330:  errOmitLocation(true))); 
taai: typecmds:00000343:  ereport(ERROR, 
taai: typecmds:00000344:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taai: typecmds:00000345:  errmsg("type input function must be specified"), 
taai: typecmds:00000346:  errOmitLocation(true))); 
taai: typecmds:00000348:  ereport(ERROR, 
taai: typecmds:00000349:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taai: typecmds:00000350:  errmsg("type output function must be specified"), 
taai: typecmds:00000351:  errOmitLocation(true))); 
taai: typecmds:00000373:  ereport(WARNING, 
taai: typecmds:00000374:  (errmsg("changing return type of function %s from \"opaque\" to %s", 
taai: typecmds:00000375:  NameListToString(inputName), typeName), 
taai: typecmds:00000376:  errOmitLocation(true))); 
taai: typecmds:00000380:  ereport(ERROR, 
taai: typecmds:00000381:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taai: typecmds:00000382:  errmsg("type input function %s must return type %s", 
taai: typecmds:00000383:  NameListToString(inputName), typeName), 
taai: typecmds:00000384:  errOmitLocation(true))); 
taai: typecmds:00000392:  ereport(WARNING, 
taai: typecmds:00000393:  (errmsg("changing return type of function %s from \"opaque\" to \"cstring\"", 
taai: typecmds:00000394:  NameListToString(outputName)), 
taai: typecmds:00000395:  errOmitLocation(true))); 
taai: typecmds:00000399:  ereport(ERROR, 
taai: typecmds:00000400:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taai: typecmds:00000401:  errmsg("type output function %s must return type \"cstring\"", 
taai: typecmds:00000402:  NameListToString(outputName)), 
taai: typecmds:00000403:  errOmitLocation(true))); 
taai: typecmds:00000409:  ereport(ERROR, 
taai: typecmds:00000410:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taai: typecmds:00000411:  errmsg("type receive function %s must return type %s", 
taai: typecmds:00000412:  NameListToString(receiveName), typeName), 
taai: typecmds:00000413:  errOmitLocation(true))); 
taai: typecmds:00000419:  ereport(ERROR, 
taai: typecmds:00000420:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taai: typecmds:00000421:  errmsg("type send function %s must return type \"bytea\"", 
taai: typecmds:00000422:  NameListToString(sendName)), 
taai: typecmds:00000423:  errOmitLocation(true))); 
taai: typecmds:00000566:  ereport(ERROR, 
taai: typecmds:00000567:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taai: typecmds:00000568:  errmsg("type \"%s\" does not exist", 
taai: typecmds:00000569:  TypeNameToString(typname)), 
taai: typecmds:00000570:  errOmitLocation(true))); 
taai: typecmds:00000575:  ereport(NOTICE, 
taai: typecmds:00000576:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taai: typecmds:00000577:  errmsg("type \"%s\" does not exist, skipping", 
taai: typecmds:00000578:  TypeNameToString(typname)), 
taai: typecmds:00000579:  errOmitLocation(true))); 
taai: typecmds:00000594:  elog(ERROR, "cache lookup failed for type %u", typeoid); 
taai: typecmds:00000645:  elog(ERROR, "cache lookup failed for type %u", typeOid); 
taai: typecmds:00000708:  ereport(ERROR, 
taai: typecmds:00000709:  (errcode(ERRCODE_INVALID_NAME), 
taai: typecmds:00000710:  errmsg("domain names must be %d characters or less", 
taai: typecmds:00000711:  NAMEDATALEN - 1))); 
taai: typecmds:00000728:  ereport(ERROR, 
taai: typecmds:00000729:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
taai: typecmds:00000730:  errmsg("\"%s\" is not a valid base type for a domain", 
taai: typecmds:00000731:  TypeNameToString(stmt->typname)), 
taai: typecmds:00000732:  errOmitLocation(true))); 
taai: typecmds:00000784:  ereport(ERROR, 
taai: typecmds:00000785:  (errcode(ERRCODE_SYNTAX_ERROR), 
taai: typecmds:00000786:  errmsg("foreign key constraints not possible for domains"), 
taai: typecmds:00000787:  errOmitLocation(true))); 
taai: typecmds:00000791:  elog(ERROR, "unrecognized node type: %d", 
taai: typecmds:00000792:  (int) nodeTag(newConstraint)); 
taai: typecmds:00000805:  ereport(ERROR, 
taai: typecmds:00000806:  (errcode(ERRCODE_SYNTAX_ERROR), 
taai: typecmds:00000807:  errmsg("multiple default expressions"), 
taai: typecmds:00000808:  errOmitLocation(true))); 
taai: typecmds:00000852:  ereport(ERROR, 
taai: typecmds:00000853:  (errcode(ERRCODE_SYNTAX_ERROR), 
taai: typecmds:00000854:  errmsg("conflicting NULL/NOT NULL constraints"), 
taai: typecmds:00000855:  errOmitLocation(true))); 
taai: typecmds:00000862:  ereport(ERROR, 
taai: typecmds:00000863:  (errcode(ERRCODE_SYNTAX_ERROR), 
taai: typecmds:00000864:  errmsg("conflicting NULL/NOT NULL constraints"), 
taai: typecmds:00000865:  errOmitLocation(true))); 
taai: typecmds:00000882:  ereport(ERROR, 
taai: typecmds:00000883:  (errcode(ERRCODE_SYNTAX_ERROR), 
taai: typecmds:00000884:  errmsg("unique constraints not possible for domains"), 
taai: typecmds:00000885:  errOmitLocation(true))); 
taai: typecmds:00000889:  ereport(ERROR, 
taai: typecmds:00000890:  (errcode(ERRCODE_SYNTAX_ERROR), 
taai: typecmds:00000891:  errmsg("primary key constraints not possible for domains"), 
taai: typecmds:00000892:  errOmitLocation(true))); 
taai: typecmds:00000899:  ereport(ERROR, 
taai: typecmds:00000900:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taai: typecmds:00000901:  errmsg("specifying constraint deferrability not supported for domains"), 
taai: typecmds:00000902:  errOmitLocation(true))); 
taai: typecmds:00000906:  elog(ERROR, "unrecognized constraint subtype: %d", 
taai: typecmds:00000907:  (int) constr->contype); 
taai: typecmds:00001007:  ereport(ERROR, 
taai: typecmds:00001008:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taai: typecmds:00001009:  errmsg("type \"%s\" does not exist", 
taai: typecmds:00001010:  TypeNameToString(typname)), 
taai: typecmds:00001011:  errOmitLocation(true))); 
taai: typecmds:00001016:  ereport(NOTICE, 
taai: typecmds:00001017:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taai: typecmds:00001018:  errmsg("type \"%s\" does not exist, skipping", 
taai: typecmds:00001019:  TypeNameToString(typname)), 
taai: typecmds:00001020:  errOmitLocation(true))); 
taai: typecmds:00001035:  elog(ERROR, "cache lookup failed for type %u", typeoid); 
taai: typecmds:00001048:  ereport(ERROR, 
taai: typecmds:00001049:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taai: typecmds:00001050:  errmsg("\"%s\" is not a domain", 
taai: typecmds:00001051:  TypeNameToString(typname)), 
taai: typecmds:00001052:  errOmitLocation(true))); 
taai: typecmds:00001116:  ereport(WARNING, 
taai: typecmds:00001117:  (errmsg("changing argument type of function %s from \"opaque\" to \"cstring\"", 
taai: typecmds:00001118:  NameListToString(procname)), 
taai: typecmds:00001119:  errOmitLocation(true))); 
taai: typecmds:00001134:  ereport(ERROR, 
taai: typecmds:00001135:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
taai: typecmds:00001136:  errmsg("function %s does not exist", 
taai: typecmds:00001137:  func_signature_string(procname, 1, argList)), 
taai: typecmds:00001138:  errOmitLocation(true))); 
taai: typecmds:00001169:  ereport(WARNING, 
taai: typecmds:00001170:  (errmsg("changing argument type of function %s from \"opaque\" to %s", 
taai: typecmds:00001171:  NameListToString(procname), format_type_be(typeOid)), 
taai: typecmds:00001172:  errOmitLocation(true))); 
taai: typecmds:00001187:  ereport(ERROR, 
taai: typecmds:00001188:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
taai: typecmds:00001189:  errmsg("function %s does not exist", 
taai: typecmds:00001190:  func_signature_string(procname, 1, argList)), 
taai: typecmds:00001191:  errOmitLocation(true))); 
taai: typecmds:00001219:  ereport(ERROR, 
taai: typecmds:00001220:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
taai: typecmds:00001221:  errmsg("function %s does not exist", 
taai: typecmds:00001222:  func_signature_string(procname, 1, argList)), 
taai: typecmds:00001223:  errOmitLocation(true))); 
taai: typecmds:00001243:  ereport(ERROR, 
taai: typecmds:00001244:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
taai: typecmds:00001245:  errmsg("function %s does not exist", 
taai: typecmds:00001246:  func_signature_string(procname, 1, argList)), 
taai: typecmds:00001247:  errOmitLocation(true))); 
taai: typecmds:00001265:  ereport(ERROR, 
taai: typecmds:00001266:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
taai: typecmds:00001267:  errmsg("function %s does not exist", 
taai: typecmds:00001268:  func_signature_string(procname, 1, argList)), 
taai: typecmds:00001269:  errOmitLocation(true))); 
taai: typecmds:00001272:  ereport(ERROR, 
taai: typecmds:00001273:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taai: typecmds:00001274:  errmsg("type analyze function %s must return type \"boolean\"", 
taai: typecmds:00001275:  NameListToString(procname)), 
taai: typecmds:00001276:  errOmitLocation(true))); 
taai: typecmds:00001312:  ereport(ERROR, 
taai: typecmds:00001313:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taai: typecmds:00001314:  errmsg("composite type must have at least one attribute"), 
taai: typecmds:00001315:  errOmitLocation(true))); 
taai: typecmds:00001390:  elog(ERROR, "cache lookup failed for type %u", domainoid); 
taai: typecmds:00001509:  elog(ERROR, "cache lookup failed for type %u", domainoid); 
taai: typecmds:00001553:  ereport(ERROR, 
taai: typecmds:00001554:  (errcode(ERRCODE_NOT_NULL_VIOLATION), 
taai: typecmds:00001555:  errmsg("column \"%s\" of table \"%s\" contains null values", 
taai: typecmds:00001556:  NameStr(tupdesc->attrs[attnum - 1]->attname), 
taai: typecmds:00001557:  RelationGetRelationName(testrel)))); 
taai: typecmds:00001615:  elog(ERROR, "cache lookup failed for type %u", domainoid); 
taai: typecmds:00001691:  elog(ERROR, "cache lookup failed for type %u", domainoid); 
taai: typecmds:00001699:  ereport(ERROR, 
taai: typecmds:00001700:  (errcode(ERRCODE_SYNTAX_ERROR), 
taai: typecmds:00001701:  errmsg("foreign key constraints not possible for domains"), 
taai: typecmds:00001702:  errOmitLocation(true))); 
taai: typecmds:00001706:  elog(ERROR, "unrecognized node type: %d", 
taai: typecmds:00001707:  (int) nodeTag(newConstraint)); 
taai: typecmds:00001718:  ereport(ERROR, 
taai: typecmds:00001719:  (errcode(ERRCODE_SYNTAX_ERROR), 
taai: typecmds:00001720:  errmsg("unique constraints not possible for domains"), 
taai: typecmds:00001721:  errOmitLocation(true))); 
taai: typecmds:00001725:  ereport(ERROR, 
taai: typecmds:00001726:  (errcode(ERRCODE_SYNTAX_ERROR), 
taai: typecmds:00001727:  errmsg("primary key constraints not possible for domains"), 
taai: typecmds:00001728:  errOmitLocation(true))); 
taai: typecmds:00001735:  ereport(ERROR, 
taai: typecmds:00001736:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taai: typecmds:00001737:  errmsg("specifying constraint deferrability not supported for domains"), 
taai: typecmds:00001738:  errOmitLocation(true))); 
taai: typecmds:00001742:  elog(ERROR, "unrecognized constraint subtype: %d", 
taai: typecmds:00001743:  (int) constr->contype); 
taai: typecmds:00001807:  ereport(ERROR, 
taai: typecmds:00001808:  (errcode(ERRCODE_CHECK_VIOLATION), 
taai: typecmds:00001809:  errmsg("column \"%s\" of table \"%s\" contains values that violate the new constraint", 
taai: typecmds:00001810:  NameStr(tupdesc->attrs[attnum - 1]->attname), 
taai: typecmds:00001811:  RelationGetRelationName(testrel)), 
taai: typecmds:00001812:  errOmitLocation(true))); 
taai: typecmds:00002002:  ereport(ERROR, 
taai: typecmds:00002003:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taai: typecmds:00002004:  errmsg("\"%s\" is not a domain", 
taai: typecmds:00002005:  TypeNameToString(typname)), 
taai: typecmds:00002006:  errOmitLocation(true))); 
taai: typecmds:00002037:  ereport(ERROR, 
taai: typecmds:00002038:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taai: typecmds:00002039:  errmsg("constraint \"%s\" for domain \"%s\" already exists", 
taai: typecmds:00002040:  constr->name, domainName), 
taai: typecmds:00002041:  errOmitLocation(true))); 
taai: typecmds:00002079:  ereport(ERROR, 
taai: typecmds:00002080:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
taai: typecmds:00002081:  errmsg("cannot use table references in domain check constraint"), 
taai: typecmds:00002082:  errOmitLocation(true))); 
taai: typecmds:00002089:  ereport(ERROR, 
taai: typecmds:00002090:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
taai: typecmds:00002091:  errmsg("cannot use table references in domain check constraint"), 
taai: typecmds:00002092:  errOmitLocation(true))); 
taai: typecmds:00002098:  ereport(ERROR, 
taai: typecmds:00002099:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taai: typecmds:00002100:  errmsg("cannot use subquery in check constraint"), 
taai: typecmds:00002101:  errOmitLocation(true))); 
taai: typecmds:00002103:  ereport(ERROR, 
taai: typecmds:00002104:  (errcode(ERRCODE_GROUPING_ERROR), 
taai: typecmds:00002105:  errmsg("cannot use aggregate function in check constraint"), 
taai: typecmds:00002106:  errOmitLocation(true))); 
taai: typecmds:00002108:  ereport(ERROR, 
taai: typecmds:00002109:  (errcode(ERRCODE_SYNTAX_ERROR), 
taai: typecmds:00002110:  errmsg("cannot use window function in check constraint"), 
taai: typecmds:00002111:  errOmitLocation(true))); 
taai: typecmds:00002201:  elog(ERROR, "cache lookup failed for type %u", typeOid); 
taai: typecmds:00002241:  elog(ERROR, "domain \"%s\" constraint \"%s\" has NULL conbin", 
taai: typecmds:00002242:  NameStr(typTup->typname), NameStr(c->conname)); 
taai: typecmds:00002312:  ereport(ERROR, 
taai: typecmds:00002313:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taai: typecmds:00002314:  errmsg("type \"%s\" does not exist", 
taai: typecmds:00002315:  TypeNameToString(typname)), 
taai: typecmds:00002316:  errOmitLocation(true))); 
taai: typecmds:00002331:  elog(ERROR, "cache lookup failed for type %u", typeOid); 
taai: typecmds:00002341:  ereport(ERROR, 
taai: typecmds:00002342:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taai: typecmds:00002343:  errmsg("\"%s\" is a table's row type", 
taai: typecmds:00002344:  TypeNameToString(typname)), 
taai: typecmds:00002345:  errOmitLocation(true))); 
taai: typecmds:00002433:  elog(ERROR, "cache lookup failed for type %u", typeOid); 
taai: typecmds:00002510:  elog(ERROR, "cache lookup failed for type %u", typeOid); 
taai: typecmds:00002516:  ereport(ERROR, 
taai: typecmds:00002517:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taai: typecmds:00002518:  errmsg("type %s is already in schema \"%s\"", 
taai: typecmds:00002519:  format_type_be(typeOid), 
taai: typecmds:00002520:  get_namespace_name(nspOid)), 
taai: typecmds:00002521:  errOmitLocation(true))); 
taai: typecmds:00002525:  ereport(ERROR, 
taai: typecmds:00002526:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taai: typecmds:00002527:  errmsg("cannot move objects into or out of temporary schemas"), 
taai: typecmds:00002528:  errOmitLocation(true))); 
taai: typecmds:00002532:  ereport(ERROR, 
taai: typecmds:00002533:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taai: typecmds:00002534:  errmsg("cannot move objects into or out of TOAST schema"), 
taai: typecmds:00002535:  errOmitLocation(true))); 
taai: typecmds:00002539:  ereport(ERROR, 
taai: typecmds:00002540:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taai: typecmds:00002541:  errmsg("cannot move objects into or out of AO SEGMENT schema"), 
taai: typecmds:00002542:  errOmitLocation(true))); 
taai: typecmds:00002553:  ereport(ERROR, 
taai: typecmds:00002554:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
taai: typecmds:00002555:  errmsg("type \"%s\" already exists in schema \"%s\"", 
taai: typecmds:00002556:  NameStr(typform->typname), 
taai: typecmds:00002557:  get_namespace_name(nspOid)), 
taai: typecmds:00002558:  errOmitLocation(true))); 
taai: typecmds:00002569:  ereport(ERROR, 
taai: typecmds:00002570:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taai: typecmds:00002571:  errmsg("%s is a table's row type", 
taai: typecmds:00002572:  format_type_be(typeOid)), 
taai: typecmds:00002573:  errhint("Use ALTER TABLE SET SCHEMA instead."))); 
taai: typecmds:00002621:  elog(ERROR, "failed to change schema dependency for type %s", 
taai: typecmds:00002622:  format_type_be(typeOid)); 
taai: typecmds:00002652:  ereport(ERROR, 
taai: typecmds:00002653:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taai: typecmds:00002654:  errmsg("type \"%s\" does not exist", 
taai: typecmds:00002655:  TypeNameToString(typname)))); 
taai: typecmds:00002658:  ereport(ERROR, 
taai: typecmds:00002659:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taai: typecmds:00002660:  errmsg("type \"%s\" is not a base type", 
taai: typecmds:00002661:  TypeNameToString(typname)), 
taai: typecmds:00002662:  errhint("The ENCODING clause cannot be used with row or " 
taai: typecmds:00002663:  "composite types."))); 
taai: typecmds:00002687:  ereport(ERROR, 
taai: typecmds:00002688:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taai: typecmds:00002689:  errmsg("type precision cannot be specified when setting " 
taai: typecmds:00002690:  "DEFAULT ENCODING"))); 
taai: typecmds:00002693:  ereport(ERROR, 
taai: typecmds:00002694:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
taai: typecmds:00002695:  errmsg("type array bounds cannot be specified when setting " 
taai: typecmds:00002696:  "DEFAULT ENCODING"))); 
aaaaa GP_IGNORE: uaae: user - ./backend/commands/user.c
uaae: user:00000196:  ereport(ERROR, 
uaae: user:00000197:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000198:  errmsg("conflicting or redundant options"))); 
uaae: user:00000208:  ereport(NOTICE, 
uaae: user:00000209:  (errmsg("SYSID can no longer be specified"))); 
uaae: user:00000214:  ereport(ERROR, 
uaae: user:00000215:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000216:  errmsg("conflicting or redundant options"))); 
uaae: user:00000222:  ereport(ERROR, 
uaae: user:00000223:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000224:  errmsg("conflicting or redundant options"))); 
uaae: user:00000230:  ereport(ERROR, 
uaae: user:00000231:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000232:  errmsg("conflicting or redundant options"))); 
uaae: user:00000238:  ereport(ERROR, 
uaae: user:00000239:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000240:  errmsg("conflicting or redundant options"))); 
uaae: user:00000246:  ereport(ERROR, 
uaae: user:00000247:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000248:  errmsg("conflicting or redundant options"))); 
uaae: user:00000254:  ereport(ERROR, 
uaae: user:00000255:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000256:  errmsg("conflicting or redundant options"))); 
uaae: user:00000262:  ereport(ERROR, 
uaae: user:00000263:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000264:  errmsg("conflicting or redundant options"))); 
uaae: user:00000270:  ereport(ERROR, 
uaae: user:00000271:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000272:  errmsg("conflicting or redundant options"))); 
uaae: user:00000278:  ereport(ERROR, 
uaae: user:00000279:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000280:  errmsg("conflicting or redundant options"))); 
uaae: user:00000286:  ereport(ERROR, 
uaae: user:00000287:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000288:  errmsg("conflicting or redundant options"))); 
uaae: user:00000294:  ereport(ERROR, 
uaae: user:00000295:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000296:  errmsg("conflicting or redundant options"))); 
uaae: user:00000326:  elog(ERROR, "option \"%s\" not recognized", 
uaae: user:00000327:  defel->defname); 
uaae: user:00000363:  ereport(NOTICE, 
uaae: user:00000364:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
uaae: user:00000365:  errmsg("resource queue required -- " 
uaae: user:00000366:  "using default resource queue \"%s\"", 
uaae: user:00000367:  GP_DEFAULT_RESOURCE_QUEUE_NAME))); 
uaae: user:00000377:  ereport(ERROR, 
uaae: user:00000378:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00000379:  errmsg("must be superuser to create superusers"))); 
uaae: user:00000384:  ereport(ERROR, 
uaae: user:00000385:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00000386:  errmsg("permission denied to create role"))); 
uaae: user:00000391:  ereport(ERROR, 
uaae: user:00000392:  (errcode(ERRCODE_RESERVED_NAME), 
uaae: user:00000393:  errmsg("role name \"%s\" is reserved", 
uaae: user:00000394:  stmt->role))); 
uaae: user:00000413:  ereport(ERROR, 
uaae: user:00000414:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
uaae: user:00000415:  errmsg("role \"%s\" already exists", 
uaae: user:00000416:  stmt->role))); 
uaae: user:00000458:  elog(ERROR, "password encryption failed"); 
uaae: user:00000483:  ereport(ERROR, 
uaae: user:00000484:  (errcode(ERRCODE_RESERVED_NAME), 
uaae: user:00000485:  errmsg("resource queue name \"%s\" is reserved", 
uaae: user:00000486:  resqueue), 
uaae: user:00000487:  errOmitLocation(true))); 
uaae: user:00000491:  ereport(ERROR, 
uaae: user:00000492:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
uaae: user:00000493:  errmsg("resource queue \"%s\" does not exist", 
uaae: user:00000494:  resqueue), 
uaae: user:00000495:  errOmitLocation(true))); 
uaae: user:00000506:  ereport(WARNING, 
uaae: user:00000507:  (errmsg("resource scheduling is disabled"), 
uaae: user:00000508:  errhint("To enable set resource_scheduler=on"), 
uaae: user:00000509:  errOmitLocation(true))); 
uaae: user:00000569:  ereport(ERROR, 
uaae: user:00000570:  (errmsg("cannot create superuser with DENY rules"))); 
uaae: user:00000687:  ereport(ERROR, 
uaae: user:00000688:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000689:  errmsg("conflicting or redundant options"), 
uaae: user:00000690:  errOmitLocation(true))); 
uaae: user:00000702:  ereport(ERROR, 
uaae: user:00000703:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000704:  errmsg("conflicting or redundant options"), 
uaae: user:00000705:  errOmitLocation(true))); 
uaae: user:00000712:  ereport(ERROR, 
uaae: user:00000713:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000714:  errmsg("conflicting or redundant options"), 
uaae: user:00000715:  errOmitLocation(true))); 
uaae: user:00000722:  ereport(ERROR, 
uaae: user:00000723:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000724:  errmsg("conflicting or redundant options"), 
uaae: user:00000725:  errOmitLocation(true))); 
uaae: user:00000732:  ereport(ERROR, 
uaae: user:00000733:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000734:  errmsg("conflicting or redundant options"), 
uaae: user:00000735:  errOmitLocation(true))); 
uaae: user:00000742:  ereport(ERROR, 
uaae: user:00000743:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000744:  errmsg("conflicting or redundant options"), 
uaae: user:00000745:  errOmitLocation(true))); 
uaae: user:00000752:  ereport(ERROR, 
uaae: user:00000753:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000754:  errmsg("conflicting or redundant options"), 
uaae: user:00000755:  errOmitLocation(true))); 
uaae: user:00000763:  ereport(ERROR, 
uaae: user:00000764:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000765:  errmsg("conflicting or redundant options"), 
uaae: user:00000766:  errOmitLocation(true))); 
uaae: user:00000773:  ereport(ERROR, 
uaae: user:00000774:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000775:  errmsg("conflicting or redundant options"), 
uaae: user:00000776:  errOmitLocation(true))); 
uaae: user:00000783:  ereport(ERROR, 
uaae: user:00000784:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00000785:  errmsg("conflicting or redundant options"), 
uaae: user:00000786:  errOmitLocation(true))); 
uaae: user:00000829:  elog(ERROR, "option \"%s\" not recognized", 
uaae: user:00000830:  defel->defname); 
uaae: user:00000870:  ereport(ERROR, 
uaae: user:00000871:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
uaae: user:00000872:  errmsg("role \"%s\" does not exist", stmt->role))); 
uaae: user:00000886:  ereport(ERROR, 
uaae: user:00000887:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00000888:  errmsg("must be superuser to alter superusers"))); 
uaae: user:00000905:  ereport(ERROR, 
uaae: user:00000906:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00000907:  errmsg("permission denied"), 
uaae: user:00000908:  errOmitLocation(true))); 
uaae: user:00000978:  elog(ERROR, "password encryption failed"); 
uaae: user:00001061:  ereport(NOTICE, 
uaae: user:00001062:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
uaae: user:00001063:  errmsg("resource queue required -- " 
uaae: user:00001064:  "using default resource queue \"%s\"", 
uaae: user:00001065:  GP_DEFAULT_RESOURCE_QUEUE_NAME))); 
uaae: user:00001079:  ereport(ERROR, 
uaae: user:00001080:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
uaae: user:00001081:  errmsg("resource queue \"%s\" does not exist", 
uaae: user:00001082:  resqueue), 
uaae: user:00001083:  errOmitLocation(true))); 
uaae: user:00001095:  ereport(WARNING, 
uaae: user:00001096:  (errmsg("resource scheduling is disabled"), 
uaae: user:00001097:  errhint("To enable set resource_scheduler=on"), 
uaae: user:00001098:  errOmitLocation(true))); 
uaae: user:00001138:  ereport(ERROR, 
uaae: user:00001139:  (errmsg("cannot alter superuser with DENY rules"))); 
uaae: user:00001156:  ereport(ERROR, 
uaae: user:00001157:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00001158:  errmsg("conflicting or redundant options"), 
uaae: user:00001159:  errhint("DENY and DROP DENY cannot be used in the same ALTER ROLE statement."))); 
uaae: user:00001229:  ereport(ERROR, 
uaae: user:00001230:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
uaae: user:00001231:  errmsg("role \"%s\" does not exist", stmt->role), 
uaae: user:00001232:  errOmitLocation(true))); 
uaae: user:00001241:  ereport(ERROR, 
uaae: user:00001242:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00001243:  errmsg("must be superuser to alter superusers"), 
uaae: user:00001244:  errOmitLocation(true))); 
uaae: user:00001250:  ereport(ERROR, 
uaae: user:00001251:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00001252:  errmsg("permission denied"), 
uaae: user:00001253:  errOmitLocation(true))); 
uaae: user:00001348:  ereport(ERROR, 
uaae: user:00001349:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00001350:  errmsg("permission denied to drop role"), 
uaae: user:00001351:  errOmitLocation(true))); 
uaae: user:00001382:  ereport(ERROR, 
uaae: user:00001383:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
uaae: user:00001384:  errmsg("role \"%s\" does not exist", role), 
uaae: user:00001385:  errOmitLocation(true))); 
uaae: user:00001389:  ereport(NOTICE, 
uaae: user:00001390:  (errmsg("role \"%s\" does not exist, skipping", 
uaae: user:00001391:  role), 
uaae: user:00001392:  errOmitLocation(true))); 
uaae: user:00001401:  ereport(ERROR, 
uaae: user:00001402:  (errcode(ERRCODE_OBJECT_IN_USE), 
uaae: user:00001403:  errmsg("current user cannot be dropped"), 
uaae: user:00001404:  errOmitLocation(true))); 
uaae: user:00001406:  ereport(ERROR, 
uaae: user:00001407:  (errcode(ERRCODE_OBJECT_IN_USE), 
uaae: user:00001408:  errmsg("current user cannot be dropped"), 
uaae: user:00001409:  errOmitLocation(true))); 
uaae: user:00001411:  ereport(ERROR, 
uaae: user:00001412:  (errcode(ERRCODE_OBJECT_IN_USE), 
uaae: user:00001413:  errmsg("session user cannot be dropped"), 
uaae: user:00001414:  errOmitLocation(true))); 
uaae: user:00001423:  ereport(ERROR, 
uaae: user:00001424:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00001425:  errmsg("must be superuser to drop superusers"))); 
uaae: user:00001435:  ereport(ERROR, 
uaae: user:00001436:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
uaae: user:00001437:  errmsg("role \"%s\" cannot be dropped because some objects depend on it", 
uaae: user:00001438:  role), 
uaae: user:00001439:  errdetail("%s", detail), 
uaae: user:00001440:  errOmitLocation(true))); 
uaae: user:00001555:  ereport(ERROR, 
uaae: user:00001556:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
uaae: user:00001557:  errmsg("role \"%s\" does not exist", oldname), 
uaae: user:00001558:  errOmitLocation(true))); 
uaae: user:00001571:  ereport(ERROR, 
uaae: user:00001572:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
uaae: user:00001573:  errmsg("session user cannot be renamed"))); 
uaae: user:00001575:  ereport(ERROR, 
uaae: user:00001576:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
uaae: user:00001577:  errmsg("current user cannot be renamed"))); 
uaae: user:00001585:  ereport(ERROR, 
uaae: user:00001586:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
uaae: user:00001587:  errmsg("role \"%s\" already exists", newname))); 
uaae: user:00001591:  ereport(ERROR, 
uaae: user:00001592:  (errcode(ERRCODE_RESERVED_NAME), 
uaae: user:00001593:  errmsg("role name \"%s\" is reserved", 
uaae: user:00001594:  newname))); 
uaae: user:00001602:  ereport(ERROR, 
uaae: user:00001603:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00001604:  errmsg("must be superuser to rename superusers"))); 
uaae: user:00001609:  ereport(ERROR, 
uaae: user:00001610:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00001611:  errmsg("permission denied to rename role"))); 
uaae: user:00001632:  ereport(NOTICE, 
uaae: user:00001633:  (errmsg("MD5 password cleared because of role rename"))); 
uaae: user:00001757:  ereport(ERROR, 
uaae: user:00001758:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00001759:  errmsg("permission denied to drop objects"), 
uaae: user:00001760:  errOmitLocation(true))); 
uaae: user:00001792:  ereport(ERROR, 
uaae: user:00001793:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00001794:  errmsg("permission denied to reassign objects"), 
uaae: user:00001795:  errOmitLocation(true))); 
uaae: user:00001802:  ereport(ERROR, 
uaae: user:00001803:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00001804:  errmsg("permission denied to reassign objects"), 
uaae: user:00001805:  errOmitLocation(true))); 
uaae: user:00001875:  ereport(ERROR, 
uaae: user:00001876:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00001877:  errmsg("must be superuser to alter superusers"))); 
uaae: user:00001883:  ereport(ERROR, 
uaae: user:00001884:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00001885:  errmsg("must have admin option on role \"%s\"", 
uaae: user:00001886:  rolename))); 
uaae: user:00001891:  ereport(ERROR, 
uaae: user:00001892:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00001893:  errmsg("must be superuser to set grantor"))); 
uaae: user:00001918:  ereport(ERROR, 
uaae: user:00001919:  (errcode(ERRCODE_INVALID_GRANT_OPERATION), 
uaae: user:00001920:  (errmsg("role \"%s\" is a member of role \"%s\"", 
uaae: user:00001921:  rolename, membername)))); 
uaae: user:00001943:  ereport(NOTICE, 
uaae: user:00001944:  (errmsg("role \"%s\" is already a member of role \"%s\"", 
uaae: user:00001945:  membername, rolename))); 
uaae: user:00002016:  ereport(ERROR, 
uaae: user:00002017:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00002018:  errmsg("invalid [NO]CREATEEXTTABLE option \"%s\"", keyword))); 
uaae: user:00002036:  ereport(ERROR, 
uaae: user:00002037:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00002038:  errmsg("invalid %s value \"%s\"", key, val))); 
uaae: user:00002043:  ereport(WARNING, 
uaae: user:00002044:  (errmsg("GRANT/REVOKE on gphdfs is deprecated"), 
uaae: user:00002045:  errhint("Issue the GRANT or REVOKE on the protocol itself"), 
uaae: user:00002046:  errOmitLocation(true))); 
uaae: user:00002052:  ereport(ERROR, 
uaae: user:00002053:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00002054:  errmsg("invalid %s value \"%s\"", key, val))); 
uaae: user:00002086:  ereport(ERROR, 
uaae: user:00002087:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00002088:  errmsg("invalid [NO]CREATEEXTTABLE specification. too many values"))); 
uaae: user:00002148:  ereport(ERROR, 
uaae: user:00002149:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00002150:  errmsg("redundant option for \"%s\"", genpair->key1))); 
uaae: user:00002239:  ereport(ERROR, 
uaae: user:00002240:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00002241:  errmsg("invalid CREATEEXTTABLE specification. writable http external tables do not exist"))); 
uaae: user:00002309:  ereport(ERROR, 
uaae: user:00002310:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00002311:  errmsg("invalid NOCREATEEXTTABLE specification. writable http external tables do not exist"))); 
uaae: user:00002317:  ereport(ERROR, 
uaae: user:00002318:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00002319:  errmsg("conflicting specifications in CREATEEXTTABLE and NOCREATEEXTTABLE"))); 
uaae: user:00002358:  ereport(ERROR, 
uaae: user:00002359:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00002360:  errmsg("must be superuser to alter superusers"))); 
uaae: user:00002366:  ereport(ERROR, 
uaae: user:00002367:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaae: user:00002368:  errmsg("must have admin option on role \"%s\"", 
uaae: user:00002369:  rolename))); 
uaae: user:00002398:  ereport(WARNING, 
uaae: user:00002399:  (errmsg("role \"%s\" is not a member of role \"%s\"", 
uaae: user:00002400:  membername, rolename))); 
uaae: user:00002474:  ereport(ERROR, 
uaae: user:00002475:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00002476:  errmsg("time interval must not wrap around"))); 
uaae: user:00002494:  ereport(ERROR, 
uaae: user:00002495:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00002496:  errmsg("numeric day of week must be between 0 and 6"))); 
uaae: user:00002506:  ereport(ERROR, 
uaae: user:00002507:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaae: user:00002508:  errmsg("invalid weekday name \"%s\"", target), 
uaae: user:00002509:  errhint("Day of week must be one of 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'."))); 
uaae: user:00002625:  ereport(NOTICE, 
uaae: user:00002626:  (errmsg("dropping DENY rule for \"%s\" between %s %s and %s %s", 
uaae: user:00002627:  rolename, 
uaae: user:00002628:  daysofweek[existing->start.day], 
uaae: user:00002629:  DatumGetCString(DirectFunctionCall1(time_out, TimeADTGetDatum(existing->start.time))), 
uaae: user:00002630:  daysofweek[existing->end.day], 
uaae: user:00002631:  DatumGetCString(DirectFunctionCall1(time_out, TimeADTGetDatum(existing->end.time)))))); 
uaae: user:00002644:  ereport(ERROR, 
uaae: user:00002645:  (errmsg("cannot find matching DENY rules for \"%s\"", rolename))); 
aaaaa GP_IGNORE: vaag: vacuum - ./backend/commands/vacuum.c
vaag: vacuum:00000364:  ereport(NOTICE, 
vaag: vacuum:00000365:  (errcode(ERRCODE_WARNING), 
vaag: vacuum:00000366:  errmsg("'VACUUM FULL' is not safe for large tables and has " 
vaag: vacuum:00000367:  "been known to yield unpredictable runtimes."), 
vaag: vacuum:00000368:  errhint("Use 'VACUUM' instead."))); 
vaag: vacuum:00000503:  elog(ERROR, "Relation name does not exist for relation with oid %d", relid); 
vaag: vacuum:00000509:  elog(ERROR, "Namespace does not exist for relation with oid %d", relid); 
vaag: vacuum:00000814:  ereport(WARNING, 
vaag: vacuum:00000815:  (errmsg("oldest xmin is far in the past"), 
vaag: vacuum:00000816:  errhint("Close open transactions soon to avoid wraparound problems."))); 
vaag: vacuum:00000895:  elog(ERROR, "pg_class entry for relid %u vanished during vacuuming", 
vaag: vacuum:00000896:  relid); 
vaag: vacuum:00001058:  elog(ERROR, "could not find tuple for database %u", MyDatabaseId); 
vaag: vacuum:00001158:  ereport(WARNING, 
vaag: vacuum:00001159:  (errmsg("some databases have not been vacuumed in over 2 billion transactions"), 
vaag: vacuum:00001160:  errdetail("You may have already suffered transaction-wraparound data loss."))); 
vaag: vacuum:00001514:  ereport(WARNING, 
vaag: vacuum:00001515:  (errmsg("relation \"%s\" page %u is uninitialized --- fixing", 
vaag: vacuum:00001516:  relname, blkno))); 
vaag: vacuum:00001588:  elog(WARNING, "relation \"%s\" TID %u/%u: OID is invalid", 
vaag: vacuum:00001589:  relname, blkno, offnum); 
vaag: vacuum:00001628:  ereport(NOTICE, 
vaag: vacuum:00001629:  (errmsg("relation \"%s\" TID %u/%u: InsertTransactionInProgress %u --- can't shrink relation", 
vaag: vacuum:00001630:  relname, blkno, offnum, HeapTupleHeaderGetXmin(tuple.t_data)))); 
vaag: vacuum:00001641:  ereport(NOTICE, 
vaag: vacuum:00001642:  (errmsg("relation \"%s\" TID %u/%u: DeleteTransactionInProgress %u --- can't shrink relation", 
vaag: vacuum:00001643:  relname, blkno, offnum, HeapTupleHeaderGetXmax(tuple.t_data)))); 
vaag: vacuum:00001647:  elog(ERROR, "unexpected HeapTupleSatisfiesVacuum result"); 
vaag: vacuum:00002049:  elog(ERROR, "HEAP_MOVED_IN was not expected"); 
vaag: vacuum:00002051:  elog(ERROR, "HEAP_MOVED_OFF was expected"); 
vaag: vacuum:00002058:  elog(ERROR, "invalid XVAC in tuple header"); 
vaag: vacuum:00002228:  elog(ERROR, "updated tuple is already HEAP_MOVED_OFF"); 
vaag: vacuum:00002334:  elog(ERROR, "parent itemid marked as unused"); 
vaag: vacuum:00002532:  elog(ERROR, "HEAP_MOVED_IN was not expected"); 
vaag: vacuum:00002534:  elog(ERROR, "HEAP_MOVED_OFF was expected"); 
vaag: vacuum:00002536:  elog(ERROR, "invalid XVAC in tuple header"); 
vaag: vacuum:00002749:  elog(ERROR, "HEAP_MOVED_IN was not expected"); 
vaag: vacuum:00002751:  elog(ERROR, "HEAP_MOVED_OFF was expected"); 
vaag: vacuum:00002753:  elog(ERROR, "invalid XVAC in tuple header"); 
vaag: vacuum:00003161:  elog(ERROR, "HEAP_MOVED_OFF/HEAP_MOVED_IN was expected"); 
vaag: vacuum:00003163:  elog(ERROR, "invalid XVAC in tuple header"); 
vaag: vacuum:00003347:  ereport(WARNING, 
vaag: vacuum:00003348:  (errmsg("index \"%s\" contains %.0f row versions, but table contains %.0f row versions", 
vaag: vacuum:00003349:  RelationGetRelationName(indrel), 
vaag: vacuum:00003350:  stats->num_index_tuples, num_tuples), 
vaag: vacuum:00003351:  errhint("Rebuild the index with REINDEX."))); 
vaag: vacuum:00003419:  ereport(WARNING, 
vaag: vacuum:00003420:  (errmsg("index \"%s\" contains %.0f row versions, but table contains %.0f row versions", 
vaag: vacuum:00003421:  RelationGetRelationName(indrel), 
vaag: vacuum:00003422:  stats->num_index_tuples, num_tuples + keep_tuples), 
vaag: vacuum:00003423:  errhint("Rebuild the index with REINDEX."))); 
vaag: vacuum:00003865:  ereport(WARNING, 
vaag: vacuum:00003866:  (errmsg("skipping \"%s\" --- only table or database owner can vacuum it", 
vaag: vacuum:00003867:  RelationGetRelationName(onerel)))); 
vaag: vacuum:00003878:  ereport(WARNING, 
vaag: vacuum:00003879:  (errmsg("skipping \"%s\" --- cannot vacuum indexes, views, external tables, or special system tables", 
vaag: vacuum:00003880:  RelationGetRelationName(onerel)))); 
vaag: vacuum:00004028:  ereport(ERROR, 
vaag: vacuum:00004029:  (errmsg("can not vacuum the relation '%s' with bitmap indexes. " 
vaag: vacuum:00004030:  "Please either increase your maintenance_work_mem or " 
vaag: vacuum:00004031:  "drop the bitmap index and try again.", 
vaag: vacuum:00004032:  RelationGetRelationName(onerel)))); 
aaaaa GP_IGNORE: vaba: vacuumlazy - ./backend/commands/vacuumlazy.c
vaba: vacuumlazy:00000383:  ereport(WARNING, 
vaba: vacuumlazy:00000384:  (errmsg("relation \"%s\" page %u is uninitialized --- fixing", 
vaba: vacuumlazy:00000385:  relname, blkno))); 
vaba: vacuumlazy:00000450:  elog(WARNING, "relation \"%s\" TID %u/%u: OID is invalid", 
vaba: vacuumlazy:00000451:  relname, blkno, offnum); 
vaba: vacuumlazy:00000468:  elog(ERROR, "unexpected HeapTupleSatisfiesVacuum result"); 
vaba: vacuumlazy:00000608:  ereport(WARNING, 
vaba: vacuumlazy:00000609:  (errmsg("relation \"%s.%s\" contains more than \"max_fsm_pages\" pages with useful free space", 
vaba: vacuumlazy:00000610:  get_namespace_name(RelationGetNamespace(onerel)), 
vaba: vacuumlazy:00000611:  relname), 
vaba: vacuumlazy:00000612:  errhint("Consider compacting this relation or increasing the configuration parameter \"max_fsm_pages\"."))); 
aaaaa GP_IGNORE: vaai: variable - ./backend/commands/variable.c
vaai: variable:00000065:  ereport(ERROR, 
vaai: variable:00000066:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
vaai: variable:00000067:  errmsg("invalid list syntax for parameter \"datestyle\""))); 
vaai: variable:00000165:  ereport(ERROR, 
vaai: variable:00000166:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
vaai: variable:00000167:  errmsg("unrecognized \"datestyle\" key word: \"%s\"", 
vaai: variable:00000168:  tok))); 
vaai: variable:00000180:  ereport(ERROR, 
vaai: variable:00000181:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
vaai: variable:00000182:  errmsg("conflicting \"datestyle\" specifications"))); 
vaai: variable:00000291:  ereport(ERROR, 
vaai: variable:00000292:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
vaai: variable:00000293:  errmsg("invalid interval value for time zone: month not allowed"))); 
vaai: variable:00000300:  ereport(ERROR, 
vaai: variable:00000301:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
vaai: variable:00000302:  errmsg("invalid interval value for time zone: day not allowed"))); 
vaai: variable:00000565:  ereport(ERROR, 
vaai: variable:00000566:  (errcode(ERRCODE_ACTIVE_SQL_TRANSACTION), 
vaai: variable:00000567:  errmsg("SET TRANSACTION ISOLATION LEVEL must be called before any query"))); 
vaai: variable:00000575:  ereport(ERROR, 
vaai: variable:00000576:  (errcode(ERRCODE_ACTIVE_SQL_TRANSACTION), 
vaai: variable:00000577:  errmsg("SET TRANSACTION ISOLATION LEVEL must not be called in a subtransaction"))); 
vaai: variable:00000595:  elog(ERROR, "Greenplum Database does not support REPEATABLE READ transactions."); 
vaai: variable:00000681:  ereport(ERROR, 
vaai: variable:00000682:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
vaai: variable:00000683:  errmsg("conversion between %s and %s is not supported", 
vaai: variable:00000684:  value, GetDatabaseEncodingName()))); 
vaai: variable:00000749:  ereport(ERROR, 
vaai: variable:00000750:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
vaai: variable:00000751:  errmsg("cannot set session authorization within security-definer function"))); 
vaai: variable:00000781:  ereport(ERROR, 
vaai: variable:00000782:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
vaai: variable:00000783:  errmsg("role \"%s\" does not exist", value))); 
vaai: variable:00000888:  ereport(ERROR, 
vaai: variable:00000889:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
vaai: variable:00000890:  errmsg("cannot set role within security-definer function"))); 
vaai: variable:00000927:  ereport(ERROR, 
vaai: variable:00000928:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
vaai: variable:00000929:  errmsg("role \"%s\" does not exist", value))); 
vaai: variable:00000944:  ereport(ERROR, 
vaai: variable:00000945:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
vaai: variable:00000946:  errmsg("permission denied to set role \"%s\"", 
vaai: variable:00000947:  value))); 
aaaaa GP_IGNORE: vaae: view - ./backend/commands/view.c
vaae: view:00000156:  ereport(ERROR, 
vaae: view:00000157:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
vaae: view:00000158:  errmsg("view must have at least one column"))); 
vaae: view:00000180:  ereport(ERROR, 
vaae: view:00000181:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
vaae: view:00000182:  errmsg("\"%s\" is not a view", 
vaae: view:00000183:  RelationGetRelationName(rel)), 
vaae: view:00000184:  errOmitLocation(true))); 
vaae: view:00000265:  ereport(ERROR, 
vaae: view:00000266:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
vaae: view:00000267:  errmsg("cannot change number of columns in view"), 
vaae: view:00000268:  errOmitLocation(true))); 
vaae: view:00000270:  ereport(ERROR, 
vaae: view:00000271:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
vaae: view:00000272:  errmsg("cannot reduce the number of columns in view"), 
vaae: view:00000273:  errOmitLocation(true))); 
vaae: view:00000284:  ereport(ERROR, 
vaae: view:00000285:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
vaae: view:00000286:  errmsg("cannot change number of columns in view"), 
vaae: view:00000287:  errOmitLocation(true))); 
vaae: view:00000290:  ereport(ERROR, 
vaae: view:00000291:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
vaae: view:00000292:  errmsg("cannot change name of view column \"%s\"", 
vaae: view:00000293:  NameStr(oldattr->attname)), 
vaae: view:00000294:  errOmitLocation(true))); 
vaae: view:00000298:  ereport(ERROR, 
vaae: view:00000299:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
vaae: view:00000300:  errmsg("cannot change data type of view column \"%s\"", 
vaae: view:00000301:  NameStr(oldattr->attname)), 
vaae: view:00000302:  errOmitLocation(true))); 
vaae: view:00000462:  ereport(NOTICE, 
vaae: view:00000463:  (errmsg("view \"%s\" will be a temporary view", 
vaae: view:00000464:  view->relname), 
vaae: view:00000465:  errOmitLocation(true))); 
aaaaa GP_IGNORE: eaah: execami - ./backend/executor/execAmi.c
eaah: execami:00000231:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(node)); 
eaah: execami:00000271:  elog(ERROR, "Marking scan position for external relation is not supported"); 
eaah: execami:00000299:  ereport(ERROR, ( 
eaah: execami:00000300:  errcode(ERRCODE_CDB_INTERNAL_ERROR), 
eaah: execami:00000301:  errmsg("unsupported call to mark position of Motion operator") 
eaah: execami:00000302:  )); 
eaah: execami:00000350:  elog(ERROR, "Restoring scan position is not yet supported for external relation scan"); 
eaah: execami:00000378:  ereport(ERROR, ( 
eaah: execami:00000379:  errcode(ERRCODE_CDB_INTERNAL_ERROR), 
eaah: execami:00000380:  errmsg("unsupported call to restore position of Motion operator") 
eaah: execami:00000381:  )); 
eaah: execami:00000385:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(node)); 
aaaaa GP_IGNORE: eaah: execdml - ./backend/executor/execDML.c
eaah: execdml:00000200:  ereport(ERROR, 
eaah: execdml:00000201:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
eaah: execdml:00000202:  errmsg("Append-only tables are not updatable. Operation not permitted."), 
eaah: execdml:00000203:  errOmitLocation(true))); 
eaah: execdml:00000234:  elog(ERROR, "triggers are not supported on tables that use column-oriented storage"); 
eaah: execdml:00000455:  ereport(ERROR, 
eaah: execdml:00000456:  (errcode(ERRCODE_T_R_SERIALIZATION_FAILURE), 
eaah: execdml:00000457:  errmsg("could not serialize access due to concurrent update"))); 
eaah: execdml:00000477:  elog(ERROR, "unrecognized heap_delete status: %u", result); 
eaah: execdml:00000533:  elog(ERROR, "cannot UPDATE during bootstrap"); 
eaah: execdml:00000574:  ereport(ERROR, 
eaah: execdml:00000575:  (errcode(ERRCODE_NO_PARTITION_FOR_PARTITIONING_KEY), 
eaah: execdml:00000576:  errmsg("no partition for partitioning key"))); 
eaah: execdml:00000580:  ereport(ERROR, 
eaah: execdml:00000581:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
eaah: execdml:00000582:  errmsg("moving tuple from partition \"%s\" to " 
eaah: execdml:00000583:  "partition \"%s\" not supported", 
eaah: execdml:00000584:  get_rel_name(RelationGetRelid(resultRelationDesc)), 
eaah: execdml:00000585:  get_rel_name(targetid)), 
eaah: execdml:00000586:  errOmitLocation(true))); 
eaah: execdml:00000665:  ereport(ERROR, 
eaah: execdml:00000666:  (errcode(ERRCODE_T_R_SERIALIZATION_FAILURE), 
eaah: execdml:00000667:  errmsg("could not serialize access due to concurrent update"))); 
eaah: execdml:00000689:  elog(ERROR, "unrecognized heap_update status: %u", result); 
aaaaa GP_IGNORE: eabc: execgrouping - ./backend/executor/execGrouping.c
eabc: execgrouping:00000241:  elog(ERROR, "could not find hash function for hash operator %u", 
eabc: execgrouping:00000242:  eq_opr); 
aaaaa GP_IGNORE: eabc: exechhashagg - ./backend/executor/execHHashagg.c
eabc: exechhashagg:00000079:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), \ 
eabc: exechhashagg:00000080:  errmsg(ERRMSG_GP_INSUFFICIENT_STATEMENT_MEMORY)));\ 
eabc: exechhashagg:00000081:  } while (0) 
eabc: exechhashagg:00000082:  
eabc: exechhashagg:00000083: #define GET_TOTAL_USED_SIZE(hashtable) \ 
eabc: exechhashagg:00000084:  (GET_USED_BUFFER_SIZE(hashtable) + (hashtable)->mem_for_metadata) 
eabc: exechhashagg:00000085:  
eabc: exechhashagg:00000086: #define HAVE_FREESPACE(hashtable) \ 
eabc: exechhashagg:00000087:  (GET_TOTAL_USED_SIZE(hashtable) < (hashtable)->max_mem) 
eabc: exechhashagg:00000088:  
eabc: exechhashagg:00000089: /* Methods that handle batch files */ 
eabc: exechhashagg:00000090: static SpillSet *newSpillSet(unsigned branching_factor, unsigned parent_hash_bit); 
eabc: exechhashagg:00000688:  elog(ERROR, ERRMSG_GP_INSUFFICIENT_STATEMENT_MEMORY); 
eabc: exechhashagg:00000828:  ereport(ERROR, 
eabc: exechhashagg:00000829:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
eabc: exechhashagg:00000830:  ERRMSG_GP_INSUFFICIENT_STATEMENT_MEMORY)); 
eabc: exechhashagg:00001445:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
eabc: exechhashagg:00001446:  errmsg("could not read from temporary file: %m"))); 
eabc: exechhashagg:00001457:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
eabc: exechhashagg:00001458:  errmsg("could not read from temporary file, requesting %d bytes, read %d bytes: %m", 
eabc: exechhashagg:00001459:  *p_input_size, read_size))); 
eabc: exechhashagg:00001575:  ereport(ERROR, 
eabc: exechhashagg:00001576:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
eabc: exechhashagg:00001577:  ERRMSG_GP_INSUFFICIENT_STATEMENT_MEMORY)); 
eabc: exechhashagg:00001721:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
eabc: exechhashagg:00001722:  ERRMSG_GP_INSUFFICIENT_STATEMENT_MEMORY)); 
aaaaa GP_IGNORE: eaai: execmain - ./backend/executor/execMain.c
eaai: execmain:00000405:  ereport(ERROR, 
eaai: execmain:00000406:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
eaai: execmain:00000407:  errmsg("tablespace \"%s\" does not exist", 
eaai: execmain:00000408:  intoClause->tableSpaceName))); 
eaai: execmain:00001270:  ereport(ERROR, 
eaai: execmain:00001271:  (errcode(ERRCODE_READ_ONLY_SQL_TRANSACTION), 
eaai: execmain:00001272:  errmsg("transaction is read-only"))); 
eaai: execmain:00002022:  ereport(ERROR, 
eaai: execmain:00002023:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
eaai: execmain:00002024:  errmsg("cannot change sequence \"%s\"", 
eaai: execmain:00002025:  RelationGetRelationName(resultRelationDesc)))); 
eaai: execmain:00002028:  ereport(ERROR, 
eaai: execmain:00002029:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
eaai: execmain:00002030:  errmsg("cannot change TOAST relation \"%s\"", 
eaai: execmain:00002031:  RelationGetRelationName(resultRelationDesc)))); 
eaai: execmain:00002034:  ereport(ERROR, 
eaai: execmain:00002035:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
eaai: execmain:00002036:  errmsg("cannot change AO segment listing relation \"%s\"", 
eaai: execmain:00002037:  RelationGetRelationName(resultRelationDesc)))); 
eaai: execmain:00002040:  ereport(ERROR, 
eaai: execmain:00002041:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
eaai: execmain:00002042:  errmsg("cannot change AO block directory relation \"%s\"", 
eaai: execmain:00002043:  RelationGetRelationName(resultRelationDesc)))); 
eaai: execmain:00002046:  ereport(ERROR, 
eaai: execmain:00002047:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
eaai: execmain:00002048:  errmsg("cannot change view \"%s\"", 
eaai: execmain:00002049:  RelationGetRelationName(resultRelationDesc)))); 
eaai: execmain:00002636:  ereport(ERROR, 
eaai: execmain:00002637:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execmain:00002638:  errmsg("table row type and query-specified row type do not match"), 
eaai: execmain:00002639:  errdetail("Query has too many columns."))); 
eaai: execmain:00002646:  ereport(ERROR, 
eaai: execmain:00002647:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execmain:00002648:  errmsg("table row type and query-specified row type do not match"), 
eaai: execmain:00002649:  errdetail("Table has type %s at ordinal position %d, but query expects %s.", 
eaai: execmain:00002650:  format_type_be(attr->atttypid), 
eaai: execmain:00002651:  attno, 
eaai: execmain:00002652:  format_type_be(exprType((Node *) tle->expr))))); 
eaai: execmain:00002663:  ereport(ERROR, 
eaai: execmain:00002664:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execmain:00002665:  errmsg("table row type and query-specified row type do not match"), 
eaai: execmain:00002666:  errdetail("Query provides a value for a dropped column at ordinal position %d.", 
eaai: execmain:00002667:  attno))); 
eaai: execmain:00002671:  ereport(ERROR, 
eaai: execmain:00002672:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execmain:00002673:  errmsg("table row type and query-specified row type do not match"), 
eaai: execmain:00002674:  errdetail("Query has too few columns."))); 
eaai: execmain:00002752:  ereport(ERROR, 
eaai: execmain:00002753:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
eaai: execmain:00002754:  errmsg("Append-only tables are not updatable. Operation not permitted."), 
eaai: execmain:00002755:  errOmitLocation(true))); 
eaai: execmain:00002826:  elog(ERROR, "could not find junk ctid column"); 
eaai: execmain:00002830:  elog(ERROR, "ctid is NULL"); 
eaai: execmain:00002867:  elog(ERROR, "could not find junk \"%s\" column", 
eaai: execmain:00002868:  erm->resname); 
eaai: execmain:00002872:  elog(ERROR, "\"%s\" is NULL", erm->resname); 
eaai: execmain:00002898:  ereport(ERROR, 
eaai: execmain:00002899:  (errcode(ERRCODE_T_R_SERIALIZATION_FAILURE), 
eaai: execmain:00002900:  errmsg("could not serialize access due to concurrent update"))); 
eaai: execmain:00002925:  elog(ERROR, "unrecognized heap_lock_tuple status: %u", 
eaai: execmain:00002926:  test); 
eaai: execmain:00002974:  elog(ERROR, "unrecognized operation code: %d", 
eaai: execmain:00002975:  (int) operation); 
eaai: execmain:00003118:  ereport(ERROR, 
eaai: execmain:00003119:  (errcode(ERRCODE_NOT_NULL_VIOLATION), 
eaai: execmain:00003120:  errmsg("null value in column \"%s\" violates not-null constraint", 
eaai: execmain:00003121:  NameStr(rel->rd_att->attrs[attrChk - 1]->attname)), 
eaai: execmain:00003122:  errOmitLocation(true))); 
eaai: execmain:00003131:  ereport(ERROR, 
eaai: execmain:00003132:  (errcode(ERRCODE_CHECK_VIOLATION), 
eaai: execmain:00003133:  errmsg("new row for relation \"%s\" violates check constraint \"%s\"", 
eaai: execmain:00003134:  RelationGetRelationName(rel), failed), 
eaai: execmain:00003135:  errOmitLocation(true))); 
eaai: execmain:00003190:  elog(ERROR, "could not find RowMark for RT index %u", rti); 
eaai: execmain:00003222:  elog(ERROR, "t_xmin is uncommitted in tuple to be updated"); 
eaai: execmain:00003673:  elog(ERROR, "t_xmin is uncommitted in tuple to be updated"); 
eaai: execmain:00003817:  ereport(ERROR, 
eaai: execmain:00003818:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
eaai: execmain:00003819:  errmsg("ON COMMIT can only be used on temporary tables"), 
eaai: execmain:00003820:  errOmitLocation(true))); 
eaai: execmain:00003846:  ereport(ERROR, 
eaai: execmain:00003847:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
eaai: execmain:00003848:  errmsg("tablespace \"%s\" does not exist", 
eaai: execmain:00003849:  intoClause->tableSpaceName))); 
eaai: execmain:00003900:  ereport(ERROR, 
eaai: execmain:00003901:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
eaai: execmain:00003902:  errmsg("gpsql does not support heap table, use append only table instead"), 
eaai: execmain:00003903:  errOmitLocation(true))); 
eaai: execmain:00003924:  ereport(ERROR, 
eaai: execmain:00003925:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
eaai: execmain:00003926:  errmsg("gpsql does not support heap table, use append only table instead"), 
eaai: execmain:00003927:  errOmitLocation(true))); 
eaai: execmain:00004250:  ereport(ERROR, 
eaai: execmain:00004251:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
eaai: execmain:00004252:  errmsg("gpsql does not support heap table, use append only table instead"))); 
eaai: execmain:00004354:  ereport(ERROR, 
eaai: execmain:00004355:  (errcode(ERRCODE_NO_PARTITION_FOR_PARTITIONING_KEY), 
eaai: execmain:00004356:  errmsg("no partition for partitioning key"), 
eaai: execmain:00004357:  errOmitLocation(true))); 
eaai: execmain:00004368:  ereport(ERROR, 
eaai: execmain:00004369:  (errcode(ERRCODE_NO_PARTITION_FOR_PARTITIONING_KEY), 
eaai: execmain:00004370:  errmsg("the data does not belong to partition: %s", 
eaai: execmain:00004371:  RelationGetRelationName(estate->es_result_relations->ri_RelationDesc)), 
eaai: execmain:00004372:  errOmitLocation(true))); 
eaai: execmain:00004655:  elog(ERROR, "attribute map discrepancy"); 
eaai: execmain:00004775:  ereport(ERROR, 
eaai: execmain:00004776:  (errcode(ERRCODE_SYNTAX_ERROR), 
eaai: execmain:00004777:  errmsg("relation \"%s\" must have the same " 
eaai: execmain:00004778:  "column names and column order as \"%s\"", 
eaai: execmain:00004779:  RelationGetRelationName(part), 
eaai: execmain:00004780:  RelationGetRelationName(base)), 
eaai: execmain:00004781:  errOmitLocation(true))); 
eaai: execmain:00004790:  ereport(ERROR, 
eaai: execmain:00004791:  (errcode(ERRCODE_SYNTAX_ERROR), 
eaai: execmain:00004792:  errmsg("type mismatch for attribute \"%s\"", 
eaai: execmain:00004793:  NameStr((battr->attname))), 
eaai: execmain:00004794:  errOmitLocation(true))); 
eaai: execmain:00004803:  ereport(ERROR, 
eaai: execmain:00004804:  (errcode(ERRCODE_SYNTAX_ERROR), 
eaai: execmain:00004805:  errmsg("alignment mismatch for attribute \"%s\"", 
eaai: execmain:00004806:  NameStr((battr->attname))), 
eaai: execmain:00004807:  errOmitLocation(true))); 
eaai: execmain:00004818:  elog(ERROR, 
eaai: execmain:00004819:  "attribute numbers out of order"); 
eaai: execmain:00004842:  ereport(ERROR, 
eaai: execmain:00004843:  (errcode(ERRCODE_SYNTAX_ERROR), 
eaai: execmain:00004844:  errmsg("relation \"%s\" must have the same number columns as relation \"%s\"", 
eaai: execmain:00004845:  RelationGetRelationName(part), 
eaai: execmain:00004846:  RelationGetRelationName(base)), 
eaai: execmain:00004847:  errOmitLocation(true))); 
eaai: execmain:00004859:  ereport(ERROR, 
eaai: execmain:00004860:  (errcode(ERRCODE_SYNTAX_ERROR), 
eaai: execmain:00004861:  errmsg("relation \"%s\" must have the same number columns as relation \"%s\"", 
eaai: execmain:00004862:  RelationGetRelationName(part), 
eaai: execmain:00004863:  RelationGetRelationName(base)), 
eaai: execmain:00004864:  errOmitLocation(true))); 
aaaaa GP_IGNORE: eabc: execprocnode - ./backend/executor/execProcnode.c
eabc: execprocnode:00000414:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(node)); 
eabc: execprocnode:00000886:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(node)); 
eabc: execprocnode:00000965:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(node)); 
eabc: execprocnode:00001118:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(node)); 
eabc: execprocnode:00001414:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(node)); 
aaaaa GP_IGNORE: eaai: execqual - ./backend/executor/execQual.c
eaai: execqual:00000296:  ereport(ERROR, 
eaai: execqual:00000297:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
eaai: execqual:00000298:  errmsg("number of array dimensions (%d) exceeds the maximum allowed (%d)", 
eaai: execqual:00000299:  i, MAXDIM))); 
eaai: execqual:00000309:  ereport(ERROR, 
eaai: execqual:00000310:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
eaai: execqual:00000311:  errmsg("array subscript in assignment must not be null"))); 
eaai: execqual:00000324:  ereport(ERROR, 
eaai: execqual:00000325:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
eaai: execqual:00000326:  errmsg("number of array dimensions (%d) exceeds the maximum allowed (%d)", 
eaai: execqual:00000327:  i, MAXDIM))); 
eaai: execqual:00000337:  ereport(ERROR, 
eaai: execqual:00000338:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
eaai: execqual:00000339:  errmsg("array subscript in assignment must not be null"))); 
eaai: execqual:00000346:  elog(ERROR, "upper and lower index lists are not same length"); 
eaai: execqual:00000448:  elog(ERROR, "no aggregates in this expression context"); 
eaai: execqual:00000545:  elog(ERROR, "no window functions in this expression context"); 
eaai: execqual:00000632:  elog(ERROR, "attribute number %d exceeds number of columns %d", 
eaai: execqual:00000633:  attnum, slot_tupdesc->natts); 
eaai: execqual:00000641:  ereport(ERROR, 
eaai: execqual:00000642:  (errmsg("attribute %d has wrong type", attnum), 
eaai: execqual:00000643:  errdetail("Table has type %s, but query expects %s.", 
eaai: execqual:00000644:  format_type_be(attr->atttypid), 
eaai: execqual:00000645:  format_type_be(variable->vartype)))); 
eaai: execqual:00000699:  ereport(ERROR, 
eaai: execqual:00000700:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execqual:00000701:  errmsg("table row type and query-specified row type do not match"), 
eaai: execqual:00000702:  errdetail("Table row contains %d attributes, but query expects %d.", 
eaai: execqual:00000703:  slot_tupdesc->natts, var_tupdesc->natts))); 
eaai: execqual:00000715:  ereport(ERROR, 
eaai: execqual:00000716:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execqual:00000717:  errmsg("table row type and query-specified row type do not match"), 
eaai: execqual:00000718:  errdetail("Table has type %s at ordinal position %d, but query expects %s.", 
eaai: execqual:00000719:  format_type_be(sattr->atttypid), 
eaai: execqual:00000720:  i + 1, 
eaai: execqual:00000721:  format_type_be(vattr->atttypid)))); 
eaai: execqual:00000725:  ereport(ERROR, 
eaai: execqual:00000726:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execqual:00000727:  errmsg("table row type and query-specified row type do not match"), 
eaai: execqual:00000728:  errdetail("Physical storage mismatch on dropped attribute at ordinal position %d.", 
eaai: execqual:00000729:  i + 1))); 
eaai: execqual:00000984:  ereport(ERROR, 
eaai: execqual:00000985:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
eaai: execqual:00000986:  errmsg("no value found for parameter %d", thisParamId))); 
eaai: execqual:00001020:  elog(ERROR, "invalid attribute number %d", attrno); 
eaai: execqual:00001023:  elog(ERROR, "a NULL isNull pointer was passed"); 
eaai: execqual:00001067:  elog(ERROR, "invalid attribute name"); 
eaai: execqual:00001070:  elog(ERROR, "a NULL isNull pointer was passed"); 
eaai: execqual:00001094:  elog(ERROR, "attribute \"%s\" does not exist", attname); 
eaai: execqual:00001136:  ereport(ERROR, 
eaai: execqual:00001137:  (errcode(ERRCODE_TOO_MANY_ARGUMENTS), 
eaai: execqual:00001138:  errmsg("cannot pass more than %d arguments to a function", 
eaai: execqual:00001139:  FUNC_MAX_ARGS))); 
eaai: execqual:00001314:  ereport(ERROR, 
eaai: execqual:00001315:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
eaai: execqual:00001316:  errmsg("functions and operators can take at most one set argument"))); 
eaai: execqual:00001350:  ereport(ERROR, 
eaai: execqual:00001351:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
eaai: execqual:00001352:  errmsg("function returning setof record called in " 
eaai: execqual:00001353:  "context that cannot accept type record"))); 
eaai: execqual:00001406:  ereport(ERROR, 
eaai: execqual:00001407:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execqual:00001408:  errmsg("function return row and query-specified return row do not match"), 
eaai: execqual:00001409:  errdetail("Returned row contains %d attributes, but query expects %d.", 
eaai: execqual:00001410:  src_tupdesc->natts, dst_tupdesc->natts))); 
eaai: execqual:00001420:  ereport(ERROR, 
eaai: execqual:00001421:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execqual:00001422:  errmsg("function return row and query-specified return row do not match"), 
eaai: execqual:00001423:  errdetail("Returned type %s at ordinal position %d, but query expects %s.", 
eaai: execqual:00001424:  format_type_be(sattr->atttypid), 
eaai: execqual:00001425:  i + 1, 
eaai: execqual:00001426:  format_type_be(dattr->atttypid)))); 
eaai: execqual:00001430:  ereport(ERROR, 
eaai: execqual:00001431:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execqual:00001432:  errmsg("function return row and query-specified return row do not match"), 
eaai: execqual:00001433:  errdetail("Physical storage mismatch on dropped attribute at ordinal position %d.", 
eaai: execqual:00001434:  i + 1))); 
eaai: execqual:00001524:  ereport(ERROR, 
eaai: execqual:00001525:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
eaai: execqual:00001526:  errmsg("set-valued function called in context that cannot accept a set"))); 
eaai: execqual:00001569:  ereport(ERROR, 
eaai: execqual:00001570:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
eaai: execqual:00001571:  errmsg("set-valued function called in context that cannot accept a set"))); 
eaai: execqual:00001655:  ereport(ERROR, 
eaai: execqual:00001656:  (errcode(ERRCODE_E_R_I_E_SRF_PROTOCOL_VIOLATED), 
eaai: execqual:00001657:  errmsg("table-function protocol for materialize mode was not followed"))); 
eaai: execqual:00001675:  ereport(ERROR, 
eaai: execqual:00001676:  (errcode(ERRCODE_E_R_I_E_SRF_PROTOCOL_VIOLATED), 
eaai: execqual:00001677:  errmsg("unrecognized table-function returnMode: %d", 
eaai: execqual:00001678:  (int) rsinfo.returnMode))); 
eaai: execqual:00001895:  ereport(ERROR, 
eaai: execqual:00001896:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
eaai: execqual:00001897:  errmsg("set-valued function called in context that cannot accept a set"))); 
eaai: execqual:00001978:  ereport(ERROR, 
eaai: execqual:00001979:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
eaai: execqual:00001980:  errmsg("function returning set of rows cannot return null value"))); 
eaai: execqual:00002081:  ereport(ERROR, 
eaai: execqual:00002082:  (errcode(ERRCODE_E_R_I_E_SRF_PROTOCOL_VIOLATED), 
eaai: execqual:00002083:  errmsg("table-function protocol for materialize mode was not followed"))); 
eaai: execqual:00002088:  ereport(ERROR, 
eaai: execqual:00002089:  (errcode(ERRCODE_E_R_I_E_SRF_PROTOCOL_VIOLATED), 
eaai: execqual:00002090:  errmsg("unrecognized table-function returnMode: %d", 
eaai: execqual:00002091:  (int) rsinfo.returnMode))); 
eaai: execqual:00002254:  ereport(ERROR, 
eaai: execqual:00002255:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execqual:00002256:  errmsg("IS DISTINCT FROM does not support set arguments"))); 
eaai: execqual:00002670:  ereport(ERROR, 
eaai: execqual:00002671:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execqual:00002672:  errmsg("op ANY/ALL (array) does not support set arguments"))); 
eaai: execqual:00003018:  elog(ERROR, "attribute \"%s\" of type %s does not match corresponding attribute of type %s", 
eaai: execqual:00003019:  attname, 
eaai: execqual:00003020:  format_type_be(cstate->indesc->tdtypeid), 
eaai: execqual:00003021:  format_type_be(cstate->outdesc->tdtypeid)); 
eaai: execqual:00003027:  elog(ERROR, "attribute \"%s\" of type %s does not exist", 
eaai: execqual:00003028:  attname, 
eaai: execqual:00003029:  format_type_be(cstate->indesc->tdtypeid)); 
eaai: execqual:00003289:  ereport(ERROR, 
eaai: execqual:00003290:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execqual:00003291:  errmsg("cannot merge incompatible arrays"), 
eaai: execqual:00003292:  errdetail("Array with element type %s cannot be " 
eaai: execqual:00003293:  "included in ARRAY construct with element type %s.", 
eaai: execqual:00003294:  format_type_be(ARR_ELEMTYPE(array)), 
eaai: execqual:00003295:  format_type_be(element_type)))); 
eaai: execqual:00003311:  ereport(ERROR, 
eaai: execqual:00003312:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
eaai: execqual:00003313:  errmsg("number of array dimensions (%d) exceeds " \ 
eaai: execqual:00003314:  "the maximum allowed (%d)", ndims, MAXDIM))); 
eaai: execqual:00003331:  ereport(ERROR, 
eaai: execqual:00003332:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
eaai: execqual:00003333:  errmsg("multidimensional arrays must have array " 
eaai: execqual:00003334:  "expressions with matching dimensions"))); 
eaai: execqual:00003358:  ereport(ERROR, 
eaai: execqual:00003359:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
eaai: execqual:00003360:  errmsg("multidimensional arrays must have array " 
eaai: execqual:00003361:  "expressions with matching dimensions"))); 
eaai: execqual:00003517:  elog(ERROR, "unrecognized RowCompareType: %d", (int) rctype); 
eaai: execqual:00003680:  ereport(ERROR, 
eaai: execqual:00003681:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execqual:00003682:  errmsg("NULLIF does not support set arguments"))); 
eaai: execqual:00003790:  elog(ERROR, "unrecognized nulltesttype: %d", 
eaai: execqual:00003791:  (int) ntest->nulltesttype); 
eaai: execqual:00003876:  elog(ERROR, "unrecognized booltesttype: %d", 
eaai: execqual:00003877:  (int) btest->booltesttype); 
eaai: execqual:00003910:  ereport(ERROR, 
eaai: execqual:00003911:  (errcode(ERRCODE_NOT_NULL_VIOLATION), 
eaai: execqual:00003912:  errmsg("domain %s does not allow null values", 
eaai: execqual:00003913:  format_type_be(ctest->resulttype)))); 
eaai: execqual:00003939:  ereport(ERROR, 
eaai: execqual:00003940:  (errcode(ERRCODE_CHECK_VIOLATION), 
eaai: execqual:00003941:  errmsg("value for domain %s violates check constraint \"%s\"", 
eaai: execqual:00003942:  format_type_be(ctest->resulttype), 
eaai: execqual:00003943:  con->name))); 
eaai: execqual:00003950:  elog(ERROR, "unrecognized constraint type: %d", 
eaai: execqual:00003951:  (int) con->constrainttype); 
eaai: execqual:00003994:  elog(ERROR, "no aggregates in this expression context"); 
eaai: execqual:00004041:  elog(ERROR, "attribute number %d exceeds number of columns %d", 
eaai: execqual:00004042:  fieldnum, tupDesc->natts); 
eaai: execqual:00004053:  ereport(ERROR, 
eaai: execqual:00004054:  (errmsg("attribute %d has wrong type", fieldnum), 
eaai: execqual:00004055:  errdetail("Table has type %s, but query expects %s.", 
eaai: execqual:00004056:  format_type_be(attr->atttypid), 
eaai: execqual:00004057:  format_type_be(fselect->resulttype)))); 
eaai: execqual:00004366:  ereport(ERROR, 
eaai: execqual:00004367:  (errcode(ERRCODE_GROUPING_ERROR), 
eaai: execqual:00004368:  errmsg("aggregate function calls may not be nested"))); 
eaai: execqual:00004373:  elog(ERROR, "aggref found in non-Agg plan node"); 
eaai: execqual:00004523:  elog(ERROR, "unrecognized boolop: %d", 
eaai: execqual:00004524:  (int) boolexpr->boolop); 
eaai: execqual:00004541:  elog(ERROR, "SubPlan found with no parent plan"); 
eaai: execqual:00004694:  ereport(ERROR, 
eaai: execqual:00004695:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
eaai: execqual:00004696:  errmsg("ROW() column has type %s instead of type %s", 
eaai: execqual:00004697:  format_type_be(exprType((Node *) e)), 
eaai: execqual:00004698:  format_type_be(attrs[i]->atttypid)))); 
eaai: execqual:00004824:  ereport(ERROR, 
eaai: execqual:00004825:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
eaai: execqual:00004826:  errmsg("could not identify a comparison function for type %s", 
eaai: execqual:00004827:  format_type_be(minmaxexpr->minmaxtype)))); 
eaai: execqual:00004896:  elog(ERROR, "PercentileExpr found in non-Agg plan node: %d", 
eaai: execqual:00004897:  (int) nodeTag(parent)); 
eaai: execqual:00004918:  ereport(ERROR, 
eaai: execqual:00004919:  (errcode(ERRCODE_GROUPING_ERROR), 
eaai: execqual:00004920:  errmsg("aggregate function calls may not be nested"))); 
eaai: execqual:00004950:  elog(ERROR, "unrecognized node type: %d", 
eaai: execqual:00004951:  (int) nodeTag(node)); 
eaai: execqual:00005204:  ereport(ERROR, 
eaai: execqual:00005205:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
eaai: execqual:00005206:  errmsg("set-valued function called in context that cannot accept a set"))); 
eaai: execqual:00005459:  elog(ERROR, "invalid argument number found during evaluating function argument"); 
eaai: execqual:00005466:  elog(ERROR, "unable to resolve function argument"); 
eaai: execqual:00005470:  elog(ERROR, "unable to resolve function argument type"); 
aaaaa GP_IGNORE: eaai: execscan - ./backend/executor/execScan.c
eaai: execscan:00000418:  elog(ERROR, "undefined table type for storage format: %c", rel->rd_rel->relstorage); 
eaai: execscan:00000546:  ereport(ERROR, 
eaai: execscan:00000547:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
eaai: execscan:00000548:  errmsg("Mark/Restore is not allowed in %s", scan))); 
aaaaa GP_IGNORE: eaba: exectuples - ./backend/executor/execTuples.c
eaba: exectuples:00000312:  elog(ERROR, "plan requires more slots than are available"); 
eaba: exectuples:00001501:  elog(ERROR, "Invalid attnum: %d", attnum); 
aaaaa GP_IGNORE: eaaj: executils - ./backend/executor/execUtils.c
eaaj: executils:00002429:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(node)); 
aaaaa GP_IGNORE: faaj: functions - ./backend/executor/functions.c
faaj: functions:00000134:  elog(ERROR, "function cannot execute on segment because it issues a non-SELECT statement"); 
faaj: functions:00000152:  elog(ERROR, "function cannot execute on segment because it accesses relation \"%s.%s\"", 
faaj: functions:00000153:  quote_identifier(get_namespace_name(namespaceId)), quote_identifier(get_rel_name(rte->relid))); 
faaj: functions:00000202:  ereport(ERROR, 
faaj: functions:00000203:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
faaj: functions:00000204:  /* translator: %s is a SQL statement name */ 
faaj: functions:00000205:  errmsg("%s is not allowed in a SQL function", 
faaj: functions:00000206:  CreateCommandTag(stmt)))); 
faaj: functions:00000209:  ereport(ERROR, 
faaj: functions:00000210:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
faaj: functions:00000211:  /* translator: %s is a SQL statement name */ 
faaj: functions:00000212:  errmsg("%s is not allowed in a non-volatile function", 
faaj: functions:00000213:  CreateCommandTag(stmt)))); 
faaj: functions:00000262:  elog(ERROR, "cache lookup failed for function %u", foid); 
faaj: functions:00000276:  ereport(ERROR, 
faaj: functions:00000277:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
faaj: functions:00000278:  errmsg("could not determine actual result type for function declared to return type %s", 
faaj: functions:00000279:  format_type_be(procedureStruct->prorettype)), 
faaj: functions:00000280:  errOmitLocation(true))); 
faaj: functions:00000313:  ereport(ERROR, 
faaj: functions:00000314:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
faaj: functions:00000315:  errmsg("could not determine actual type of argument declared %s", 
faaj: functions:00000316:  format_type_be(argOidVect[argnum])), 
faaj: functions:00000317:  errOmitLocation(true))); 
faaj: functions:00000333:  elog(ERROR, "null prosrc for function %u", foid); 
faaj: functions:00000373:  elog(ERROR,"Volatile SQL function %s cannot be executed from the segment databases",NameStr(procedureStruct->proname)); 
faaj: functions:00000375:  elog(ERROR,"Stable SQL function %s cannot be executed from the segment databases",NameStr(procedureStruct->proname)); 
faaj: functions:00000377:  elog(ERROR,"SQL function %s cannot be executed from the segment databases",NameStr(procedureStruct->proname)); 
faaj: functions:00000870:  ereport(ERROR, 
faaj: functions:00000871:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
faaj: functions:00000872:  errmsg("set-valued function called in context that cannot accept a set"), 
faaj: functions:00000873:  errOmitLocation(true))); 
faaj: functions:00000910:  ereport(ERROR, 
faaj: functions:00000911:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
faaj: functions:00000912:  errmsg("set-valued function called in context that cannot accept a set"), 
faaj: functions:00000913:  errOmitLocation(true))); 
faaj: functions:00000981:  elog(ERROR, "null prosrc"); 
faaj: functions:00001098:  ereport(ERROR, 
faaj: functions:00001099:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
faaj: functions:00001100:  errmsg("return type mismatch in function declared to return %s", 
faaj: functions:00001101:  format_type_be(rettype)), 
faaj: functions:00001102:  errdetail("Function's final statement must be a SELECT."), 
faaj: functions:00001103:  errOmitLocation(true))); 
faaj: functions:00001121:  ereport(ERROR, 
faaj: functions:00001122:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
faaj: functions:00001123:  errmsg("return type mismatch in function declared to return %s", 
faaj: functions:00001124:  format_type_be(rettype)), 
faaj: functions:00001125:  errdetail("Function's final statement must be a SELECT."), 
faaj: functions:00001126:  errOmitLocation(true))); 
faaj: functions:00001156:  ereport(ERROR, 
faaj: functions:00001157:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
faaj: functions:00001158:  errmsg("return type mismatch in function declared to return %s", 
faaj: functions:00001159:  format_type_be(rettype)), 
faaj: functions:00001160:  errdetail("Final SELECT must return exactly one column."), 
faaj: functions:00001161:  errOmitLocation(true))); 
faaj: functions:00001165:  ereport(ERROR, 
faaj: functions:00001166:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
faaj: functions:00001167:  errmsg("return type mismatch in function declared to return %s", 
faaj: functions:00001168:  format_type_be(rettype)), 
faaj: functions:00001169:  errdetail("Actual return type is %s.", 
faaj: functions:00001170:  format_type_be(restype)), 
faaj: functions:00001171:  errOmitLocation(true))); 
faaj: functions:00001231:  ereport(ERROR, 
faaj: functions:00001232:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
faaj: functions:00001233:  errmsg("return type mismatch in function declared to return %s", 
faaj: functions:00001234:  format_type_be(rettype)), 
faaj: functions:00001235:  errdetail("Final SELECT returns too many columns."), 
faaj: functions:00001236:  errOmitLocation(true))); 
faaj: functions:00001244:  ereport(ERROR, 
faaj: functions:00001245:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
faaj: functions:00001246:  errmsg("return type mismatch in function declared to return %s", 
faaj: functions:00001247:  format_type_be(rettype)), 
faaj: functions:00001248:  errdetail("Final SELECT returns %s instead of %s at column %d.", 
faaj: functions:00001249:  format_type_be(tletype), 
faaj: functions:00001250:  format_type_be(atttype), 
faaj: functions:00001251:  tuplogcols), 
faaj: functions:00001252:  errOmitLocation(true))); 
faaj: functions:00001265:  ereport(ERROR, 
faaj: functions:00001266:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
faaj: functions:00001267:  errmsg("return type mismatch in function declared to return %s", 
faaj: functions:00001268:  format_type_be(rettype)), 
faaj: functions:00001269:  errdetail("Final SELECT returns too few columns."), 
faaj: functions:00001270:  errOmitLocation(true))); 
faaj: functions:00001284:  ereport(ERROR, 
faaj: functions:00001285:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
faaj: functions:00001286:  errmsg("cannot determine result data type"), 
faaj: functions:00001287:  errdetail("A function returning \"anyarray\" or \"anyelement\" must have at least one argument of either type."), 
faaj: functions:00001288:  errOmitLocation(true))); 
faaj: functions:00001291:  ereport(ERROR, 
faaj: functions:00001292:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
faaj: functions:00001293:  errmsg("return type %s is not supported for SQL functions", 
faaj: functions:00001294:  format_type_be(rettype)), 
faaj: functions:00001295:  errOmitLocation(true))); 
aaaaa GP_IGNORE: naah: nodeagg - ./backend/executor/nodeAgg.c
naah: nodeagg:00001076:  elog(ERROR,"hybrid hash aggregation sequencing error"); 
naah: nodeagg:00001929:  elog(ERROR, "cache lookup failed for aggregate %u", 
naah: nodeagg:00001930:  aggref->aggfnoid); 
naah: nodeagg:00001980:  elog(ERROR, "cache lookup failed for function %u", 
naah: nodeagg:00001981:  aggref->aggfnoid); 
naah: nodeagg:00002074:  ereport(ERROR, 
naah: nodeagg:00002075:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
naah: nodeagg:00002076:  errmsg("aggregate %u needs to have compatible input type and transition type", 
naah: nodeagg:00002077:  aggref->aggfnoid))); 
naah: nodeagg:00002121:  ereport(ERROR, 
naah: nodeagg:00002122:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
naah: nodeagg:00002123:  errmsg("DISTINCT is supported only for single-argument aggregates"))); 
naah: nodeagg:00002547:  elog(ERROR, "aggregate function %u called as normal function", 
naah: nodeagg:00002548:  fcinfo->flinfo->fn_oid); 
aaaaa GP_IGNORE: nabc: nodeassertop - ./backend/executor/nodeAssertOp.c
nabc: nodeassertop:00000061:  ereport(ERROR, 
nabc: nodeassertop:00000062:  (errcode(plannode->errcode), 
nabc: nodeassertop:00000063:  errmsg("%s",plannode->errmessage), 
nabc: nodeassertop:00000064:  errOmitLocation(true))); 
aaaaa GP_IGNORE: nabd: nodebitmapand - ./backend/executor/nodeBitmapAnd.c
nabd: nodebitmapand:00000158:  elog(ERROR, "unrecognized result from subplan"); 
aaaaa GP_IGNORE: nace: nodebitmapappendonlyscan - ./backend/executor/nodeBitmapAppendOnlyscan.c
nace: nodebitmapappendonlyscan:00000255:  elog(ERROR, "unrecognized result from subplan"); 
aaaaa GP_IGNORE: nabi: nodebitmapheapscan - ./backend/executor/nodeBitmapHeapscan.c
nabi: nodebitmapheapscan:00000220:  elog(ERROR, "unrecognized result from subplan"); 
aaaaa GP_IGNORE: nabj: nodebitmapindexscan - ./backend/executor/nodeBitmapIndexscan.c
nabj: nodebitmapindexscan:00000080:  elog(ERROR, "unrecognized result from bitmap index scan"); 
nabj: nodebitmapindexscan:00000163:  ereport(ERROR, 
nabj: nodebitmapindexscan:00000164:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
nabj: nodebitmapindexscan:00000165:  errmsg("the returning bitmap in nodeBitmapIndexScan is corrupted."))); 
aaaaa GP_IGNORE: nabc: nodebitmapor - ./backend/executor/nodeBitmapOr.c
nabc: nodebitmapor:00000152:  elog(ERROR, "unrecognized result from subplan"); 
aaaaa GP_IGNORE: nabg: nodefunctionscan - ./backend/executor/nodeFunctionscan.c
nabg: nodefunctionscan:00000250:  elog(ERROR, "function in FROM has unsupported return type"); 
aaaaa GP_IGNORE: naai: nodehash - ./backend/executor/nodeHash.c
naai: nodehash:00000064:  elog(ERROR, "Hash node does not support ExecProcNode call convention"); 
naai: nodehash:00000316:  elog(ERROR, "could not find hash function for hash operator %u", 
naai: nodehash:00000317:  hashop); 
aaaaa GP_IGNORE: nabc: nodehashjoin - ./backend/executor/nodeHashjoin.c
nabc: nodehashjoin:00000869:  ereport(ERROR, (errcode_for_file_access(), 
nabc: nodehashjoin:00000870:  errmsg("could not access temporary file"))); 
nabc: nodehashjoin:00000907:  ereport(ERROR, (errcode_for_file_access(), 
nabc: nodehashjoin:00000908:  errmsg("could not access temporary file"))); 
nabc: nodehashjoin:00000951:  ereport(ERROR, (errcode_for_file_access(), 
nabc: nodehashjoin:00000952:  errmsg("could not write to temporary file"))); 
nabc: nodehashjoin:00000955:  ereport(ERROR, (errcode_for_file_access(), 
nabc: nodehashjoin:00000956:  errmsg("could not write to temporary file"))); 
nabc: nodehashjoin:00001003:  ereport(ERROR, 
nabc: nodehashjoin:00001004:  (errcode_for_file_access(), 
nabc: nodehashjoin:00001005:  errmsg("could not read from temporary file"))); 
aaaaa GP_IGNORE: nabd: nodemergejoin - ./backend/executor/nodeMergejoin.c
nabd: nodemergejoin:00001780:  ereport(ERROR, 
nabd: nodemergejoin:00001781:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
nabd: nodemergejoin:00001782:  errmsg("RIGHT JOIN is only supported with merge-joinable join conditions"))); 
nabd: nodemergejoin:00001798:  ereport(ERROR, 
nabd: nodemergejoin:00001799:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
nabd: nodemergejoin:00001800:  errmsg("FULL JOIN is only supported with merge-joinable join conditions"))); 
aaaaa GP_IGNORE: naba: nodemotion - ./backend/executor/nodeMotion.c
naba: nodemotion:00001656:  ereport(ERROR, 
naba: nodemotion:00001657:  (errcode(ERRCODE_INTERNAL_ERROR), 
naba: nodemotion:00001658:  errmsg("Illegal rescan of motion node: invalid plan."), 
naba: nodemotion:00001659:  errhint("likely caused by bad NL-join, try setting enable_nestloop off"))); 
aaaaa GP_IGNORE: nabe: noderowtrigger - ./backend/executor/nodeRowTrigger.c
nabe: noderowtrigger:00000376:  elog(ERROR, "Triggers are not supported on column-oriented or external tables"); 
nabe: noderowtrigger:00000381:  elog(ERROR, "Append only tables only support INSERT triggers"); 
aaaaa GP_IGNORE: nabc: nodesequence - ./backend/executor/nodeSequence.c
nabc: nodesequence:00000150:  ereport(ERROR, 
nabc: nodesequence:00000151:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
nabc: nodesequence:00000152:  errmsg("Rescan is not supported in Sequence operator."))); 
aaaaa GP_IGNORE: nabi: nodeshareinputscan - ./backend/executor/nodeShareInputScan.c
nabi: nodeshareinputscan:00000505:  ereport(ERROR, (errmsg("cannot generate path %s/%s/%s_gpcdb2.sisc_%d_%d_%d_%d_%s", 
nabi: nodeshareinputscan:00000506:  getCurrentTempFilePath, PG_TEMP_FILES_DIR, PG_TEMP_FILE_PREFIX, 
nabi: nodeshareinputscan:00000507:  Gp_segment, gp_session_id, gp_command_count, share_id, name))); 
nabi: nodeshareinputscan:00000561:  elog(ERROR, "mkfifo not supported on win32"); 
nabi: nodeshareinputscan:00000570:  ereport(ERROR, (errmsg("cannot create dir path %s/%s", getCurrentTempFilePath, PG_TEMP_FILES_DIR))); 
nabi: nodeshareinputscan:00000578:  elog(ERROR, "could not create temporary fifo \"%s\": %m", fifoname); 
nabi: nodeshareinputscan:00000598:  elog(ERROR, "could not read from fifo: %m"); 
nabi: nodeshareinputscan:00000616:  elog(ERROR, "could not write to fifo: %m"); 
nabi: nodeshareinputscan:00000669:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
nabi: nodeshareinputscan:00000670:  errmsg("Share input reader failed: out of memory"))); 
nabi: nodeshareinputscan:00000686:  elog(ERROR, "could not open fifo \"%s\": %m", pctxt->lkname_ready); 
nabi: nodeshareinputscan:00000692:  elog(ERROR, "could not open fifo \"%s\": %m", pctxt->lkname_done); 
nabi: nodeshareinputscan:00000768:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
nabi: nodeshareinputscan:00000769:  errmsg("Shareinput Writer failed: out of memory"))); 
nabi: nodeshareinputscan:00000787:  elog(ERROR, "could not open fifo \"%s\": %m", pctxt->lkname_ready); 
nabi: nodeshareinputscan:00000793:  elog(ERROR, "could not open fifo \"%s\": %m", pctxt->lkname_done); 
aaaaa GP_IGNORE: nabb: nodesubplan - ./backend/executor/nodeSubplan.c
nabb: nodesubplan:00000095:  elog(ERROR, "hashed subplan with direct correlation not supported"); 
nabb: nodesubplan:00000294:  ereport(ERROR, 
nabb: nodesubplan:00000295:  (errcode(ERRCODE_CARDINALITY_VIOLATION), 
nabb: nodesubplan:00000296:  errmsg("more than one row returned by a subquery used as an expression"))); 
nabb: nodesubplan:00000337:  ereport(ERROR, 
nabb: nodesubplan:00000338:  (errcode(ERRCODE_CARDINALITY_VIOLATION), 
nabb: nodesubplan:00000339:  errmsg("more than one row returned by a subquery used as an expression"))); 
nabb: nodesubplan:00000903:  elog(ERROR, "could not find hash function for hash operator %u", 
nabb: nodesubplan:00000904:  opexpr->opno); 
nabb: nodesubplan:00001138:  elog(ERROR, "ANY/ALL subselect unsupported as initplan"); 
nabb: nodesubplan:00001191:  ereport(ERROR, 
nabb: nodesubplan:00001192:  (errcode(ERRCODE_CARDINALITY_VIOLATION), 
nabb: nodesubplan:00001193:  errmsg("more than one row returned by a subquery used as an expression"))); 
aaaaa GP_IGNORE: nabh: nodetablefunction - ./backend/executor/nodeTableFunction.c
nabh: nodetablefunction:00000083:  ereport(ERROR, 
nabh: nodetablefunction:00000084:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
nabh: nodetablefunction:00000085:  errmsg("set-valued function called in context that cannot " 
nabh: nodetablefunction:00000086:  "accept a set"))); 
nabh: nodetablefunction:00000115:  elog(ERROR, 
nabh: nodetablefunction:00000116:  "table functions over multiple TABLE value expressions " 
nabh: nodetablefunction:00000117:  "not yet supported"); /* not feasible */ 
nabh: nodetablefunction:00000118:  } 
nabh: nodetablefunction:00000119: } 
nabh: nodetablefunction:00000120:  
nabh: nodetablefunction:00000121: /* 
nabh: nodetablefunction:00000122:  * TableFunctionNext - ExecScan callback function for table funciton scans 
nabh: nodetablefunction:00000123:  */ 
nabh: nodetablefunction:00000124: static TupleTableSlot * 
nabh: nodetablefunction:00000125: TableFunctionNext(TableFunctionState *node) 
nabh: nodetablefunction:00000126: { 
nabh: nodetablefunction:00000127:  MemoryContext oldcontext = NULL; 
nabh: nodetablefunction:00000154:  ereport(ERROR, 
nabh: nodetablefunction:00000155:  (errcode(ERRCODE_E_R_I_E_SRF_PROTOCOL_VIOLATED), 
nabh: nodetablefunction:00000156:  errmsg("table functions must use SFRM_ValuePerCall protocol"))); 
nabh: nodetablefunction:00000168:  ereport(ERROR, 
nabh: nodetablefunction:00000169:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
nabh: nodetablefunction:00000170:  errmsg("function returning set of rows cannot return null value"))); 
nabh: nodetablefunction:00000213:  ereport(ERROR, 
nabh: nodetablefunction:00000214:  (errcode(ERRCODE_E_R_I_E_SRF_PROTOCOL_VIOLATED), 
nabh: nodetablefunction:00000215:  errmsg("invalid tuple returned from table function"), 
nabh: nodetablefunction:00000216:  errdetail("Returned tuple does not match output " 
nabh: nodetablefunction:00000217:  "tuple descriptor."))); 
nabh: nodetablefunction:00000340:  elog(ERROR, "table function expression is not a function expression"); 
nabh: nodetablefunction:00000385:  elog(ERROR, "table function has unsupported return type"); 
nabh: nodetablefunction:00000472:  elog(ERROR, "invalid rescan of TableFunctionScan"); 
nabh: nodetablefunction:00000502:  ereport(ERROR, 
nabh: nodetablefunction:00000503:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
nabh: nodetablefunction:00000504:  errmsg("invalid null value for anytable type"))); 
nabh: nodetablefunction:00000519:  ereport(ERROR, 
nabh: nodetablefunction:00000520:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
nabh: nodetablefunction:00000521:  errmsg("invalid null value for anytable type"))); 
nabh: nodetablefunction:00000552:  ereport(ERROR, 
nabh: nodetablefunction:00000553:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
nabh: nodetablefunction:00000554:  errmsg("expected RangeTblEntry node, found %d", 
nabh: nodetablefunction:00000555:  fcinfo->context ? nodeTag(fcinfo->context) : 0))); 
nabh: nodetablefunction:00000573:  ereport(ERROR, 
nabh: nodetablefunction:00000574:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
nabh: nodetablefunction:00000575:  errmsg("expected TableFunctionState node, found %d", 
nabh: nodetablefunction:00000576:  fcinfo->context ? nodeTag(fcinfo->context) : 0))); 
aaaaa GP_IGNORE: nabb: nodetidscan - ./backend/executor/nodeTidscan.c
nabb: nodetidscan:00000094:  elog(ERROR, "could not identify CTID variable"); 
nabb: nodetidscan:00000164:  elog(ERROR, "could not identify CTID expression"); 
aaaaa GP_IGNORE: naba: nodewindow - ./backend/executor/nodeWindow.c
naba: nodewindow:00002632:  ereport(ERROR, 
naba: nodewindow:00002633:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
naba: nodewindow:00002634:  errmsg("aggregate %u needs to have compatible " 
naba: nodewindow:00002635:  "input type and transition type", 
naba: nodewindow:00002636:  winref->winfnoid))); 
naba: nodewindow:00002660:  elog(ERROR, "cache lookup failed for window function %u", 
naba: nodewindow:00002661:  winref->winfnoid); 
naba: nodewindow:00002770:  ereport(ERROR, 
naba: nodewindow:00002771:  (errcode(ERRCODE_INTERNAL_ERROR), 
naba: nodewindow:00002772:  errmsg("inappropriate use of function as window function"))); 
naba: nodewindow:00003936:  ereport(ERROR, 
naba: nodewindow:00003937:  (errcode(ERROR_INVALID_WINDOW_FRAME_PARAMETER), 
naba: nodewindow:00003938:  errmsg("%s parameter cannot be NULL", 
naba: nodewindow:00003939:  (is_rows ? "ROWS" : "RANGE")))); 
naba: nodewindow:00003950:  ereport(ERROR, 
naba: nodewindow:00003951:  (errcode(ERROR_INVALID_WINDOW_FRAME_PARAMETER), 
naba: nodewindow:00003952:  errmsg("%s parameter cannot be NULL", 
naba: nodewindow:00003953:  (is_rows ? "ROWS" : "RANGE")))); 
naba: nodewindow:00003956:  ereport(ERROR, 
naba: nodewindow:00003957:  (errcode(ERROR_INVALID_WINDOW_FRAME_PARAMETER), 
naba: nodewindow:00003958:  errmsg("%s parameter cannot be negative", 
naba: nodewindow:00003959:  (is_rows ? "ROWS" : "RANGE")), 
naba: nodewindow:00003960:  errOmitLocation(true))); 
naba: nodewindow:00003965:  ereport(ERROR, 
naba: nodewindow:00003966:  (errcode(ERROR_INVALID_WINDOW_FRAME_PARAMETER), 
naba: nodewindow:00003967:  errmsg("%s parameter cannot be negative", 
naba: nodewindow:00003968:  (is_rows ? "ROWS" : "RANGE")), 
naba: nodewindow:00003969:  errOmitLocation(true))); 
naba: nodewindow:00005211:  ereport(ERROR, 
naba: nodewindow:00005212:  (errcode(ERRCODE_DATA_EXCEPTION), 
naba: nodewindow:00005213:  errmsg("can't coerce trailing frame bound to type of leading frame bound"), 
naba: nodewindow:00005214:  errhint("specify the leading and trailing frame bounds as the same type"), 
naba: nodewindow:00005215:  errOmitLocation(true))); 
naba: nodewindow:00005231:  ereport(ERROR, 
naba: nodewindow:00005232:  (errcode(ERRCODE_DATA_EXCEPTION), 
naba: nodewindow:00005233:  errmsg("can't coerce leading frame bound to type of trailing frame bound"), 
naba: nodewindow:00005234:  errhint("specify the leading and trailing frame bounds as the same type"), 
naba: nodewindow:00005235:  errOmitLocation(true))); 
naba: nodewindow:00005737:  ereport(ERROR, 
naba: nodewindow:00005738:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
naba: nodewindow:00005739:  errmsg("aggregate functions with no prelimfn or " 
naba: nodewindow:00005740:  "invprelimfn are not yet supported as window functions"), 
naba: nodewindow:00005741:  errOmitLocation(true))); 
naba: nodewindow:00005966:  ereport(ERROR, 
naba: nodewindow:00005967:  (errcode(ERRCODE_SYNTAX_ERROR), 
naba: nodewindow:00005968:  errmsg("function %s may only be called as a window function", 
naba: nodewindow:00005969:  format_procedure(fcinfo->flinfo->fn_oid)), 
naba: nodewindow:00005970:  errhint("To call a function as a window function use an OVER clause."), 
naba: nodewindow:00005971:  errOmitLocation(true)) 
naba: nodewindow:00005972:  ); 
naba: nodewindow:00006080:  ereport(ERROR, 
naba: nodewindow:00006081:  (errcode(ERRCODE_DATA_EXCEPTION), 
naba: nodewindow:00006082:  errmsg("arguments invalid or inconsistent"), 
naba: nodewindow:00006083:  errhint("inappropriate call to window function implementation"), 
naba: nodewindow:00006084:  errOmitLocation(true))); 
naba: nodewindow:00006097:  ereport(ERROR, 
naba: nodewindow:00006098:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naba: nodewindow:00006099:  errmsg("value out of range: overflow"), 
naba: nodewindow:00006100:  errOmitLocation(true))); 
naba: nodewindow:00006139:  ereport(ERROR, 
naba: nodewindow:00006140:  (errcode(ERRCODE_DATA_EXCEPTION), 
naba: nodewindow:00006141:  errmsg("arguments invalid or inconsistent"), 
naba: nodewindow:00006142:  errhint("inappropriate call to window function implementation"))); 
naba: nodewindow:00006155:  ereport(ERROR, 
naba: nodewindow:00006156:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naba: nodewindow:00006157:  errmsg("value out of range: overflow"))); 
naba: nodewindow:00006194:  ereport(ERROR, 
naba: nodewindow:00006195:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naba: nodewindow:00006196:  errmsg("argument value out of range"), 
naba: nodewindow:00006197:  errhint("NTILE expects a positive integer argument."))); 
naba: nodewindow:00006273:  elog(ERROR, "expected 2-element int8 array"); 
naba: nodewindow:00006321:  elog(ERROR, "LEAD offset cannot be NULL"); 
naba: nodewindow:00006323:  elog(ERROR, "LAG offset cannot be NULL"); 
naba: nodewindow:00006335:  ereport(ERROR, 
naba: nodewindow:00006336:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
naba: nodewindow:00006337:  errmsg("%s offset cannot be negative", 
naba: nodewindow:00006338:  is_lead ? "LEAD" : "LAG"), 
naba: nodewindow:00006339:  errOmitLocation(true))); 
aaaaa GP_IGNORE: saad: spi - ./backend/executor/spi.c
saad: spi:00000244:  ereport(WARNING, 
saad: spi:00000245:  (errcode(ERRCODE_WARNING), 
saad: spi:00000246:  errmsg("transaction left non-empty SPI stack"), 
saad: spi:00000247:  errhint("Check for missing \"SPI_finish\" calls."))); 
saad: spi:00000273:  elog(NOTICE, "%s", PQerrorMessage(_QD_conn)); 
saad: spi:00000355:  ereport(WARNING, 
saad: spi:00000356:  (errcode(ERRCODE_WARNING), 
saad: spi:00000357:  errmsg("subtransaction left non-empty SPI stack"), 
saad: spi:00000358:  errhint("Check for missing \"SPI_finish\" calls."))); 
saad: spi:00000986:  ereport(ERROR, 
saad: spi:00000987:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
saad: spi:00000988:  errmsg("cannot run the query %s, since it requires dispatch from segments.", 
saad: spi:00000989:  spiplan->query))); 
saad: spi:00001007:  ereport(ERROR, 
saad: spi:00001008:  (errcode(ERRCODE_INVALID_CURSOR_DEFINITION), 
saad: spi:00001009:  errmsg("cannot open multi-query plan as cursor"))); 
saad: spi:00001012:  ereport(ERROR, 
saad: spi:00001013:  (errcode(ERRCODE_INVALID_CURSOR_DEFINITION), 
saad: spi:00001014:  errmsg("cannot open empty query as cursor"))); 
saad: spi:00001015:  ereport(ERROR, 
saad: spi:00001016:  (errcode(ERRCODE_INVALID_CURSOR_DEFINITION), 
saad: spi:00001017:  /* translator: %s is name of a SQL command, eg INSERT */ 
saad: spi:00001018:  errmsg("cannot open %s query as cursor", 
saad: spi:00001019:  CreateCommandTag((Node*)queryTree)))); 
saad: spi:00001040:  ereport(ERROR, 
saad: spi:00001041:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
saad: spi:00001042:  /* translator: %s is a SQL statement name */ 
saad: spi:00001043:  errmsg("%s is not allowed in a non-volatile function", 
saad: spi:00001044:  CreateCommandTag((Node*)qry)))); 
saad: spi:00001588:  ereport(ERROR, 
saad: spi:00001589:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
saad: spi:00001590:  errmsg("cannot run the query %s, since it requires dispatch from segments.", 
saad: spi:00001591:  plan->query))); 
saad: spi:00001707:  ereport(ERROR, 
saad: spi:00001708:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
saad: spi:00001709:  /* translator: %s is a SQL statement name */ 
saad: spi:00001710:  errmsg("%s is not allowed in a non-volatile function", 
saad: spi:00001711:  CreateCommandTag((Node*)queryTree)))); 
aaaaa GP_IGNORE: faah: foreign - ./backend/foreign/foreign.c
faah: foreign:00000055:  elog(ERROR, "cache lookup failed for foreign-data wrapper %u", fdwid); 
faah: foreign:00000092:  ereport(ERROR, 
faah: foreign:00000093:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
faah: foreign:00000094:  errmsg("foreign-data wrapper \"%s\" does not exist", fdwname), 
faah: foreign:00000095:  errOmitLocation(true))); 
faah: foreign:00000134:  elog(ERROR, "cache lookup failed for foreign server %u", serverid); 
faah: foreign:00000186:  ereport(ERROR, 
faah: foreign:00000187:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
faah: foreign:00000188:  errmsg("server \"%s\" does not exist", srvname), 
faah: foreign:00000189:  errOmitLocation(true))); 
faah: foreign:00000240:  ereport(ERROR, 
faah: foreign:00000241:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
faah: foreign:00000242:  errmsg("user mapping not found for \"%s\"", 
faah: foreign:00000243:  MappingUserName(userid)), 
faah: foreign:00000244:  errOmitLocation(true))); 
faah: foreign:00000282:  ereport(ERROR, 
faah: foreign:00000283:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
faah: foreign:00000284:  errmsg("set-valued function called in context that cannot accept a set"), 
faah: foreign:00000285:  errOmitLocation(true))); 
faah: foreign:00000288:  ereport(ERROR, 
faah: foreign:00000289:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
faah: foreign:00000290:  errmsg("materialize mode required, but it is not allowed in this context"), 
faah: foreign:00000291:  errOmitLocation(true))); 
faah: foreign:00000423:  ereport(ERROR, 
faah: foreign:00000424:  (errcode(ERRCODE_SYNTAX_ERROR), 
faah: foreign:00000425:  errmsg("invalid option \"%s\"", def->defname), 
faah: foreign:00000426:  errhint("Valid options in this context are: %s", buf.data), 
faah: foreign:00000427:  errOmitLocation(true))); 
aaaaa GP_IGNORE: faad: fts - ./backend/fts/fts.c
faad: fts:00000325:  ereport(FATAL, (errcode(ERRCODE_UNDEFINED_DATABASE), 
faad: fts:00000326:  errmsg("database 'postgres' does not exist"))); 
faad: fts:00000352:  elog(FATAL, "bad backend id: %d", MyBackendId); 
faad: fts:00001204:  ereport(LOG, 
faad: fts:00001205:  (errmsg("FTS: resynchronization of mirror (dbid=%d, content=%d) on %s:%d has completed.", 
faad: fts:00001206:  mirror->dbid, mirror->segindex, mirror->address, mirror->port ), 
faad: fts:00001207:  errSendAlert(true))); 
faad: fts:00001247:  elog(FATAL, "FTS: detected invalid state for content=%d: " 
faad: fts:00001248:  "primary (dbid=%d, mode='%c', status='%c'), " 
faad: fts:00001249:  "mirror (dbid=%d, mode='%c', status='%c'), " 
faad: fts:00001250:  "shutting down master.", 
faad: fts:00001251:  primary->segindex, 
faad: fts:00001252:  primary->dbid, 
faad: fts:00001253:  primary->mode, 
faad: fts:00001254:  primary->status, 
faad: fts:00001255:  mirror->dbid, 
faad: fts:00001256:  mirror->mode, 
faad: fts:00001257:  mirror->status 
faad: fts:00001258:  ); 
faad: fts:00001279:  elog(FATAL, "FTS: failed to create self-connection buffer."); 
faad: fts:00001314:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
faad: fts:00001315:  errmsg("FTS: out of memory"))); 
faad: fts:00001321:  elog(FATAL, "FTS: failed to connect to entry-db, error: %s.", error_message); 
faad: fts:00001336:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
faad: fts:00001337:  errmsg("FTS: out of memory"))); 
faad: fts:00001343:  elog(FATAL, "FTS: failed to start transaction to entry-db, error: %s.", error_message); 
faad: fts:00001369:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
faad: fts:00001370:  errmsg("FTS: out of memory"))); 
faad: fts:00001376:  elog(FATAL, "FTS: query '%s' failed to execute to entry-db, error: %s.", 
faad: fts:00001377:  query, error_message); 
faad: fts:00001402:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
faad: fts:00001403:  errmsg("FTS: out of memory"))); 
faad: fts:00001409:  elog(FATAL, "FTS: connection to master failed to %s, error: %s.", stmt, error_message); 
aaaaa GP_IGNORE: faba: ftsfilerep - ./backend/fts/ftsfilerep.c
faba: ftsfilerep:00000489:  ereport(LOG, 
faba: ftsfilerep:00000490:  (errmsg("FTS: mirror (dbid=%d) on %s:%d taking over as primary in change-tracking mode.", 
faba: ftsfilerep:00000491:  dbid, seg_addr, seg_pm_port ), 
faba: ftsfilerep:00000492:  errSendAlert(true))); 
faba: ftsfilerep:00000495:  ereport(LOG, 
faba: ftsfilerep:00000496:  (errmsg("FTS: primary (dbid=%d) on %s:%d transitioning to change-tracking mode, mirror marked as down.", 
faba: ftsfilerep:00000497:  dbid, seg_addr, seg_pm_port ), 
faba: ftsfilerep:00000498:  errSendAlert(true))); 
faba: ftsfilerep:00000536:  elog(ERROR, "FTS: failed to execute command: %s (%m).", cmd); 
faba: ftsfilerep:00000540:  elog(ERROR, "FTS: segment transition failed: %s (exit code %d).", cmd, cmd_status); 
faba: ftsfilerep:00000585:  elog(FATAL, "FTS: could not find entry for dbid %d.", dbid); 
aaaaa GP_IGNORE: faai: ftsprobe - ./backend/fts/ftsprobe.c
faai: ftsprobe:00000145:  elog(ERROR, "FTS: segment configuration has not been loaded to shared memory"); 
aaaaa GP_IGNORE: faag: ftssan - ./backend/fts/ftssan.c
faag: ftssan:00000339:  elog(ERROR, "getMounts_forDbid: failed dbid lookup in segment configuration"); 
faag: ftssan:00000371:  elog(FATAL, "Fault reponse error: %s IS NULL", #ATTR); \ 
faag: ftssan:00000372:  } 
faag: ftssan:00000373:  
faag: ftssan:00000374: #define get_config_attr(datum, ATTR, tuple, rel) get_heap_attr(datum, Anum_gp_segment_configuration_, ATTR, tuple, rel) 
faag: ftssan:00000375:  
faag: ftssan:00000376: static void 
faag: ftssan:00000377: startSegmentForDbid(int dbid) 
faag: ftssan:00000378: { 
faag: ftssan:00000379:  Relation conf_rel, fse_rel; 
faag: ftssan:00000411:  elog(ERROR, "startSegment_forDbid: failed dbid lookup in segment configuration"); 
faag: ftssan:00000438:  elog(ERROR, "filespace lookup failure for dbid %d", dbid); 
faag: ftssan:00000477:  ereport(LOG, 
faag: ftssan:00000478:  (errmsg("SAN mirror segment on %s:%d is taking over as primary.", 
faag: ftssan:00000479:  host, port ), 
faag: ftssan:00000480:  errSendAlert(true))); 
faag: ftssan:00000522:  elog(ERROR, "getMounts_forDbid: failed dbid lookup in segment configuration"); 
faag: ftssan:00000588:  elog(ERROR, "Could not issue command: %m"); 
faag: ftssan:00000593:  elog(ERROR, "gp_mount_agent failed!"); 
aaaaa GP_IGNORE: saba: stringinfo - ./backend/lib/stringinfo.c
saba: stringinfo:00000295:  elog(ERROR, "invalid string enlargement request size: %d", needed); 
saba: stringinfo:00000297:  ereport(ERROR, 
saba: stringinfo:00000298:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
saba: stringinfo:00000299:  errmsg("out of memory"), 
saba: stringinfo:00000300:  errdetail("Cannot enlarge string buffer containing %d bytes by %d more bytes.", 
saba: stringinfo:00000301:  str->len, needed))); 
aaaaa GP_IGNORE: gaae: gppc - ./backend/libgppc/lib/gppc.c
gaae: gppc:00000034:  elog(ERROR, "unexpected value %d", (val == NULL ? 0 : nodeTag(val))); \ 
gaae: gppc:00000035: } while(0) 
gaae: gppc:00000036:  
gaae: gppc:00000037: /* 
gaae: gppc:00000038:  * libgppc.so has PG_MODULE_MAGIC, user libraries don't. Linking 
gaae: gppc:00000039:  * to libgppc, user libraries can be loaded by the backend. 
gaae: gppc:00000040:  */ 
gaae: gppc:00000041: PG_MODULE_MAGIC; 
gaae: gppc:00000047:  elog(ERROR, "requested invalid attno(%d)", (attno)); \ 
gaae: gppc:00000048:  if ((tupdesc) == NULL) \ 
gaae: gppc:00000049:  elog(ERROR, "tuple desc is null"); \ 
gaae: gppc:00000050:  if (((TupleDesc) (tupdesc))->natts <= (attno)) \ 
gaae: gppc:00000051:  elog(ERROR, "requested attno(%d) over tuple desc length(%d)", \ 
gaae: gppc:00000052:  (attno), ((TupleDesc) (tupdesc))->natts); \ 
gaae: gppc:00000053: }while(0) 
gaae: gppc:00000054:  
gaae: gppc:00000055: typedef struct GppcReportCallbackStateData 
gaae: gppc:00000056: { 
gaae: gppc:00000057:  ErrorContextCallback errcontext; 
gaae: gppc:00000721:  elog(ERROR, "failed to convert timestamp"); 
gaae: gppc:00000738:  elog(ERROR, "failed to convert to timestamp"); 
aaaaa GP_IGNORE: aaae: auth - ./backend/libpq/auth.c
aaae: auth:00000322:  ereport(FATAL, 
aaae: auth:00000323:  (errcode(errcode_return), 
aaae: auth:00000324:  errmsg(errstr, port->user_name))); 
aaae: auth:00000451:  ereport(FATAL, 
aaae: auth:00000452:  (errcode(ERRCODE_CONFIG_FILE_ERROR), 
aaae: auth:00000453:  errmsg("missing or erroneous pg_hba.conf file"), 
aaae: auth:00000454:  errhint("See server log for details."))); 
aaae: auth:00000482:  ereport(FATAL, 
aaae: auth:00000483:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
aaae: auth:00000484:  errmsg("connection requires a valid client certificate"))); 
aaae: auth:00000525:  ereport(FATAL, 
aaae: auth:00000526:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
aaae: auth:00000527:  errmsg("pg_hba.conf rejects replication connection for host \"%s\", user \"%s\", %s", 
aaae: auth:00000528:  hostinfo, port->user_name, 
aaae: auth:00000529:  port->ssl ? _("SSL on") : _("SSL off")))); 
aaae: auth:00000531:  ereport(FATAL, 
aaae: auth:00000532:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
aaae: auth:00000533:  errmsg("pg_hba.conf rejects replication connection for host \"%s\", user \"%s\"", 
aaae: auth:00000534:  hostinfo, port->user_name))); 
aaae: auth:00000541:  ereport(FATAL, 
aaae: auth:00000542:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
aaae: auth:00000543:  errmsg("pg_hba.conf rejects connection for host \"%s\", user \"%s\", database \"%s\", %s", 
aaae: auth:00000544:  hostinfo, port->user_name, 
aaae: auth:00000545:  port->database_name, 
aaae: auth:00000546:  port->ssl ? _("SSL on") : _("SSL off")), 
aaae: auth:00000547:  errSendAlert(false))); 
aaae: auth:00000549:  ereport(FATAL, 
aaae: auth:00000550:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
aaae: auth:00000551:  errmsg("pg_hba.conf rejects connection for host \"%s\", user \"%s\", database \"%s\"", 
aaae: auth:00000552:  hostinfo, port->user_name, 
aaae: auth:00000553:  port->database_name) 
aaae: auth:00000554:  errSendAlert(false))); 
aaae: auth:00000582:  ereport(FATAL, 
aaae: auth:00000583:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
aaae: auth:00000584:  errmsg("no pg_hba.conf entry for replication connection from host \"%s\", user \"%s\", %s", 
aaae: auth:00000585:  hostinfo, port->user_name, 
aaae: auth:00000586:  port->ssl ? _("SSL on") : _("SSL off")))); 
aaae: auth:00000588:  ereport(FATAL, 
aaae: auth:00000589:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
aaae: auth:00000590:  errmsg("no pg_hba.conf entry for replication connection from host \"%s\", user \"%s\"", 
aaae: auth:00000591:  hostinfo, port->user_name))); 
aaae: auth:00000598:  ereport(FATAL, 
aaae: auth:00000599:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
aaae: auth:00000600:  errmsg("no pg_hba.conf entry for host \"%s\", user \"%s\", database \"%s\", %s", 
aaae: auth:00000601:  hostinfo, port->user_name, 
aaae: auth:00000602:  port->database_name, 
aaae: auth:00000603:  port->ssl ? _("SSL on") : _("SSL off")))); 
aaae: auth:00000605:  ereport(FATAL, 
aaae: auth:00000606:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
aaae: auth:00000607:  errmsg("no pg_hba.conf entry for host \"%s\", user \"%s\", database \"%s\"", 
aaae: auth:00000608:  hostinfo, port->user_name, 
aaae: auth:00000609:  port->database_name))); 
aaae: auth:00000663:  ereport(FATAL, 
aaae: auth:00000664:  (errcode_for_socket_access(), 
aaae: auth:00000665:  errmsg("could not enable credential reception: %m"))); 
aaae: auth:00000676:  ereport(FATAL, 
aaae: auth:00000677:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
aaae: auth:00000678:  errmsg("MD5 authentication is not supported when \"db_user_namespace\" is enabled"))); 
aaae: auth:00000721:  ereport(FATAL, 
aaae: auth:00000722:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
aaae: auth:00000723:  errmsg("authentication failed for user \"%s\": login not permitted at this time", port->user_name))); 
aaae: auth:00001110:  ereport(WARNING, 
aaae: auth:00001111:  (errmsg_internal("incomplete GSS error report"))); 
aaae: auth:00001121:  ereport(WARNING, 
aaae: auth:00001122:  (errmsg_internal("incomplete GSS minor error report"))); 
aaae: auth:00001154:  ereport(FATAL, 
aaae: auth:00001155:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaae: auth:00001156:  errmsg("GSSAPI is not supported in protocol version 2"))); 
aaae: auth:00001415:  ereport(FATAL, 
aaae: auth:00001416:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaae: auth:00001417:  errmsg("SSPI is not supported in protocol version 2"))); 
aaae: auth:00001528:  ereport(ERROR, 
aaae: auth:00001529:  (errmsg("out of memory"))); 
aaae: auth:00001558:  ereport(ERROR, 
aaae: auth:00001559:  (errmsg_internal("could not load secur32.dll: %d", 
aaae: auth:00001560:  (int) GetLastError()))); 
aaae: auth:00001567:  ereport(ERROR, 
aaae: auth:00001568:  (errmsg_internal("could not locate QuerySecurityContextToken in secur32.dll: %d", 
aaae: auth:00001569:  (int) GetLastError()))); 
aaae: auth:00001590:  ereport(ERROR, 
aaae: auth:00001591:  (errmsg_internal("could not get token user size: error code %d", 
aaae: auth:00001592:  (int) GetLastError()))); 
aaae: auth:00001596:  ereport(ERROR, 
aaae: auth:00001597:  (errmsg("out of memory"))); 
aaae: auth:00001600:  ereport(ERROR, 
aaae: auth:00001601:  (errmsg_internal("could not get user token: error code %d", 
aaae: auth:00001602:  (int) GetLastError()))); 
aaae: auth:00001606:  ereport(ERROR, 
aaae: auth:00001607:  (errmsg_internal("could not lookup acconut sid: error code %d", 
aaae: auth:00001608:  (int) GetLastError()))); 
aaae: auth:00002747:  elog(WARNING, 
aaae: auth:00002748:  "Adding attribute code %i with length %i to radius packet would create oversize packet, ignoring", 
aaae: auth:00002749:  type, len); 
aaae: auth:00003130:  ereport(FATAL, 
aaae: auth:00003131:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
aaae: auth:00003132:  errmsg("current timestamp out of range"))); 
aaaaa GP_IGNORE: baba: bexfsstubs - ./backend/libpq/be-fsstubs.c
baba: bexfsstubs:00000130:  ereport(ERROR, 
baba: bexfsstubs:00000131:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
baba: bexfsstubs:00000132:  errmsg("invalid large-object descriptor: %d", fd))); 
baba: bexfsstubs:00000160:  ereport(ERROR, 
baba: bexfsstubs:00000161:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
baba: bexfsstubs:00000162:  errmsg("invalid large-object descriptor: %d", fd))); 
baba: bexfsstubs:00000171:  ereport(ERROR, 
baba: bexfsstubs:00000172:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
baba: bexfsstubs:00000173:  errmsg("permission denied for large object %u", 
baba: bexfsstubs:00000174:  cookies[fd]->id))); 
baba: bexfsstubs:00000188:  ereport(ERROR, 
baba: bexfsstubs:00000189:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
baba: bexfsstubs:00000190:  errmsg("invalid large-object descriptor: %d", fd))); 
baba: bexfsstubs:00000193:  ereport(ERROR, 
baba: bexfsstubs:00000194:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
baba: bexfsstubs:00000195:  errmsg("large object descriptor %d was not opened for writing", 
baba: bexfsstubs:00000196:  fd))); 
baba: bexfsstubs:00000205:  ereport(ERROR, 
baba: bexfsstubs:00000206:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
baba: bexfsstubs:00000207:  errmsg("permission denied for large object %u", 
baba: bexfsstubs:00000208:  cookies[fd]->id))); 
baba: bexfsstubs:00000226:  ereport(ERROR, 
baba: bexfsstubs:00000227:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
baba: bexfsstubs:00000228:  errmsg("invalid large-object descriptor: %d", fd))); 
baba: bexfsstubs:00000273:  ereport(ERROR, 
baba: bexfsstubs:00000274:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
baba: bexfsstubs:00000275:  errmsg("invalid large-object descriptor: %d", fd))); 
baba: bexfsstubs:00000289:  ereport(ERROR, 
baba: bexfsstubs:00000290:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
baba: bexfsstubs:00000291:  errmsg("must be owner of large object %u", lobjId))); 
baba: bexfsstubs:00000395:  ereport(ERROR, 
baba: bexfsstubs:00000396:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
baba: bexfsstubs:00000397:  errmsg("must be superuser to use server-side lo_import()"), 
baba: bexfsstubs:00000398:  errhint("Anyone can use the client-side lo_import() provided by libpq."))); 
baba: bexfsstubs:00000409:  ereport(ERROR, 
baba: bexfsstubs:00000410:  (errcode_for_file_access(), 
baba: bexfsstubs:00000411:  errmsg("could not open server file \"%s\": %m", 
baba: bexfsstubs:00000412:  fnamebuf))); 
baba: bexfsstubs:00000431:  ereport(ERROR, 
baba: bexfsstubs:00000432:  (errcode_for_file_access(), 
baba: bexfsstubs:00000433:  errmsg("could not read server file \"%s\": %m", 
baba: bexfsstubs:00000434:  fnamebuf))); 
baba: bexfsstubs:00000461:  ereport(ERROR, 
baba: bexfsstubs:00000462:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
baba: bexfsstubs:00000463:  errmsg("must be superuser to use server-side lo_export()"), 
baba: bexfsstubs:00000464:  errhint("Anyone can use the client-side lo_export() provided by libpq."))); 
baba: bexfsstubs:00000486:  ereport(ERROR, 
baba: bexfsstubs:00000487:  (errcode_for_file_access(), 
baba: bexfsstubs:00000488:  errmsg("could not create server file \"%s\": %m", 
baba: bexfsstubs:00000489:  fnamebuf))); 
baba: bexfsstubs:00000498:  ereport(ERROR, 
baba: bexfsstubs:00000499:  (errcode_for_file_access(), 
baba: bexfsstubs:00000500:  errmsg("could not write server file \"%s\": %m", 
baba: bexfsstubs:00000501:  fnamebuf))); 
baba: bexfsstubs:00000521:  ereport(ERROR, 
baba: bexfsstubs:00000522:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
baba: bexfsstubs:00000523:  errmsg("invalid large-object descriptor: %d", fd))); 
baba: bexfsstubs:00000532:  ereport(ERROR, 
baba: bexfsstubs:00000533:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
baba: bexfsstubs:00000534:  errmsg("permission denied for large object %u", 
baba: bexfsstubs:00000535:  cookies[fd]->id))); 
aaaaa GP_IGNORE: baaj: bexsecure - ./backend/libpq/be-secure.c
baaj: bexsecure:00000763:  ereport(FATAL, 
baaj: bexsecure:00000764:  (errmsg("could not create SSL context: %s", 
baaj: bexsecure:00000765:  SSLerrmessage()))); 
baaj: bexsecure:00000772:  ereport(FATAL, 
baaj: bexsecure:00000773:  (errcode(ERRCODE_CONFIG_FILE_ERROR), 
baaj: bexsecure:00000774:  errmsg("could not load server certificate file \"%s\": %s", 
baaj: bexsecure:00000775:  SERVER_CERT_FILE, SSLerrmessage()))); 
baaj: bexsecure:00000778:  ereport(FATAL, 
baaj: bexsecure:00000779:  (errcode_for_file_access(), 
baaj: bexsecure:00000780:  errmsg("could not access private key file \"%s\": %m", 
baaj: bexsecure:00000781:  SERVER_PRIVATE_KEY_FILE))); 
baaj: bexsecure:00000793:  ereport(FATAL, 
baaj: bexsecure:00000794:  (errcode(ERRCODE_CONFIG_FILE_ERROR), 
baaj: bexsecure:00000795:  errmsg("private key file \"%s\" has group or world access", 
baaj: bexsecure:00000796:  SERVER_PRIVATE_KEY_FILE), 
baaj: bexsecure:00000797:  errdetail("Permissions should be u=rw (0600) or less."))); 
baaj: bexsecure:00000803:  ereport(FATAL, 
baaj: bexsecure:00000804:  (errmsg("could not load private key file \"%s\": %s", 
baaj: bexsecure:00000805:  SERVER_PRIVATE_KEY_FILE, SSLerrmessage()))); 
baaj: bexsecure:00000808:  ereport(FATAL, 
baaj: bexsecure:00000809:  (errmsg("check of private key failed: %s", 
baaj: bexsecure:00000810:  SSLerrmessage()))); 
baaj: bexsecure:00000819:  elog(FATAL, "could not set the cipher list (no valid ciphers available)"); 
baaj: bexsecure:00000836:  ereport(FATAL, 
baaj: bexsecure:00000837:  (errmsg("could not access root certificate file \"%s\": %m", 
baaj: bexsecure:00000838:  ROOT_CERT_FILE))); 
baaj: bexsecure:00000847:  ereport(FATAL, 
baaj: bexsecure:00000848:  (errmsg("could not load root certificate file \"%s\": %s", 
baaj: bexsecure:00000849:  ROOT_CERT_FILE, SSLerrmessage()))); 
aaaaa GP_IGNORE: caaf: crypt - ./backend/libpq/crypt.c
caaf: crypt:00000040:  elog(ERROR, 
caaf: crypt:00000041:  "unknown password hash algorithm number %d", 
caaf: crypt:00000042:  password_hash_algorithm); 
caaf: crypt:00000102:  ereport(FATAL, 
caaf: crypt:00000103:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
caaf: crypt:00000104:  errmsg("MD5 authentication is not supported with " 
caaf: crypt:00000105:  "SHA256 hashed passwords"), 
caaf: crypt:00000106:  errhint("Set an alternative authentication method " 
caaf: crypt:00000107:  "for this role in pg_hba.conf"))); 
aaaaa GP_IGNORE: haad: hba - ./backend/libpq/hba.c
haad: hba:00001829:  elog(FATAL, "bad data in flat pg_database file"); 
haad: hba:00001833:  elog(FATAL, "bad data in flat pg_database file"); 
haad: hba:00001837:  elog(FATAL, "bad data in flat pg_database file"); 
haad: hba:00001841:  elog(FATAL, "bad data in flat pg_database file"); 
haad: hba:00001845:  elog(FATAL, "bad data in flat pg_database file"); 
haad: hba:00001872:  elog(FATAL, "bad data in flat pg_filesystem file"); 
aaaaa GP_IGNORE: paaj: pgxshatwo - ./backend/libpq/pg_sha2.c
paaj: pgxshatwo:00000084:  ereport(ERROR, 
paaj: pgxshatwo:00000085:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paaj: pgxshatwo:00000086:  errmsg("FIPS certified SHA-256 is not supported on " 
paaj: pgxshatwo:00000087:  "this platform"))); 
aaaaa GP_IGNORE: paag: pqcomm - ./backend/libpq/pqcomm.c
paag: pqcomm:00000544:  elog(WARNING, "configuration item unix_socket_group is not supported on this platform"); 
paag: pqcomm:00000795:  elog(WARNING, "segment state transition requested while waiting to read data from socket"); 
paag: pqcomm:00000847:  elog(ERROR, "SSL connection cannot be used with pq_waitForDataUsingSelect"); 
paag: pqcomm:00000874:  elog(FATAL, "select failed: %m"); 
paag: pqcomm:00000942:  ereport(ERROR, 
paag: pqcomm:00000943:  (errmsg("could not set socket to non-blocking mode: %m"))); 
paag: pqcomm:00000988:  ereport(FATAL, 
paag: pqcomm:00000989:  (errmsg("could not set socket to blocking mode: %m"))); 
paag: pqcomm:00000999:  ereport(FATAL, 
paag: pqcomm:00001000:  (errmsg("could not set socket to blocking mode: %m"))); 
aaaaa GP_IGNORE: paai: pqformat - ./backend/libpq/pqformat.c
paai: pqformat:00000256:  elog(ERROR, "unsupported integer size %d", b); 
paai: pqformat:00000434:  ereport(ERROR, 
paai: pqformat:00000435:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: pqformat:00000436:  errmsg("no data left in message"))); 
paai: pqformat:00000469:  elog(ERROR, "unsupported integer size %d", b); 
paai: pqformat:00000554:  ereport(ERROR, 
paai: pqformat:00000555:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: pqformat:00000556:  errmsg("insufficient data left in message"))); 
paai: pqformat:00000572:  ereport(ERROR, 
paai: pqformat:00000573:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: pqformat:00000574:  errmsg("insufficient data left in message"))); 
paai: pqformat:00000593:  ereport(ERROR, 
paai: pqformat:00000594:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: pqformat:00000595:  errmsg("insufficient data left in message"))); 
paai: pqformat:00000634:  ereport(ERROR, 
paai: pqformat:00000635:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: pqformat:00000636:  errmsg("invalid string in message"))); 
paai: pqformat:00000650:  ereport(ERROR, 
paai: pqformat:00000651:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: pqformat:00000652:  errmsg("invalid message format"))); 
aaaaa GP_IGNORE: baaj: bitmapset - ./backend/nodes/bitmapset.c
baaj: bitmapset:00000250:  elog(ERROR, "negative bitmapset member not allowed"); 
baaj: bitmapset:00000414:  elog(ERROR, "negative bitmapset member not allowed"); 
baaj: bitmapset:00000491:  elog(ERROR, "bitmapset is empty"); 
baaj: bitmapset:00000500:  elog(ERROR, "bitmapset has multiple members"); 
baaj: bitmapset:00000505:  elog(ERROR, "bitmapset is empty"); 
baaj: bitmapset:00000636:  elog(ERROR, "negative bitmapset member not allowed"); 
baaj: bitmapset:00000674:  elog(ERROR, "negative bitmapset member not allowed"); 
aaaaa GP_IGNORE: caaj: copyfuncs - ./backend/nodes/copyfuncs.c
caaj: copyfuncs:00002227:  elog(ERROR, "unrecognized node type: %d", 
caaj: copyfuncs:00002228:  (int) from->val.type); 
caaj: copyfuncs:00004172:  elog(ERROR, "unrecognized node type: %d", 
caaj: copyfuncs:00004173:  (int) from->type); 
caaj: copyfuncs:00004980:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(from)); 
aaaaa GP_IGNORE: eaba: equalfuncs - ./backend/nodes/equalfuncs.c
eaba: equalfuncs:00002399:  elog(ERROR, "unrecognized list node type: %d", 
eaba: equalfuncs:00002400:  (int) a->type); 
eaba: equalfuncs:00002436:  elog(ERROR, "unrecognized node type: %d", (int) a->type); 
eaba: equalfuncs:00003050:  elog(ERROR, "unrecognized node type: %d", 
eaba: equalfuncs:00003051:  (int) nodeTag(a)); 
aaaaa GP_IGNORE: laae: list - ./backend/nodes/list.c
laae: list:00000328:  elog(ERROR, "cannot list_concat() a list to itself"); 
aaaaa GP_IGNORE: oaah: outfast - ./backend/nodes/outfast.c
oaah: outfast:00003201:  elog(ERROR, "unrecognized RTE kind: %d", (int) node->rtekind); 
oaah: outfast:00003295:  elog(ERROR, "unrecognized node type: %d", (int) value->type); 
oaah: outfast:00003392:  elog(WARNING,"serialization doesn't know what to do with this constraint"); 
oaah: outfast:00004481:  elog(ERROR, "could not serialize unrecognized node type: %d", 
oaah: outfast:00004482:  (int) nodeTag(obj)); 
aaaaa GP_IGNORE: oaai: outfuncs - ./backend/nodes/outfuncs.c
oaai: outfuncs:00000201:  elog(ERROR, "unrecognized list node type: %d", 
oaai: outfuncs:00000202:  (int) node->type); 
oaai: outfuncs:00003421:  elog(ERROR, "unrecognized RTE kind: %d", (int) node->rtekind); 
oaai: outfuncs:00003520:  elog(ERROR, "unrecognized node type: %d", (int) value->type); 
oaai: outfuncs:00004675:  elog(WARNING, "could not dump unrecognized node type: %d", 
oaai: outfuncs:00004676:  (int) nodeTag(obj)); 
aaaaa GP_IGNORE: raae: read - ./backend/nodes/read.c
raae: read:00000329:  ereport(ERROR, (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
raae: read:00000330:  errmsg("This operation requires a feature " 
raae: read:00000331:  "called \"%.*s\" which is not " 
raae: read:00000332:  "supported in this version of %s.", 
raae: read:00000333:  tok_len, token, PACKAGE_NAME) 
raae: read:00000334:  )); 
raae: read:00000353:  elog(ERROR, "did not find '}' at end of input node"); 
raae: read:00000355:  elog(ERROR, "did not find '}' at end of input node, instead found %s",token); 
raae: read:00000369:  elog(ERROR, "unterminated List structure"); 
raae: read:00000380:  elog(ERROR, "unterminated List structure"); 
raae: read:00000385:  elog(ERROR, "unrecognized integer: \"%.*s\"", 
raae: read:00000386:  tok_len, token); 
raae: read:00000400:  elog(ERROR, "unterminated List structure"); 
raae: read:00000405:  elog(ERROR, "unrecognized OID: \"%.*s\"", 
raae: read:00000406:  tok_len, token); 
raae: read:00000421:  elog(ERROR, "unterminated List structure"); 
raae: read:00000428:  elog(ERROR, "unexpected right parenthesis"); 
raae: read:00000439:  elog(ERROR, "unrecognized token: \"%.*s\"", tok_len, token); 
raae: read:00000474:  elog(ERROR, "unrecognized node type: %d", (int) type); 
raae: read:00000495:  elog(ERROR, "did not find expected token"); 
raae: read:00000511:  elog(ERROR, "did not find expected token, instead found %s", token); 
raae: read:00000535:  elog(ERROR, "did not find '%c' as expected", closingDelimiter); 
raae: read:00000552:  elog(ERROR, "did not find '%c' as expected, instead found %s", 
raae: read:00000553:  closingDelimiter, token); 
aaaaa GP_IGNORE: raai: readfast - ./backend/nodes/readfast.c
raai: readfast:00000656:  elog(WARNING,"Can't deserialize constraint %d",(int)local_node->contype); 
raai: readfast:00001205:  elog(ERROR,"Unable to understand A_Expr node "); 
raai: readfast:00001921:  elog(ERROR, "unrecognized RTE kind: %d", 
raai: readfast:00001922:  (int) local_node->rtekind); 
raai: readfast:00003868:  elog(ERROR, "unknown Value node type %i", nt); 
raai: readfast:00004679:  elog(ERROR, "could not deserialize unrecognized node type: %d", 
raai: readfast:00004680:  (int) nt); 
raai: readfast:00004698:  elog(ERROR,"Deserialization lost sync."); 
aaaaa GP_IGNORE: raaj: readfuncs - ./backend/nodes/readfuncs.c
raaj: readfuncs:00001300:  elog(ERROR,"Deserialization problem: A_Const not string, bitstring, float, or int"); 
raaj: readfuncs:00001372:  elog(ERROR,"Unable to understand A_Expr node %.30s",token); 
raaj: readfuncs:00001615:  elog(ERROR, "unrecognized boolop \"%.*s\"", length, token); 
raaj: readfuncs:00002111:  elog(ERROR, "unrecognized RTE kind: %d", 
raaj: readfuncs:00002112:  (int) local_node->rtekind); 
raaj: readfuncs:00003190:  ereport(ERROR, (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
raaj: readfuncs:00003191:  errmsg("This operation involves an internal data item " 
raaj: readfuncs:00003192:  "of a type called \"%.*s\" which is not " 
raaj: readfuncs:00003193:  "supported in this version of %s.", 
raaj: readfuncs:00003194:  length, token, PACKAGE_NAME) 
raaj: readfuncs:00003195:  )); 
raaj: readfuncs:00003236:  elog(ERROR, "expected \"[\" to start datum, but got \"%s\"; length = %lu", 
raaj: readfuncs:00003237:  token ? (const char *) token : "[NULL]", 
raaj: readfuncs:00003238:  (unsigned long) length); 
raaj: readfuncs:00003243:  elog(ERROR, "byval datum but length = %lu", 
raaj: readfuncs:00003244:  (unsigned long) length); 
raaj: readfuncs:00003268:  elog(ERROR, "expected \"]\" to end datum, but got \"%s\"; length = %lu", 
raaj: readfuncs:00003269:  token ? (const char *) token : "[NULL]", 
raaj: readfuncs:00003270:  (unsigned long) length); 
aaaaa GP_IGNORE: taaj: tidbitmap - ./backend/nodes/tidbitmap.c
taaj: tidbitmap:00000277: // elog(ERROR, "tuple offset out of range: %u", off); 
taaj: tidbitmap:00000431:  elog(ERROR, "hash table corrupted"); 
taaj: tidbitmap:00000630:  elog(ERROR, "unrecoganized node type"); 
taaj: tidbitmap:00001140:  elog(ERROR, "unknown stream type %i", (int)n->type); 
aaaaa GP_IGNORE: aaai: allpaths - ./backend/optimizer/path/allpaths.c
aaai: allpaths:00000351:  elog(ERROR, "plan contains range table with relstorage='%c'", relstorage); 
aaai: allpaths:00000436:  ereport(ERROR, 
aaai: allpaths:00000437:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaai: allpaths:00000438:  errmsg("SELECT FOR UPDATE/SHARE is not supported for inheritance queries"))); 
aaai: allpaths:00001033:  elog(ERROR, "unrecognized joinlist node type: %d", 
aaai: allpaths:00001034:  (int) nodeTag(jlnode)); 
aaai: allpaths:00001357:  elog(ERROR, "unrecognized node type: %d", 
aaai: allpaths:00001358:  (int) nodeTag(setOp)); 
aaai: allpaths:00001386:  elog(ERROR, "wrong number of tlist entries"); 
aaai: allpaths:00001392:  elog(ERROR, "wrong number of tlist entries"); 
aaai: allpaths:00001592:  elog(ERROR, "unrecognized node type: %d", 
aaai: allpaths:00001593:  (int) nodeTag(setOp)); 
aaai: allpaths:00001610:  ereport(ERROR, (errcode(ERRCODE_GP_FEATURE_NOT_CONFIGURED), 
aaai: allpaths:00001611:  errmsg("Query requires a feature that has been disabled " 
aaai: allpaths:00001612:  "by a configuration setting."), 
aaai: allpaths:00001613:  errdetail("Could not devise a query plan for the given query."), 
aaai: allpaths:00001614:  errhint("Current settings: %s", buf.data) 
aaai: allpaths:00001615:  )); 
aaai: allpaths:00001617:  elog(ERROR, "Could not devise a query plan for the given query."); 
aaaaa GP_IGNORE: caai: costsize - ./backend/optimizer/path/costsize.c
caai: costsize:00000600:  elog(ERROR, "unrecognized node type: %d", nodeTag(bitmapqual)); 
caai: costsize:00000949:  elog(ERROR, "unrecognized node type: %d", nodeTag(path)); 
caai: costsize:00002268:  elog(ERROR, "cannot handle unplanned sub-select"); 
caai: costsize:00002667:  elog(ERROR, "unrecognized join type: %d", (int) jointype); 
aaaaa GP_IGNORE: iaai: indxpath - ./backend/optimizer/path/indxpath.c
iaai: indxpath:00000149:  elog(ERROR, "unrecognized relstorage type %d for using bitmap scan path", 
iaai: indxpath:00000150:  relstorage); 
iaai: indxpath:00001041:  elog(ERROR, "unrecognized node type: %d", nodeTag(bitmapqual)); 
iaai: indxpath:00002199:  elog(ERROR, "wrong number of index expressions"); 
iaai: indxpath:00002204:  elog(ERROR, "wrong number of index expressions"); 
iaai: indxpath:00002545:  elog(ERROR, "unsupported indexqual type: %d", 
iaai: indxpath:00002546:  (int) nodeTag(clause)); 
iaai: indxpath:00002845:  elog(ERROR, "unexpected strategy number %d", op_strategy); 
iaai: indxpath:00002853:  elog(ERROR, "could not find member %d of opclass %u", 
iaai: indxpath:00002854:  op_strategy, lfirst_oid(opclasses_cell)); 
iaai: indxpath:00002859:  elog(ERROR, "could not find commutator of member %d of opclass %u", 
iaai: indxpath:00002860:  op_strategy, lfirst_oid(opclasses_cell)); 
iaai: indxpath:00002943:  elog(ERROR, "unexpected opclass: %u", opclass); 
iaai: indxpath:00002966:  elog(ERROR, "unexpected const type: %u", 
iaai: indxpath:00002967:  prefix_const->consttype); 
iaai: indxpath:00002982:  elog(ERROR, "no = operator for opclass %u", opclass); 
iaai: indxpath:00002997:  elog(ERROR, "no >= operator for opclass %u", opclass); 
iaai: indxpath:00003010:  elog(ERROR, "no < operator for opclass %u", opclass); 
iaai: indxpath:00003052:  elog(ERROR, "unexpected operator: %u", expr_op); 
iaai: indxpath:00003065:  elog(ERROR, "no >= operator for opclass %u", opclass); 
iaai: indxpath:00003072:  elog(ERROR, "no > operator for opclass %u", opclass); 
iaai: indxpath:00003088:  elog(ERROR, "no <= operator for opclass %u", opclass); 
aaaaa GP_IGNORE: jaai: joinpath - ./backend/optimizer/path/joinpath.c
jaai: joinpath:00000210:  elog(ERROR, "unrecognized join type: %d", 
jaai: joinpath:00000211:  (int) jointype); 
jaai: joinpath:00000395:  elog(ERROR, "unrecognized join type: %d", 
jaai: joinpath:00000396:  (int) jointype); 
jaai: joinpath:00000999:  ereport(ERROR, 
jaai: joinpath:00001000:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
jaai: joinpath:00001001:  errmsg("FULL JOIN is only supported with merge-joinable join conditions"))); 
aaaaa GP_IGNORE: jaai: joinrels - ./backend/optimizer/path/joinrels.c
jaai: joinrels:00000248:  elog(ERROR, "failed to build any %d-way joins", level); 
aaaaa GP_IGNORE: paai: pathkeys - ./backend/optimizer/path/pathkeys.c
paai: pathkeys:00001330:  elog(ERROR, "wrong number of index expressions"); 
paai: pathkeys:00002048:  elog(ERROR, "could not identify which side of mergeclause to use"); 
aaaaa GP_IGNORE: caba: createplan - ./backend/optimizer/plan/createplan.c
caba: createplan:00000270:  elog(ERROR, "unrecognized node type: %d", 
caba: createplan:00000271:  (int) best_path->pathtype); 
caba: createplan:00000416:  elog(ERROR, "unrecognized node type: %d", 
caba: createplan:00000417:  (int) best_path->pathtype); 
caba: createplan:00000646:  elog(ERROR, "unrecognized node type: %d", 
caba: createplan:00000647:  (int) best_path->path.pathtype); 
caba: createplan:00000915:  elog(ERROR, "failed to find unique expression in subplan tlist"); 
caba: createplan:00001240:  ereport(ERROR, 
caba: createplan:00001241:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caba: createplan:00001242:  errmsg("it is not possible to read from a WRITABLE external table."), 
caba: createplan:00001243:  errhint("Create the table as READABLE instead"), 
caba: createplan:00001244:  errOmitLocation(true))); 
caba: createplan:00001260:  ereport(ERROR, 
caba: createplan:00001261:  (errcode(ERRCODE_GP_FEATURE_NOT_CONFIGURED), /* any better errcode? */ 
caba: createplan:00001262:  errmsg("Using external tables with OS level commands " 
caba: createplan:00001263:  "(EXECUTE clause) is disabled"), 
caba: createplan:00001264:  errhint("To enable set gp_external_enable_exec=on"), 
caba: createplan:00001265:  errOmitLocation(true))); 
caba: createplan:00001378:  ereport(ERROR, 
caba: createplan:00001379:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caba: createplan:00001380:  errmsg("Could not assign a segment database for \"%s\". " 
caba: createplan:00001381:  "There are more external files than primary segment " 
caba: createplan:00001382:  "databases on host \"%s\"", uri_str, uri->hostname), 
caba: createplan:00001383:  errOmitLocation(true))); 
caba: createplan:00001387:  ereport(ERROR, 
caba: createplan:00001388:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caba: createplan:00001389:  errmsg("Could not assign a segment database for \"%s\". " 
caba: createplan:00001390:  "There isn't a valid primary segment database " 
caba: createplan:00001391:  "on host \"%s\"", uri_str, uri->hostname), 
caba: createplan:00001392:  errOmitLocation(true))); 
caba: createplan:00001397:  ereport(ERROR, 
caba: createplan:00001398:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caba: createplan:00001399:  errmsg("Could not assign a segment database for \"%s\". " 
caba: createplan:00001400:  "There are more URIs than total primary segment " 
caba: createplan:00001401:  "databases", uri_str), 
caba: createplan:00001402:  errOmitLocation(true))); 
caba: createplan:00001472:  elog(NOTICE, "External scan %s will utilize %d out " 
caba: createplan:00001473:  "of %d segment databases", 
caba: createplan:00001474:  (((uri->protocol == URI_GPFDIST) *PIPE**PIPE* (uri->protocol == URI_GPFDISTS)) ? 
caba: createplan:00001475:  "from gpfdist(s) server" : "using custom protocol"), 
caba: createplan:00001476:  num_segs_participating, 
caba: createplan:00001477:  total_primaries); 
caba: createplan:00001481:  ereport(ERROR, 
caba: createplan:00001482:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caba: createplan:00001483:  errmsg("There are more external files (URLs) than primary " 
caba: createplan:00001484:  "segments that can read them. Found %d URLs and " 
caba: createplan:00001485:  "%d primary segments.",list_length(rel->locationlist), 
caba: createplan:00001486:  num_segs_participating), 
caba: createplan:00001487:  errOmitLocation(true))); 
caba: createplan:00001511:  elog(ERROR, "External scan location list failed building distribution."); 
caba: createplan:00001611:  ereport(ERROR, 
caba: createplan:00001612:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
caba: createplan:00001613:  errmsg("Internal error in createplan for external tables" 
caba: createplan:00001614:  " when trying to assign segments for gpfdist(s)"))); 
caba: createplan:00001727:  ereport(ERROR, 
caba: createplan:00001728:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caba: createplan:00001729:  errmsg("Could not assign a segment database for " 
caba: createplan:00001730:  "command \"%s\". No valid primary segment was " 
caba: createplan:00001731:  "found in the requested host name \"%s\" ", 
caba: createplan:00001732:  command, hostname), 
caba: createplan:00001733:  errOmitLocation(true))); 
caba: createplan:00001754:  ereport(ERROR, 
caba: createplan:00001755:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caba: createplan:00001756:  errmsg("Could not assign a segment database for " 
caba: createplan:00001757:  "command \"%s\". The requested segment id " 
caba: createplan:00001758:  "%d is not a valid primary segment or doesn't " 
caba: createplan:00001759:  "exist in the database", command, target_segid), 
caba: createplan:00001760:  errOmitLocation(true))); 
caba: createplan:00001769:  ereport(ERROR, 
caba: createplan:00001770:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
caba: createplan:00001771:  errmsg("Table defined with EXECUTE ON %d but there " 
caba: createplan:00001772:  "are only %d valid primary segments in the " 
caba: createplan:00001773:  "database.", num_segs_to_use, total_primaries))); 
caba: createplan:00001804:  ereport(ERROR, 
caba: createplan:00001805:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
caba: createplan:00001806:  errmsg("Internal error in createplan for external tables: " 
caba: createplan:00001807:  "got invalid ON clause code %s", on_clause))); 
caba: createplan:00001813:  ereport(ERROR, 
caba: createplan:00001814:  (errcode(ERRCODE_GP_INTERNAL_ERROR), 
caba: createplan:00001815:  errmsg("Internal error in createplan for external tables"))); 
caba: createplan:00002447:  elog(ERROR, "unrecognized node type: %d", nodeTag(bitmapqual)); 
caba: createplan:00003212:  elog(ERROR, "indexqual clause is not binary opclause"); 
caba: createplan:00003283:  elog(ERROR, "unsupported indexqual type: %d", 
caba: createplan:00003284:  (int) nodeTag(clause)); 
caba: createplan:00003358:  elog(ERROR, "too few entries in indexprs list"); 
caba: createplan:00003377:  elog(ERROR, "node is not an index attribute"); 
caba: createplan:00004186:  elog(ERROR, "could not find pathkey item to sort"); 
caba: createplan:00004658:  elog(ERROR, "Planner committed to impossible hash aggregate."); 
aaaaa GP_IGNORE: iaaj: initsplan - ./backend/optimizer/plan/initsplan.c
iaaj: initsplan:00000108:  elog(ERROR, "unrecognized node type: %d", 
iaaj: initsplan:00000109:  (int) nodeTag(jtnode)); 
iaaj: initsplan:00000415:  elog(ERROR, "unrecognized join type: %d", 
iaaj: initsplan:00000416:  (int) j->jointype); 
iaaj: initsplan:00000550:  elog(ERROR, "unrecognized node type: %d", 
iaaj: initsplan:00000551:  (int) nodeTag(jtnode)); 
iaaj: initsplan:00000611:  ereport(ERROR, 
iaaj: initsplan:00000612:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
iaaj: initsplan:00000613:  errmsg("SELECT FOR UPDATE/SHARE cannot be applied to the nullable side of an outer join"))); 
iaaj: initsplan:00000809:  elog(ERROR, "JOIN qualification may not refer to other relations"); 
iaaj: initsplan:00000811:  elog(ERROR, "JOIN qualification may not refer to other relations"); 
iaaj: initsplan:00001132:  elog(ERROR, "cannot cope with variable-free clause"); 
iaaj: initsplan:00001315:  ereport(ERROR, 
iaaj: initsplan:00001316:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
iaaj: initsplan:00001317:  errmsg("could not identify an equality operator for types %s and %s", 
iaaj: initsplan:00001318:  format_type_be(ltype), format_type_be(rtype)))); 
iaaj: initsplan:00001328:  ereport(ERROR, 
iaaj: initsplan:00001329:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
iaaj: initsplan:00001330:  errmsg("equality operator for types %s and %s should be merge-joinable, but isn't", 
iaaj: initsplan:00001331:  format_type_be(ltype), format_type_be(rtype)))); 
aaaaa GP_IGNORE: paah: planagg - ./backend/optimizer/plan/planagg.c
paah: planagg:00000570:  elog(ERROR, "failed to re-find aggregate info record"); 
aaaaa GP_IGNORE: pabc: plangroupext - ./backend/optimizer/plan/plangroupext.c
pabc: plangroupext:00000279:  ereport(ERROR, (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
pabc: plangroupext:00000280:  errmsg("GROUPING SETS / ROLLUP / CUBE columns ambiguous.") 
pabc: plangroupext:00000281:  )); 
aaaaa GP_IGNORE: paah: planner - ./backend/optimizer/plan/planner.c
paah: planner:00000814:  elog(ERROR, "failure repartitioning plan"); 
paah: planner:00000977:  elog(ERROR, "unrecognized node type: %d", 
paah: planner:00000978:  (int) nodeTag(jtnode)); 
paah: planner:00001092:  ereport(ERROR, ( 
paah: planner:00001093:  errcode(ERRCODE_CDB_INTERNAL_ERROR), 
paah: planner:00001094:  errmsg("incompatible loci in target inheritance set") )); 
paah: planner:00001170:  ereport(ERROR, ( 
paah: planner:00001171:  errcode(ERRCODE_CDB_INTERNAL_ERROR), 
paah: planner:00001172:  errmsg("unexpected locus assigned to target inheritance set") )); 
paah: planner:00001340:  ereport(ERROR, 
paah: planner:00001341:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: planner:00001342:  errmsg("SELECT FOR UPDATE/SHARE is not allowed with UNION/INTERSECT/EXCEPT"))); 
paah: planner:00001356:  ereport(ERROR, 
paah: planner:00001357:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: planner:00001358:  errmsg("window function with WITHIN GROUP aggregate is not supported"))); 
paah: planner:00001418:  ereport(ERROR, 
paah: planner:00001419:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: planner:00001420:  errmsg("WITHIN GROUP aggregate cannot be used in GROUPING SETS query"))); 
paah: planner:00002001:  ereport(ERROR, (errcode(ERRCODE_CDB_INTERNAL_ERROR), 
paah: planner:00002002:  errmsg("unexpected input locus to distinct"))); 
paah: planner:00003027:  elog(ERROR, "failed to locate grouping columns"); 
paah: planner:00003066:  elog(ERROR, "resjunk output columns are not implemented"); 
paah: planner:00003071:  elog(ERROR, "resjunk output columns are not implemented"); 
paah: planner:00003144:  elog(ERROR, "invalid grouping set"); 
paah: planner:00003282:  elog(ERROR,"invalid column reference list"); 
paah: planner:00003291:  elog(ERROR,"invalid column reference list"); 
paah: planner:00003301:  elog(ERROR,"invalid column reference list"); 
paah: planner:00003345:  elog(ERROR,"invalid ordinary grouping set"); 
paah: planner:00003360:  elog(ERROR,"invalid ordinary grouping set"); 
paah: planner:00003374:  elog(ERROR,"invalid grouping set"); 
paah: planner:00003380:  elog(ERROR,"invalid grouping set list"); 
paah: planner:00003400:  elog(ERROR,"invalid grouping ordinary grouping set list"); 
paah: planner:00003469:  elog(ERROR,"invalid grouping ordinary grouping set list"); 
aaaaa GP_IGNORE: pabd: planpartition - ./backend/optimizer/plan/planpartition.c
pabd: planpartition:00000876:  //elog(NOTICE, "modified outer plan is %s", nodeToString(ctx->outerPlan)); 
pabd: planpartition:00000972:  //elog(NOTICE, "safe to convert = %s", ctx->safeToConvert ? "true" : "false"); 
aaaaa GP_IGNORE: paba: planwindow - ./backend/optimizer/plan/planwindow.c
paba: planwindow:00000378:  ereport(ERROR, 
paba: planwindow:00000379:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paba: planwindow:00000380:  errmsg("That windowing query is not supported yet."))); 
paba: planwindow:00000654:  ereport(ERROR, 
paba: planwindow:00000655:  (errcode(ERRCODE_INTERNAL_ERROR), 
paba: planwindow:00000656:  errmsg("PARTITION BY expression does not appear in the targetlist."), 
paba: planwindow:00000657:  errOmitLocation(true))); 
paba: planwindow:00000666:  ereport(ERROR, 
paba: planwindow:00000667:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: planwindow:00000668:  errmsg("NTILE function argument expression should be in PARTITION BY."), 
paba: planwindow:00000669:  errOmitLocation(true))); 
paba: planwindow:00000730:  ereport(ERROR, 
paba: planwindow:00000731:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: planwindow:00000732:  errmsg("Call to window function may not reference outer queries."), 
paba: planwindow:00000733:  errOmitLocation(true))); 
paba: planwindow:00000750:  ereport(ERROR, 
paba: planwindow:00000751:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: planwindow:00000752:  errmsg("NTILE function argument should not use volatile functions."), 
paba: planwindow:00000753:  errOmitLocation(true))); 
paba: planwindow:00000797:  ereport(ERROR, 
paba: planwindow:00000798:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: planwindow:00000799:  errmsg("Window function calls may not be nested."), 
paba: planwindow:00000800:  errOmitLocation(true))); 
paba: planwindow:00000972:  elog(ERROR, "internal window framing error"); 
paba: planwindow:00001364:  ereport(ERROR, 
paba: planwindow:00001365:  (errcode(ERROR_INVALID_WINDOW_FRAME_PARAMETER), 
paba: planwindow:00001366:  errmsg("%s parameter cannot be negative", is_rows ? "ROWS" : "RANGE"), 
paba: planwindow:00001367:  errOmitLocation(true))); 
paba: planwindow:00001414:  elog(ERROR,"invalid window frame edge"); 
paba: planwindow:00001628:  ereport(ERROR, 
paba: planwindow:00001629:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: planwindow:00001630:  errmsg("invalid window specification"), 
paba: planwindow:00001631:  errhint("Only ordered windows may specify ROWS or RANGE framing."), 
paba: planwindow:00001632:  errOmitLocation(true))); 
paba: planwindow:00001705:  elog(ERROR, "cache lookup failed for function %u", fnoid); 
paba: planwindow:00001712:  ereport(ERROR, 
paba: planwindow:00001713:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: planwindow:00001714:  errmsg("can not call ordinary function, %s, as window function", NameStr(proform->proname)), 
paba: planwindow:00001715:  errOmitLocation(true))); 
paba: planwindow:00001735:  elog(ERROR, "cache lookup failed for aggregate function %u", fnoid); 
paba: planwindow:00001776:  elog(ERROR, "cache lookup failed for window function %u", fnoid); 
paba: planwindow:00002311:  /* elog(NOTICE, "Start of plan_sequential_stage()."); */ 
paba: planwindow:00002312:  
paba: planwindow:00002313:  /* Determine whether this stage requires external aggregation and an 
paba: planwindow:00002314:  * auxilliary aggregate. 
paba: planwindow:00002315:  */ 
paba: planwindow:00002316:  { 
paba: planwindow:00002317:  hasaux = false; 
paba: planwindow:00002388:  /* elog(NOTICE, "Fn plan_sequential_stage(): Preparing for Agg."); */ 
paba: planwindow:00002389:  
paba: planwindow:00002390:  /* Since we'll be encountering some Agg targets. Prepare for that 
paba: planwindow:00002391:  * by sharing the input window plan locally (within the slice) so 
paba: planwindow:00002392:  * we can develop an Agg and a Window chain within the stage. 
paba: planwindow:00002393:  */ 
paba: planwindow:00002394:  share_partners = share_plan(root, window_plan, 2); 
paba: planwindow:00002529:  /* elog(NOTICE, "Fn plan_sequential_stage(): Adding Window node."); */ 
paba: planwindow:00002530:  
paba: planwindow:00002531:  if ( winfo->partkey_len > 0 ) 
paba: planwindow:00002532:  { 
paba: planwindow:00002533:  partkey = (AttrNumber*)palloc(sz); 
paba: planwindow:00002759:  /* elog(NOTICE, "End of plan_sequential_stage()."); */ 
paba: planwindow:00002760:  return window_plan; 
paba: planwindow:00003119:  elog(ERROR,"internal error planning window function call"); 
paba: planwindow:00003335:  elog(ERROR,"invalid window coplan"); 
paba: planwindow:00003862:  elog(ERROR, "nested window reference invalid"); 
paba: planwindow:00003876:  elog(ERROR, "nested window key invalid"); 
aaaaa GP_IGNORE: saah: setrefs - ./backend/optimizer/plan/setrefs.c
saah: setrefs:00000902:  elog(ERROR, "unrecognized node type: %d", 
saah: setrefs:00000903:  (int) nodeTag(plan)); 
saah: setrefs:00001931:  elog(ERROR, "variable not found in subplan target lists"); 
saah: setrefs:00002031:  elog(ERROR, "variable not found in subplan target list"); 
saah: setrefs:00002211:  elog(ERROR, "cache lookup failed for function %u", funcid); 
aaaaa GP_IGNORE: saaj: subselect - ./backend/optimizer/plan/subselect.c
saaj: subselect:00000394:  elog(ERROR, "correlated subquery with skip-level correlations is not supported"); 
saaj: subselect:00000545:  elog(ERROR, "could not find array type for datatype %s", 
saaj: subselect:00000546:  format_type_be(exprType((Node *) te->expr))); 
saaj: subselect:00000712:  elog(ERROR, "unexpected PARAM_SUBLINK ID: %d", param->paramid); 
saaj: subselect:00000728:  elog(ERROR, "subquery output %d not found", 
saaj: subselect:00000729:  param->paramid); 
saaj: subselect:00000838:  elog(ERROR, "cache lookup failed for operator %u", opid); 
saaj: subselect:00001332:  elog(ERROR, "unrecognized node type: %d", 
saaj: subselect:00001333:  (int) nodeTag(plan)); 
saaj: subselect:00001354:  elog(ERROR, "plan should not reference subplan's variable"); 
aaaaa GP_IGNORE: pabc: prepjointree - ./backend/optimizer/prep/prepjointree.c
pabc: prepjointree:00000197:  elog(ERROR, "unrecognized join type: %d", 
pabc: prepjointree:00000198:  (int) j->jointype); 
pabc: prepjointree:00000215:  elog(ERROR, "unrecognized node type: %d", 
pabc: prepjointree:00000216:  (int) nodeTag(jtnode)); 
pabc: prepjointree:00000573:  elog(ERROR, "subquery is bogus"); 
pabc: prepjointree:00000781:  elog(ERROR, "unrecognized node type: %d", 
pabc: prepjointree:00000782:  (int) nodeTag(jtnode)); 
pabc: prepjointree:00000826:  elog(ERROR, "so where are the outer joins?"); 
pabc: prepjointree:00000903:  elog(ERROR, "unrecognized node type: %d", 
pabc: prepjointree:00000904:  (int) nodeTag(jtnode)); 
pabc: prepjointree:00000930:  elog(ERROR, "reached empty jointree"); 
pabc: prepjointree:00000932:  elog(ERROR, "reached base rel"); 
pabc: prepjointree:00001070:  elog(ERROR, "unrecognized node type: %d", 
pabc: prepjointree:00001071:  (int) nodeTag(jtnode)); 
pabc: prepjointree:00001175:  elog(ERROR, "unrecognized node type: %d", 
pabc: prepjointree:00001176:  (int) nodeTag(jtnode)); 
pabc: prepjointree:00001191:  elog(ERROR, "could not find join node %d", joinrelid); 
pabc: prepjointree:00001246:  elog(ERROR, "unrecognized node type: %d", 
pabc: prepjointree:00001247:  (int) nodeTag(jtnode)); 
aaaaa GP_IGNORE: paaj: preptlist - ./backend/optimizer/prep/preptlist.c
paaj: preptlist:00000071:  elog(ERROR, "subquery cannot be result relation"); 
paaj: preptlist:00000172:  ereport(ERROR, 
paaj: preptlist:00000173:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paaj: preptlist:00000174:  errmsg("SELECT FOR UPDATE/SHARE is not allowed in subqueries"))); 
paaj: preptlist:00000386:  elog(ERROR, "unrecognized command_type: %d", 
paaj: preptlist:00000387:  (int) command_type); 
paaj: preptlist:00000414:  elog(ERROR, "targetlist is not sorted correctly"); 
aaaaa GP_IGNORE: paaj: prepunion - ./backend/optimizer/prep/prepunion.c
paaj: prepunion:00000257:  elog(ERROR, "unrecognized node type: %d", 
paaj: prepunion:00000258:  (int) nodeTag(setOp)); 
paaj: prepunion:00000452:  elog(ERROR, "unrecognized set op: %d", 
paaj: prepunion:00000453:  (int) op->op); 
paaj: prepunion:00001050:  elog(ERROR, "attribute \"%s\" of relation \"%s\" does not match parent's type", 
paaj: prepunion:00001051:  attname, RelationGetRelationName(newrelation)); 
paaj: prepunion:00001063:  elog(ERROR, "could not find inherited attribute \"%s\" of relation \"%s\"", 
paaj: prepunion:00001064:  attname, RelationGetRelationName(newrelation)); 
paaj: prepunion:00001158:  elog(ERROR, "attribute %d of relation \"%s\" does not exist", 
paaj: prepunion:00001159:  var->varattno, get_rel_name(appinfo->parent_reloid)); 
paaj: prepunion:00001163:  elog(ERROR, "attribute %d of relation \"%s\" does not exist", 
paaj: prepunion:00001164:  var->varattno, get_rel_name(appinfo->parent_reloid)); 
paaj: prepunion:00001482:  elog(ERROR, "attribute %d of relation \"%s\" does not exist", 
paaj: prepunion:00001483:  tle->resno, get_rel_name(apprelinfo->parent_reloid)); 
paaj: prepunion:00001486:  elog(ERROR, "attribute %d of relation \"%s\" does not exist", 
paaj: prepunion:00001487:  tle->resno, get_rel_name(apprelinfo->parent_reloid)); 
aaaaa GP_IGNORE: caah: clauses - ./backend/optimizer/util/clauses.c
caah: clauses:00000436:  ereport(ERROR, 
caah: clauses:00000437:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caah: clauses:00000438:  errmsg("DISTINCT is supported only for single-argument aggregates"))); 
caah: clauses:00000473:  elog(ERROR, "cache lookup failed for aggregate %u", 
caah: clauses:00000474:  aggref->aggfnoid); 
caah: clauses:00000542:  ereport(ERROR, 
caah: clauses:00000543:  (errcode(ERRCODE_GROUPING_ERROR), 
caah: clauses:00000544:  errmsg("aggregate function calls may not be nested"))); 
caah: clauses:00001306:  elog(ERROR, "cannot commute non-binary-operator clause"); 
caah: clauses:00001311:  elog(ERROR, "could not find commutator for operator %u", 
caah: clauses:00001312:  clause->opno); 
caah: clauses:00001340:  elog(ERROR, "expected a RowCompareExpr"); 
caah: clauses:00001350:  elog(ERROR, "could not find commutator for operator %u", 
caah: clauses:00001351:  lfirst_oid(l)); 
caah: clauses:00001373:  elog(ERROR, "unexpected RowCompare type: %d", 
caah: clauses:00001374:  (int) clause->rctype); 
caah: clauses:00001940:  elog(ERROR, "unrecognized boolop: %d", 
caah: clauses:00001941:  (int) expr->boolop); 
caah: clauses:00002354:  elog(ERROR, "unrecognized nulltesttype: %d", 
caah: clauses:00002355:  (int) ntest->nulltesttype); 
caah: clauses:00002406:  elog(ERROR, "unrecognized booltesttype: %d", 
caah: clauses:00002407:  (int) btest->booltesttype); 
caah: clauses:00002735:  elog(ERROR, "cache lookup failed for function %u", funcid); 
caah: clauses:00002990:  elog(ERROR, "null prosrc for function %u", funcid); 
caah: clauses:00003190:  elog(ERROR, "unexpected paramkind: %d", (int) param->paramkind); 
caah: clauses:00003192:  elog(ERROR, "invalid paramid: %d", param->paramid); 
caah: clauses:00003226:  elog(ERROR, "null prosrc"); 
caah: clauses:00003935:  ereport(ERROR, (errcode(ERRCODE_INTERNAL_ERROR), 
caah: clauses:00003936:  errmsg_internal("unrecognized node type: %d", 
caah: clauses:00003937:  nodeTag(node)) )); 
aaaaa GP_IGNORE: paai: pathnode - ./backend/optimizer/util/pathnode.c
paai: pathnode:00000117:  elog(ERROR, "unrecognized pathnode: %d", (int)s->type); 
paai: pathnode:00000284:  elog(ERROR, "unrecognized path type: %d", (int)path->pathtype); 
paai: pathnode:00001598:  ereport(ERROR, (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
paai: pathnode:00001599:  errmsg_internal("Cannot append paths with " 
paai: pathnode:00001600:  "incompatible distribution"))); 
aaaaa GP_IGNORE: paah: plancat - ./backend/optimizer/util/plancat.c
paah: plancat:00001049:  elog(ERROR, "unsupported RTE kind %d in build_physical_tlist", 
paah: plancat:00001050:  (int) rte->rtekind); 
paah: plancat:00001089:  elog(ERROR, "invalid restriction selectivity: %f", result); 
paah: plancat:00001124:  elog(ERROR, "invalid join selectivity: %f", result); 
paah: plancat:00001253:  ereport(NOTICE, 
paah: plancat:00001254:  (errmsg("Query planner will use default statistics for index \"%s\" " 
paah: plancat:00001255:  "on table \"%s\"", 
paah: plancat:00001256:  indexname ? indexname : "??", 
paah: plancat:00001257:  relname ? relname : "??"), 
paah: plancat:00001258:  errhint("To cache a sample of the table's actual statistics for " 
paah: plancat:00001259:  "optimization, use the ANALYZE or VACUUM ANALYZE command.") 
paah: plancat:00001260:  )); 
paah: plancat:00001283:  ereport(NOTICE, 
paah: plancat:00001284:  (errmsg("Query planner will use default statistics for table \"%s\"", 
paah: plancat:00001285:  relname ? relname : "??"), 
paah: plancat:00001286:  errhint("To cache a sample of the table's actual statistics for " 
paah: plancat:00001287:  "optimization, use the ANALYZE or VACUUM ANALYZE command.") 
paah: plancat:00001288:  )); 
aaaaa GP_IGNORE: paai: predtest - ./backend/optimizer/util/predtest.c
paai: predtest:00000444:  elog(ERROR, "predicate_classify returned a bogus value"); 
paai: predtest:00000727:  elog(ERROR, "predicate_classify returned a bogus value"); 
paai: predtest:00001959:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), errmsg("out of memory"))); 
paai: predtest:00002399:  elog(ERROR, "predicate_classify returned a bad value"); 
aaaaa GP_IGNORE: raah: relnode - ./backend/optimizer/util/relnode.c
raah: relnode:00000068:  elog(ERROR, "rel %d already exists", relid); 
raah: relnode:00000151:  elog(ERROR, "unrecognized RTE kind: %d", 
raah: relnode:00000152:  (int) rte->rtekind); 
raah: relnode:00000203:  elog(ERROR, "no relation entry for relid %d", relid); 
raah: relnode:00000484:  elog(ERROR, "unexpected node type in reltargetlist: %d", 
raah: relnode:00000485:  (int) nodeTag(var)); 
raah: relnode:00000858:  ereport(ERROR, (errcode(ERRCODE_INTERNAL_ERROR), 
raah: relnode:00000859:  errmsg_internal("invalid varattno %d for rangetable entry %s", 
raah: relnode:00000860:  var->varattno, rtename) )); 
aaaaa GP_IGNORE: rabc: restrictinfo - ./backend/optimizer/util/restrictinfo.c
rabc: restrictinfo:00000262:  elog(ERROR, "unrecognized node type: %d", nodeTag(bitmapqual)); 
aaaaa GP_IGNORE: taaf: tlist - ./backend/optimizer/util/tlist.c
taaf: tlist:00000177:  elog(ERROR, "ORDER/GROUP BY expression not found in targetlist"); 
taaf: tlist:00000425:  elog(ERROR, "non-targetlist argument supplied"); 
aaaaa GP_IGNORE: waah: walkers - ./backend/optimizer/util/walkers.c
waah: walkers:00000503:  ereport(ERROR, (errcode(ERRCODE_INTERNAL_ERROR), 
waah: walkers:00000504:  errmsg_internal("unrecognized node type: %d", 
waah: walkers:00000505:  nodeTag(node)) )); 
aaaaa GP_IGNORE: aaah: analyze - ./backend/parser/analyze.c
aaah: analyze:00000797:  ereport(ERROR, 
aaah: analyze:00000798:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaah: analyze:00000799:  errmsg("target lists can have at most %d entries", 
aaah: analyze:00000800:  MaxTupleAttributeNumber))); 
aaah: analyze:00000869:  ereport(ERROR, 
aaah: analyze:00000870:  (errcode(ERRCODE_INDETERMINATE_DATATYPE), 
aaah: analyze:00000871:  errmsg("CREATE VIEW statements cannot include calls to " 
aaah: analyze:00000872:  "dynamically typed function"))); 
aaah: analyze:00000902:  ereport(ERROR, 
aaah: analyze:00000903:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00000904:  errmsg("CREATE VIEW specifies more column " 
aaah: analyze:00000905:  "names than columns"))); 
aaah: analyze:00000949:  ereport(ERROR, 
aaah: analyze:00000950:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00000951:  errmsg("The RETURNING clause of the DELETE statement is not " 
aaah: analyze:00000952:  "supported in this version of Greenplum Database."))); 
aaah: analyze:00001095:  ereport(ERROR, 
aaah: analyze:00001096:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00001097:  errmsg("INSERT ... SELECT cannot specify INTO"), 
aaah: analyze:00001098:  parser_errposition(pstate, 
aaah: analyze:00001099:  exprLocation((Node *) selectQuery->intoClause)))); 
aaah: analyze:00001167:  ereport(ERROR, 
aaah: analyze:00001168:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00001169:  errmsg("VALUES lists must all be the same length"), 
aaah: analyze:00001170:  parser_errposition(pstate, 
aaah: analyze:00001171:  exprLocation((Node *) sublist)))); 
aaah: analyze:00001191:  ereport(ERROR, 
aaah: analyze:00001192:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00001193:  errmsg("VALUES must not contain table references"))); 
aaah: analyze:00001203:  ereport(ERROR, 
aaah: analyze:00001204:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00001205:  errmsg("VALUES must not contain OLD or NEW references"), 
aaah: analyze:00001206:  errhint("Use SELECT ... UNION ALL ... instead."))); 
aaah: analyze:00001284:  ereport(ERROR, 
aaah: analyze:00001285:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00001286:  errmsg("The RETURNING clause of the INSERT statement is not " 
aaah: analyze:00001287:  "supported in this version of Greenplum Database."))); 
aaah: analyze:00001318:  ereport(ERROR, 
aaah: analyze:00001319:  (errcode(ERRCODE_GROUPING_ERROR), 
aaah: analyze:00001320:  errmsg("cannot use aggregate function in VALUES"))); 
aaah: analyze:00001322:  ereport(ERROR, 
aaah: analyze:00001323:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00001324:  errmsg("cannot use window function in VALUES"))); 
aaah: analyze:00001352:  ereport(ERROR, 
aaah: analyze:00001353:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00001354:  errmsg("INSERT has more expressions than target columns"), 
aaah: analyze:00001355:  errOmitLocation(true))); 
aaah: analyze:00001358:  ereport(ERROR, 
aaah: analyze:00001359:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00001360:  errmsg("INSERT has more target columns than expressions"), 
aaah: analyze:00001361:  errOmitLocation(true))); 
aaah: analyze:00001602:  ereport(ERROR, 
aaah: analyze:00001603:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
aaah: analyze:00001604:  errmsg("column \"%s\" duplicated", 
aaah: analyze:00001605:  colname), 
aaah: analyze:00001606:  errOmitLocation(true))); 
aaah: analyze:00001645:  elog(ERROR, "column \"%s\" does not exist", colname); 
aaah: analyze:00001650:  elog(ERROR, "column \"%s\" referenced in more than one " 
aaah: analyze:00001651:  "COLUMN ENCODING clause", colname); 
aaah: analyze:00001761:  ereport(ERROR, \ 
aaah: analyze:00001762:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), \ 
aaah: analyze:00001763:  errmsg("ENCODING clause only supported with column oriented tables"))) 
aaah: analyze:00001764:  
aaah: analyze:00001765:  /* 
aaah: analyze:00001766:  * The migrator puts lots of confusing things in the WITH() clause. We never 
aaah: analyze:00001767:  * expect to do AOCO table creation during upgrade so bail out. 
aaah: analyze:00001768:  */ 
aaah: analyze:00001769:  if (gp_upgrade_mode) 
aaah: analyze:00001770:  { 
aaah: analyze:00001771:  Insist(!can_enc); 
aaah: analyze:00001793:  elog(ERROR, "only one default column encoding may be specified"); 
aaah: analyze:00001805:  ereport(ERROR, 
aaah: analyze:00001806:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00001807:  errmsg("DEFAULT COLUMN ENCODING clause cannot " 
aaah: analyze:00001808:  "override values set in WITH clause"))); 
aaah: analyze:00001953:  ereport(ERROR, 
aaah: analyze:00001954:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00001955:  errmsg("cannot mix inheritance with partitioning"))); 
aaah: analyze:00001961:  ereport(ERROR, 
aaah: analyze:00001962:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00001963:  errmsg("INHERITS clause cannot be used with column oriented tables"))); 
aaah: analyze:00002020:  elog(ERROR, "unrecognized node type: %d", 
aaah: analyze:00002021:  (int) nodeTag(element)); 
aaah: analyze:00002079:  ereport(ERROR, 
aaah: analyze:00002080:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00002081:  errmsg("ENCODING clause only supported with " 
aaah: analyze:00002082:  "column oriented partitioned tables"))); 
aaah: analyze:00002175:  elog(ERROR, "node type %d not supported for external tables", 
aaah: analyze:00002176:  (int) nodeTag(element)); 
aaah: analyze:00002198:  elog(ERROR, "unrecognized node type: %d", 
aaah: analyze:00002199:  (int) nodeTag(element)); 
aaah: analyze:00002228:  ereport(ERROR, 
aaah: analyze:00002229:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00002230:  errmsg("External web table with ON MASTER clause " 
aaah: analyze:00002231:  "cannot use error tables."))); 
aaah: analyze:00002305:  elog(ERROR, "node type %d not supported for foreign tables", 
aaah: analyze:00002306:  (int) nodeTag(element)); 
aaah: analyze:00002318:  elog(ERROR, "unrecognized node type: %d", 
aaah: analyze:00002319:  (int) nodeTag(element)); 
aaah: analyze:00002410:  ereport(NOTICE, 
aaah: analyze:00002411:  (errmsg("%s will create implicit sequence \"%s\" for serial column \"%s.%s\"", 
aaah: analyze:00002412:  cxt->stmtType, sname, 
aaah: analyze:00002413:  cxt->relation->relname, column->colname))); 
aaah: analyze:00002508:  ereport(ERROR, 
aaah: analyze:00002509:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00002510:  errmsg("conflicting NULL/NOT NULL declarations for column \"%s\" of table \"%s\"", 
aaah: analyze:00002511:  column->colname, cxt->relation->relname))); 
aaah: analyze:00002518:  ereport(ERROR, 
aaah: analyze:00002519:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00002520:  errmsg("conflicting NULL/NOT NULL declarations for column \"%s\" of table \"%s\"", 
aaah: analyze:00002521:  column->colname, cxt->relation->relname))); 
aaah: analyze:00002528:  ereport(ERROR, 
aaah: analyze:00002529:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00002530:  errmsg("multiple default values specified for column \"%s\" of table \"%s\"", 
aaah: analyze:00002531:  column->colname, cxt->relation->relname))); 
aaah: analyze:00002563:  elog(ERROR, "unrecognized constraint type: %d", 
aaah: analyze:00002564:  constraint->contype); 
aaah: analyze:00002592:  elog(ERROR, "invalid context for constraint type %d", 
aaah: analyze:00002593:  constraint->contype); 
aaah: analyze:00002597:  elog(ERROR, "unrecognized constraint type: %d", 
aaah: analyze:00002598:  constraint->contype); 
aaah: analyze:00002639:  ereport(ERROR, 
aaah: analyze:00002640:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00002641:  errmsg("Readable external tables can\'t specify a DISTRIBUTED BY clause."))); 
aaah: analyze:00002769:  ereport(ERROR, 
aaah: analyze:00002770:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00002771:  errmsg("Greenplum Database does not allow having both PRIMARY KEY and UNIQUE constraints"))); 
aaah: analyze:00002777:  ereport(ERROR, 
aaah: analyze:00002778:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00002779:  errmsg("Greenplum Database does not allow having multiple UNIQUE constraints"))); 
aaah: analyze:00002840:  ereport(ERROR, (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00002841:  errmsg("cannot inherit from catalog table \"%s\" " 
aaah: analyze:00002842:  "to create table \"%s\".", 
aaah: analyze:00002843:  parent->relname, cxt->relation->relname), 
aaah: analyze:00002844:  errdetail("An inheritance hierarchy cannot contain a " 
aaah: analyze:00002845:  "mixture of distributed and " 
aaah: analyze:00002846:  "non-distributed tables."))); 
aaah: analyze:00002874:  elog(NOTICE, "Table has parent, setting distribution columns " 
aaah: analyze:00002875:  "to match parent table"); 
aaah: analyze:00002885:  elog(NOTICE, "Table doesn't have 'distributed by' clause, " 
aaah: analyze:00002886:  "defaulting to distribution columns from LIKE table"); 
aaah: analyze:00002909:  elog(NOTICE, "Table has no attributes to distribute on."); 
aaah: analyze:00002934:  ereport(ERROR, 
aaah: analyze:00002935:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
aaah: analyze:00002936:  errmsg("inherited relation \"%s\" is not a table", 
aaah: analyze:00002937:  inh->relname))); 
aaah: analyze:00002952:  ereport(NOTICE, 
aaah: analyze:00002953:  (errcode(ERRCODE_SUCCESSFUL_COMPLETION), 
aaah: analyze:00002954:  errmsg("Table doesn't have 'DISTRIBUTED BY' clause -- Using column " 
aaah: analyze:00002955:  "named '%s' from parent table as the Greenplum Database data distribution key for this " 
aaah: analyze:00002956:  "table. ", inhname), 
aaah: analyze:00002957:  errhint("The 'DISTRIBUTED BY' clause determines the distribution of data." 
aaah: analyze:00002958:  " Make sure column(s) chosen are the optimal data distribution key to minimize skew."), 
aaah: analyze:00002959:  errOmitLocation(true))); 
aaah: analyze:00002992:  ereport(NOTICE, 
aaah: analyze:00002993:  (errcode(ERRCODE_SUCCESSFUL_COMPLETION), 
aaah: analyze:00002994:  errmsg("Table doesn't have 'DISTRIBUTED BY' clause -- Using column " 
aaah: analyze:00002995:  "named '%s' as the Greenplum Database data distribution key for this " 
aaah: analyze:00002996:  "table. ", column->colname), 
aaah: analyze:00002997:  errhint("The 'DISTRIBUTED BY' clause determines the distribution of data." 
aaah: analyze:00002998:  " Make sure column(s) chosen are the optimal data distribution key to minimize skew."), 
aaah: analyze:00002999:  errOmitLocation(true))); 
aaah: analyze:00003015:  elog(NOTICE, "Table doesn't have 'distributed by' clause, and no column type is suitable for a distribution key. Creating a NULL policy entry."); 
aaah: analyze:00003052:  ereport(ERROR, 
aaah: analyze:00003053:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
aaah: analyze:00003054:  errmsg("inherited relation \"%s\" is not a table", 
aaah: analyze:00003055:  inh->relname))); 
aaah: analyze:00003101:  ereport(ERROR, 
aaah: analyze:00003102:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00003103:  errmsg("type \"%s\" can't be a part of a " 
aaah: analyze:00003104:  "distribution key", 
aaah: analyze:00003105:  format_type_be(typeOid)))); 
aaah: analyze:00003137:  ereport(ERROR, 
aaah: analyze:00003138:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
aaah: analyze:00003139:  errmsg("column \"%s\" named in 'DISTRIBUTED BY' clause does not exist", 
aaah: analyze:00003140:  key), 
aaah: analyze:00003141:  errOmitLocation(true))); 
aaah: analyze:00003157:  ereport(ERROR, 
aaah: analyze:00003158:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
aaah: analyze:00003159:  errmsg("duplicate column \"%s\" in DISTRIBUTED BY clause", key))); 
aaah: analyze:00003208:  ereport(ERROR, 
aaah: analyze:00003209:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
aaah: analyze:00003210:  errmsg("inherited relation \"%s\" is not a table", 
aaah: analyze:00003211:  inh->relname))); 
aaah: analyze:00003254:  ereport(ERROR, 
aaah: analyze:00003255:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00003256:  errmsg("PRIMARY KEY and DISTRIBUTED BY definitions incompatible"), 
aaah: analyze:00003257:  errhint("When there is both a PRIMARY KEY, and a " 
aaah: analyze:00003258:  "DISTRIBUTED BY clause, the DISTRIBUTED BY " 
aaah: analyze:00003259:  "clause must be equal to or a left-subset " 
aaah: analyze:00003260:  "of the PRIMARY KEY"), 
aaah: analyze:00003261:  errOmitLocation(true))); 
aaah: analyze:00003307:  ereport(ERROR, 
aaah: analyze:00003308:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
aaah: analyze:00003309:  errmsg("inherited relation \"%s\" is not a table", 
aaah: analyze:00003310:  inh->relname))); 
aaah: analyze:00003329:  elog(NOTICE, "'distributed by' clause refers to columns of inherited table"); 
aaah: analyze:00003351:  ereport(ERROR, 
aaah: analyze:00003352:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00003353:  errmsg("UNIQUE constraint and DISTRIBUTED BY " 
aaah: analyze:00003354:  "definitions incompatible"), 
aaah: analyze:00003355:  errhint("When there is both a UNIQUE constraint, " 
aaah: analyze:00003356:  "and a DISTRIBUTED BY clause, the " 
aaah: analyze:00003357:  "DISTRIBUTED BY clause must be equal to " 
aaah: analyze:00003358:  "or a left-subset of the UNIQUE columns"))); 
aaah: analyze:00003623:  ereport(ERROR, 
aaah: analyze:00003624:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00003625:  errmsg("unknown type or operator: %s", 
aaah: analyze:00003626:  val_str))); 
aaah: analyze:00003904:  ereport(ERROR, 
aaah: analyze:00003905:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00003906:  errmsg("unknown type or operator%s", 
aaah: analyze:00003907:  at_depth), 
aaah: analyze:00003908:  parser_errposition(pstate, loco))); 
aaah: analyze:00004067:  ereport(ERROR, 
aaah: analyze:00004068:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00004069:  errmsg("mismatched columns for VALUES%s", 
aaah: analyze:00004070:  at_depth), 
aaah: analyze:00004071:  parser_errposition(pstate, spec->location))); 
aaah: analyze:00004133:  ereport(ERROR, 
aaah: analyze:00004134:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00004135:  errmsg("unknown type or operator%s", 
aaah: analyze:00004136:  at_depth), 
aaah: analyze:00004137:  parser_errposition(pstate, spec->location))); 
aaah: analyze:00004380:  ereport(ERROR, 
aaah: analyze:00004381:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00004382:  errmsg("too few columns in %s specification%s", 
aaah: analyze:00004383:  st_end, 
aaah: analyze:00004384:  at_depth), 
aaah: analyze:00004385:  parser_errposition(pstate, pBSpec->location))); 
aaah: analyze:00004428:  ereport(ERROR, 
aaah: analyze:00004429:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00004430:  errmsg("unknown type or operator%s", 
aaah: analyze:00004431:  at_depth), 
aaah: analyze:00004432:  parser_errposition(pstate, pBSpec->location))); 
aaah: analyze:00004490:  ereport(ERROR, 
aaah: analyze:00004491:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00004492:  errmsg("too many columns in %s specification%s", 
aaah: analyze:00004493:  st_end, 
aaah: analyze:00004494:  at_depth), 
aaah: analyze:00004495:  parser_errposition(pstate, pBSpec->location))); 
aaah: analyze:00005041:  ereport(ERROR, 
aaah: analyze:00005042:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00005043:  errmsg("could not identify operator for partitioning operation between type \"%s\" and type \"%s\"", 
aaah: analyze:00005044:  format_type_be(typ->typid), 
aaah: analyze:00005045:  format_type_be(rtypeId)), 
aaah: analyze:00005046:  errhint("Add an explicit cast to the partitioning parameters"))); 
aaah: analyze:00005124:  elog(ERROR, "every interval too small"); 
aaah: analyze:00005249:  ereport(ERROR, 
aaah: analyze:00005250:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005251:  errmsg("partition name \"%s\" too long", 
aaah: analyze:00005252:  strVal(el->partName)), 
aaah: analyze:00005253:  parser_errposition(vstate->pstate, el->location))); 
aaah: analyze:00005327:  ereport(ERROR, 
aaah: analyze:00005328:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005329:  errmsg("cannot use NULL with range partition specification"), 
aaah: analyze:00005330:  errOmitLocation(true), 
aaah: analyze:00005331:  parser_errposition(ctx->pstate, ctx->location))); 
aaah: analyze:00005338:  ereport(ERROR, 
aaah: analyze:00005339:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005340:  errmsg("cannot use NULL with range partition specification"), 
aaah: analyze:00005341:  errOmitLocation(true), 
aaah: analyze:00005342:  parser_errposition(ctx->pstate, ctx->location))); 
aaah: analyze:00005387:  ereport(ERROR, 
aaah: analyze:00005388:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005389:  errmsg("invalid use of %s boundary " 
aaah: analyze:00005390:  "specification in partition clause", 
aaah: analyze:00005391:  specTName), 
aaah: analyze:00005392:  /* MPP-4249: use value spec location if have one */ 
aaah: analyze:00005393:  errOmitLocation(true), 
aaah: analyze:00005394:  parser_errposition(vstate->pstate, 
aaah: analyze:00005395:  ((PartitionValuesSpec*)spec)->location))); 
aaah: analyze:00005400:  ereport(ERROR, 
aaah: analyze:00005401:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005402:  errmsg("missing boundary specification"), 
aaah: analyze:00005403:  errOmitLocation(true), 
aaah: analyze:00005404:  parser_errposition(vstate->pstate, vstate->pElem->location))); 
aaah: analyze:00005438:  ereport(ERROR, 
aaah: analyze:00005439:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005440:  errmsg("invalid use of mixed named and " 
aaah: analyze:00005441:  "unnamed RANGE boundary " 
aaah: analyze:00005442:  "specifications%s", 
aaah: analyze:00005443:  vstate->at_depth), 
aaah: analyze:00005444:  errOmitLocation(true), 
aaah: analyze:00005445:  parser_errposition(vstate->pstate, 
aaah: analyze:00005446:  spec->location))); 
aaah: analyze:00005508:  ereport(ERROR, 
aaah: analyze:00005509:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005510:  errmsg("START of partition%s less " 
aaah: analyze:00005511:  "than START of previous%s", 
aaah: analyze:00005512:  vstate->namBuf, 
aaah: analyze:00005513:  vstate->at_depth), 
aaah: analyze:00005514:  errOmitLocation(true), 
aaah: analyze:00005515:  parser_errposition(vstate->pstate, 
aaah: analyze:00005516:  spec->location))); 
aaah: analyze:00005540:  ereport(ERROR, 
aaah: analyze:00005541:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005542:  errmsg("start of partition%s overlaps previous%s", 
aaah: analyze:00005543:  vstate->namBuf, 
aaah: analyze:00005544:  vstate->at_depth), 
aaah: analyze:00005545:  errOmitLocation(true), 
aaah: analyze:00005546:  parser_errposition(vstate->pstate, 
aaah: analyze:00005547:  spec->location))); 
aaah: analyze:00005556:  ereport(ERROR, 
aaah: analyze:00005557:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005558:  errmsg("cannot derive starting value of " 
aaah: analyze:00005559:  "partition%s based upon ending of " 
aaah: analyze:00005560:  "previous%s", 
aaah: analyze:00005561:  vstate->namBuf, 
aaah: analyze:00005562:  vstate->at_depth), 
aaah: analyze:00005563:  errOmitLocation(true), 
aaah: analyze:00005564:  parser_errposition(vstate->pstate, 
aaah: analyze:00005565:  spec->location))); 
aaah: analyze:00005622:  ereport(ERROR, 
aaah: analyze:00005623:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005624:  errmsg("START greater than END for partition%s%s", 
aaah: analyze:00005625:  vstate->namBuf, 
aaah: analyze:00005626:  vstate->at_depth), 
aaah: analyze:00005627:  errOmitLocation(true), 
aaah: analyze:00005628:  parser_errposition(vstate->pstate, 
aaah: analyze:00005629:  spec->location))); 
aaah: analyze:00005644:  ereport(ERROR, 
aaah: analyze:00005645:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005646:  errmsg("START equal to END for partition%s%s", 
aaah: analyze:00005647:  vstate->namBuf, 
aaah: analyze:00005648:  vstate->at_depth), 
aaah: analyze:00005649:  errOmitLocation(true), 
aaah: analyze:00005650:  parser_errposition(vstate->pstate, 
aaah: analyze:00005651:  spec->location))); 
aaah: analyze:00005686:  ereport(ERROR, 
aaah: analyze:00005687:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005688:  errmsg("starting value of partition%s " 
aaah: analyze:00005689:  "overlaps previous range%s", 
aaah: analyze:00005690:  vstate->namBuf, 
aaah: analyze:00005691:  vstate->at_depth), 
aaah: analyze:00005692:  errOmitLocation(true), 
aaah: analyze:00005693:  parser_errposition(vstate->pstate, 
aaah: analyze:00005694:  spec->location))); 
aaah: analyze:00005717:  ereport(ERROR, 
aaah: analyze:00005718:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005719:  errmsg("starting value of partition%s " 
aaah: analyze:00005720:  "overlaps previous range%s", 
aaah: analyze:00005721:  vstate->namBuf, 
aaah: analyze:00005722:  vstate->at_depth), 
aaah: analyze:00005723:  errOmitLocation(true), 
aaah: analyze:00005724:  parser_errposition(vstate->pstate, 
aaah: analyze:00005725:  spec->location))); 
aaah: analyze:00005944:  ereport(ERROR, 
aaah: analyze:00005945:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005946:  errmsg("invalid range comparison for partition%s%s", 
aaah: analyze:00005947:  vstate->namBuf, 
aaah: analyze:00005948:  vstate->at_depth), 
aaah: analyze:00005949:  errOmitLocation(true), 
aaah: analyze:00005950:  parser_errposition(vstate->pstate, 
aaah: analyze:00005951:  spec->location))); 
aaah: analyze:00005957:  ereport(ERROR, 
aaah: analyze:00005958:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00005959:  errmsg("%s value of partition%s overlaps %s range%s", 
aaah: analyze:00005960:  currPartRI, 
aaah: analyze:00005961:  vstate->namBuf, 
aaah: analyze:00005962:  otherPartPos, 
aaah: analyze:00005963:  vstate->at_depth), 
aaah: analyze:00005964:  errOmitLocation(true), 
aaah: analyze:00005965:  parser_errposition(vstate->pstate, 
aaah: analyze:00005966:  spec->location))); 
aaah: analyze:00006021: /* elog(ERROR, "cannot coerce partition parameter to column type"); */ 
aaah: analyze:00006022:  
aaah: analyze:00006023:  switch (partype) 
aaah: analyze:00006024:  { 
aaah: analyze:00006025:  case PARTTYP_HASH: 
aaah: analyze:00006026:  specTName = "HASH "; 
aaah: analyze:00006061:  ereport(ERROR, 
aaah: analyze:00006062:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
aaah: analyze:00006063:  errmsg("cannot coerce %spartition parameter %s" 
aaah: analyze:00006064:  "to column type (%s)", 
aaah: analyze:00006065:  specTName, 
aaah: analyze:00006066:  pparam, 
aaah: analyze:00006067:  format_type_be(typid)), 
aaah: analyze:00006068:  errOmitLocation(true))); 
aaah: analyze:00006146:  ereport(ERROR, 
aaah: analyze:00006147:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00006148:  errmsg("missing boundary specification in " 
aaah: analyze:00006149:  "partition%s of type LIST%s", 
aaah: analyze:00006150:  vstate->namBuf, 
aaah: analyze:00006151:  vstate->at_depth), 
aaah: analyze:00006152:  errOmitLocation(true), 
aaah: analyze:00006153:  parser_errposition(vstate->pstate, vstate->pElem->location))); 
aaah: analyze:00006159:  ereport(ERROR, 
aaah: analyze:00006160:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00006161:  errmsg("invalid boundary specification for LIST partition"), 
aaah: analyze:00006162:  errOmitLocation(true), 
aaah: analyze:00006163:  parser_errposition(vstate->pstate, vstate->pElem->location))); 
aaah: analyze:00006188:  ereport(ERROR, 
aaah: analyze:00006189:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00006190:  errmsg("partition key has %i column%s but %i column%s " 
aaah: analyze:00006191:  "specified in VALUES clause", 
aaah: analyze:00006192:  list_length(vstate->pBy->keys), 
aaah: analyze:00006193:  list_length(vstate->pBy->keys) ? "s" : "", 
aaah: analyze:00006194:  nvals, 
aaah: analyze:00006195:  nvals ? "s" : ""), 
aaah: analyze:00006196:  errOmitLocation(true), 
aaah: analyze:00006197:  parser_errposition(vstate->pstate, spec->location))); 
aaah: analyze:00006244:  ereport(ERROR, 
aaah: analyze:00006245:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00006246:  errmsg("duplicate VALUES " 
aaah: analyze:00006247:  "in partition%s%s", 
aaah: analyze:00006248:  vstate->namBuf, 
aaah: analyze:00006249:  vstate->at_depth), 
aaah: analyze:00006250:  errOmitLocation(true), 
aaah: analyze:00006251:  parser_errposition(vstate->pstate, spec->location))); 
aaah: analyze:00006293:  ereport(ERROR, 
aaah: analyze:00006294:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00006295:  errmsg("conflicting ENCODING clauses for column " 
aaah: analyze:00006296:  "\"%s\"", strVal(a->column)))); 
aaah: analyze:00006338:  elog(ERROR, 
aaah: analyze:00006339:  "DEFAULT COLUMN ENCODING clause specified more than " 
aaah: analyze:00006340:  "once for partition"); 
aaah: analyze:00006370:  ereport(ERROR, 
aaah: analyze:00006371:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00006372:  errmsg("ENCODING clause only supported with " 
aaah: analyze:00006373:  "column oriented partitions"), 
aaah: analyze:00006374:  parser_errposition(pstate, elem->location))); 
aaah: analyze:00006523:  ereport(ERROR, 
aaah: analyze:00006524:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00006525:  errmsg("partition specific ENCODING clause not supported in SUBPARTITION TEMPLATE"), 
aaah: analyze:00006526:  parser_errposition(pstate, pElem->location))); 
aaah: analyze:00006557:  ereport(ERROR, 
aaah: analyze:00006558:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00006559:  errmsg("multiple default partitions are not " 
aaah: analyze:00006560:  "allowed"), 
aaah: analyze:00006561:  errOmitLocation(true), 
aaah: analyze:00006562:  parser_errposition(pstate, pElem->location))); 
aaah: analyze:00006570:  ereport(ERROR, 
aaah: analyze:00006571:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00006572:  errmsg("invalid use of DEFAULT partition " 
aaah: analyze:00006573:  "for partition%s of type HASH%s", 
aaah: analyze:00006574:  namBuf, 
aaah: analyze:00006575:  at_depth), 
aaah: analyze:00006576:  errOmitLocation(true), 
aaah: analyze:00006577:  parser_errposition(pstate, pElem->location))); 
aaah: analyze:00006583:  ereport(ERROR, 
aaah: analyze:00006584:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00006585:  errmsg("invalid use of boundary specification " 
aaah: analyze:00006586:  "for DEFAULT partition%s%s", 
aaah: analyze:00006587:  namBuf, 
aaah: analyze:00006588:  at_depth), 
aaah: analyze:00006589:  errOmitLocation(true), 
aaah: analyze:00006590:  parser_errposition(pstate, pElem->location))); 
aaah: analyze:00006611:  ereport(ERROR, 
aaah: analyze:00006612:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00006613:  errmsg("duplicate partition name " 
aaah: analyze:00006614:  "for partition%s%s", 
aaah: analyze:00006615:  namBuf, 
aaah: analyze:00006616:  at_depth), 
aaah: analyze:00006617:  errOmitLocation(true), 
aaah: analyze:00006618:  parser_errposition(pstate, pElem->location))); 
aaah: analyze:00006655:  ereport(ERROR, 
aaah: analyze:00006656:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00006657:  errmsg("invalid use of %s boundary specification " 
aaah: analyze:00006658:  "in partition%s of type HASH%s", 
aaah: analyze:00006659:  specTName, 
aaah: analyze:00006660:  vstate->namBuf, 
aaah: analyze:00006661:  vstate->at_depth), 
aaah: analyze:00006662:  errOmitLocation(true), 
aaah: analyze:00006663:  /* MPP-4249: use value spec location if have one */ 
aaah: analyze:00006664:  ((IsA(vstate->spec, PartitionValuesSpec)) ? 
aaah: analyze:00006665:  parser_errposition(pstate, 
aaah: analyze:00006666:  ((PartitionValuesSpec*)vstate->spec)->location) : 
aaah: analyze:00006667:  /* else use boundspec */ 
aaah: analyze:00006668:  parser_errposition(pstate, 
aaah: analyze:00006669:  ((PartitionBoundSpec*)vstate->spec)->location) 
aaah: analyze:00006670:  ))); 
aaah: analyze:00006683:  ereport(ERROR, 
aaah: analyze:00006684:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00006685:  errmsg("unknown partition type %d %s", 
aaah: analyze:00006686:  pBy->partType, at_depth), 
aaah: analyze:00006687:  errOmitLocation(true), 
aaah: analyze:00006688:  parser_errposition(pstate, pBy->location))); 
aaah: analyze:00006711:  ereport(ERROR, 
aaah: analyze:00006712:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00006713:  errmsg("PARTITIONS \"%d\" must match \"%d\" elements " 
aaah: analyze:00006714:  "in specification%s", 
aaah: analyze:00006715:  partNumber, partno, vstate->at_depth), 
aaah: analyze:00006716:  errOmitLocation(true), 
aaah: analyze:00006717:  parser_errposition(pstate, pBy->location))); 
aaah: analyze:00006757:  elog(ERROR, "could not coerce partitioning parameter"); 
aaah: analyze:00006819:  elog(ERROR, "unexpected number of coercion function " 
aaah: analyze:00006820:  "arguments: %d", list_length(fe->args)); 
aaah: analyze:00006854:  elog(ERROR, "unexpected number of arguments for operator function: %d", list_length(op->args)); 
aaah: analyze:00006878:  elog(ERROR, "unknown partitioning argument type: %d", 
aaah: analyze:00006879:  nodeTag(node)); 
aaah: analyze:00006923:  elog(ERROR, "cache lookup failed for operator %u", opexpr->opno); 
aaah: analyze:00007081:  ereport(ERROR, 
aaah: analyze:00007082:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00007083:  errmsg("invalid use of boundary specification " 
aaah: analyze:00007084:  "for DEFAULT partition%s%s", 
aaah: analyze:00007085:  namBuf, 
aaah: analyze:00007086:  at_depth), 
aaah: analyze:00007087:  errOmitLocation(true), 
aaah: analyze:00007088:  parser_errposition(pstate, pElem->location))); 
aaah: analyze:00007094:  ereport(ERROR, 
aaah: analyze:00007095:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00007096:  errmsg("invalid use of LIST boundary specification " 
aaah: analyze:00007097:  "in partition%s of type RANGE%s", 
aaah: analyze:00007098:  namBuf, 
aaah: analyze:00007099:  at_depth), 
aaah: analyze:00007100:  errOmitLocation(true), 
aaah: analyze:00007101:  /* MPP-4249: use value spec location if have one */ 
aaah: analyze:00007102:  ((IsA(pBSpec, PartitionValuesSpec)) ? 
aaah: analyze:00007103:  parser_errposition(pstate, 
aaah: analyze:00007104:  ((PartitionValuesSpec*)pBSpec)->location) : 
aaah: analyze:00007105:  /* else use invalid parsestate/postition */ 
aaah: analyze:00007106:  parser_errposition(NULL, 0) 
aaah: analyze:00007107:  ) 
aaah: analyze:00007108:  )); 
aaah: analyze:00007124:  ereport(ERROR, 
aaah: analyze:00007125:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00007126:  errmsg("EVERY clause in partition%s " 
aaah: analyze:00007127:  "requires START and END%s", 
aaah: analyze:00007128:  namBuf, 
aaah: analyze:00007129:  at_depth), 
aaah: analyze:00007130:  errOmitLocation(true), 
aaah: analyze:00007131:  parser_errposition(pstate, pBSpec->location))); 
aaah: analyze:00007155:  ereport(ERROR, 
aaah: analyze:00007156:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00007157:  errmsg("invalid tablename specification"))); 
aaah: analyze:00007184:  ereport(ERROR, 
aaah: analyze:00007185:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00007186:  errmsg("mismatch between EVERY, START and END " 
aaah: analyze:00007187:  "in partition%s%s", 
aaah: analyze:00007188:  namBuf, 
aaah: analyze:00007189:  at_depth), 
aaah: analyze:00007190:  errOmitLocation(true), 
aaah: analyze:00007191:  parser_errposition(pstate, pBSpec->location))); 
aaah: analyze:00007345:  ereport(ERROR, 
aaah: analyze:00007346:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00007347:  errmsg("EVERY parameter produces ambiguous partition rule"), 
aaah: analyze:00007348:  errOmitLocation(true), 
aaah: analyze:00007349:  parser_errposition(pstate, 
aaah: analyze:00007350:  ((A_Const *)n3)->location))); 
aaah: analyze:00007379:  ereport(ERROR, 
aaah: analyze:00007380:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00007381:  errmsg("EVERY parameter too small"), 
aaah: analyze:00007382:  errOmitLocation(true), 
aaah: analyze:00007383:  parser_errposition(pstate, 
aaah: analyze:00007384:  ((A_Const *)n3)->location))); 
aaah: analyze:00007392:  ereport(ERROR, 
aaah: analyze:00007393:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00007394:  errmsg("END parameter not reached before type overflows"), 
aaah: analyze:00007395:  errOmitLocation(true), 
aaah: analyze:00007396:  parser_errposition(pstate, 
aaah: analyze:00007397:  ((A_Const *)n2)->location))); 
aaah: analyze:00007624:  ereport(NOTICE, 
aaah: analyze:00007625:  (errmsg("%s will create partition \"%s\" for " 
aaah: analyze:00007626:  "table \"%s\"", 
aaah: analyze:00007627:  cxt->stmtType, child_tab_name->relname, 
aaah: analyze:00007628:  cxt->relation->relname))); 
aaah: analyze:00007821:  ereport(ERROR, 
aaah: analyze:00007822:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00007823:  errmsg("column \"%s\" specified in multiple " 
aaah: analyze:00007824:  "partitioning keys", 
aaah: analyze:00007825:  colname), 
aaah: analyze:00007826:  errOmitLocation(true), 
aaah: analyze:00007827:  parser_errposition(cxt->pstate, p->location))); 
aaah: analyze:00007957:  ereport(ERROR, 
aaah: analyze:00007958:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00007959:  errmsg("%sPARTITIONS clause requires a HASH partition%s", 
aaah: analyze:00007960:  pBy->partDepth != 0 ? "SUB" : "", at_depth), 
aaah: analyze:00007961:  errOmitLocation(true), 
aaah: analyze:00007962:  parser_errposition(pstate, pBy->location))); 
aaah: analyze:00007967:  ereport(ERROR, 
aaah: analyze:00007968:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00007969:  errmsg("%sPARTITIONS cannot be less than one%s", 
aaah: analyze:00007970:  pBy->partDepth != 0 ? "SUB" : "", at_depth), 
aaah: analyze:00007971:  errOmitLocation(true), 
aaah: analyze:00007972:  parser_errposition(pstate, pBy->location))); 
aaah: analyze:00007984:  ereport(ERROR, 
aaah: analyze:00007985:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00007986:  errmsg("too many columns for RANGE partition%s -- " 
aaah: analyze:00007987:  "only one column is allowed.", 
aaah: analyze:00007988:  at_depth), 
aaah: analyze:00007989:  errOmitLocation(true), 
aaah: analyze:00007990:  parser_errposition(pstate, pBy->location))); 
aaah: analyze:00008015:  ereport(ERROR, 
aaah: analyze:00008016:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00008017:  errmsg("column \"%s\" specified more than once " 
aaah: analyze:00008018:  "in partitioning key", 
aaah: analyze:00008019:  colname), 
aaah: analyze:00008020:  errOmitLocation(true), 
aaah: analyze:00008021:  parser_errposition(pstate, pBy->location))); 
aaah: analyze:00008045:  ereport(ERROR, 
aaah: analyze:00008046:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
aaah: analyze:00008047:  errmsg("column \"%s\" does not exist in relation \"%s\"", 
aaah: analyze:00008048:  colname, cxt->relation->relname), 
aaah: analyze:00008049:  errOmitLocation(true), 
aaah: analyze:00008050:  parser_errposition(pstate, pBy->location))); 
aaah: analyze:00008063:  elog(ERROR, "unknown partitioning type %i", 
aaah: analyze:00008064:  pBy->partType); 
aaah: analyze:00008071:  ereport(ERROR, 
aaah: analyze:00008072:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaah: analyze:00008073:  errmsg("data type %s has no default operator class", 
aaah: analyze:00008074:  format_type_be(typeid)), 
aaah: analyze:00008075:  errOmitLocation(true))); 
aaah: analyze:00008104:  elog(ERROR, "unexpected constraint type in internal transformation"); 
aaah: analyze:00008107:  ereport(ERROR, 
aaah: analyze:00008108:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
aaah: analyze:00008109:  errmsg("%s constraint must contain all columns in the " 
aaah: analyze:00008110:  "partition key", 
aaah: analyze:00008111:  what), 
aaah: analyze:00008112:  errhint("Include column \"%s\" in the %s constraint or create " 
aaah: analyze:00008113:  "a part-wise UNIQUE index after creating the table instead.", 
aaah: analyze:00008114:  strVal(partkeyname), what))); 
aaah: analyze:00008138:  ereport(ERROR, 
aaah: analyze:00008139:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00008140:  errmsg("hash partition requires PARTITIONS clause " 
aaah: analyze:00008141:  "or partition specification"), 
aaah: analyze:00008142:  errOmitLocation(true), 
aaah: analyze:00008143:  parser_errposition(pstate, pBy->location))); 
aaah: analyze:00008166:  ereport(ERROR, 
aaah: analyze:00008167:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00008168:  errmsg("no partitions specified at depth %d", 
aaah: analyze:00008169:  partDepth), 
aaah: analyze:00008170:  errOmitLocation(true), 
aaah: analyze:00008171:  parser_errposition(pstate, pBy->location))); 
aaah: analyze:00008199:  ereport(ERROR, 
aaah: analyze:00008200:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00008201:  errmsg("missing SUBPARTITION BY clause for " 
aaah: analyze:00008202:  "subpartition specification%s", 
aaah: analyze:00008203:  at_depth), 
aaah: analyze:00008204:  errOmitLocation(true), 
aaah: analyze:00008205:  parser_errposition(pstate, pBy->location))); 
aaah: analyze:00008209:  ereport(ERROR, 
aaah: analyze:00008210:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00008211:  errmsg("subpartition specification conflict%s", 
aaah: analyze:00008212:  at_depth), 
aaah: analyze:00008213:  errOmitLocation(true), 
aaah: analyze:00008214:  parser_errposition(pstate, psubBy->location))); 
aaah: analyze:00008332:  ereport(ERROR, 
aaah: analyze:00008333:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00008334:  errmsg("missing SUBPARTITION BY clause " 
aaah: analyze:00008335:  "for subpartition specification%s", 
aaah: analyze:00008336:  at_depth), 
aaah: analyze:00008337:  errOmitLocation(true), 
aaah: analyze:00008338:  parser_errposition(pstate, pElem->location))); 
aaah: analyze:00008345:  ereport(ERROR, 
aaah: analyze:00008346:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
aaah: analyze:00008347:  errmsg("subpartition configuration conflicts " 
aaah: analyze:00008348:  "with subpartition template"), 
aaah: analyze:00008349:  errOmitLocation(true), 
aaah: analyze:00008350:  parser_errposition(pstate, psubBy->location))); 
aaah: analyze:00008410:  ereport(ERROR, 
aaah: analyze:00008411:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00008412:  errmsg("invalid tablename specification"))); 
aaah: analyze:00008686:  ereport(ERROR, 
aaah: analyze:00008687:  (errcode(ERRCODE_UNDEFINED_TABLE), 
aaah: analyze:00008688:  errmsg("relation \"%s.%s\" does not exist", 
aaah: analyze:00008689:  stmt->relation->schemaname, stmt->relation->relname), 
aaah: analyze:00008690:  errOmitLocation(true))); 
aaah: analyze:00008692:  ereport(ERROR, 
aaah: analyze:00008693:  (errcode(ERRCODE_UNDEFINED_TABLE), 
aaah: analyze:00008694:  errmsg("relation \"%s\" does not exist", 
aaah: analyze:00008695:  stmt->relation->relname), 
aaah: analyze:00008696:  errOmitLocation(true))); 
aaah: analyze:00008739:  elog(NOTICE, "building index for child partition \"%s\"", 
aaah: analyze:00008740:  RelationGetRelationName(crel)); 
aaah: analyze:00008850:  ereport(ERROR, 
aaah: analyze:00008851:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
aaah: analyze:00008852:  errmsg("index expression may not return a set"), 
aaah: analyze:00008853:  errOmitLocation(true))); 
aaah: analyze:00008930:  elog(ERROR, "unrecognized event type: %d", 
aaah: analyze:00008931:  (int) stmt->event); 
aaah: analyze:00008943:  ereport(ERROR, 
aaah: analyze:00008944:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
aaah: analyze:00008945:  errmsg("rule WHERE condition may not contain references to other relations"), 
aaah: analyze:00008946:  errOmitLocation(true))); 
aaah: analyze:00008950:  ereport(ERROR, 
aaah: analyze:00008951:  (errcode(ERRCODE_GROUPING_ERROR), 
aaah: analyze:00008952:  errmsg("cannot use aggregate function in rule WHERE condition"), 
aaah: analyze:00008953:  errOmitLocation(true))); 
aaah: analyze:00008956:  ereport(ERROR, 
aaah: analyze:00008957:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00008958:  errmsg("cannot use window function in rule WHERE condition"), 
aaah: analyze:00008959:  errOmitLocation(true))); 
aaah: analyze:00009027:  ereport(ERROR, 
aaah: analyze:00009028:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
aaah: analyze:00009029:  errmsg("rules with WHERE conditions may only have SELECT, INSERT, UPDATE, or DELETE actions"), 
aaah: analyze:00009030:  errOmitLocation(true))); 
aaah: analyze:00009046:  ereport(ERROR, 
aaah: analyze:00009047:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00009048:  errmsg("conditional UNION/INTERSECT/EXCEPT statements are not implemented"), 
aaah: analyze:00009049:  errOmitLocation(true))); 
aaah: analyze:00009065:  ereport(ERROR, 
aaah: analyze:00009066:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
aaah: analyze:00009067:  errmsg("ON SELECT rule may not use OLD"), 
aaah: analyze:00009068:  errOmitLocation(true))); 
aaah: analyze:00009070:  ereport(ERROR, 
aaah: analyze:00009071:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
aaah: analyze:00009072:  errmsg("ON SELECT rule may not use NEW"), 
aaah: analyze:00009073:  errOmitLocation(true))); 
aaah: analyze:00009080:  ereport(ERROR, 
aaah: analyze:00009081:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
aaah: analyze:00009082:  errmsg("ON INSERT rule may not use OLD"), 
aaah: analyze:00009083:  errOmitLocation(true))); 
aaah: analyze:00009087:  ereport(ERROR, 
aaah: analyze:00009088:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
aaah: analyze:00009089:  errmsg("ON DELETE rule may not use NEW"), 
aaah: analyze:00009090:  errOmitLocation(true))); 
aaah: analyze:00009093:  elog(ERROR, "unrecognized event type: %d", 
aaah: analyze:00009094:  (int) stmt->event); 
aaah: analyze:00009121:  ereport(ERROR, 
aaah: analyze:00009122:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00009123:  errmsg("conditional UNION/INTERSECT/EXCEPT statements are not implemented"), 
aaah: analyze:00009124:  errOmitLocation(true))); 
aaah: analyze:00009301:  elog(ERROR, "inconsistency detected in internal grouped windows transformation"); 
aaah: analyze:00009602:  ereport(ERROR, 
aaah: analyze:00009603:  (errcode(ERRCODE_WINDOWING_ERROR), 
aaah: analyze:00009604:  errmsg("unresolved grouping key in window query"), 
aaah: analyze:00009605:  errhint("You may need to use explicit aliases and/or to refer to grouping " 
aaah: analyze:00009606:  "keys in the same way throughout the query."), 
aaah: analyze:00009607:  errOmitLocation(true))); 
aaah: analyze:00009687:  ereport(ERROR, 
aaah: analyze:00009688:  (errcode(ERRCODE_INTERNAL_ERROR), 
aaah: analyze:00009689:  errmsg("can't generate internal attribute name"), 
aaah: analyze:00009690:  errOmitLocation(true))); 
aaah: analyze:00009929:  ereport(ERROR, 
aaah: analyze:00009930:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
aaah: analyze:00009931:  errmsg("Cannot support select for update/share statement yet") )); 
aaah: analyze:00010014:  ereport(ERROR, 
aaah: analyze:00010015:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00010016:  errmsg("VALUES lists must all be the same length"), 
aaah: analyze:00010017:  errOmitLocation(true))); 
aaah: analyze:00010028:  ereport(ERROR, 
aaah: analyze:00010029:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00010030:  errmsg("DEFAULT can only appear in a VALUES list within INSERT"), 
aaah: analyze:00010031:  errOmitLocation(true))); 
aaah: analyze:00010101:  ereport(ERROR, 
aaah: analyze:00010102:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00010103:  errmsg("SELECT FOR UPDATE/SHARE cannot be applied to VALUES"), 
aaah: analyze:00010104:  errOmitLocation(true))); 
aaah: analyze:00010125:  ereport(ERROR, 
aaah: analyze:00010126:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00010127:  errmsg("VALUES must not contain table references"), 
aaah: analyze:00010128:  errOmitLocation(true))); 
aaah: analyze:00010138:  ereport(ERROR, 
aaah: analyze:00010139:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00010140:  errmsg("VALUES must not contain OLD or NEW references"), 
aaah: analyze:00010141:  errhint("Use SELECT ... UNION ALL ... instead."), 
aaah: analyze:00010142:  errOmitLocation(true))); 
aaah: analyze:00010150:  ereport(ERROR, 
aaah: analyze:00010151:  (errcode(ERRCODE_GROUPING_ERROR), 
aaah: analyze:00010152:  errmsg("cannot use aggregate function in VALUES"), 
aaah: analyze:00010153:  errOmitLocation(true))); 
aaah: analyze:00010156:  ereport(ERROR, 
aaah: analyze:00010157:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00010158:  errmsg("cannot use window function in VALUES"), 
aaah: analyze:00010159:  errOmitLocation(true))); 
aaah: analyze:00010249:  ereport(ERROR, 
aaah: analyze:00010250:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00010251:  errmsg("SELECT FOR UPDATE/SHARE is not allowed with UNION/INTERSECT/EXCEPT"), 
aaah: analyze:00010252:  errOmitLocation(true))); 
aaah: analyze:00010490:  ereport(ERROR, 
aaah: analyze:00010491:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00010492:  errmsg("ORDER BY on a UNION/INTERSECT/EXCEPT result must be on one of the result columns"), 
aaah: analyze:00010493:  errOmitLocation(true))); 
aaah: analyze:00010548:  ereport(ERROR, 
aaah: analyze:00010549:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00010550:  errmsg("INTO is only allowed on first SELECT of UNION/INTERSECT/EXCEPT"), 
aaah: analyze:00010551:  errOmitLocation(true))); 
aaah: analyze:00010554:  ereport(ERROR, 
aaah: analyze:00010555:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00010556:  errmsg("SELECT FOR UPDATE/SHARE is not allowed with UNION/INTERSECT/EXCEPT"), 
aaah: analyze:00010557:  errOmitLocation(true))); 
aaah: analyze:00010590:  ereport(ERROR, 
aaah: analyze:00010591:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
aaah: analyze:00010592:  errmsg("UNION/INTERSECT/EXCEPT member statement may not refer to other relations of same query level"), 
aaah: analyze:00010593:  errOmitLocation(true))); 
aaah: analyze:00010655:  ereport(ERROR, 
aaah: analyze:00010656:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00010657:  errmsg("each %s query must have the same number of columns", 
aaah: analyze:00010658:  context), 
aaah: analyze:00010659:  errOmitLocation(true))); 
aaah: analyze:00010869:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(node)); 
aaah: analyze:00010902:  ereport(ERROR, 
aaah: analyze:00010903:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00010904:  errmsg("CREATE TABLE AS specifies too many column names"), 
aaah: analyze:00010905:  errOmitLocation(true))); 
aaah: analyze:00010947:  ereport(ERROR, 
aaah: analyze:00010948:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00010949:  errmsg("The RETURNING clause of the UPDATE statement is not " 
aaah: analyze:00010950:  "supported in this version of Greenplum Database."), 
aaah: analyze:00010951:  errOmitLocation(true))); 
aaah: analyze:00010982:  ereport(ERROR, 
aaah: analyze:00010983:  (errcode(ERRCODE_GROUPING_ERROR), 
aaah: analyze:00010984:  errmsg("cannot use aggregate function in UPDATE"), 
aaah: analyze:00010985:  errOmitLocation(true))); 
aaah: analyze:00010988:  ereport(ERROR, 
aaah: analyze:00010989:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00010990:  errmsg("cannot use window function in UPDATE"), 
aaah: analyze:00010991:  errOmitLocation(true))); 
aaah: analyze:00011024:  elog(ERROR, "UPDATE target count mismatch --- internal error"); 
aaah: analyze:00011034:  ereport(ERROR, 
aaah: analyze:00011035:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
aaah: analyze:00011036:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
aaah: analyze:00011037:  origTarget->name, 
aaah: analyze:00011038:  RelationGetRelationName(pstate->p_target_relation)), 
aaah: analyze:00011039:  errOmitLocation(true), 
aaah: analyze:00011040:  parser_errposition(pstate, origTarget->location))); 
aaah: analyze:00011050:  elog(ERROR, "UPDATE target count mismatch --- internal error"); 
aaah: analyze:00011100:  ereport(ERROR, 
aaah: analyze:00011101:  (errcode(ERRCODE_GROUPING_ERROR), 
aaah: analyze:00011102:  errmsg("cannot use aggregate function in RETURNING"))); 
aaah: analyze:00011105:  ereport(ERROR, 
aaah: analyze:00011106:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00011107:  errmsg("cannot use window function in RETURNING"))); 
aaah: analyze:00011112:  ereport(ERROR, 
aaah: analyze:00011113:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011114:  errmsg("RETURNING may not contain references to other relations"))); 
aaah: analyze:00011168:  ereport(ERROR, 
aaah: analyze:00011169:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaah: analyze:00011170:  errmsg("%s is not partitioned", 
aaah: analyze:00011171:  lrelname))); 
aaah: analyze:00011380:  elog(ERROR, "Cannot add column with primary " 
aaah: analyze:00011381:  "key constraint"); 
aaah: analyze:00011383:  elog(ERROR, "Cannot add column with unique " 
aaah: analyze:00011384:  "constraint"); 
aaah: analyze:00011442:  elog(ERROR, "unrecognized node type: %d", 
aaah: analyze:00011443:  (int) nodeTag(cmd->def)); 
aaah: analyze:00011571:  ereport(ERROR, 
aaah: analyze:00011572:  (errcode(ERRCODE_INVALID_CURSOR_DEFINITION), 
aaah: analyze:00011573:  errmsg("cannot specify both SCROLL and NO SCROLL"))); 
aaah: analyze:00011580:  elog(ERROR, "unexpected extra stuff in cursor statement"); 
aaah: analyze:00011586:  elog(ERROR, "unexpected non-SELECT command in DECLARE CURSOR"); 
aaah: analyze:00011590:  ereport(ERROR, 
aaah: analyze:00011591:  (errcode(ERRCODE_INVALID_CURSOR_DEFINITION), 
aaah: analyze:00011592:  errmsg("DECLARE CURSOR cannot specify INTO"))); 
aaah: analyze:00011671:  ereport(ERROR, 
aaah: analyze:00011672:  (errcode(ERRCODE_INDETERMINATE_DATATYPE), 
aaah: analyze:00011673:  errmsg("type \"%s\" is not a valid parameter for PREPARE", 
aaah: analyze:00011674:  TypeNameToString(tn)))); 
aaah: analyze:00011695:  elog(ERROR, "unexpected extra stuff in prepared statement"); 
aaah: analyze:00011707:  ereport(ERROR, 
aaah: analyze:00011708:  (errcode(ERRCODE_INDETERMINATE_DATATYPE), 
aaah: analyze:00011709:  errmsg("could not determine data type of parameter $%d", 
aaah: analyze:00011710:  i + 1))); 
aaah: analyze:00011740:  ereport(ERROR, 
aaah: analyze:00011741:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00011742:  errmsg("wrong number of parameters for prepared statement \"%s\"", 
aaah: analyze:00011743:  stmt->name), 
aaah: analyze:00011744:  errdetail("Expected %d parameters but got %d.", 
aaah: analyze:00011745:  nexpected, nparams), 
aaah: analyze:00011746:  errOmitLocation(true))); 
aaah: analyze:00011758:  ereport(ERROR, 
aaah: analyze:00011759:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011760:  errmsg("cannot use subquery in EXECUTE parameter"))); 
aaah: analyze:00011762:  ereport(ERROR, 
aaah: analyze:00011763:  (errcode(ERRCODE_GROUPING_ERROR), 
aaah: analyze:00011764:  errmsg("cannot use aggregate function in EXECUTE parameter"))); 
aaah: analyze:00011766:  ereport(ERROR, 
aaah: analyze:00011767:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00011768:  errmsg("cannot use window function in EXECUTE parameter"))); 
aaah: analyze:00011780:  ereport(ERROR, 
aaah: analyze:00011781:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
aaah: analyze:00011782:  errmsg("parameter $%d of type %s cannot be coerced to the expected type %s", 
aaah: analyze:00011783:  i, 
aaah: analyze:00011784:  format_type_be(given_type_id), 
aaah: analyze:00011785:  format_type_be(expected_type_id)), 
aaah: analyze:00011786:  errhint("You will need to rewrite or cast the expression."), 
aaah: analyze:00011787:  errOmitLocation(true))); 
aaah: analyze:00011802:  ereport(ERROR, 
aaah: analyze:00011803:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011804:  errmsg("SELECT FOR UPDATE/SHARE is not allowed with UNION/INTERSECT/EXCEPT"))); 
aaah: analyze:00011806:  ereport(ERROR, 
aaah: analyze:00011807:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011808:  errmsg("SELECT FOR UPDATE/SHARE is not allowed with DISTINCT clause"))); 
aaah: analyze:00011810:  ereport(ERROR, 
aaah: analyze:00011811:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011812:  errmsg("SELECT FOR UPDATE/SHARE is not allowed with GROUP BY clause"))); 
aaah: analyze:00011814:  ereport(ERROR, 
aaah: analyze:00011815:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011816:  errmsg("SELECT FOR UPDATE/SHARE is not allowed with HAVING clause"))); 
aaah: analyze:00011818:  ereport(ERROR, 
aaah: analyze:00011819:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011820:  errmsg("SELECT FOR UPDATE/SHARE is not allowed with aggregate functions"))); 
aaah: analyze:00011822:  ereport(ERROR, 
aaah: analyze:00011823:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011824:  errmsg("SELECT FOR UPDATE/SHARE is not allowed with window functions"))); 
aaah: analyze:00011846:  ereport(ERROR, 
aaah: analyze:00011847:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), 
aaah: analyze:00011848:  errmsg("Cannot support select for update statement yet") )); 
aaah: analyze:00011872:  ereport(ERROR, 
aaah: analyze:00011873:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011874:  errmsg("SELECT FOR UPDATE/SHARE cannot be applied to external tables"))); 
aaah: analyze:00011912:  ereport(ERROR, 
aaah: analyze:00011913:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011914:  errmsg("SELECT FOR UPDATE/SHARE cannot be applied to external tables"))); 
aaah: analyze:00011929:  ereport(ERROR, 
aaah: analyze:00011930:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011931:  errmsg("SELECT FOR UPDATE/SHARE cannot be applied to a join"))); 
aaah: analyze:00011934:  ereport(ERROR, 
aaah: analyze:00011935:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011936:  errmsg("SELECT FOR UPDATE/SHARE cannot be applied to NEW or OLD"))); 
aaah: analyze:00011939:  ereport(ERROR, 
aaah: analyze:00011940:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011941:  errmsg("SELECT FOR UPDATE/SHARE cannot be applied to a function"))); 
aaah: analyze:00011944:  ereport(ERROR, 
aaah: analyze:00011945:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011946:  errmsg("SELECT FOR UPDATE/SHARE cannot be applied to a table function"))); 
aaah: analyze:00011949:  ereport(ERROR, 
aaah: analyze:00011950:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaah: analyze:00011951:  errmsg("SELECT FOR UPDATE/SHARE cannot be applied to VALUES"))); 
aaah: analyze:00011954:  elog(ERROR, "unrecognized RTE type: %d", 
aaah: analyze:00011955:  (int) rte->rtekind); 
aaah: analyze:00011962:  ereport(ERROR, 
aaah: analyze:00011963:  (errcode(ERRCODE_UNDEFINED_TABLE), 
aaah: analyze:00011964:  errmsg("relation \"%s\" in FOR UPDATE/SHARE clause not found in FROM clause", 
aaah: analyze:00011965:  relname))); 
aaah: analyze:00012042:  ereport(ERROR, 
aaah: analyze:00012043:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00012044:  errmsg("misplaced DEFERRABLE clause"))); 
aaah: analyze:00012046:  ereport(ERROR, 
aaah: analyze:00012047:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00012048:  errmsg("multiple DEFERRABLE/NOT DEFERRABLE clauses not allowed"))); 
aaah: analyze:00012055:  ereport(ERROR, 
aaah: analyze:00012056:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00012057:  errmsg("misplaced NOT DEFERRABLE clause"))); 
aaah: analyze:00012059:  ereport(ERROR, 
aaah: analyze:00012060:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00012061:  errmsg("multiple DEFERRABLE/NOT DEFERRABLE clauses not allowed"))); 
aaah: analyze:00012066:  ereport(ERROR, 
aaah: analyze:00012067:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00012068:  errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"))); 
aaah: analyze:00012073:  ereport(ERROR, 
aaah: analyze:00012074:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00012075:  errmsg("misplaced INITIALLY DEFERRED clause"))); 
aaah: analyze:00012077:  ereport(ERROR, 
aaah: analyze:00012078:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00012079:  errmsg("multiple INITIALLY IMMEDIATE/DEFERRED clauses not allowed"))); 
aaah: analyze:00012089:  ereport(ERROR, 
aaah: analyze:00012090:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00012091:  errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"))); 
aaah: analyze:00012096:  ereport(ERROR, 
aaah: analyze:00012097:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00012098:  errmsg("misplaced INITIALLY IMMEDIATE clause"))); 
aaah: analyze:00012100:  ereport(ERROR, 
aaah: analyze:00012101:  (errcode(ERRCODE_SYNTAX_ERROR), 
aaah: analyze:00012102:  errmsg("multiple INITIALLY IMMEDIATE/DEFERRED clauses not allowed"))); 
aaah: analyze:00012149:  ereport(ERROR, 
aaah: analyze:00012150:  (errcode(ERRCODE_INVALID_SCHEMA_DEFINITION), 
aaah: analyze:00012151:  errmsg("CREATE specifies a schema (%s) " 
aaah: analyze:00012152:  "different from the one being created (%s)", 
aaah: analyze:00012153:  *stmt_schema_name, context_schema))); 
aaah: analyze:00012285:  elog(ERROR, "unrecognized node type: %d", 
aaah: analyze:00012286:  (int) nodeTag(element)); 
aaah: analyze:00012323:  ereport(ERROR, 
aaah: analyze:00012324:  (errcode(ERRCODE_UNDEFINED_PARAMETER), 
aaah: analyze:00012325:  errmsg("there is no parameter $%d", paramno))); 
aaah: analyze:00012328:  ereport(ERROR, 
aaah: analyze:00012329:  (errcode(ERRCODE_AMBIGUOUS_PARAMETER), 
aaah: analyze:00012330:  errmsg("could not determine data type of parameter $%d", 
aaah: analyze:00012331:  paramno))); 
aaah: analyze:00012403:  ereport(ERROR, 
aaah: analyze:00012404:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
aaah: analyze:00012405:  errmsg("column \"%s\" named in DISTRIBUTED BY " 
aaah: analyze:00012406:  "clause does not exist", 
aaah: analyze:00012407:  key), 
aaah: analyze:00012408:  errOmitLocation(true))); 
aaah: analyze:00012509:  ereport(NOTICE, 
aaah: analyze:00012510:  (errmsg("Error table \"%s\" does not exist. Auto generating an " 
aaah: analyze:00012511:  "error table with the same name", sreh->errtable->relname))); 
aaaaa GP_IGNORE: gaae: gram - ./backend/parser/gram.c
gaae: gram:00019890:  ereport(ERROR, 
gaae: gram:00019891:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00019892:  errmsg("time zone interval must be HOUR or HOUR TO MINUTE"), 
gaae: gram:00019893:  scanner_errposition((yylsp[(3) - (3)])))); 
gaae: gram:00019905:  ereport(ERROR, 
gaae: gram:00019906:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00019907:  errmsg("INTERVAL(%d) precision must not be negative", (yyvsp[(3) - (6)].ival)), 
gaae: gram:00019908:  scanner_errposition((yylsp[(3) - (6)])))); 
gaae: gram:00019911:  ereport(WARNING, 
gaae: gram:00019912:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00019913:  errmsg("INTERVAL(%d) precision reduced to maximum allowed, %d", 
gaae: gram:00019914:  (yyvsp[(3) - (6)].ival), MAX_INTERVAL_PRECISION))); 
gaae: gram:00019920:  ereport(ERROR, 
gaae: gram:00019921:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00019922:  errmsg("time zone interval must be HOUR or HOUR TO MINUTE"))); 
gaae: gram:00020605:  ereport(ERROR, 
gaae: gram:00020606:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00020607:  errmsg("Cannot specify a name, rank, " 
gaae: gram:00020608:  "or value for a DEFAULT partition " 
gaae: gram:00020609:  "in this context"))); 
gaae: gram:00020673:  ereport(ERROR, 
gaae: gram:00020674:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00020675:  errmsg("Can only ADD a partition by name"), 
gaae: gram:00020676:  errOmitLocation(true))); 
gaae: gram:00020714:  ereport(ERROR, 
gaae: gram:00020715:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00020716:  errmsg("Can only ADD a partition by name"))); 
gaae: gram:00020793:  ereport(ERROR, 
gaae: gram:00020794:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00020795:  errmsg("Can only COALESCE a partition by name"))); 
gaae: gram:00021062:  ereport(ERROR, 
gaae: gram:00021063:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00021064:  errmsg("template cannot contain " 
gaae: gram:00021065:  "specification for child " 
gaae: gram:00021066:  "partition"))); 
gaae: gram:00022056:  ereport(ERROR, 
gaae: gram:00022057:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaae: gram:00022058:  errmsg("MATCH PARTIAL not yet implemented"), 
gaae: gram:00022059:  scanner_errposition((yylsp[(1) - (2)])))); 
gaae: gram:00022785:  ereport(ERROR, 
gaae: gram:00022786:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00022787:  errmsg("PARTITION BY must specify RANGE or LIST"), 
gaae: gram:00022788:  errOmitLocation(true))); 
gaae: gram:00022834:  ereport(ERROR, 
gaae: gram:00022835:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00022836:  errmsg("PARTITION BY must specify RANGE or LIST"))); 
gaae: gram:00022838:  ereport(ERROR, 
gaae: gram:00022839:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00022840:  errmsg("PARTITION BY must specify RANGE, HASH, or LIST"))); 
gaae: gram:00022898:  ereport(ERROR, 
gaae: gram:00022899:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00022900:  errmsg("template cannot contain " 
gaae: gram:00022901:  "specification for child " 
gaae: gram:00022902:  "partition"), 
gaae: gram:00022903:  errOmitLocation(true))); 
gaae: gram:00022996:  ereport(ERROR, 
gaae: gram:00022997:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00022998:  errmsg("CREATE TABLE AS cannot specify INTO"), 
gaae: gram:00022999:  scanner_errposition(exprLocation((Node *) n->intoClause)))); 
gaae: gram:00023008:  ereport(ERROR, 
gaae: gram:00023009:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaae: gram:00023010:  errmsg("Cannot create a partitioned table using CREATE TABLE AS SELECT"), 
gaae: gram:00023011:  errhint("Use CREATE TABLE...LIKE (followed by INSERT...SELECT) instead"), 
gaae: gram:00023012:  errOmitLocation(true))); 
gaae: gram:00023122:  ereport(ERROR, 
gaae: gram:00023123:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00023124:  errmsg("EXECUTE may not be used with a regular external table"), 
gaae: gram:00023125:  errhint("Use CREATE EXTERNAL WEB TABLE instead"), 
gaae: gram:00023126:  errOmitLocation(true))); 
gaae: gram:00023136:  ereport(ERROR, 
gaae: gram:00023137:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00023138:  errmsg("ON clause may not be used with a writable external table"), 
gaae: gram:00023139:  errOmitLocation(true))); 
gaae: gram:00023144:  ereport(ERROR, 
gaae: gram:00023145:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00023146:  errmsg("Single row error handling may not be used with a writable external table"))); 
gaae: gram:00023445:  ereport(ERROR, 
gaae: gram:00023446:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00023447:  errmsg("invalid PERCENT value. Should be (1 - 100)"))); 
gaae: gram:00023451:  ereport(ERROR, 
gaae: gram:00023452:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00023453:  errmsg("invalid (ROWS) reject limit. Should be 2 or larger"))); 
gaae: gram:00024419:  ereport(ERROR, 
gaae: gram:00024420:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00024421:  errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"), 
gaae: gram:00024422:  scanner_errposition((yylsp[(1) - (2)])))); 
gaae: gram:00024441:  ereport(ERROR, 
gaae: gram:00024442:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00024443:  errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"), 
gaae: gram:00024444:  scanner_errposition((yylsp[(1) - (2)])))); 
gaae: gram:00024510:  ereport(ERROR, 
gaae: gram:00024511:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaae: gram:00024512:  errmsg("CREATE ASSERTION is not yet implemented"))); 
gaae: gram:00024526:  ereport(ERROR, 
gaae: gram:00024527:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaae: gram:00024528:  errmsg("DROP ASSERTION is not yet implemented"))); 
gaae: gram:00024631:  ereport(ERROR, 
gaae: gram:00024632:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00024633:  errmsg("improper qualified name (too many dotted names): %s", 
gaae: gram:00024634:  NameListToString((yyvsp[(3) - (7)].list))), 
gaae: gram:00024635:  scanner_errposition((yylsp[(3) - (7)])))); 
gaae: gram:00025862:  ereport(ERROR, 
gaae: gram:00025863:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaae: gram:00025864:  errmsg("CREATE INDEX CONCURRENTLY is not supported"))); 
gaae: gram:00026417:  ereport(ERROR, 
gaae: gram:00026418:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00026419:  errmsg("missing argument"), 
gaae: gram:00026420:  errhint("Use NONE to denote the missing argument of a unary operator."), 
gaae: gram:00026421:  errOmitLocation(true), 
gaae: gram:00026422:  scanner_errposition((yylsp[(1) - (1)])))); 
gaae: gram:00027423:  ereport(ERROR, 
gaae: gram:00027424:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaae: gram:00027425:  errmsg("WITH CHECK OPTION is not implemented"))); 
gaae: gram:00027432:  ereport(ERROR, 
gaae: gram:00027433:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaae: gram:00027434:  errmsg("WITH CHECK OPTION is not implemented"))); 
gaae: gram:00027441:  ereport(ERROR, 
gaae: gram:00027442:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaae: gram:00027443:  errmsg("WITH CHECK OPTION is not implemented"))); 
gaae: gram:00027894:  ereport(ERROR, (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00027895:  errmsg("cannot use force with explain statement") 
gaae: gram:00027896:  )); 
gaae: gram:00027905:  ereport(ERROR, 
gaae: gram:00027906:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaae: gram:00027907:  errmsg("cannot EXPLAIN CREATE TABLE without AS " 
gaae: gram:00027908:  "clause"))); 
gaae: gram:00027983:  ereport(ERROR, 
gaae: gram:00027984:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaae: gram:00027985:  errmsg("column name list not allowed in CREATE TABLE / AS EXECUTE"))); 
gaae: gram:00028250:  ereport(ERROR, 
gaae: gram:00028251:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00028252:  errmsg("number of columns does not match number of values"), 
gaae: gram:00028253:  scanner_errposition((yylsp[(1) - (5)])))); 
gaae: gram:00028731:  ereport(ERROR, 
gaae: gram:00028732:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00028733:  errmsg("LIMIT #,# syntax is not supported"), 
gaae: gram:00028734:  errhint("Use separate LIMIT and OFFSET clauses."), 
gaae: gram:00028735:  scanner_errposition((yylsp[(1) - (4)])))); 
gaae: gram:00029315:  ereport(ERROR, 
gaae: gram:00029316:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00029317:  errmsg("VALUES in FROM must have an alias"), 
gaae: gram:00029318:  errhint("For example, FROM (VALUES ...) [AS] foo."), 
gaae: gram:00029319:  scanner_errposition((yylsp[(1) - (1)])))); 
gaae: gram:00029321:  ereport(ERROR, 
gaae: gram:00029322:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00029323:  errmsg("subquery in FROM must have an alias"), 
gaae: gram:00029324:  errhint("For example, FROM (SELECT ...) [AS] foo."), 
gaae: gram:00029325:  scanner_errposition((yylsp[(1) - (1)])))); 
gaae: gram:00029723:  ereport(ERROR, 
gaae: gram:00029724:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00029725:  errmsg("INTERVAL(%d) precision must not be negative", (yyvsp[(3) - (5)].ival)), 
gaae: gram:00029726:  scanner_errposition((yylsp[(3) - (5)])))); 
gaae: gram:00029729:  ereport(WARNING, 
gaae: gram:00029730:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00029731:  errmsg("INTERVAL(%d) precision reduced to maximum allowed, %d", 
gaae: gram:00029732:  (yyvsp[(3) - (5)].ival), MAX_INTERVAL_PRECISION), 
gaae: gram:00029733:  scanner_errposition((yylsp[(3) - (5)])))); 
gaae: gram:00029879:  ereport(ERROR, 
gaae: gram:00029880:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00029881:  errmsg("precision for type float must be at least 1 bit"), 
gaae: gram:00029882:  scanner_errposition((yylsp[(2) - (3)])))); 
gaae: gram:00029888:  ereport(ERROR, 
gaae: gram:00029889:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00029890:  errmsg("precision for type float must be less than 54 bits"), 
gaae: gram:00029891:  scanner_errposition((yylsp[(2) - (3)])))); 
gaae: gram:00029906:  ereport(ERROR, 
gaae: gram:00029907:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00029908:  errmsg("NUMERIC precision %d must be between 1 and %d", 
gaae: gram:00029909:  (yyvsp[(2) - (5)].ival), NUMERIC_MAX_PRECISION))); 
gaae: gram:00029911:  ereport(ERROR, 
gaae: gram:00029912:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00029913:  errmsg("NUMERIC scale %d must be between 0 and precision %d", 
gaae: gram:00029914:  (yyvsp[(4) - (5)].ival), (yyvsp[(2) - (5)].ival)))); 
gaae: gram:00029924:  ereport(ERROR, 
gaae: gram:00029925:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00029926:  errmsg("NUMERIC precision %d must be between 1 and %d", 
gaae: gram:00029927:  (yyvsp[(2) - (3)].ival), NUMERIC_MAX_PRECISION))); 
gaae: gram:00029945:  ereport(ERROR, 
gaae: gram:00029946:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00029947:  errmsg("DECIMAL precision %d must be between 1 and %d", 
gaae: gram:00029948:  (yyvsp[(2) - (5)].ival), NUMERIC_MAX_PRECISION))); 
gaae: gram:00029950:  ereport(ERROR, 
gaae: gram:00029951:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00029952:  errmsg("DECIMAL scale %d must be between 0 and precision %d", 
gaae: gram:00029953:  (yyvsp[(4) - (5)].ival), (yyvsp[(2) - (5)].ival)))); 
gaae: gram:00029963:  ereport(ERROR, 
gaae: gram:00029964:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00029965:  errmsg("DECIMAL precision %d must be between 1 and %d", 
gaae: gram:00029966:  (yyvsp[(2) - (3)].ival), NUMERIC_MAX_PRECISION))); 
gaae: gram:00030017:  ereport(ERROR, 
gaae: gram:00030018:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00030019:  errmsg("length for type %s must be at least 1", 
gaae: gram:00030020:  typname))); 
gaae: gram:00030022:  ereport(ERROR, 
gaae: gram:00030023:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00030024:  errmsg("length for type %s cannot exceed %d", 
gaae: gram:00030025:  typname, MaxAttrSize * BITS_PER_BYTE))); 
gaae: gram:00030100:  ereport(ERROR, 
gaae: gram:00030101:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00030102:  errmsg("length for type %s must be at least 1", 
gaae: gram:00030103:  (yyvsp[(1) - (5)].str)))); 
gaae: gram:00030105:  ereport(ERROR, 
gaae: gram:00030106:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00030107:  errmsg("length for type %s cannot exceed %d", 
gaae: gram:00030108:  (yyvsp[(1) - (5)].str), MaxAttrSize))); 
gaae: gram:00030205:  ereport(ERROR, 
gaae: gram:00030206:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00030207:  errmsg("TIMESTAMP(%d)%s precision must not be negative", 
gaae: gram:00030208:  (yyvsp[(3) - (5)].ival), ((yyvsp[(5) - (5)].boolean) ? " WITH TIME ZONE": "")))); 
gaae: gram:00030211:  ereport(WARNING, 
gaae: gram:00030212:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00030213:  errmsg("TIMESTAMP(%d)%s precision reduced to maximum allowed, %d", 
gaae: gram:00030214:  (yyvsp[(3) - (5)].ival), ((yyvsp[(5) - (5)].boolean) ? " WITH TIME ZONE": ""), 
gaae: gram:00030215:  MAX_TIMESTAMP_PRECISION))); 
gaae: gram:00030246:  ereport(ERROR, 
gaae: gram:00030247:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00030248:  errmsg("TIME(%d)%s precision must not be negative", 
gaae: gram:00030249:  (yyvsp[(3) - (5)].ival), ((yyvsp[(5) - (5)].boolean) ? " WITH TIME ZONE": "")))); 
gaae: gram:00030252:  ereport(WARNING, 
gaae: gram:00030253:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00030254:  errmsg("TIME(%d)%s precision reduced to maximum allowed, %d", 
gaae: gram:00030255:  (yyvsp[(3) - (5)].ival), ((yyvsp[(5) - (5)].boolean) ? " WITH TIME ZONE": ""), 
gaae: gram:00030256:  MAX_TIME_PRECISION))); 
gaae: gram:00030897:  ereport(ERROR, 
gaae: gram:00030898:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaae: gram:00030899:  errmsg("UNIQUE predicate is not yet implemented"), 
gaae: gram:00030900:  scanner_errposition((yylsp[(1) - (2)])))); 
gaae: gram:00031028:  ereport(ERROR, 
gaae: gram:00031029:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00031030:  errmsg("window OVER clause can only be used " 
gaae: gram:00031031:  "with an aggregate"))); 
gaae: gram:00031358:  ereport(ERROR, 
gaae: gram:00031359:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00031360:  errmsg("CURRENT_TIME(%d) precision must not be negative", 
gaae: gram:00031361:  (yyvsp[(3) - (4)].ival)))); 
gaae: gram:00031364:  ereport(WARNING, 
gaae: gram:00031365:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00031366:  errmsg("CURRENT_TIME(%d) precision reduced to maximum allowed, %d", 
gaae: gram:00031367:  (yyvsp[(3) - (4)].ival), MAX_TIME_PRECISION))); 
gaae: gram:00031411:  ereport(ERROR, 
gaae: gram:00031412:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00031413:  errmsg("CURRENT_TIMESTAMP(%d) precision must not be negative", 
gaae: gram:00031414:  (yyvsp[(3) - (4)].ival)))); 
gaae: gram:00031417:  ereport(WARNING, 
gaae: gram:00031418:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00031419:  errmsg("CURRENT_TIMESTAMP(%d) precision reduced to maximum allowed, %d", 
gaae: gram:00031420:  (yyvsp[(3) - (4)].ival), MAX_TIMESTAMP_PRECISION))); 
gaae: gram:00031464:  ereport(ERROR, 
gaae: gram:00031465:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00031466:  errmsg("LOCALTIME(%d) precision must not be negative", 
gaae: gram:00031467:  (yyvsp[(3) - (4)].ival)))); 
gaae: gram:00031470:  ereport(WARNING, 
gaae: gram:00031471:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00031472:  errmsg("LOCALTIME(%d) precision reduced to maximum allowed, %d", 
gaae: gram:00031473:  (yyvsp[(3) - (4)].ival), MAX_TIME_PRECISION))); 
gaae: gram:00031518:  ereport(ERROR, 
gaae: gram:00031519:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00031520:  errmsg("LOCALTIMESTAMP(%d) precision must not be negative", 
gaae: gram:00031521:  (yyvsp[(3) - (4)].ival)))); 
gaae: gram:00031524:  ereport(WARNING, 
gaae: gram:00031525:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00031526:  errmsg("LOCALTIMESTAMP(%d) precision reduced to maximum allowed, %d", 
gaae: gram:00031527:  (yyvsp[(3) - (4)].ival), MAX_TIMESTAMP_PRECISION))); 
gaae: gram:00032617:  ereport(ERROR, 
gaae: gram:00032618:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00032619:  errmsg("improper qualified name (too many dotted names): %s", 
gaae: gram:00032620:  NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))))); 
gaae: gram:00032774:  ereport(ERROR, 
gaae: gram:00032775:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00032776:  errmsg("INTERVAL(%d) precision must not be negative", 
gaae: gram:00032777:  (yyvsp[(3) - (6)].ival)))); 
gaae: gram:00032780:  ereport(WARNING, 
gaae: gram:00032781:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaae: gram:00032782:  errmsg("INTERVAL(%d) precision reduced to maximum allowed, %d", 
gaae: gram:00032783:  (yyvsp[(3) - (6)].ival), MAX_INTERVAL_PRECISION))); 
gaae: gram:00032936:  ereport(ERROR, 
gaae: gram:00032937:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00032938:  errmsg("OLD used in query that is not in a rule"))); 
gaae: gram:00032948:  ereport(ERROR, 
gaae: gram:00032949:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00032950:  errmsg("NEW used in query that is not in a rule"))); 
gaae: gram:00033383:  ereport(ERROR, 
gaae: gram:00033384:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00033385:  errmsg("wrong number of parameters on left side of OVERLAPS expression"), 
gaae: gram:00033386:  scanner_errposition(location))); 
gaae: gram:00033390:  ereport(ERROR, 
gaae: gram:00033391:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00033392:  errmsg("wrong number of parameters on right side of OVERLAPS expression"), 
gaae: gram:00033393:  scanner_errposition(location))); 
gaae: gram:00033497:  ereport(ERROR, 
gaae: gram:00033498:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00033499:  errmsg("syntax error at or near \"ORDER BY\""), 
gaae: gram:00033500:  scanner_errposition(exprLocation((Node *) sortClause)))); 
gaae: gram:00033508:  ereport(ERROR, 
gaae: gram:00033509:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00033510:  errmsg("syntax error at or near \"OFFSET\""), 
gaae: gram:00033511:  scanner_errposition(exprLocation(limitOffset)))); 
gaae: gram:00033517:  ereport(ERROR, 
gaae: gram:00033518:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00033519:  errmsg("syntax error at or near \"LIMIT\""), 
gaae: gram:00033520:  scanner_errposition(exprLocation(limitCount)))); 
gaae: gram:00033526:  ereport(ERROR, 
gaae: gram:00033527:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00033528:  errmsg("syntax error at or near \"WITH\""), 
gaae: gram:00033529:  scanner_errposition(exprLocation((Node *)withClause)))); 
gaae: gram:00033682:  ereport(ERROR, 
gaae: gram:00033683:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00033684:  errmsg("OUT arguments aren't allowed in TABLE functions"))); 
gaae: gram:00033687:  ereport(ERROR, 
gaae: gram:00033688:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00033689:  errmsg("INOUT arguments aren't allowed in TABLE functions"))); 
gaae: gram:00033746:  ereport(ERROR, 
gaae: gram:00033747:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaae: gram:00033748:  errmsg("window EXCLUDE clause not yet implemented"))); 
gaae: gram:00033752:  ereport(ERROR, 
gaae: gram:00033753:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaae: gram:00033754:  errmsg("invalid window EXCLUDE clause"))); 
aaaaa GP_IGNORE: paaj: parsexagg - ./backend/parser/parse_agg.c
paaj: parsexagg:00000087:  ereport(ERROR, 
paaj: parsexagg:00000088:  (errcode(ERRCODE_GROUPING_ERROR), 
paaj: parsexagg:00000089:  errmsg("aggregate function calls may not be nested"), 
paaj: parsexagg:00000090:  errOmitLocation(true))); 
paaj: parsexagg:00000094:  ereport(ERROR, 
paaj: parsexagg:00000095:  (errcode(ERRCODE_GROUPING_ERROR), 
paaj: parsexagg:00000096:  errmsg("window functions may not be used as arguments to " 
paaj: parsexagg:00000097:  "aggregates"), 
paaj: parsexagg:00000098:  errOmitLocation(true))); 
paaj: parsexagg:00000110:  ereport(ERROR, 
paaj: parsexagg:00000111:  (errcode(ERRCODE_GROUPING_ERROR), 
paaj: parsexagg:00000112:  errmsg("cannot use window function as an argument " 
paaj: parsexagg:00000113:  "to another window function"), 
paaj: parsexagg:00000114:  errOmitLocation(true))); 
paaj: parsexagg:00000230:  ereport(ERROR, 
paaj: parsexagg:00000231:  (errcode(ERRCODE_GROUPING_ERROR), 
paaj: parsexagg:00000232:  errmsg("aggregates not allowed in WHERE clause"), 
paaj: parsexagg:00000233:  errOmitLocation(true))); 
paaj: parsexagg:00000235:  ereport(ERROR, 
paaj: parsexagg:00000236:  (errcode(ERRCODE_GROUPING_ERROR), 
paaj: parsexagg:00000237:  errmsg("aggregates not allowed in JOIN conditions"), 
paaj: parsexagg:00000238:  errOmitLocation(true))); 
paaj: parsexagg:00000241:  ereport(ERROR, 
paaj: parsexagg:00000242:  (errcode(ERRCODE_SYNTAX_ERROR), 
paaj: parsexagg:00000243:  errmsg("window functions not allowed in WHERE clause"), 
paaj: parsexagg:00000244:  errOmitLocation(true))); 
paaj: parsexagg:00000246:  ereport(ERROR, 
paaj: parsexagg:00000247:  (errcode(ERRCODE_SYNTAX_ERROR), 
paaj: parsexagg:00000248:  errmsg("window functions not allowed in JOIN conditions"), 
paaj: parsexagg:00000249:  errOmitLocation(true))); 
paaj: parsexagg:00000251:  ereport(ERROR, 
paaj: parsexagg:00000252:  (errcode(ERRCODE_SYNTAX_ERROR), 
paaj: parsexagg:00000253:  errmsg("window functions not allowed in HAVING conditions"), 
paaj: parsexagg:00000254:  errOmitLocation(true))); 
paaj: parsexagg:00000343:  ereport(ERROR, 
paaj: parsexagg:00000344:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paaj: parsexagg:00000345:  errmsg("correlated subquery cannot contain percentile functions"))); 
paaj: parsexagg:00000469:  ereport(ERROR, 
paaj: parsexagg:00000470:  (errcode(ERRCODE_GROUPING_ERROR), 
paaj: parsexagg:00000471:  errmsg("column \"%s.%s\" must appear in the GROUP BY clause or be used in an aggregate function", 
paaj: parsexagg:00000472:  rte->eref->aliasname, attname), 
paaj: parsexagg:00000473:  errOmitLocation(true))); 
paaj: parsexagg:00000475:  ereport(ERROR, 
paaj: parsexagg:00000476:  (errcode(ERRCODE_GROUPING_ERROR), 
paaj: parsexagg:00000477:  errmsg("subquery uses ungrouped column \"%s.%s\" from outer query", 
paaj: parsexagg:00000478:  rte->eref->aliasname, attname), 
paaj: parsexagg:00000479:  errOmitLocation(true))); 
paaj: parsexagg:00000718:  ereport(ERROR, 
paaj: parsexagg:00000719:  (errcode(ERRCODE_GROUPING_ERROR), 
paaj: parsexagg:00000720:  errmsg("aggregates not allowed in GROUP BY clause"), 
paaj: parsexagg:00000721:  errOmitLocation(true))); 
paaj: parsexagg:00000724:  ereport(ERROR, 
paaj: parsexagg:00000725:  (errcode(ERRCODE_GROUPING_ERROR), 
paaj: parsexagg:00000726:  errmsg("grouping() or group_id() not allowed in GROUP BY clause"), 
paaj: parsexagg:00000727:  errOmitLocation(true))); 
paaj: parsexagg:00000730:  ereport(ERROR, 
paaj: parsexagg:00000731:  (errcode(ERRCODE_SYNTAX_ERROR), 
paaj: parsexagg:00000732:  errmsg("window functions not allowed in GROUP BY clause"), 
paaj: parsexagg:00000733:  errOmitLocation(true))); 
paaj: parsexagg:00000983:  ereport(ERROR, 
paaj: parsexagg:00000984:  (errcode(ERRCODE_SYNTAX_ERROR), 
paaj: parsexagg:00000985:  errmsg("window functions not allowed in WHERE clause"), 
paaj: parsexagg:00000986:  errOmitLocation(true))); 
paaj: parsexagg:00000989:  ereport(ERROR, 
paaj: parsexagg:00000990:  (errcode(ERRCODE_SYNTAX_ERROR), 
paaj: parsexagg:00000991:  errmsg("window functions not allowed in JOIN conditions"), 
paaj: parsexagg:00000992:  errOmitLocation(true))); 
aaaaa GP_IGNORE: pabc: parsexclause - ./backend/parser/parse_clause.c
pabc: parsexclause:00000204:  ereport(ERROR, 
pabc: parsexclause:00000205:  (errcode(ERROR_INVALID_WINDOW_FRAME_PARAMETER), 
pabc: parsexclause:00000206:  errmsg("ROWS parameter must be an integer expression"), 
pabc: parsexclause:00000207:  errOmitLocation(true))); 
pabc: parsexclause:00000209:  ereport(ERROR, 
pabc: parsexclause:00000210:  (errcode(ERROR_INVALID_WINDOW_FRAME_PARAMETER), 
pabc: parsexclause:00000211:  errmsg("ROWS parameter cannot be negative"), 
pabc: parsexclause:00000212:  errOmitLocation(true))); 
pabc: parsexclause:00000216:  ereport(ERROR, 
pabc: parsexclause:00000217:  (errcode(ERROR_INVALID_WINDOW_FRAME_PARAMETER), 
pabc: parsexclause:00000218:  errmsg("ROWS parameter cannot contain NULL value"), 
pabc: parsexclause:00000219:  errOmitLocation(true))); 
pabc: parsexclause:00000234:  ereport(ERROR, 
pabc: parsexclause:00000235:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000236:  errmsg("only one ORDER BY column may be specified when" 
pabc: parsexclause:00000237:  " RANGE is used in a window specification"), 
pabc: parsexclause:00000238:  errOmitLocation(true))); 
pabc: parsexclause:00000248:  ereport(ERROR, 
pabc: parsexclause:00000249:  (errcode(ERROR_INVALID_WINDOW_FRAME_PARAMETER), 
pabc: parsexclause:00000250:  errmsg("RANGE parameter cannot be NULL"), 
pabc: parsexclause:00000251:  errOmitLocation(true))); 
pabc: parsexclause:00000269:  ereport(ERROR, 
pabc: parsexclause:00000270:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000271:  errmsg("window specification RANGE parameter type " 
pabc: parsexclause:00000272:  "must be coercible to ORDER BY column type"), 
pabc: parsexclause:00000273:  errOmitLocation(true))); 
pabc: parsexclause:00000300:  ereport(ERROR, 
pabc: parsexclause:00000301:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000302:  errmsg("type mismatch between ORDER BY and RANGE " 
pabc: parsexclause:00000303:  "parameter in window specification"), 
pabc: parsexclause:00000304:  errhint("Operations between window specification " 
pabc: parsexclause:00000305:  "the ORDER BY column and RANGE parameter " 
pabc: parsexclause:00000306:  "must result in a data type which can be " 
pabc: parsexclause:00000307:  "cast back to the ORDER BY column type"), 
pabc: parsexclause:00000308:  errOmitLocation(true))); 
pabc: parsexclause:00000318:  ereport(ERROR, 
pabc: parsexclause:00000319:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000320:  errmsg("invalid RANGE parameter"), 
pabc: parsexclause:00000321:  errhint("Operations between window specification " 
pabc: parsexclause:00000322:  "the ORDER BY column and RANGE parameter " 
pabc: parsexclause:00000323:  "must result in a data type which can be " 
pabc: parsexclause:00000324:  "cast back to the ORDER BY column type"), 
pabc: parsexclause:00000325:  errOmitLocation(true))); 
pabc: parsexclause:00000352:  ereport(ERROR, 
pabc: parsexclause:00000353:  (errcode(ERROR_INVALID_WINDOW_FRAME_PARAMETER), 
pabc: parsexclause:00000354:  errmsg("RANGE parameter cannot be negative"), 
pabc: parsexclause:00000355:  errOmitLocation(true))); 
pabc: parsexclause:00000388:  ereport(ERROR, 
pabc: parsexclause:00000389:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000390:  errmsg("DISTINCT cannot be used with " 
pabc: parsexclause:00000391:  "window specification containing an " 
pabc: parsexclause:00000392:  "ORDER BY clause"), 
pabc: parsexclause:00000393:  errOmitLocation(true))); 
pabc: parsexclause:00000396:  ereport(ERROR, 
pabc: parsexclause:00000397:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000398:  errmsg("DISTINCT cannot be used with " 
pabc: parsexclause:00000399:  "window specification containing a " 
pabc: parsexclause:00000400:  "framing clause"), 
pabc: parsexclause:00000401:  errOmitLocation(true))); 
pabc: parsexclause:00000430:  ereport(ERROR, 
pabc: parsexclause:00000431:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
pabc: parsexclause:00000432:  errmsg("window function \"%s\" requires a window " 
pabc: parsexclause:00000433:  "specification with an ordering clause", 
pabc: parsexclause:00000434:  get_func_name(wf->winfnoid)), 
pabc: parsexclause:00000435:  parser_errposition(ref->pstate, winref->location))); 
pabc: parsexclause:00000438:  ereport(ERROR, 
pabc: parsexclause:00000439:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
pabc: parsexclause:00000440:  errmsg("window function \"%s\" cannot be used with " 
pabc: parsexclause:00000441:  "a framed window specification", 
pabc: parsexclause:00000442:  get_func_name(wf->winfnoid)), 
pabc: parsexclause:00000443:  parser_errposition(ref->pstate, winref->location))); 
pabc: parsexclause:00000522:  ereport(ERROR, 
pabc: parsexclause:00000523:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000524:  errmsg("cannot use window function in a window " 
pabc: parsexclause:00000525:  "specification"), 
pabc: parsexclause:00000526:  errOmitLocation(true))); 
pabc: parsexclause:00000542:  ereport(ERROR, 
pabc: parsexclause:00000543:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
pabc: parsexclause:00000544:  errmsg("window \"%s\" cannot reference itself", 
pabc: parsexclause:00000545:  ws->name), 
pabc: parsexclause:00000546:  errOmitLocation(true))); 
pabc: parsexclause:00000554:  ereport(ERROR, 
pabc: parsexclause:00000555:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
pabc: parsexclause:00000556:  errmsg("window name \"%s\" occurs more than once " 
pabc: parsexclause:00000557:  "in WINDOW clause", ws->name), 
pabc: parsexclause:00000558:  errOmitLocation(true))); 
pabc: parsexclause:00000581:  ereport(ERROR, 
pabc: parsexclause:00000582:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000583:  errmsg("PARTITION BY not allowed when " 
pabc: parsexclause:00000584:  "an existing window name is specified"), 
pabc: parsexclause:00000585:  errOmitLocation(true))); 
pabc: parsexclause:00000588:  ereport(ERROR, 
pabc: parsexclause:00000589:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000590:  errmsg("conflicting ORDER BY clauses in window " 
pabc: parsexclause:00000591:  "specification"), 
pabc: parsexclause:00000592:  errOmitLocation(true))); 
pabc: parsexclause:00000603:  ereport(ERROR, 
pabc: parsexclause:00000604:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000605:  errmsg("window specification \"%s\" cannot have " 
pabc: parsexclause:00000606:  "a framing clause", ws2->name), 
pabc: parsexclause:00000607:  errhint("Window specifications which are " 
pabc: parsexclause:00000608:  "referenced by other window " 
pabc: parsexclause:00000609:  "specifications cannot have framing " 
pabc: parsexclause:00000610:  "clauses"), 
pabc: parsexclause:00000611:  errOmitLocation(true), 
pabc: parsexclause:00000612:  parser_errposition(pstate, ws2->location) 
pabc: parsexclause:00000613:  )); 
pabc: parsexclause:00000632:  ereport(ERROR, 
pabc: parsexclause:00000633:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000634:  errmsg("window specification \"%s\" not found", 
pabc: parsexclause:00000635:  ws->parent), 
pabc: parsexclause:00000636:  errOmitLocation(true))); 
pabc: parsexclause:00000706:  ereport(ERROR, 
pabc: parsexclause:00000707:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000708:  errmsg("window specifications with a framing clause " 
pabc: parsexclause:00000709:  "must have an ORDER BY clause"), 
pabc: parsexclause:00000710:  errOmitLocation(true))); 
pabc: parsexclause:00000718:  ereport(ERROR, 
pabc: parsexclause:00000719:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000720:  errmsg("conflicting bounds in window framing " 
pabc: parsexclause:00000721:  "clause"), 
pabc: parsexclause:00000722:  errhint("First bound of BETWEEN clause in window " 
pabc: parsexclause:00000723:  "specification cannot be UNBOUNDED FOLLOWING"), 
pabc: parsexclause:00000724:  errOmitLocation(true))); 
pabc: parsexclause:00000726:  ereport(ERROR, 
pabc: parsexclause:00000727:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000728:  errmsg("conflicting bounds in window framing " 
pabc: parsexclause:00000729:  "clause"), 
pabc: parsexclause:00000730:  errhint("Second bound of BETWEEN clause in window " 
pabc: parsexclause:00000731:  "specification cannot be UNBOUNDED PRECEDING"), 
pabc: parsexclause:00000732:  errOmitLocation(true))); 
pabc: parsexclause:00000736:  ereport(ERROR, 
pabc: parsexclause:00000737:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000738:  errmsg("conflicting bounds in window framing " 
pabc: parsexclause:00000739:  "clause"), 
pabc: parsexclause:00000740:  errhint("Second bound cannot be PRECEDING " 
pabc: parsexclause:00000741:  "when first bound is CURRENT ROW"), 
pabc: parsexclause:00000742:  errOmitLocation(true))); 
pabc: parsexclause:00000747:  ereport(ERROR, 
pabc: parsexclause:00000748:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00000749:  errmsg("conflicting bounds in window framing " 
pabc: parsexclause:00000750:  "clause"), 
pabc: parsexclause:00000751:  errhint("Second bound must be FOLLOWING if first " 
pabc: parsexclause:00000752:  "bound is FOLLOWING"), 
pabc: parsexclause:00000753:  errOmitLocation(true))); 
pabc: parsexclause:00000873:  ereport(ERROR, 
pabc: parsexclause:00000874:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
pabc: parsexclause:00000875:  errmsg("permission denied: \"%s\" is a system catalog", 
pabc: parsexclause:00000876:  RelationGetRelationName(pstate->p_target_relation)), 
pabc: parsexclause:00000877:  errOmitLocation(true))); 
pabc: parsexclause:00000881:  ereport(ERROR, 
pabc: parsexclause:00000882:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
pabc: parsexclause:00000883:  errmsg("foreign tables are read only. cannot change \"%s\"", 
pabc: parsexclause:00000884:  RelationGetRelationName(pstate->p_target_relation)), 
pabc: parsexclause:00000885:  errOmitLocation(true))); 
pabc: parsexclause:00000894:  ereport(ERROR, 
pabc: parsexclause:00000895:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabc: parsexclause:00000896:  errmsg("cannot update or delete from external relation \"%s\"", 
pabc: parsexclause:00000897:  RelationGetRelationName(pstate->p_target_relation)), 
pabc: parsexclause:00000898:  errOmitLocation(true))); 
pabc: parsexclause:00000909:  ereport(ERROR, 
pabc: parsexclause:00000910:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
pabc: parsexclause:00000911:  errmsg("cannot change a readable external table \"%s\"", 
pabc: parsexclause:00000912:  RelationGetRelationName(pstate->p_target_relation)), 
pabc: parsexclause:00000913:  errOmitLocation(true))); 
pabc: parsexclause:00000961:  elog(ERROR, "bogus InhOption value: %d", inhOpt); 
pabc: parsexclause:00001131:  ereport(ERROR, 
pabc: parsexclause:00001132:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
pabc: parsexclause:00001133:  errmsg("JOIN/ON clause refers to \"%s\", which is not part of JOIN", 
pabc: parsexclause:00001134:  rt_fetch(varno, pstate->p_rtable)->eref->aliasname))); 
pabc: parsexclause:00001179:  ereport(ERROR, 
pabc: parsexclause:00001180:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00001181:  errmsg("subquery in FROM must have an alias"))); 
pabc: parsexclause:00001194:  elog(ERROR, "unexpected parse analysis result for subquery in FROM"); 
pabc: parsexclause:00001197:  elog(ERROR, "unexpected parse analysis result for subquery in FROM"); 
pabc: parsexclause:00001200:  elog(ERROR, "expected SELECT query from subquery in FROM"); 
pabc: parsexclause:00001202:  ereport(ERROR, 
pabc: parsexclause:00001203:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00001204:  errmsg("subquery in FROM may not have SELECT INTO"))); 
pabc: parsexclause:00001222:  ereport(ERROR, 
pabc: parsexclause:00001223:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
pabc: parsexclause:00001224:  errmsg("subquery in FROM may not refer to other relations of same query level"), 
pabc: parsexclause:00001225:  errOmitLocation(true))); 
pabc: parsexclause:00001266:  elog(ERROR, "Invalid %s syntax.", GP_DIST_RANDOM_NAME); 
pabc: parsexclause:00001277:  elog(ERROR, "%s: invalid argument type, non-string in value", GP_DIST_RANDOM_NAME); 
pabc: parsexclause:00001307:  elog(ERROR, "%s: invalid argument type", GP_DIST_RANDOM_NAME); 
pabc: parsexclause:00001329:  ereport(ERROR, 
pabc: parsexclause:00001330:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
pabc: parsexclause:00001331:  errmsg("function expression in FROM may not refer to other relations of same query level"), 
pabc: parsexclause:00001332:  errOmitLocation(true))); 
pabc: parsexclause:00001342:  ereport(ERROR, 
pabc: parsexclause:00001343:  (errcode(ERRCODE_GROUPING_ERROR), 
pabc: parsexclause:00001344:  errmsg("cannot use aggregate function in function expression in FROM"), 
pabc: parsexclause:00001345:  errOmitLocation(true))); 
pabc: parsexclause:00001632:  ereport(ERROR, 
pabc: parsexclause:00001633:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
pabc: parsexclause:00001634:  errmsg("column name \"%s\" appears more than once in USING clause", 
pabc: parsexclause:00001635:  u_colname))); 
pabc: parsexclause:00001647:  ereport(ERROR, 
pabc: parsexclause:00001648:  (errcode(ERRCODE_AMBIGUOUS_COLUMN), 
pabc: parsexclause:00001649:  errmsg("common column name \"%s\" appears more than once in left table", 
pabc: parsexclause:00001650:  u_colname))); 
pabc: parsexclause:00001656:  ereport(ERROR, 
pabc: parsexclause:00001657:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
pabc: parsexclause:00001658:  errmsg("column \"%s\" specified in USING clause does not exist in left table", 
pabc: parsexclause:00001659:  u_colname))); 
pabc: parsexclause:00001670:  ereport(ERROR, 
pabc: parsexclause:00001671:  (errcode(ERRCODE_AMBIGUOUS_COLUMN), 
pabc: parsexclause:00001672:  errmsg("common column name \"%s\" appears more than once in right table", 
pabc: parsexclause:00001673:  u_colname))); 
pabc: parsexclause:00001679:  ereport(ERROR, 
pabc: parsexclause:00001680:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
pabc: parsexclause:00001681:  errmsg("column \"%s\" specified in USING clause does not exist in right table", 
pabc: parsexclause:00001682:  u_colname))); 
pabc: parsexclause:00001734:  ereport(ERROR, 
pabc: parsexclause:00001735:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00001736:  errmsg("column alias list for \"%s\" has too many entries", 
pabc: parsexclause:00001737:  j->alias->aliasname))); 
pabc: parsexclause:00001782:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(n)); 
pabc: parsexclause:00001893:  elog(ERROR, "unrecognized join type: %d", (int) jointype); 
pabc: parsexclause:00001956:  ereport(ERROR, 
pabc: parsexclause:00001957:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
pabc: parsexclause:00001958:  /* translator: %s is name of a SQL construct, eg LIMIT */ 
pabc: parsexclause:00001959:  errmsg("argument of %s must not contain variables", 
pabc: parsexclause:00001960:  constructName))); 
pabc: parsexclause:00001964:  ereport(ERROR, 
pabc: parsexclause:00001965:  (errcode(ERRCODE_GROUPING_ERROR), 
pabc: parsexclause:00001966:  /* translator: %s is name of a SQL construct, eg LIMIT */ 
pabc: parsexclause:00001967:  errmsg("argument of %s must not contain aggregates", 
pabc: parsexclause:00001968:  constructName))); 
pabc: parsexclause:00001972:  ereport(ERROR, 
pabc: parsexclause:00001973:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabc: parsexclause:00001974:  /* translator: %s is name of a SQL construct, eg LIMIT */ 
pabc: parsexclause:00001975:  errmsg("argument of %s must not contain subqueries", 
pabc: parsexclause:00001976:  constructName))); 
pabc: parsexclause:00002199:  ereport(ERROR, 
pabc: parsexclause:00002200:  (errcode(ERRCODE_AMBIGUOUS_COLUMN), 
pabc: parsexclause:00002201:  
pabc: parsexclause:00002202:  /*------ 
pabc: parsexclause:00002203:  translator: first %s is name of a SQL construct, eg ORDER BY */ 
pabc: parsexclause:00002204:  errmsg("%s \"%s\" is ambiguous", 
pabc: parsexclause:00002205:  clauseText[clause], name), 
pabc: parsexclause:00002206:  parser_errposition(pstate, location))); 
pabc: parsexclause:00002224:  ereport(ERROR, 
pabc: parsexclause:00002225:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsexclause:00002226:  /* translator: %s is name of a SQL construct, eg ORDER BY */ 
pabc: parsexclause:00002227:  errmsg("non-integer constant in %s", 
pabc: parsexclause:00002228:  clauseText[clause]))); 
pabc: parsexclause:00002240:  ereport(ERROR, 
pabc: parsexclause:00002241:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
pabc: parsexclause:00002242:  /* translator: %s is name of a SQL construct, eg ORDER BY */ 
pabc: parsexclause:00002243:  errmsg("%s position %d is not in select list", 
pabc: parsexclause:00002244:  clauseText[clause], target_pos), 
pabc: parsexclause:00002245:  errOmitLocation(true))); 
pabc: parsexclause:00002452:  ereport(ERROR, 
pabc: parsexclause:00002453:  (errcode(ERRCODE_GROUPING_ERROR), 
pabc: parsexclause:00002454:  errmsg("row type can not be used inside a grouping function."), 
pabc: parsexclause:00002455:  errOmitLocation(true))); 
pabc: parsexclause:00002458:  ereport(ERROR, 
pabc: parsexclause:00002459:  (errcode(ERRCODE_GROUPING_ERROR), 
pabc: parsexclause:00002460:  errmsg("expression in a grouping fuction does not appear in GROUP BY."), 
pabc: parsexclause:00002461:  errOmitLocation(true))); 
pabc: parsexclause:00002470:  ereport(ERROR, 
pabc: parsexclause:00002471:  (errcode(ERRCODE_GROUPING_ERROR), 
pabc: parsexclause:00002472:  errmsg("column \"%s\".\"%s\" is not in GROUP BY", 
pabc: parsexclause:00002473:  rte->eref->aliasname, attname), 
pabc: parsexclause:00002474:  errOmitLocation(true))); 
pabc: parsexclause:00002815:  ereport(ERROR, 
pabc: parsexclause:00002816:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
pabc: parsexclause:00002817:  errmsg("for SELECT DISTINCT, ORDER BY expressions must appear in select list"), 
pabc: parsexclause:00002818:  errOmitLocation(true))); 
pabc: parsexclause:00002856:  ereport(ERROR, 
pabc: parsexclause:00002857:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
pabc: parsexclause:00002858:  errmsg("SELECT DISTINCT ON expressions must match initial ORDER BY expressions"), 
pabc: parsexclause:00002859:  errOmitLocation(true))); 
pabc: parsexclause:00002884:  elog(ERROR, "failed to add DISTINCT ON clause to target list"); 
pabc: parsexclause:00003109:  ereport(ERROR, 
pabc: parsexclause:00003110:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
pabc: parsexclause:00003111:  errmsg("operator %s is not a valid ordering operator", 
pabc: parsexclause:00003112:  strVal(llast(sortby_opname))), 
pabc: parsexclause:00003113:  errhint("Ordering operators must be \"<\" or \">\" members of btree operator families."), 
pabc: parsexclause:00003114:  errOmitLocation(true))); 
pabc: parsexclause:00003118:  elog(ERROR, "unrecognized sortby_kind: %d", sortby_kind); 
aaaaa GP_IGNORE: pabc: parsexcoerce - ./backend/parser/parse_coerce.c
pabc: parsexcoerce:00000170:  ereport(ERROR, 
pabc: parsexcoerce:00000171:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00000172:  errmsg("Cannot convert non-Array type to ANYARRAY"))); 
pabc: parsexcoerce:00000273:  ereport(ERROR, 
pabc: parsexcoerce:00000274:  (errcode(ERRCODE_UNDEFINED_PARAMETER), 
pabc: parsexcoerce:00000275:  errmsg("there is no parameter $%d", paramno))); 
pabc: parsexcoerce:00000289:  ereport(ERROR, 
pabc: parsexcoerce:00000290:  (errcode(ERRCODE_AMBIGUOUS_PARAMETER), 
pabc: parsexcoerce:00000291:  errmsg("inconsistent types deduced for parameter $%d", 
pabc: parsexcoerce:00000292:  paramno), 
pabc: parsexcoerce:00000293:  errdetail("%s versus %s", 
pabc: parsexcoerce:00000294:  format_type_be(toppstate->p_paramtypes[paramno - 1]), 
pabc: parsexcoerce:00000295:  format_type_be(targetTypeId)))); 
pabc: parsexcoerce:00000452:  elog(ERROR, "failed to find conversion function from %s to %s", 
pabc: parsexcoerce:00000453:  format_type_be(inputTypeId), format_type_be(targetTypeId)); 
pabc: parsexcoerce:00000975:  elog(ERROR, "unsupported node type: %d", (int) nodeTag(node)); 
pabc: parsexcoerce:00001006:  elog(ERROR, "cache lookup failed for function %u", funcId); 
pabc: parsexcoerce:00001098:  ereport(ERROR, 
pabc: parsexcoerce:00001099:  (errcode(ERRCODE_CANNOT_COERCE), 
pabc: parsexcoerce:00001100:  errmsg("cannot cast type %s to %s", 
pabc: parsexcoerce:00001101:  format_type_be(RECORDOID), 
pabc: parsexcoerce:00001102:  format_type_be(targetTypeId)))); 
pabc: parsexcoerce:00001125:  ereport(ERROR, 
pabc: parsexcoerce:00001126:  (errcode(ERRCODE_CANNOT_COERCE), 
pabc: parsexcoerce:00001127:  errmsg("cannot cast type %s to %s", 
pabc: parsexcoerce:00001128:  format_type_be(RECORDOID), 
pabc: parsexcoerce:00001129:  format_type_be(targetTypeId)), 
pabc: parsexcoerce:00001130:  errdetail("Input has too few columns."))); 
pabc: parsexcoerce:00001142:  ereport(ERROR, 
pabc: parsexcoerce:00001143:  (errcode(ERRCODE_CANNOT_COERCE), 
pabc: parsexcoerce:00001144:  errmsg("cannot cast type %s to %s", 
pabc: parsexcoerce:00001145:  format_type_be(RECORDOID), 
pabc: parsexcoerce:00001146:  format_type_be(targetTypeId)), 
pabc: parsexcoerce:00001147:  errdetail("Cannot cast type %s to %s in column %d.", 
pabc: parsexcoerce:00001148:  format_type_be(exprtype), 
pabc: parsexcoerce:00001149:  format_type_be(tupdesc->attrs[i]->atttypid), 
pabc: parsexcoerce:00001150:  ucolno))); 
pabc: parsexcoerce:00001156:  ereport(ERROR, 
pabc: parsexcoerce:00001157:  (errcode(ERRCODE_CANNOT_COERCE), 
pabc: parsexcoerce:00001158:  errmsg("cannot cast type %s to %s", 
pabc: parsexcoerce:00001159:  format_type_be(RECORDOID), 
pabc: parsexcoerce:00001160:  format_type_be(targetTypeId)), 
pabc: parsexcoerce:00001161:  errdetail("Input has too many columns."))); 
pabc: parsexcoerce:00001196:  ereport(ERROR, 
pabc: parsexcoerce:00001197:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001198:  /* translator: first %s is name of a SQL construct, eg WHERE */ 
pabc: parsexcoerce:00001199:  errmsg("argument of %s must be type boolean, not type %s", 
pabc: parsexcoerce:00001200:  constructName, format_type_be(inputTypeId)))); 
pabc: parsexcoerce:00001204:  ereport(ERROR, 
pabc: parsexcoerce:00001205:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001206:  /* translator: %s is name of a SQL construct, eg WHERE */ 
pabc: parsexcoerce:00001207:  errmsg("argument of %s must not return a set", 
pabc: parsexcoerce:00001208:  constructName))); 
pabc: parsexcoerce:00001237:  ereport(ERROR, 
pabc: parsexcoerce:00001238:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001239:  /* translator: first %s is name of a SQL construct, eg LIMIT */ 
pabc: parsexcoerce:00001240:  errmsg("argument of %s must be type integer, not type %s", 
pabc: parsexcoerce:00001241:  constructName, format_type_be(inputTypeId)))); 
pabc: parsexcoerce:00001245:  ereport(ERROR, 
pabc: parsexcoerce:00001246:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001247:  /* translator: %s is name of a SQL construct, eg LIMIT */ 
pabc: parsexcoerce:00001248:  errmsg("argument of %s must not return a set", 
pabc: parsexcoerce:00001249:  constructName))); 
pabc: parsexcoerce:00001278:  ereport(ERROR, 
pabc: parsexcoerce:00001279:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001280:  /* translator: first %s is name of a SQL construct, eg LIMIT */ 
pabc: parsexcoerce:00001281:  errmsg("argument of %s must be type bigint, not type %s", 
pabc: parsexcoerce:00001282:  constructName, format_type_be(inputTypeId)))); 
pabc: parsexcoerce:00001286:  ereport(ERROR, 
pabc: parsexcoerce:00001287:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001288:  /* translator: %s is name of a SQL construct, eg LIMIT */ 
pabc: parsexcoerce:00001289:  errmsg("argument of %s must not return a set", 
pabc: parsexcoerce:00001290:  constructName))); 
pabc: parsexcoerce:00001338:  ereport(ERROR, 
pabc: parsexcoerce:00001339:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001340:  
pabc: parsexcoerce:00001341:  /*------ 
pabc: parsexcoerce:00001342:  translator: first %s is name of a SQL construct, eg CASE */ 
pabc: parsexcoerce:00001343:  errmsg("%s types %s and %s cannot be matched", 
pabc: parsexcoerce:00001344:  context, 
pabc: parsexcoerce:00001345:  format_type_be(ptype), 
pabc: parsexcoerce:00001346:  format_type_be(ntype)))); 
pabc: parsexcoerce:00001401:  ereport(ERROR, 
pabc: parsexcoerce:00001402:  (errcode(ERRCODE_CANNOT_COERCE), 
pabc: parsexcoerce:00001403:  /* translator: first %s is name of a SQL construct, eg CASE */ 
pabc: parsexcoerce:00001404:  errmsg("%s could not convert type %s to %s", 
pabc: parsexcoerce:00001405:  context, 
pabc: parsexcoerce:00001406:  format_type_be(inputTypeId), 
pabc: parsexcoerce:00001407:  format_type_be(targetTypeId)))); 
pabc: parsexcoerce:00001575:  ereport(ERROR, 
pabc: parsexcoerce:00001576:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001577:  errmsg("arguments declared \"anyelement\" are not all alike"), 
pabc: parsexcoerce:00001578:  errdetail("%s versus %s", 
pabc: parsexcoerce:00001579:  format_type_be(elem_typeid), 
pabc: parsexcoerce:00001580:  format_type_be(actual_type)))); 
pabc: parsexcoerce:00001592:  ereport(ERROR, 
pabc: parsexcoerce:00001593:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001594:  errmsg("arguments declared \"anyarray\" are not all alike"), 
pabc: parsexcoerce:00001595:  errdetail("%s versus %s", 
pabc: parsexcoerce:00001596:  format_type_be(array_typeid), 
pabc: parsexcoerce:00001597:  format_type_be(actual_type)))); 
pabc: parsexcoerce:00001621:  ereport(ERROR, 
pabc: parsexcoerce:00001622:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001623:  errmsg("argument declared \"anyarray\" is not an array but type %s", 
pabc: parsexcoerce:00001624:  format_type_be(array_typeid)))); 
pabc: parsexcoerce:00001637:  ereport(ERROR, 
pabc: parsexcoerce:00001638:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001639:  errmsg("argument declared \"anyarray\" is not consistent with argument declared \"anyelement\""), 
pabc: parsexcoerce:00001640:  errdetail("%s versus %s", 
pabc: parsexcoerce:00001641:  format_type_be(array_typeid), 
pabc: parsexcoerce:00001642:  format_type_be(elem_typeid)), 
pabc: parsexcoerce:00001643:  errOmitLocation(true))); 
pabc: parsexcoerce:00001649:  ereport(ERROR, 
pabc: parsexcoerce:00001650:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001651:  errmsg("could not determine anyarray/anyelement type because input has type \"unknown\""), 
pabc: parsexcoerce:00001652:  errOmitLocation(true))); 
pabc: parsexcoerce:00001675:  ereport(ERROR, 
pabc: parsexcoerce:00001676:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabc: parsexcoerce:00001677:  errmsg("could not find array type for data type %s", 
pabc: parsexcoerce:00001678:  format_type_be(elem_typeid)))); 
pabc: parsexcoerce:00001692:  ereport(ERROR, 
pabc: parsexcoerce:00001693:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabc: parsexcoerce:00001694:  errmsg("could not find array type for data type %s", 
pabc: parsexcoerce:00001695:  format_type_be(elem_typeid)))); 
pabc: parsexcoerce:00001734:  ereport(ERROR, 
pabc: parsexcoerce:00001735:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001736:  errmsg("argument declared \"anyarray\" is not an array but type %s", 
pabc: parsexcoerce:00001737:  format_type_be(context_actual_type)))); 
pabc: parsexcoerce:00001746:  ereport(ERROR, 
pabc: parsexcoerce:00001747:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
pabc: parsexcoerce:00001748:  errmsg("could not find array type for data type %s", 
pabc: parsexcoerce:00001749:  format_type_be(context_actual_type)))); 
pabc: parsexcoerce:00001761:  ereport(ERROR, 
pabc: parsexcoerce:00001762:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsexcoerce:00001763:  errmsg("argument declared \"anyarray\" is not an array but type %s", 
pabc: parsexcoerce:00001764:  format_type_be(context_actual_type)))); 
pabc: parsexcoerce:00001780:  elog(ERROR, "could not determine ANYARRAY/ANYELEMENT type because context isn't polymorphic"); 
pabc: parsexcoerce:00001971:  elog(ERROR, "unrecognized type category: %d", (int) category); 
pabc: parsexcoerce:00002117:  elog(ERROR, "unrecognized castcontext: %d", 
pabc: parsexcoerce:00002118:  (int) castForm->castcontext); 
aaaaa GP_IGNORE: paaj: parsexcte - ./backend/parser/parse_cte.c
paaj: parsexcte:00000037:  ereport(ERROR, 
paaj: parsexcte:00000038:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
paaj: parsexcte:00000039:  errmsg("RECURSIVE option in WITH clause is not supported"))); 
paaj: parsexcte:00000066:  ereport(ERROR, 
paaj: parsexcte:00000067:  (errcode(ERRCODE_DUPLICATE_ALIAS), 
paaj: parsexcte:00000068:  errmsg("query name \"%s\" in WITH clause must not be specified more than once", 
paaj: parsexcte:00000069:  cte2->ctename), 
paaj: parsexcte:00000070:  parser_errposition(pstate, cte2->location))); 
paaj: parsexcte:00000141:  elog(ERROR, "unexpected error while parsing WITH query \"%s\"", rte->ctename); 
paaj: parsexcte:00000171:  elog(ERROR, "unexpected non-Query statement in WITH clause"); 
paaj: parsexcte:00000173:  elog(ERROR, "unexpected utility statement in WITH clause"); 
paaj: parsexcte:00000176:  ereport(ERROR, 
paaj: parsexcte:00000177:  (errcode(ERRCODE_SYNTAX_ERROR), 
paaj: parsexcte:00000178:  errmsg("query defined in WITH clause cannot have SELECT INTO"), 
paaj: parsexcte:00000179:  parser_errposition(pstate, 
paaj: parsexcte:00000180:  exprLocation((Node *) query->intoClause)))); 
paaj: parsexcte:00000214:  ereport(ERROR, 
paaj: parsexcte:00000215:  (errcode(ERRCODE_SYNTAX_ERROR), 
paaj: parsexcte:00000216:  errmsg("WITH query \"%s\" must not have duplicate column name: %s", 
paaj: parsexcte:00000217:  queryName, strVal(string)), 
paaj: parsexcte:00000218:  errhint("Specify a column list without duplicate names"))); 
paaj: parsexcte:00000262:  ereport(ERROR, 
paaj: parsexcte:00000263:  (errcode(ERRCODE_SYNTAX_ERROR), 
paaj: parsexcte:00000264:  errmsg(ERRMSG_GP_WITH_COLUMNS_MISMATCH, cte->ctename), 
paaj: parsexcte:00000265:  parser_errposition(pstate, cte->location))); 
paaj: parsexcte:00000282:  ereport(ERROR, 
paaj: parsexcte:00000283:  (errcode(ERRCODE_SYNTAX_ERROR), 
paaj: parsexcte:00000284:  errmsg(ERRMSG_GP_WITH_COLUMNS_MISMATCH, cte->ctename), 
paaj: parsexcte:00000285:  parser_errposition(pstate, cte->location))); 
aaaaa GP_IGNORE: paba: parsexexpr - ./backend/parser/parse_expr.c
paba: parsexexpr:00000209:  elog(ERROR, "unrecognized A_Expr kind: %d", a->kind); 
paba: parsexexpr:00000270:  ereport(ERROR, 
paba: parsexexpr:00000271:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paba: parsexexpr:00000272:  errmsg("\"%s\" is not simply updatable", 
paba: parsexexpr:00000273:  pstate->p_target_relation->rd_rel->relname.data))); 
paba: parsexexpr:00000395:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(expr)); 
paba: parsexexpr:00000724:  ereport(ERROR, 
paba: parsexexpr:00000725:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paba: parsexexpr:00000726:  errmsg("column \"%s\" does not exist", 
paba: parsexexpr:00000727:  name), 
paba: parsexexpr:00000728:  errOmitLocation(true), 
paba: parsexexpr:00000729:  parser_errposition(pstate, cref->location))); 
paba: parsexexpr:00000807:  ereport(ERROR, 
paba: parsexexpr:00000808:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paba: parsexexpr:00000809:  errmsg("cross-database references are not implemented: %s", 
paba: parsexexpr:00000810:  NameListToString(cref->fields)), 
paba: parsexexpr:00000811:  parser_errposition(pstate, cref->location))); 
paba: parsexexpr:00000838:  ereport(ERROR, 
paba: parsexexpr:00000839:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexexpr:00000840:  errmsg("improper qualified name (too many dotted names): %s", 
paba: parsexexpr:00000841:  NameListToString(cref->fields)), 
paba: parsexexpr:00000842:  parser_errposition(pstate, cref->location))); 
paba: parsexexpr:00000870:  ereport(ERROR, 
paba: parsexexpr:00000871:  (errcode(ERRCODE_UNDEFINED_PARAMETER), 
paba: parsexexpr:00000872:  errmsg("there is no parameter $%d", paramno))); 
paba: parsexexpr:00000876:  ereport(ERROR, 
paba: parsexexpr:00000877:  (errcode(ERRCODE_UNDEFINED_PARAMETER), 
paba: parsexexpr:00000878:  errmsg("there is no parameter $%d", 
paba: parsexexpr:00000879:  paramno), 
paba: parsexexpr:00000880:  errOmitLocation(true))); 
paba: parsexexpr:00001095:  ereport(ERROR, 
paba: parsexexpr:00001096:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paba: parsexexpr:00001097:  errmsg("NULLIF requires = operator to yield boolean"), 
paba: parsexexpr:00001098:  parser_errposition(pstate, a->location))); 
paba: parsexexpr:00001251:  ereport(ERROR, 
paba: parsexexpr:00001252:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexexpr:00001253:  errmsg("arguments of row IN must all be row expressions"), 
paba: parsexexpr:00001254:  parser_errposition(pstate, a->location))); 
paba: parsexexpr:00001411:  ereport(ERROR, 
paba: parsexexpr:00001412:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexexpr:00001413:  errmsg("syntax error at or near \"NOT\""), 
paba: parsexexpr:00001414:  errhint("Missing <operand> for \"CASE <operand> WHEN IS NOT DISTINCT FROM ...\""))); 
paba: parsexexpr:00001501:  elog(ERROR, "unexpected non-SELECT command in SubLink"); 
paba: parsexexpr:00001503:  ereport(ERROR, 
paba: parsexexpr:00001504:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexexpr:00001505:  errmsg("subquery cannot have SELECT INTO"), 
paba: parsexexpr:00001506:  errOmitLocation(true))); 
paba: parsexexpr:00001530:  ereport(ERROR, 
paba: parsexexpr:00001531:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexexpr:00001532:  errmsg("subquery must return a column"))); 
paba: parsexexpr:00001536:  ereport(ERROR, 
paba: parsexexpr:00001537:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexexpr:00001538:  errmsg("subquery must return only one column"))); 
paba: parsexexpr:00001595:  ereport(ERROR, 
paba: parsexexpr:00001596:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexexpr:00001597:  errmsg("subquery has too many columns"))); 
paba: parsexexpr:00001599:  ereport(ERROR, 
paba: parsexexpr:00001600:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexexpr:00001601:  errmsg("subquery has too few columns"))); 
paba: parsexexpr:00001672:  ereport(ERROR, 
paba: parsexexpr:00001673:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paba: parsexexpr:00001674:  errmsg("could not find array type for data type %s", 
paba: parsexexpr:00001675:  format_type_be(array_type)))); 
paba: parsexexpr:00001727:  elog(ERROR, "unexpected non-SELECT command in TableValueExpr"); 
paba: parsexexpr:00001729:  elog(ERROR, "unexpected non-SELECT command in TableValueExpr"); 
paba: parsexexpr:00001731:  ereport(ERROR, 
paba: parsexexpr:00001732:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexexpr:00001733:  errmsg("subquery in TABLE value expression cannot have SELECT INTO"), 
paba: parsexexpr:00001734:  errOmitLocation(true), 
paba: parsexexpr:00001735:  parser_errposition(pstate, t->location))); 
paba: parsexexpr:00001743:  ereport(ERROR, 
paba: parsexexpr:00001744:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
paba: parsexexpr:00001745:  errmsg("subquery in TABLE value expression may not refer " 
paba: parsexexpr:00001746:  "to relation of another query level"), 
paba: parsexexpr:00001747:  errOmitLocation(true), 
paba: parsexexpr:00001748:  parser_errposition(pstate, t->location))); 
paba: parsexexpr:00001854:  elog(ERROR, "unrecognized booltesttype: %d", 
paba: parsexexpr:00001855:  (int) b->booltesttype); 
paba: parsexexpr:00001905:  elog(ERROR, "could not find type OID for relation %u", 
paba: parsexexpr:00001906:  rte->relid); 
paba: parsexexpr:00002009:  elog(ERROR, "unexpected perckind: %d", (int) p->perckind); 
paba: parsexexpr:00002065:  ereport(ERROR, 
paba: parsexexpr:00002066:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexexpr:00002067:  errmsg("function \"%s\" does not exist", 
paba: parsexexpr:00002068:  percentileFuncString(p, &argtype, 1, NULL, 0)), 
paba: parsexexpr:00002069:  errhint("No function matches the given name and argument types. " 
paba: parsexexpr:00002070:  "You may need to add explicit type casts."))); 
paba: parsexexpr:00002078:  ereport(ERROR, 
paba: parsexexpr:00002079:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
paba: parsexexpr:00002080:  errmsg("argument of percentile function must not contain variables"))); 
paba: parsexexpr:00002082:  ereport(ERROR, 
paba: parsexexpr:00002083:  (errcode(ERRCODE_GROUPING_ERROR), 
paba: parsexexpr:00002084:  errmsg("argument of percentile function must not contain aggregates"))); 
paba: parsexexpr:00002086:  ereport(ERROR, 
paba: parsexexpr:00002087:  (errcode(ERRCODE_GROUPING_ERROR), 
paba: parsexexpr:00002088:  errmsg("argument of percentile function must not contain window functions"))); 
paba: parsexexpr:00002090:  ereport(ERROR, 
paba: parsexexpr:00002091:  (errcode(ERRCODE_GROUPING_ERROR), 
paba: parsexexpr:00002092:  errmsg("argument of percentile function must not contain grouping(), or group_id()"))); 
paba: parsexexpr:00002098:  ereport(ERROR, 
paba: parsexexpr:00002099:  (errcode(ERRCODE_GROUPING_ERROR), 
paba: parsexexpr:00002100:  errmsg("argument of percentile function must not contain volatile functions"))); 
paba: parsexexpr:00002106:  ereport(ERROR, 
paba: parsexexpr:00002107:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paba: parsexexpr:00002108:  errmsg("argument of percentile function must not contain subqueries"))); 
paba: parsexexpr:00002113:  ereport(ERROR, 
paba: parsexexpr:00002114:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexexpr:00002115:  errmsg("function \"%s\" cannot accept more than one expression in ORDER BY", 
paba: parsexexpr:00002116:  percentileFuncString(p, &argtype, 1, NULL, 0)))); 
paba: parsexexpr:00002199:  ereport(ERROR, 
paba: parsexexpr:00002200:  (errcode(ERRCODE_AMBIGUOUS_FUNCTION), 
paba: parsexexpr:00002201:  errmsg("function \"%s\" is not unique", 
paba: parsexexpr:00002202:  percentileFuncString(p, &argtype, 1, sorttypes, sortlen)), 
paba: parsexexpr:00002203:  errhint("Could not choose a best candidate function. " 
paba: parsexexpr:00002204:  "You may need to add explicit type casts."))); 
paba: parsexexpr:00002208:  ereport(ERROR, 
paba: parsexexpr:00002209:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexexpr:00002210:  errmsg("function \"%s\" does not exist", 
paba: parsexexpr:00002211:  percentileFuncString(p, &argtype, 1, sorttypes, sortlen)), 
paba: parsexexpr:00002212:  errhint("No function matches the given name and argument types. " 
paba: parsexexpr:00002213:  "You may need to add explicit type casts."))); 
paba: parsexexpr:00002273:  ereport(ERROR, 
paba: parsexexpr:00002274:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paba: parsexexpr:00002275:  errmsg("percentile functions cannot reference columns from outer queries"))); 
paba: parsexexpr:00002278:  ereport(ERROR, 
paba: parsexexpr:00002279:  (errcode(ERRCODE_GROUPING_ERROR), 
paba: parsexexpr:00002280:  errmsg("argument of percentile function must not contain aggregates"))); 
paba: parsexexpr:00002282:  ereport(ERROR, 
paba: parsexexpr:00002283:  (errcode(ERRCODE_GROUPING_ERROR), 
paba: parsexexpr:00002284:  errmsg("argument of percentile function must not contain window functions"))); 
paba: parsexexpr:00002286:  ereport(ERROR, 
paba: parsexexpr:00002287:  (errcode(ERRCODE_GROUPING_ERROR), 
paba: parsexexpr:00002288:  errmsg("argument of percentile function must not contain grouping(), or group_id()"))); 
paba: parsexexpr:00002356:  elog(ERROR, "cannot get type for untransformed sublink"); 
paba: parsexexpr:00002365:  ereport(ERROR, 
paba: parsexexpr:00002366:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paba: parsexexpr:00002367:  errmsg("could not find array type for data type %s", 
paba: parsexexpr:00002368:  format_type_be(exprType((Node *) tent->expr))))); 
paba: parsexexpr:00002397:  ereport(ERROR, 
paba: parsexexpr:00002398:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paba: parsexexpr:00002399:  errmsg("could not find array type for data type %s", 
paba: parsexexpr:00002400:  format_type_be(itemtype)))); 
paba: parsexexpr:00002486:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(expr)); 
paba: parsexexpr:00002732:  ereport(ERROR, 
paba: parsexexpr:00002733:  (errcode(ERRCODE_CANNOT_COERCE), 
paba: parsexexpr:00002734:  errmsg("cannot cast type %s to %s", 
paba: parsexexpr:00002735:  format_type_be(inputType), 
paba: parsexexpr:00002736:  format_type_be(targetType)), 
paba: parsexexpr:00002737:  errOmitLocation(true), 
paba: parsexexpr:00002738:  parser_errposition(pstate, typname->location))); 
paba: parsexexpr:00002774:  ereport(ERROR, 
paba: parsexexpr:00002775:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexexpr:00002776:  errmsg("unequal number of entries in row expressions"), 
paba: parsexexpr:00002777:  errOmitLocation(true), 
paba: parsexexpr:00002778:  parser_errposition(pstate, location))); 
paba: parsexexpr:00002785:  ereport(ERROR, 
paba: parsexexpr:00002786:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paba: parsexexpr:00002787:  errmsg("cannot compare rows of zero length"), 
paba: parsexexpr:00002788:  errOmitLocation(true), 
paba: parsexexpr:00002789:  parser_errposition(pstate, location))); 
paba: parsexexpr:00002811:  ereport(ERROR, 
paba: parsexexpr:00002812:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paba: parsexexpr:00002813:  errmsg("row comparison operator must yield type boolean, " 
paba: parsexexpr:00002814:  "not type %s", 
paba: parsexexpr:00002815:  format_type_be(cmp->opresulttype)), 
paba: parsexexpr:00002816:  errOmitLocation(true), 
paba: parsexexpr:00002817:  parser_errposition(pstate, location))); 
paba: parsexexpr:00002819:  ereport(ERROR, 
paba: parsexexpr:00002820:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paba: parsexexpr:00002821:  errmsg("row comparison operator must not return a set"), 
paba: parsexexpr:00002822:  errOmitLocation(true), 
paba: parsexexpr:00002823:  parser_errposition(pstate, location))); 
paba: parsexexpr:00002873:  ereport(ERROR, 
paba: parsexexpr:00002874:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paba: parsexexpr:00002875:  errmsg("could not determine interpretation of row comparison operator %s", 
paba: parsexexpr:00002876:  strVal(llast(opname))), 
paba: parsexexpr:00002877:  errhint("Row comparison operators must be associated with btree operator classes."), 
paba: parsexexpr:00002878:  errOmitLocation(true), 
paba: parsexexpr:00002879:  parser_errposition(pstate, location))); 
paba: parsexexpr:00002923:  ereport(ERROR, 
paba: parsexexpr:00002924:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paba: parsexexpr:00002925:  errmsg("could not determine interpretation of row comparison operator %s", 
paba: parsexexpr:00002926:  strVal(llast(opname))), 
paba: parsexexpr:00002927:  errdetail("There are multiple equally-plausible candidates."), 
paba: parsexexpr:00002928:  errOmitLocation(true), 
paba: parsexexpr:00002929:  parser_errposition(pstate, location))); 
paba: parsexexpr:00002976:  ereport(ERROR, 
paba: parsexexpr:00002977:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paba: parsexexpr:00002978:  errmsg("could not determine interpretation of row comparison operator %s", 
paba: parsexexpr:00002979:  strVal(llast(opname))), 
paba: parsexexpr:00002980:  errdetail("There are multiple equally-plausible candidates."), 
paba: parsexexpr:00002981:  errOmitLocation(true), 
paba: parsexexpr:00002982:  parser_errposition(pstate, location))); 
paba: parsexexpr:00003030:  ereport(ERROR, 
paba: parsexexpr:00003031:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexexpr:00003032:  errmsg("unequal number of entries in row expressions"), 
paba: parsexexpr:00003033:  errOmitLocation(true), 
paba: parsexexpr:00003034:  parser_errposition(pstate, location))); 
paba: parsexexpr:00003070:  ereport(ERROR, 
paba: parsexexpr:00003071:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paba: parsexexpr:00003072:  errmsg("IS DISTINCT FROM requires = operator to yield boolean"), 
paba: parsexexpr:00003073:  errOmitLocation(true), 
paba: parsexexpr:00003074:  parser_errposition(pstate, location))); 
aaaaa GP_IGNORE: paba: parsexfunc - ./backend/parser/parse_func.c
paba: parsexfunc:00000102:  ereport(ERROR, 
paba: parsexfunc:00000103:  (errcode(ERRCODE_TOO_MANY_ARGUMENTS), 
paba: parsexfunc:00000104:  errmsg("cannot pass more than %d arguments to a function", 
paba: parsexfunc:00000105:  FUNC_MAX_ARGS), 
paba: parsexfunc:00000106:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000264:  ereport(ERROR, 
paba: parsexfunc:00000265:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexfunc:00000266:  errmsg("%s(*) specified, but %s is not an aggregate function", 
paba: parsexfunc:00000267:  NameListToString(funcname), 
paba: parsexfunc:00000268:  NameListToString(funcname)), 
paba: parsexfunc:00000269:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000271:  ereport(ERROR, 
paba: parsexfunc:00000272:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexfunc:00000273:  errmsg("DISTINCT specified, but %s is not an aggregate function", 
paba: parsexfunc:00000274:  NameListToString(funcname)), 
paba: parsexfunc:00000275:  errOmitLocation(true), 
paba: parsexfunc:00000276:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000278:  ereport(ERROR, 
paba: parsexfunc:00000279:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexfunc:00000280:  errmsg("ORDER BY specified, but %s is not an ordered aggregate function", 
paba: parsexfunc:00000281:  NameListToString(funcname)), 
paba: parsexfunc:00000282:  errOmitLocation(true), 
paba: parsexfunc:00000283:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000285:  ereport(ERROR, 
paba: parsexfunc:00000286:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexfunc:00000287:  errmsg("filter clause specified, but " 
paba: parsexfunc:00000288:  "%s is not an aggregate function", 
paba: parsexfunc:00000289:  NameListToString(funcname)), 
paba: parsexfunc:00000290:  errOmitLocation(true), 
paba: parsexfunc:00000291:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000313:  ereport(ERROR, 
paba: parsexfunc:00000314:  (errcode(ERRCODE_AMBIGUOUS_FUNCTION), 
paba: parsexfunc:00000315:  errmsg("function %s is not unique", 
paba: parsexfunc:00000316:  func_signature_string(funcname, nargs, 
paba: parsexfunc:00000317:  actual_arg_types)), 
paba: parsexfunc:00000318:  errhint("Could not choose a best candidate function. " 
paba: parsexfunc:00000319:  "You may need to add explicit type casts."), 
paba: parsexfunc:00000320:  errOmitLocation(true), 
paba: parsexfunc:00000321:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000323:  ereport(ERROR, 
paba: parsexfunc:00000324:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexfunc:00000325:  errmsg("function %s does not exist", 
paba: parsexfunc:00000326:  func_signature_string(funcname, nargs, 
paba: parsexfunc:00000327:  actual_arg_types)), 
paba: parsexfunc:00000328:  errhint("No function matches the given name and argument types. " 
paba: parsexfunc:00000329:  "You may need to add explicit type casts."), 
paba: parsexfunc:00000330:  errOmitLocation(true), 
paba: parsexfunc:00000331:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000340:  ereport(ERROR, 
paba: parsexfunc:00000341:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexfunc:00000342:  errmsg("function %s() does not exist", 
paba: parsexfunc:00000343:  NameListToString(funcname)), 
paba: parsexfunc:00000344:  errhint("No function matches the given name and argument types. " 
paba: parsexfunc:00000345:  "You may need to add explicit type casts."), 
paba: parsexfunc:00000346:  errOmitLocation(true), 
paba: parsexfunc:00000347:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000384:  ereport(ERROR, 
paba: parsexfunc:00000385:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
paba: parsexfunc:00000386:  errmsg("window functions may not return sets"), 
paba: parsexfunc:00000387:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000390:  ereport(ERROR, 
paba: parsexfunc:00000391:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexfunc:00000392:  errmsg("aggregate ORDER BY is not implemented for window functions"), 
paba: parsexfunc:00000393:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000412:  ereport(ERROR, 
paba: parsexfunc:00000413:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexfunc:00000414:  errmsg("window function \"%s\" can not be used with a " 
paba: parsexfunc:00000415:  "filter clause", 
paba: parsexfunc:00000416:  NameListToString(funcname)), 
paba: parsexfunc:00000417:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000475:  ereport(ERROR, 
paba: parsexfunc:00000476:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexfunc:00000477:  errmsg("%s(*) must be used to call a parameterless aggregate function", 
paba: parsexfunc:00000478:  NameListToString(funcname)), 
paba: parsexfunc:00000479:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000499:  ereport(ERROR, 
paba: parsexfunc:00000500:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
paba: parsexfunc:00000501:  errmsg("function %s is not defined as STRICT", 
paba: parsexfunc:00000502:  func_signature_string(funcname, nargs, 
paba: parsexfunc:00000503:  actual_arg_types)), 
paba: parsexfunc:00000504:  errhint("The filter clause is only supported over functions " 
paba: parsexfunc:00000505:  "defined as STRICT."), 
paba: parsexfunc:00000506:  errOmitLocation(true))); 
paba: parsexfunc:00000510:  ereport(ERROR, 
paba: parsexfunc:00000511:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
paba: parsexfunc:00000512:  errmsg("aggregates may not return sets"), 
paba: parsexfunc:00000513:  parser_errposition(pstate, location), 
paba: parsexfunc:00000514:  errOmitLocation(true))); 
paba: parsexfunc:00000522:  ereport(ERROR, 
paba: parsexfunc:00000523:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexfunc:00000524:  errmsg("ORDER BY specified, but %s is not an ordered aggregate function", 
paba: parsexfunc:00000525:  NameListToString(funcname)), 
paba: parsexfunc:00000526:  errOmitLocation(true), 
paba: parsexfunc:00000527:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000535:  ereport(ERROR, 
paba: parsexfunc:00000536:  (errcode(ERRCODE_GP_FEATURE_NOT_SUPPORTED), 
paba: parsexfunc:00000537:  errmsg("ORDER BY and DISTINCT are mutually exclusive"), 
paba: parsexfunc:00000538:  errOmitLocation(true), 
paba: parsexfunc:00000539:  parser_errposition(pstate, location))); 
paba: parsexfunc:00000700:  ereport(ERROR, 
paba: parsexfunc:00000701:  (errcode(ERRCODE_TOO_MANY_ARGUMENTS), 
paba: parsexfunc:00000702:  errmsg("cannot pass more than %d arguments to a function", 
paba: parsexfunc:00000703:  FUNC_MAX_ARGS))); 
paba: parsexfunc:00001122:  elog(ERROR, "cache lookup failed for function %u", 
paba: parsexfunc:00001123:  best_candidate->oid); 
paba: parsexfunc:00001154:  elog(ERROR, "cache lookup failed for aggregate %u", 
paba: parsexfunc:00001155:  best_candidate->oid); 
paba: parsexfunc:00001397:  ereport(ERROR, 
paba: parsexfunc:00001398:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paba: parsexfunc:00001399:  errmsg("column %s.%s does not exist", 
paba: parsexfunc:00001400:  rte->eref->aliasname, attname), 
paba: parsexfunc:00001401:  errOmitLocation(true), 
paba: parsexfunc:00001402:  parser_errposition(pstate, location))); 
paba: parsexfunc:00001410:  ereport(ERROR, 
paba: parsexfunc:00001411:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paba: parsexfunc:00001412:  errmsg("column \"%s\" not found in data type %s", 
paba: parsexfunc:00001413:  attname, format_type_be(relTypeId)), 
paba: parsexfunc:00001414:  errOmitLocation(true), 
paba: parsexfunc:00001415:  parser_errposition(pstate, location))); 
paba: parsexfunc:00001417:  ereport(ERROR, 
paba: parsexfunc:00001418:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paba: parsexfunc:00001419:  errmsg("could not identify column \"%s\" in record data type", 
paba: parsexfunc:00001420:  attname), 
paba: parsexfunc:00001421:  errOmitLocation(true), 
paba: parsexfunc:00001422:  parser_errposition(pstate, location))); 
paba: parsexfunc:00001424:  ereport(ERROR, 
paba: parsexfunc:00001425:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexfunc:00001426:  errmsg("column notation .%s applied to type %s, " 
paba: parsexfunc:00001427:  "which is not a composite type", 
paba: parsexfunc:00001428:  attname, format_type_be(relTypeId)), 
paba: parsexfunc:00001429:  errOmitLocation(true), 
paba: parsexfunc:00001430:  parser_errposition(pstate, location))); 
paba: parsexfunc:00001502:  ereport(ERROR, 
paba: parsexfunc:00001503:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexfunc:00001504:  errmsg("function %s does not exist", 
paba: parsexfunc:00001505:  func_signature_string(funcname, nargs, argtypes)), 
paba: parsexfunc:00001506:  errOmitLocation(true))); 
paba: parsexfunc:00001526:  ereport(ERROR, 
paba: parsexfunc:00001527:  (errcode(ERRCODE_TOO_MANY_ARGUMENTS), 
paba: parsexfunc:00001528:  errmsg("functions cannot have more than %d arguments", 
paba: parsexfunc:00001529:  FUNC_MAX_ARGS))); 
paba: parsexfunc:00001539:  ereport(ERROR, 
paba: parsexfunc:00001540:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paba: parsexfunc:00001541:  errmsg("type \"%s\" does not exist", 
paba: parsexfunc:00001542:  TypeNameToString(t)), 
paba: parsexfunc:00001543:  errOmitLocation(true))); 
paba: parsexfunc:00001574:  ereport(ERROR, 
paba: parsexfunc:00001575:  (errcode(ERRCODE_TOO_MANY_ARGUMENTS), 
paba: parsexfunc:00001576:  errmsg("functions cannot have more than %d arguments", 
paba: parsexfunc:00001577:  FUNC_MAX_ARGS))); 
paba: parsexfunc:00001586:  ereport(ERROR, 
paba: parsexfunc:00001587:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paba: parsexfunc:00001588:  errmsg("type \"%s\" does not exist", 
paba: parsexfunc:00001589:  TypeNameToString(t)), 
paba: parsexfunc:00001590:  errOmitLocation(true))); 
paba: parsexfunc:00001601:  ereport(ERROR, 
paba: parsexfunc:00001602:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexfunc:00001603:  errmsg("aggregate %s(*) does not exist", 
paba: parsexfunc:00001604:  NameListToString(aggname)), 
paba: parsexfunc:00001605:  errOmitLocation(true))); 
paba: parsexfunc:00001607:  ereport(ERROR, 
paba: parsexfunc:00001608:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexfunc:00001609:  errmsg("aggregate %s does not exist", 
paba: parsexfunc:00001610:  func_signature_string(aggname, 
paba: parsexfunc:00001611:  argcount, argoids)), 
paba: parsexfunc:00001612:  errOmitLocation(true))); 
paba: parsexfunc:00001627:  elog(ERROR, "cache lookup failed for function %u", oid); 
paba: parsexfunc:00001639:  ereport(ERROR, 
paba: parsexfunc:00001640:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexfunc:00001641:  errmsg("function %s is not an aggregate", 
paba: parsexfunc:00001642:  func_signature_string(aggname, 
paba: parsexfunc:00001643:  argcount, argoids)))); 
paba: parsexfunc:00001692:  ereport(ERROR, 
paba: parsexfunc:00001693:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexfunc:00001694:  errmsg("table functions must be invoked in FROM clause"))); 
paba: parsexfunc:00001696:  ereport(ERROR, 
paba: parsexfunc:00001697:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsexfunc:00001698:  errmsg("invalid use of TABLE value expression"))); 
aaaaa GP_IGNORE: paba: parsexnode - ./backend/parser/parse_node.c
paba: parsexnode:00000187:  elog(ERROR, "cache lookup failed for type %u", arrayType); 
paba: parsexnode:00000192:  ereport(ERROR, 
paba: parsexnode:00000193:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paba: parsexnode:00000194:  errmsg("cannot subscript type %s because it is not an array", 
paba: parsexnode:00000195:  format_type_be(arrayType)))); 
paba: parsexnode:00000294:  ereport(ERROR, 
paba: parsexnode:00000295:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paba: parsexnode:00000296:  errmsg("array subscript must have type integer"))); 
paba: parsexnode:00000319:  ereport(ERROR, 
paba: parsexnode:00000320:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paba: parsexnode:00000321:  errmsg("array subscript must have type integer"))); 
paba: parsexnode:00000341:  ereport(ERROR, 
paba: parsexnode:00000342:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paba: parsexnode:00000343:  errmsg("array assignment requires type %s" 
paba: parsexnode:00000344:  " but expression is of type %s", 
paba: parsexnode:00000345:  format_type_be(typeneeded), 
paba: parsexnode:00000346:  format_type_be(typesource)), 
paba: parsexnode:00000347:  errhint("You will need to rewrite or cast the expression."))); 
paba: parsexnode:00000477:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(value)); 
aaaaa GP_IGNORE: paba: parsexoper - ./backend/parser/parse_oper.c
paba: parsexoper:00000067:  elog(ERROR, "cache lookup failed for operator %u", oproid); 
paba: parsexoper:00000072:  elog(ERROR, "invalid oid for cache lookup: operator %u", oproid); 
paba: parsexoper:00000115:  ereport(ERROR, 
paba: parsexoper:00000116:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexoper:00000117:  errmsg("operator does not exist: %s", 
paba: parsexoper:00000118:  op_signature_string(opername, oprkind, 
paba: parsexoper:00000119:  oprleft, oprright)), 
paba: parsexoper:00000120:  errOmitLocation(true), 
paba: parsexoper:00000121:  parser_errposition(pstate, location))); 
paba: parsexoper:00000205:  ereport(ERROR, 
paba: parsexoper:00000206:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexoper:00000207:  errmsg("could not identify an equality operator for type %s", 
paba: parsexoper:00000208:  format_type_be(argtype)), 
paba: parsexoper:00000209:  errOmitLocation(true))); 
paba: parsexoper:00000267:  ereport(ERROR, 
paba: parsexoper:00000268:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexoper:00000269:  errmsg("could not identify an ordering operator for type %s", 
paba: parsexoper:00000270:  format_type_be(argtype)), 
paba: parsexoper:00000271:  errhint("Use an explicit ordering operator or modify the query."), 
paba: parsexoper:00000272:  errOmitLocation(true))); 
paba: parsexoper:00000330:  ereport(ERROR, 
paba: parsexoper:00000331:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexoper:00000332:  errmsg("could not identify an ordering operator for type %s", 
paba: parsexoper:00000333:  format_type_be(argtype)), 
paba: parsexoper:00000334:  errhint("Use an explicit ordering operator or modify the query."), 
paba: parsexoper:00000335:  errOmitLocation(true))); 
paba: parsexoper:00000598:  ereport(ERROR, 
paba: parsexoper:00000599:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexoper:00000600:  errmsg("operator requires run-time type coercion: %s", 
paba: parsexoper:00000601:  op_signature_string(op, 'b', arg1, arg2)), 
paba: parsexoper:00000602:  errOmitLocation(true), 
paba: parsexoper:00000603:  parser_errposition(pstate, location))); 
paba: parsexoper:00000787:  ereport(ERROR, 
paba: parsexoper:00000788:  (errcode(ERRCODE_AMBIGUOUS_FUNCTION), 
paba: parsexoper:00000789:  errmsg("operator is not unique: %s", 
paba: parsexoper:00000790:  op_signature_string(op, oprkind, arg1, arg2)), 
paba: parsexoper:00000791:  errhint("Could not choose a best candidate operator. " 
paba: parsexoper:00000792:  "You may need to add explicit type casts."), 
paba: parsexoper:00000793:  errOmitLocation(true), 
paba: parsexoper:00000794:  parser_errposition(pstate, location))); 
paba: parsexoper:00000796:  ereport(ERROR, 
paba: parsexoper:00000797:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
paba: parsexoper:00000798:  errmsg("operator does not exist: %s", 
paba: parsexoper:00000799:  op_signature_string(op, oprkind, arg1, arg2)), 
paba: parsexoper:00000800:  errhint("No operator matches the given name and argument type(s). " 
paba: parsexoper:00000801:  "You may need to add explicit type casts."), 
paba: parsexoper:00000802:  errOmitLocation(true), 
paba: parsexoper:00000803:  parser_errposition(pstate, location))); 
paba: parsexoper:00000892:  ereport(ERROR, 
paba: parsexoper:00000893:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexoper:00000894:  errmsg("op ANY/ALL (array) requires array on right side"), 
paba: parsexoper:00000895:  errOmitLocation(true), 
paba: parsexoper:00000896:  parser_errposition(pstate, location))); 
paba: parsexoper:00000923:  ereport(ERROR, 
paba: parsexoper:00000924:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexoper:00000925:  errmsg("op ANY/ALL (array) requires operator to yield boolean"), 
paba: parsexoper:00000926:  errOmitLocation(true), 
paba: parsexoper:00000927:  parser_errposition(pstate, location))); 
paba: parsexoper:00000929:  ereport(ERROR, 
paba: parsexoper:00000930:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paba: parsexoper:00000931:  errmsg("op ANY/ALL (array) requires operator not to return a set"), 
paba: parsexoper:00000932:  errOmitLocation(true), 
paba: parsexoper:00000933:  parser_errposition(pstate, location))); 
paba: parsexoper:00000941:  ereport(ERROR, 
paba: parsexoper:00000942:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paba: parsexoper:00000943:  errmsg("could not find array type for data type %s", 
paba: parsexoper:00000944:  format_type_be(declared_arg_types[1])), 
paba: parsexoper:00000945:  errOmitLocation(true), 
paba: parsexoper:00000946:  parser_errposition(pstate, location))); 
aaaaa GP_IGNORE: pabe: parsexrelation - ./backend/parser/parse_relation.c
pabe: parsexrelation:00000151:  ereport(ERROR, 
pabe: parsexrelation:00000152:  (errcode(ERRCODE_AMBIGUOUS_ALIAS), 
pabe: parsexrelation:00000153:  errmsg("table reference \"%s\" is ambiguous", 
pabe: parsexrelation:00000154:  refname))); 
pabe: parsexrelation:00000186:  ereport(ERROR, 
pabe: parsexrelation:00000187:  (errcode(ERRCODE_AMBIGUOUS_ALIAS), 
pabe: parsexrelation:00000188:  errmsg("table reference %u is ambiguous", 
pabe: parsexrelation:00000189:  relid))); 
pabe: parsexrelation:00000354:  ereport(ERROR, 
pabe: parsexrelation:00000355:  (errcode(ERRCODE_DUPLICATE_ALIAS), 
pabe: parsexrelation:00000356:  errmsg("table name \"%s\" specified more than once", 
pabe: parsexrelation:00000357:  aliasname1))); 
pabe: parsexrelation:00000393:  elog(ERROR, "RTE not found (internal error)"); 
pabe: parsexrelation:00000457:  ereport(ERROR, 
pabe: parsexrelation:00000458:  (errcode(ERRCODE_AMBIGUOUS_COLUMN), 
pabe: parsexrelation:00000459:  errmsg("column reference \"%s\" is ambiguous", 
pabe: parsexrelation:00000460:  colname), 
pabe: parsexrelation:00000461:  errOmitLocation(true), 
pabe: parsexrelation:00000462:  parser_errposition(pstate, location))); 
pabe: parsexrelation:00000533:  ereport(ERROR, 
pabe: parsexrelation:00000534:  (errcode(ERRCODE_AMBIGUOUS_COLUMN), 
pabe: parsexrelation:00000535:  errmsg("column reference \"%s\" is ambiguous", 
pabe: parsexrelation:00000536:  colname), 
pabe: parsexrelation:00000537:  errOmitLocation(true), 
pabe: parsexrelation:00000538:  parser_errposition(orig_pstate, location))); 
pabe: parsexrelation:00000653:  ereport(ERROR, 
pabe: parsexrelation:00000654:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
pabe: parsexrelation:00000655:  errmsg("table \"%s\" has %d columns available but %d columns specified", 
pabe: parsexrelation:00000656:  eref->aliasname, maxattrs - numdropped, numaliases))); 
pabe: parsexrelation:00000683:  ereport(ERROR, 
pabe: parsexrelation:00000684:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
pabe: parsexrelation:00000685:  errmsg("too many column aliases specified for function %s", 
pabe: parsexrelation:00000686:  funcname))); 
pabe: parsexrelation:00000733:  ereport(ERROR, 
pabe: parsexrelation:00000734:  (errcode(ERRCODE_UNDEFINED_TABLE), 
pabe: parsexrelation:00000735:  errmsg("relation \"%s\" does not exist", 
pabe: parsexrelation:00000736:  relation->relname), 
pabe: parsexrelation:00000737:  errdetail("There is a WITH item named \"%s\", but it cannot be referenced from this part of the query.", 
pabe: parsexrelation:00000738:  relation->relname), 
pabe: parsexrelation:00000739:  errhint("Re-order the WITH items to remove forward references."))); 
pabe: parsexrelation:00000938:  ereport(ERROR, 
pabe: parsexrelation:00000939:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
pabe: parsexrelation:00000940:  errmsg("table \"%s\" has %d columns available but %d columns specified", 
pabe: parsexrelation:00000941:  refname, varattno, numaliases))); 
pabe: parsexrelation:00001032:  ereport(ERROR, 
pabe: parsexrelation:00001033:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
pabe: parsexrelation:00001034:  errmsg("functions over multiple TABLE value " 
pabe: parsexrelation:00001035:  "expressions not supported"))); 
pabe: parsexrelation:00001100:  elog(ERROR, "function %u returned NULL", flinfo.fn_oid); 
pabe: parsexrelation:00001130:  ereport(ERROR, 
pabe: parsexrelation:00001131:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabe: parsexrelation:00001132:  errmsg("a column definition list is only allowed for functions returning \"record\""), 
pabe: parsexrelation:00001133:  errOmitLocation(true))); 
pabe: parsexrelation:00001138:  ereport(ERROR, 
pabe: parsexrelation:00001139:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabe: parsexrelation:00001140:  errmsg("a column definition list is required for functions returning \"record\""), 
pabe: parsexrelation:00001141:  errOmitLocation(true))); 
pabe: parsexrelation:00001173:  ereport(ERROR, 
pabe: parsexrelation:00001174:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
pabe: parsexrelation:00001175:  errmsg("column \"%s\" cannot be declared SETOF", 
pabe: parsexrelation:00001176:  attrname), 
pabe: parsexrelation:00001177:  errOmitLocation(true))); 
pabe: parsexrelation:00001186:  ereport(ERROR, 
pabe: parsexrelation:00001187:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabe: parsexrelation:00001188:  errmsg("function \"%s\" in FROM has unsupported return type %s", 
pabe: parsexrelation:00001189:  funcname, format_type_be(funcrettype)), 
pabe: parsexrelation:00001190:  errOmitLocation(true))); 
pabe: parsexrelation:00001256:  ereport(ERROR, 
pabe: parsexrelation:00001257:  (errcode(ERRCODE_INVALID_COLUMN_REFERENCE), 
pabe: parsexrelation:00001258:  errmsg("VALUES lists \"%s\" have %d columns available but %d columns specified", 
pabe: parsexrelation:00001259:  refname, numcolumns, numaliases), 
pabe: parsexrelation:00001260:  errOmitLocation(true))); 
pabe: parsexrelation:00001310:  ereport(ERROR, 
pabe: parsexrelation:00001311:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
pabe: parsexrelation:00001312:  errmsg("joins can have at most %d columns", 
pabe: parsexrelation:00001313:  MaxAttrNumber))); 
pabe: parsexrelation:00001413:  ereport(ERROR, 
pabe: parsexrelation:00001414:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabe: parsexrelation:00001415:  errmsg(ERRMSG_GP_WITH_COLUMNS_MISMATCH, refname))); 
pabe: parsexrelation:00001509:  elog(ERROR, "cache lookup failed for relation %u", relid); 
pabe: parsexrelation:00001790:  elog(ERROR, "function in FROM has unsupported return type"); 
pabe: parsexrelation:00001889:  elog(ERROR, "unrecognized RTE kind: %d", (int) rte->rtekind); 
pabe: parsexrelation:00002078:  ereport(WARNING, (errcode(ERRCODE_INTERNAL_ERROR), 
pabe: parsexrelation:00002079:  errmsg_internal("invalid attnum %d for rangetable entry %s", 
pabe: parsexrelation:00002080:  attnum, name) )); 
pabe: parsexrelation:00002104:  elog(ERROR, "cache lookup failed for attribute %d of relation %u", 
pabe: parsexrelation:00002105:  attnum, relid); 
pabe: parsexrelation:00002142:  elog(ERROR, "cache lookup failed for attribute %d of relation %u", 
pabe: parsexrelation:00002143:  attnum, rte->relid); 
pabe: parsexrelation:00002151:  ereport(ERROR, 
pabe: parsexrelation:00002152:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
pabe: parsexrelation:00002153:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
pabe: parsexrelation:00002154:  NameStr(att_tup->attname), 
pabe: parsexrelation:00002155:  get_rel_name(rte->relid)), 
pabe: parsexrelation:00002156:  errOmitLocation(true))); 
pabe: parsexrelation:00002170:  elog(ERROR, "subquery %s does not have attribute %d", 
pabe: parsexrelation:00002171:  rte->eref->aliasname, attnum); 
pabe: parsexrelation:00002196:  ereport(ERROR, 
pabe: parsexrelation:00002197:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
pabe: parsexrelation:00002198:  errmsg("column %d of relation \"%s\" does not exist", 
pabe: parsexrelation:00002199:  attnum, 
pabe: parsexrelation:00002200:  rte->eref->aliasname))); 
pabe: parsexrelation:00002209:  ereport(ERROR, 
pabe: parsexrelation:00002210:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
pabe: parsexrelation:00002211:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
pabe: parsexrelation:00002212:  NameStr(att_tup->attname), 
pabe: parsexrelation:00002213:  rte->eref->aliasname))); 
pabe: parsexrelation:00002231:  elog(ERROR, "function in FROM has unsupported return type"); 
pabe: parsexrelation:00002242:  elog(ERROR, "values list %s does not have attribute %d", 
pabe: parsexrelation:00002243:  rte->eref->aliasname, attnum); 
pabe: parsexrelation:00002271:  elog(ERROR, "unrecognized RTE kind: %d", (int) rte->rtekind); 
pabe: parsexrelation:00002310:  elog(ERROR, "invalid varattno %d", attnum); 
pabe: parsexrelation:00002342:  elog(ERROR, "unrecognized RTE kind: %d", (int) rte->rtekind); 
pabe: parsexrelation:00002467:  elog(ERROR, "invalid attribute number %d", attid); 
pabe: parsexrelation:00002489:  elog(ERROR, "invalid attribute number %d", attid); 
pabe: parsexrelation:00002531:  ereport(ERROR, 
pabe: parsexrelation:00002532:  (errcode(ERRCODE_UNDEFINED_TABLE), 
pabe: parsexrelation:00002533:  errmsg("invalid reference to FROM-clause entry for table \"%s\"", 
pabe: parsexrelation:00002534:  relation->relname), 
pabe: parsexrelation:00002535:  (badAlias ? 
pabe: parsexrelation:00002536:  errhint("Perhaps you meant to reference the table alias \"%s\".", 
pabe: parsexrelation:00002537:  badAlias) : 
pabe: parsexrelation:00002538:  errhint("There is an entry for table \"%s\", but it cannot be referenced from this part of the query.", 
pabe: parsexrelation:00002539:  rte->eref->aliasname)), 
pabe: parsexrelation:00002540:  errOmitLocation(true), 
pabe: parsexrelation:00002541:  parser_errposition(pstate, location))); 
pabe: parsexrelation:00002543:  ereport(ERROR, 
pabe: parsexrelation:00002544:  (errcode(ERRCODE_UNDEFINED_TABLE), 
pabe: parsexrelation:00002545:  (pstate->parentParseState ? 
pabe: parsexrelation:00002546:  errmsg("missing FROM-clause entry in subquery for table \"%s\"", 
pabe: parsexrelation:00002547:  relation->relname) : 
pabe: parsexrelation:00002548:  errmsg("missing FROM-clause entry for table \"%s\"", 
pabe: parsexrelation:00002549:  relation->relname)), 
pabe: parsexrelation:00002550:  errOmitLocation(true), 
pabe: parsexrelation:00002551:  parser_errposition(pstate, location))); 
pabe: parsexrelation:00002556:  ereport(NOTICE, 
pabe: parsexrelation:00002557:  (errcode(ERRCODE_UNDEFINED_TABLE), 
pabe: parsexrelation:00002558:  (pstate->parentParseState ? 
pabe: parsexrelation:00002559:  errmsg("adding missing FROM-clause entry in subquery for table \"%s\"", 
pabe: parsexrelation:00002560:  relation->relname) : 
pabe: parsexrelation:00002561:  errmsg("adding missing FROM-clause entry for table \"%s\"", 
pabe: parsexrelation:00002562:  relation->relname)), 
pabe: parsexrelation:00002563:  (badAlias ? 
pabe: parsexrelation:00002564:  errhint("Perhaps you meant to reference the table alias \"%s\".", 
pabe: parsexrelation:00002565:  badAlias) : 
pabe: parsexrelation:00002566:  (rte ? 
pabe: parsexrelation:00002567:  errhint("There is an entry for table \"%s\", but it cannot be referenced from this part of the query.", 
pabe: parsexrelation:00002568:  rte->eref->aliasname) : 0)), 
pabe: parsexrelation:00002569:  errOmitLocation(true), 
pabe: parsexrelation:00002570:  parser_errposition(pstate, location))); 
aaaaa GP_IGNORE: pabc: parsextarget - ./backend/parser/parse_target.c
pabc: parsextarget:00000307:  elog(ERROR, "subquery %s does not have attribute %d", 
pabc: parsextarget:00000308:  rte->eref->aliasname, attnum); 
pabc: parsextarget:00000324:  elog(ERROR, "WITH query %s does not have attribute %d", 
pabc: parsextarget:00000325:  rte->ctename, attnum); 
pabc: parsextarget:00000387:  ereport(ERROR, 
pabc: parsextarget:00000388:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabc: parsextarget:00000389:  errmsg("cannot assign to system column \"%s\"", 
pabc: parsextarget:00000390:  colname), 
pabc: parsextarget:00000391:  parser_errposition(pstate, location))); 
pabc: parsextarget:00000412:  ereport(ERROR, 
pabc: parsextarget:00000413:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabc: parsextarget:00000414:  errmsg("cannot set an array element to DEFAULT"), 
pabc: parsextarget:00000415:  parser_errposition(pstate, location))); 
pabc: parsextarget:00000417:  ereport(ERROR, 
pabc: parsextarget:00000418:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabc: parsextarget:00000419:  errmsg("cannot set a subfield to DEFAULT"), 
pabc: parsextarget:00000420:  parser_errposition(pstate, location))); 
pabc: parsextarget:00000481:  ereport(ERROR, 
pabc: parsextarget:00000482:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsextarget:00000483:  errmsg("column \"%s\" is of type %s" 
pabc: parsextarget:00000484:  " but expression is of type %s", 
pabc: parsextarget:00000485:  colname, 
pabc: parsextarget:00000486:  format_type_be(attrtype), 
pabc: parsextarget:00000487:  format_type_be(type_id)), 
pabc: parsextarget:00000488:  errhint("You will need to rewrite or cast the expression."), 
pabc: parsextarget:00000489:  parser_errposition(pstate, location))); 
pabc: parsextarget:00000649:  ereport(ERROR, 
pabc: parsextarget:00000650:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsextarget:00000651:  errmsg("cannot assign to field \"%s\" of column \"%s\" because its type %s is not a composite type", 
pabc: parsextarget:00000652:  strVal(n), targetName, 
pabc: parsextarget:00000653:  format_type_be(targetTypeId)), 
pabc: parsextarget:00000654:  parser_errposition(pstate, location))); 
pabc: parsextarget:00000658:  ereport(ERROR, 
pabc: parsextarget:00000659:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
pabc: parsextarget:00000660:  errmsg("cannot assign to field \"%s\" of column \"%s\" because there is no such column in data type %s", 
pabc: parsextarget:00000661:  strVal(n), targetName, 
pabc: parsextarget:00000662:  format_type_be(targetTypeId)), 
pabc: parsextarget:00000663:  parser_errposition(pstate, location))); 
pabc: parsextarget:00000665:  ereport(ERROR, 
pabc: parsextarget:00000666:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
pabc: parsextarget:00000667:  errmsg("cannot assign to system column \"%s\"", 
pabc: parsextarget:00000668:  strVal(n)), 
pabc: parsextarget:00000669:  parser_errposition(pstate, location))); 
pabc: parsextarget:00000733:  ereport(ERROR, 
pabc: parsextarget:00000734:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsextarget:00000735:  errmsg("array assignment to \"%s\" requires type %s" 
pabc: parsextarget:00000736:  " but expression is of type %s", 
pabc: parsextarget:00000737:  targetName, 
pabc: parsextarget:00000738:  format_type_be(targetTypeId), 
pabc: parsextarget:00000739:  format_type_be(exprType(rhs))), 
pabc: parsextarget:00000740:  errhint("You will need to rewrite or cast the expression."), 
pabc: parsextarget:00000741:  parser_errposition(pstate, location))); 
pabc: parsextarget:00000743:  ereport(ERROR, 
pabc: parsextarget:00000744:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabc: parsextarget:00000745:  errmsg("subfield \"%s\" is of type %s" 
pabc: parsextarget:00000746:  " but expression is of type %s", 
pabc: parsextarget:00000747:  targetName, 
pabc: parsextarget:00000748:  format_type_be(targetTypeId), 
pabc: parsextarget:00000749:  format_type_be(exprType(rhs))), 
pabc: parsextarget:00000750:  errhint("You will need to rewrite or cast the expression."), 
pabc: parsextarget:00000751:  parser_errposition(pstate, location))); 
pabc: parsextarget:00000812:  ereport(ERROR, 
pabc: parsextarget:00000813:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
pabc: parsextarget:00000814:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
pabc: parsextarget:00000815:  name, 
pabc: parsextarget:00000816:  RelationGetRelationName(pstate->p_target_relation)), 
pabc: parsextarget:00000817:  errOmitLocation(true), 
pabc: parsextarget:00000818:  parser_errposition(pstate, col->location))); 
pabc: parsextarget:00000829:  ereport(ERROR, 
pabc: parsextarget:00000830:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
pabc: parsextarget:00000831:  errmsg("column \"%s\" specified more than once", 
pabc: parsextarget:00000832:  name), 
pabc: parsextarget:00000833:  parser_errposition(pstate, col->location))); 
pabc: parsextarget:00000840:  ereport(ERROR, 
pabc: parsextarget:00000841:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
pabc: parsextarget:00000842:  errmsg("column \"%s\" specified more than once", 
pabc: parsextarget:00000843:  name), 
pabc: parsextarget:00000844:  parser_errposition(pstate, col->location))); 
pabc: parsextarget:00000885:  elog(ERROR, "invalid use of *"); 
pabc: parsextarget:00000920:  ereport(ERROR, 
pabc: parsextarget:00000921:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabc: parsextarget:00000922:  errmsg("cross-database references are not implemented: %s", 
pabc: parsextarget:00000923:  NameListToString(fields)), 
pabc: parsextarget:00000924:  parser_errposition(pstate, cref->location))); 
pabc: parsextarget:00000930:  ereport(ERROR, 
pabc: parsextarget:00000931:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsextarget:00000932:  errmsg("improper qualified name (too many dotted names): %s", 
pabc: parsextarget:00000933:  NameListToString(fields)), 
pabc: parsextarget:00000934:  parser_errposition(pstate, cref->location))); 
pabc: parsextarget:00000980:  ereport(ERROR, 
pabc: parsextarget:00000981:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: parsextarget:00000982:  errmsg("SELECT * with no tables specified is not valid"))); 
pabc: parsextarget:00001181:  elog(ERROR, "subquery %s does not have attribute %d", 
pabc: parsextarget:00001182:  rte->eref->aliasname, attnum); 
pabc: parsextarget:00001212:  elog(ERROR, "WITH query %s does not have attribute %d", 
pabc: parsextarget:00001213:  cte->ctename, attnum); 
pabc: parsextarget:00001429:  elog(ERROR, "unexpected percentile type"); 
aaaaa GP_IGNORE: paba: parsextype - ./backend/parser/parse_type.c
paba: parsextype:00000061:  ereport(ERROR, 
paba: parsextype:00000062:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsextype:00000063:  errmsg("improper %%TYPE reference (too few dotted names): %s", 
paba: parsextype:00000064:  NameListToString(typname->names)), 
paba: parsextype:00000065:  parser_errposition(pstate, typname->location))); 
paba: parsextype:00000083:  ereport(ERROR, 
paba: parsextype:00000084:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsextype:00000085:  errmsg("improper %%TYPE reference (too many dotted names): %s", 
paba: parsextype:00000086:  NameListToString(typname->names)), 
paba: parsextype:00000087:  parser_errposition(pstate, typname->location))); 
paba: parsextype:00000095:  ereport(ERROR, 
paba: parsextype:00000096:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paba: parsextype:00000097:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
paba: parsextype:00000098:  field, rel->relname), 
paba: parsextype:00000099:  errOmitLocation(true), 
paba: parsextype:00000100:  parser_errposition(pstate, typname->location))); 
paba: parsextype:00000107:  ereport(NOTICE, 
paba: parsextype:00000108:  (errmsg("type reference %s converted to %s", 
paba: parsextype:00000109:  TypeNameToString(typname), 
paba: parsextype:00000110:  format_type_be(restype)))); 
paba: parsextype:00000243:  ereport(ERROR, 
paba: parsextype:00000244:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paba: parsextype:00000245:  errmsg("type \"%s\" does not exist", 
paba: parsextype:00000246:  TypeNameToString(typname)), 
paba: parsextype:00000247:  errOmitLocation(true), 
paba: parsextype:00000248:  parser_errposition(pstate, typname->location))); 
paba: parsextype:00000251:  ereport(ERROR, 
paba: parsextype:00000252:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paba: parsextype:00000253:  errmsg("type \"%s\" is only a shell", 
paba: parsextype:00000254:  TypeNameToString(typname)), 
paba: parsextype:00000255:  errOmitLocation(true), 
paba: parsextype:00000256:  parser_errposition(pstate, typname->location))); 
paba: parsextype:00000274:  ereport(ERROR, 
paba: parsextype:00000275:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paba: parsextype:00000276:  errmsg("type \"%s\" does not exist", 
paba: parsextype:00000277:  TypeNameToString(typname)), 
paba: parsextype:00000278:  errOmitLocation(true))); 
paba: parsextype:00000283:  elog(ERROR, "cache lookup failed for type %u", typoid); 
paba: parsextype:00000285:  ereport(ERROR, 
paba: parsextype:00000286:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paba: parsextype:00000287:  errmsg("type \"%s\" is only a shell", 
paba: parsextype:00000288:  TypeNameToString(typname)), 
paba: parsextype:00000289:  errOmitLocation(true), 
paba: parsextype:00000290:  parser_errposition(pstate, typname->location))); 
paba: parsextype:00000305:  elog(ERROR, "cache lookup failed for type %u", id); 
paba: parsextype:00000314:  elog(ERROR, "typeTypeId() called with NULL type struct"); 
paba: parsextype:00000402:  elog(ERROR, "cache lookup failed for type %u", type_id); 
paba: parsextype:00000512:  ereport(ERROR, 
paba: parsextype:00000513:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: parsextype:00000514:  errmsg("invalid type name \"%s\"", str))); 
aaaaa GP_IGNORE: pabd: parsexutilcmd - ./backend/parser/parse_utilcmd.c
pabd: parsexutilcmd:00000105:  elog(ERROR, "cache lookup failed for relation %u", source_relid); 
pabd: parsexutilcmd:00000172:  elog(ERROR, "missing constraint on partitioned table"); 
pabd: parsexutilcmd:00000218:  elog(ERROR, "too few entries in indexprs list"); 
pabd: parsexutilcmd:00000286:  elog(ERROR, "cache lookup failed for opclass %u", opclass); 
pabd: parsexutilcmd:00000322:  ereport(ERROR, 
pabd: parsexutilcmd:00000323:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
pabd: parsexutilcmd:00000324:  errmsg("multiple primary keys for table \"%s\" are not allowed", 
pabd: parsexutilcmd:00000325:  cxt->relation->relname))); 
pabd: parsexutilcmd:00000403:  ereport(ERROR, 
pabd: parsexutilcmd:00000404:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
pabd: parsexutilcmd:00000405:  errmsg("inherited relation \"%s\" is not a table", 
pabd: parsexutilcmd:00000406:  inh->relname))); 
pabd: parsexutilcmd:00000440:  ereport(ERROR, 
pabd: parsexutilcmd:00000441:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
pabd: parsexutilcmd:00000442:  errmsg("column \"%s\" named in key does not exist", 
pabd: parsexutilcmd:00000443:  key), 
pabd: parsexutilcmd:00000444:  errOmitLocation(true))); 
pabd: parsexutilcmd:00000453:  ereport(ERROR, 
pabd: parsexutilcmd:00000454:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
pabd: parsexutilcmd:00000455:  errmsg("column \"%s\" appears twice in primary key constraint", 
pabd: parsexutilcmd:00000456:  key))); 
pabd: parsexutilcmd:00000458:  ereport(ERROR, 
pabd: parsexutilcmd:00000459:  (errcode(ERRCODE_DUPLICATE_COLUMN), 
pabd: parsexutilcmd:00000460:  errmsg("column \"%s\" appears twice in unique constraint", 
pabd: parsexutilcmd:00000461:  key))); 
pabd: parsexutilcmd:00000501:  ereport(ERROR, 
pabd: parsexutilcmd:00000502:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
pabd: parsexutilcmd:00000503:  errmsg("inherited relation \"%s\" is not a table", 
pabd: parsexutilcmd:00000504:  inhRelation->relation->relname))); 
pabd: parsexutilcmd:00000543:  elog(ERROR, "unrecognized CREATE TABLE LIKE option: %d", 
pabd: parsexutilcmd:00000544:  option); 
pabd: parsexutilcmd:00000549:  ereport(ERROR, 
pabd: parsexutilcmd:00000550:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabd: parsexutilcmd:00000551:  errmsg("LIKE INCLUDING may not be used with this kind of relation"))); 
pabd: parsexutilcmd:00000726:  ereport(ERROR, 
pabd: parsexutilcmd:00000727:  (errcode(ERRCODE_INVALID_TABLE_DEFINITION), 
pabd: parsexutilcmd:00000728:  errmsg("multiple primary keys for table \"%s\" are not allowed", 
pabd: parsexutilcmd:00000729:  cxt->relation->relname))); 
aaaaa GP_IGNORE: paag: parser - ./backend/parser/parser.c
paag: parser:00000087:  elog(ERROR, "expected string constant, got token code %d", ctoken); 
aaaaa GP_IGNORE: saae: scan - ./backend/parser/scan.c
saae: scan:00014640: #define fprintf(file, fmt, msg) ereport(ERROR, (errmsg_internal("%s", msg))) 
saae: scan:00014641:  
saae: scan:00014642: static int xcdepth = 0; /* depth of nesting in slash-star comments */ 
saae: scan:00014643: static char *dolqstart; /* current $foo$ quote start string */ 
saae: scan:00014644:  
saae: scan:00014645: /* first part of UTF16 surrogate for unicode escapes */ 
saae: scan:00014646: static uint32 utf16_top_part; 
saae: scan:00015320:  ereport(ERROR, 
saae: scan:00015321:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
saae: scan:00015322:  errmsg("unsafe use of string constant with Unicode escapes"), 
saae: scan:00015323:  errdetail("String constants with Unicode escapes cannot be used when standard_conforming_strings is off."), 
saae: scan:00015324:  lexer_errposition())); 
saae: scan:00015448:  ereport(ERROR, 
saae: scan:00015449:  (errcode(ERRCODE_INVALID_ESCAPE_SEQUENCE), 
saae: scan:00015450:  errmsg("invalid Unicode escape"), 
saae: scan:00015451:  errhint("Unicode escapes must be full-length: \\uXXXX or \\UXXXXXXXX."), 
saae: scan:00015452:  lexer_errposition())); 
saae: scan:00015465:  ereport(ERROR, 
saae: scan:00015466:  (errcode(ERRCODE_NONSTANDARD_USE_OF_ESCAPE_CHARACTER), 
saae: scan:00015467:  errmsg("unsafe use of \\' in a string literal"), 
saae: scan:00015468:  errhint("Use '' to write quotes in strings. \\' is insecure in client-only encodings."), 
saae: scan:00015469:  errOmitLocation(true), 
saae: scan:00015470:  lexer_errposition())); 
saae: scan:00016918:  ereport(ERROR, 
saae: scan:00016919:  (errcode(ERRCODE_SYNTAX_ERROR), 
saae: scan:00016920:  /* translator: %s is typically the translation of "syntax error" */ 
saae: scan:00016921:  errmsg("%s at end of input", _(message)), 
saae: scan:00016922:  errOmitLocation(true), 
saae: scan:00016923:  lexer_errposition())); 
saae: scan:00016927:  ereport(ERROR, 
saae: scan:00016928:  (errcode(ERRCODE_SYNTAX_ERROR), 
saae: scan:00016929:  /* translator: first %s is typically the translation of "syntax error" */ 
saae: scan:00016930:  errmsg("%s at or near \"%s\"", _(message), loc), 
saae: scan:00016931:  errOmitLocation(true), 
saae: scan:00016932:  lexer_errposition())); 
saae: scan:00017038:  elog(ERROR, "invalid hexadecimal digit"); 
saae: scan:00017175:  ereport(WARNING, 
saae: scan:00017176:  (errcode(ERRCODE_NONSTANDARD_USE_OF_ESCAPE_CHARACTER), 
saae: scan:00017177:  errmsg("nonstandard use of \\' in a string literal"), 
saae: scan:00017178:  errhint("Use '' to write quotes in strings, or use the escape string syntax (E'...')."), 
saae: scan:00017179:  errOmitLocation(true), 
saae: scan:00017180:  lexer_errposition())); 
saae: scan:00017186:  ereport(WARNING, 
saae: scan:00017187:  (errcode(ERRCODE_NONSTANDARD_USE_OF_ESCAPE_CHARACTER), 
saae: scan:00017188:  errmsg("nonstandard use of \\\\ in a string literal"), 
saae: scan:00017189:  errhint("Use the escape string syntax for backslashes, e.g., E'\\\\'."), 
saae: scan:00017190:  errOmitLocation(true), 
saae: scan:00017191:  lexer_errposition())); 
saae: scan:00017202:  ereport(WARNING, 
saae: scan:00017203:  (errcode(ERRCODE_NONSTANDARD_USE_OF_ESCAPE_CHARACTER), 
saae: scan:00017204:  errmsg("nonstandard use of escape in a string literal"), 
saae: scan:00017205:  errhint("Use the escape string syntax for escapes, e.g., E'\\r\\n'."), 
saae: scan:00017206:  errOmitLocation(true), 
saae: scan:00017207:  lexer_errposition())); 
aaaaa GP_IGNORE: saah: scansup - ./backend/parser/scansup.c
saah: scansup:00000179:  ereport(NOTICE, 
saah: scansup:00000180:  (errcode(ERRCODE_NAME_TOO_LONG), 
saah: scansup:00000181:  errmsg("identifier \"%s\" will be truncated to \"%.*s\"", 
saah: scansup:00000182:  ident, len, ident))); 
aaaaa GP_IGNORE: saad: sem - ./backend/port/beos/sem.c
saad: sem:00000156:  elog(ERROR, "semctl error: GETNCNT not implemented"); 
saad: sem:00000171:  elog(ERROR, "semctl error: unknown flag"); 
aaaaa GP_IGNORE: saah: support - ./backend/port/beos/support.c
saah: support:00000045:  elog(WARNING, "error loading BeOS support server: could not create communication ports"); 
saah: support:00000071:  elog(WARNING, "could not load this add-on"); 
saah: support:00000095:  elog(WARNING, "could not load this add-on: map text error"); 
saah: support:00000111:  elog(WARNING, "could not load this add-on: map data error"); 
saah: support:00000129:  elog(WARNING, "loading symbol \"%s\" failed", symname); 
aaaaa GP_IGNORE: baae: bsdi - ./backend/port/dynloader/bsdi.c
baae: bsdi:00000058:  elog(WARNING, "could not link C library"); 
baae: bsdi:00000065:  elog(WARNING, "could not link math library"); 
baae: bsdi:00000076:  elog(WARNING, "\"%s\" is undefined", *list); 
aaaaa GP_IGNORE: laaf: linux - ./backend/port/dynloader/linux.c
laaf: linux:00000035:  elog(ERROR, "dynamic load not supported"); 
laaf: linux:00000070:  elog(WARNING, "could not link C library"); 
laaf: linux:00000077:  elog(WARNING, "could not link math library"); 
laaf: linux:00000088:  elog(WARNING, "\"%s\" is undefined", *list); 
aaaaa GP_IGNORE: naai: nextstep - ./backend/port/dynloader/nextstep.c
naai: nextstep:00000035:  ereport(ERROR, errcode(ERRCODE_OUT_OF_MEMORY), 
naai: nextstep:00000036:  errmsg("Transer error failed: out of memory")); 
aaaaa GP_IGNORE: uaba: ultrixfour - ./backend/port/dynloader/ultrix4.c
uaba: ultrixfour:00000060:  elog(WARNING, "\"%s\" is undefined", *list); 
aaaaa GP_IGNORE: iaai: ipcxtest - ./backend/port/ipc_test.c
iaai: ipcxtest:00000091:  elog(FATAL, "out of on_shmem_exit slots"); 
aaaaa GP_IGNORE: paah: pgxsema - ./backend/port/pg_sema.c
paah: pgxsema:00000117:  ereport(FATAL, 
paah: pgxsema:00000118:  (errmsg("could not create semaphores: %m"), 
paah: pgxsema:00000119:  errdetail("Failed system call was semget(%lu, %d, 0%o).", 
paah: pgxsema:00000120:  (unsigned long) semKey, numSems, 
paah: pgxsema:00000121:  IPC_CREAT *PIPE* IPC_EXCL *PIPE* IPCProtection), 
paah: pgxsema:00000122:  (errno == ENOSPC) ? 
paah: pgxsema:00000123:  errhint("This error does *not* mean that you have run out of disk space.\n" 
paah: pgxsema:00000124:  "It occurs when either the system limit for the maximum number of " 
paah: pgxsema:00000125:  "semaphore sets (SEMMNI), or the system wide maximum number of " 
paah: pgxsema:00000126:  "semaphores (SEMMNS), would be exceeded. You need to raise the " 
paah: pgxsema:00000127:  "respective kernel parameter. Alternatively, reduce PostgreSQL's " 
paah: pgxsema:00000128:  "consumption of semaphores by reducing its max_connections parameter " 
paah: pgxsema:00000129:  "(currently %d).\n" 
paah: pgxsema:00000130:  "The PostgreSQL documentation contains more information about " 
paah: pgxsema:00000131:  "configuring your system for PostgreSQL.", 
paah: pgxsema:00000132:  MaxBackends) : 0)); 
paah: pgxsema:00000148:  ereport(FATAL, 
paah: pgxsema:00000149:  (errmsg_internal("semctl(%d, %d, SETVAL, %d) failed: %m", 
paah: pgxsema:00000150:  semId, semNum, value), 
paah: pgxsema:00000151:  (errno == ERANGE) ? 
paah: pgxsema:00000152:  errhint("You possibly need to raise your kernel's SEMVMX value to be at least " 
paah: pgxsema:00000153:  "%d. Look into the PostgreSQL documentation for details.", 
paah: pgxsema:00000154:  value) : 0)); 
paah: pgxsema:00000442:  elog(FATAL, "semop(id=%d,num=%d) failed: %m", sema->semId, sema->semNum); 
paah: pgxsema:00000466:  elog(FATAL, "semop(id=%d,num=%d) failed: %m", sema->semId, sema->semNum); 
paah: pgxsema:00000499:  elog(FATAL, "semop(id=%d,num=%d) failed: %m", sema->semId, sema->semNum); 
paah: pgxsema:00000539:  elog(FATAL, "semop(id=%d,num=%d) failed: %m", sema->semId, sema->semNum); 
aaaaa GP_IGNORE: paai: pgxshmem - ./backend/port/pg_shmem.c
paai: pgxshmem:00000098:  ereport(FATAL, 
paai: pgxshmem:00000099:  (errmsg("could not create shared memory segment: %m"), 
paai: pgxshmem:00000100:  errdetail("Failed system call was shmget(key=%lu, size=%lu, 0%o).", 
paai: pgxshmem:00000101:  (unsigned long) memKey, (unsigned long) size, 
paai: pgxshmem:00000102:  IPC_CREAT *PIPE* IPC_EXCL *PIPE* IPCProtection), 
paai: pgxshmem:00000103:  (errno == EINVAL) ? 
paai: pgxshmem:00000104:  errhint("This error usually means that PostgreSQL's request for a shared memory " 
paai: pgxshmem:00000105:  "segment exceeded your kernel's SHMMAX parameter. You can either " 
paai: pgxshmem:00000106:  "reduce the request size or reconfigure the kernel with larger SHMMAX. " 
paai: pgxshmem:00000107:  "To reduce the request size (currently %lu bytes), reduce " 
paai: pgxshmem:00000108:  "PostgreSQL's shared_buffers parameter (currently %d) and/or " 
paai: pgxshmem:00000109:  "its max_connections parameter (currently %d).\n" 
paai: pgxshmem:00000110:  "If the request size is already small, it's possible that it is less than " 
paai: pgxshmem:00000111:  "your kernel's SHMMIN parameter, in which case raising the request size or " 
paai: pgxshmem:00000112:  "reconfiguring SHMMIN is called for.\n" 
paai: pgxshmem:00000113:  "The PostgreSQL documentation contains more information about shared " 
paai: pgxshmem:00000114:  "memory configuration.", 
paai: pgxshmem:00000115:  (unsigned long) size, NBuffers, MaxBackends) : 0, 
paai: pgxshmem:00000116:  (errno == ENOMEM) ? 
paai: pgxshmem:00000117:  errhint("This error usually means that PostgreSQL's request for a shared " 
paai: pgxshmem:00000118:  "memory segment exceeded available memory or swap space. " 
paai: pgxshmem:00000119:  "To reduce the request size (currently %lu bytes), reduce " 
paai: pgxshmem:00000120:  "PostgreSQL's shared_buffers parameter (currently %d) and/or " 
paai: pgxshmem:00000121:  "its max_connections parameter (currently %d).\n" 
paai: pgxshmem:00000122:  "The PostgreSQL documentation contains more information about shared " 
paai: pgxshmem:00000123:  "memory configuration.", 
paai: pgxshmem:00000124:  (unsigned long) size, NBuffers, MaxBackends) : 0, 
paai: pgxshmem:00000125:  (errno == ENOSPC) ? 
paai: pgxshmem:00000126:  errhint("This error does *not* mean that you have run out of disk space. " 
paai: pgxshmem:00000127:  "It occurs either if all available shared memory IDs have been taken, " 
paai: pgxshmem:00000128:  "in which case you need to raise the SHMMNI parameter in your kernel, " 
paai: pgxshmem:00000129:  "or because the system's overall limit for shared memory has been " 
paai: pgxshmem:00000130:  "reached. If you cannot increase the shared memory limit, " 
paai: pgxshmem:00000131:  "reduce PostgreSQL's shared memory request (currently %lu bytes), " 
paai: pgxshmem:00000132:  "by reducing its shared_buffers parameter (currently %d) and/or " 
paai: pgxshmem:00000133:  "its max_connections parameter (currently %d).\n" 
paai: pgxshmem:00000134:  "The PostgreSQL documentation contains more information about shared " 
paai: pgxshmem:00000135:  "memory configuration.", 
paai: pgxshmem:00000136:  (unsigned long) size, NBuffers, MaxBackends) : 0)); 
paai: pgxshmem:00000146:  elog(FATAL, "shmat(id=%d) failed: %m", shmid); 
paai: pgxshmem:00000379:  ereport(FATAL, 
paai: pgxshmem:00000380:  (errcode_for_file_access(), 
paai: pgxshmem:00000381:  errmsg("could not stat data directory \"%s\": %m", 
paai: pgxshmem:00000382:  DataDir))); 
paai: pgxshmem:00000431:  elog(FATAL, "could not reattach to shared memory (key=%d, addr=%p): %m", 
paai: pgxshmem:00000432:  (int) UsedShmemSegID, UsedShmemSegAddr); 
paai: pgxshmem:00000434:  elog(FATAL, "reattaching to shared memory returned unexpected address (got %p, expected %p)", 
paai: pgxshmem:00000435:  hdr, origUsedShmemSegAddr); 
aaaaa GP_IGNORE: paba: posixxsema - ./backend/port/posix_sema.c
paba: posixxsema:00000093:  elog(FATAL, "sem_open(\"%s\") failed: %m", semname); 
paba: posixxsema:00000115:  elog(FATAL, "sem_init failed: %m"); 
paba: posixxsema:00000230:  elog(FATAL, "sem_trywait failed: %m"); 
paba: posixxsema:00000287:  elog(FATAL, "sem_wait failed: %m"); 
paba: posixxsema:00000306:  elog(FATAL, "sem_wait failed: %m"); 
paba: posixxsema:00000334:  elog(FATAL, "sem_post failed: %m"); 
paba: posixxsema:00000362:  elog(FATAL, "sem_trywait failed: %m"); 
aaaaa GP_IGNORE: saaj: sysvxsema - ./backend/port/sysv_sema.c
saaj: sysvxsema:00000117:  ereport(FATAL, 
saaj: sysvxsema:00000118:  (errmsg("could not create semaphores: %m"), 
saaj: sysvxsema:00000119:  errdetail("Failed system call was semget(%lu, %d, 0%o).", 
saaj: sysvxsema:00000120:  (unsigned long) semKey, numSems, 
saaj: sysvxsema:00000121:  IPC_CREAT *PIPE* IPC_EXCL *PIPE* IPCProtection), 
saaj: sysvxsema:00000122:  (errno == ENOSPC) ? 
saaj: sysvxsema:00000123:  errhint("This error does *not* mean that you have run out of disk space.\n" 
saaj: sysvxsema:00000124:  "It occurs when either the system limit for the maximum number of " 
saaj: sysvxsema:00000125:  "semaphore sets (SEMMNI), or the system wide maximum number of " 
saaj: sysvxsema:00000126:  "semaphores (SEMMNS), would be exceeded. You need to raise the " 
saaj: sysvxsema:00000127:  "respective kernel parameter. Alternatively, reduce PostgreSQL's " 
saaj: sysvxsema:00000128:  "consumption of semaphores by reducing its max_connections parameter " 
saaj: sysvxsema:00000129:  "(currently %d).\n" 
saaj: sysvxsema:00000130:  "The PostgreSQL documentation contains more information about " 
saaj: sysvxsema:00000131:  "configuring your system for PostgreSQL.", 
saaj: sysvxsema:00000132:  MaxBackends) : 0)); 
saaj: sysvxsema:00000148:  ereport(FATAL, 
saaj: sysvxsema:00000149:  (errmsg_internal("semctl(%d, %d, SETVAL, %d) failed: %m", 
saaj: sysvxsema:00000150:  semId, semNum, value), 
saaj: sysvxsema:00000151:  (errno == ERANGE) ? 
saaj: sysvxsema:00000152:  errhint("You possibly need to raise your kernel's SEMVMX value to be at least " 
saaj: sysvxsema:00000153:  "%d. Look into the PostgreSQL documentation for details.", 
saaj: sysvxsema:00000154:  value) : 0)); 
saaj: sysvxsema:00000442:  elog(FATAL, "semop(id=%d,num=%d) failed: %m", sema->semId, sema->semNum); 
saaj: sysvxsema:00000466:  elog(FATAL, "semop(id=%d,num=%d) failed: %m", sema->semId, sema->semNum); 
saaj: sysvxsema:00000499:  elog(FATAL, "semop(id=%d,num=%d) failed: %m", sema->semId, sema->semNum); 
saaj: sysvxsema:00000539:  elog(FATAL, "semop(id=%d,num=%d) failed: %m", sema->semId, sema->semNum); 
aaaaa GP_IGNORE: saba: sysvxshmem - ./backend/port/sysv_shmem.c
saba: sysvxshmem:00000098:  ereport(FATAL, 
saba: sysvxshmem:00000099:  (errmsg("could not create shared memory segment: %m"), 
saba: sysvxshmem:00000100:  errdetail("Failed system call was shmget(key=%lu, size=%lu, 0%o).", 
saba: sysvxshmem:00000101:  (unsigned long) memKey, (unsigned long) size, 
saba: sysvxshmem:00000102:  IPC_CREAT *PIPE* IPC_EXCL *PIPE* IPCProtection), 
saba: sysvxshmem:00000103:  (errno == EINVAL) ? 
saba: sysvxshmem:00000104:  errhint("This error usually means that PostgreSQL's request for a shared memory " 
saba: sysvxshmem:00000105:  "segment exceeded your kernel's SHMMAX parameter. You can either " 
saba: sysvxshmem:00000106:  "reduce the request size or reconfigure the kernel with larger SHMMAX. " 
saba: sysvxshmem:00000107:  "To reduce the request size (currently %lu bytes), reduce " 
saba: sysvxshmem:00000108:  "PostgreSQL's shared_buffers parameter (currently %d) and/or " 
saba: sysvxshmem:00000109:  "its max_connections parameter (currently %d).\n" 
saba: sysvxshmem:00000110:  "If the request size is already small, it's possible that it is less than " 
saba: sysvxshmem:00000111:  "your kernel's SHMMIN parameter, in which case raising the request size or " 
saba: sysvxshmem:00000112:  "reconfiguring SHMMIN is called for.\n" 
saba: sysvxshmem:00000113:  "The PostgreSQL documentation contains more information about shared " 
saba: sysvxshmem:00000114:  "memory configuration.", 
saba: sysvxshmem:00000115:  (unsigned long) size, NBuffers, MaxBackends) : 0, 
saba: sysvxshmem:00000116:  (errno == ENOMEM) ? 
saba: sysvxshmem:00000117:  errhint("This error usually means that PostgreSQL's request for a shared " 
saba: sysvxshmem:00000118:  "memory segment exceeded available memory or swap space. " 
saba: sysvxshmem:00000119:  "To reduce the request size (currently %lu bytes), reduce " 
saba: sysvxshmem:00000120:  "PostgreSQL's shared_buffers parameter (currently %d) and/or " 
saba: sysvxshmem:00000121:  "its max_connections parameter (currently %d).\n" 
saba: sysvxshmem:00000122:  "The PostgreSQL documentation contains more information about shared " 
saba: sysvxshmem:00000123:  "memory configuration.", 
saba: sysvxshmem:00000124:  (unsigned long) size, NBuffers, MaxBackends) : 0, 
saba: sysvxshmem:00000125:  (errno == ENOSPC) ? 
saba: sysvxshmem:00000126:  errhint("This error does *not* mean that you have run out of disk space. " 
saba: sysvxshmem:00000127:  "It occurs either if all available shared memory IDs have been taken, " 
saba: sysvxshmem:00000128:  "in which case you need to raise the SHMMNI parameter in your kernel, " 
saba: sysvxshmem:00000129:  "or because the system's overall limit for shared memory has been " 
saba: sysvxshmem:00000130:  "reached. If you cannot increase the shared memory limit, " 
saba: sysvxshmem:00000131:  "reduce PostgreSQL's shared memory request (currently %lu bytes), " 
saba: sysvxshmem:00000132:  "by reducing its shared_buffers parameter (currently %d) and/or " 
saba: sysvxshmem:00000133:  "its max_connections parameter (currently %d).\n" 
saba: sysvxshmem:00000134:  "The PostgreSQL documentation contains more information about shared " 
saba: sysvxshmem:00000135:  "memory configuration.", 
saba: sysvxshmem:00000136:  (unsigned long) size, NBuffers, MaxBackends) : 0)); 
saba: sysvxshmem:00000146:  elog(FATAL, "shmat(id=%d) failed: %m", shmid); 
saba: sysvxshmem:00000379:  ereport(FATAL, 
saba: sysvxshmem:00000380:  (errcode_for_file_access(), 
saba: sysvxshmem:00000381:  errmsg("could not stat data directory \"%s\": %m", 
saba: sysvxshmem:00000382:  DataDir))); 
saba: sysvxshmem:00000431:  elog(FATAL, "could not reattach to shared memory (key=%d, addr=%p): %m", 
saba: sysvxshmem:00000432:  (int) UsedShmemSegID, UsedShmemSegAddr); 
saba: sysvxshmem:00000434:  elog(FATAL, "reattaching to shared memory returned unexpected address (got %p, expected %p)", 
saba: sysvxshmem:00000435:  hdr, origUsedShmemSegAddr); 
aaaaa GP_IGNORE: mabb: mingwcompat - ./backend/port/win32/mingwcompat.c
mabb: mingwcompat:00000044:  ereport(FATAL, 
mabb: mingwcompat:00000045:  (errmsg_internal("could not load kernel32.dll: %d", 
mabb: mingwcompat:00000046:  (int) GetLastError()))); 
mabb: mingwcompat:00000075:  ereport(FATAL, 
mabb: mingwcompat:00000076:  (errmsg_internal("could not locate RegisterWaitForSingleObject in kernel32.dll: %d", 
mabb: mingwcompat:00000077:  (int) GetLastError()))); 
aaaaa GP_IGNORE: saag: signal - ./backend/port/win32/signal.c
saag: signal:00000085:  ereport(FATAL, 
saag: signal:00000086:  (errmsg_internal("failed to create signal event: %d", (int) GetLastError()))); 
saag: signal:00000091:  ereport(FATAL, 
saag: signal:00000092:  (errmsg_internal("failed to create signal handler thread"))); 
saag: signal:00000096:  ereport(FATAL, 
saag: signal:00000097:  (errmsg_internal("failed to set console control handler"))); 
saag: signal:00000188:  ereport(ERROR, 
saag: signal:00000189:  (errmsg("could not create signal listener pipe for pid %d: error code %d", 
saag: signal:00000190:  (int) pid, (int) GetLastError()))); 
aaaaa GP_IGNORE: saag: socket - ./backend/port/win32/socket.c
saag: socket:00000087:  ereport(NOTICE, 
saag: socket:00000088:  (errmsg_internal("Unknown win32 socket error code: %i", WSAGetLastError()))); 
saag: socket:00000131:  ereport(ERROR, 
saag: socket:00000132:  (errmsg_internal("Failed to create socket waiting event: %i", (int) GetLastError()))); 
saag: socket:00000135:  ereport(ERROR, 
saag: socket:00000136:  (errmsg_internal("Failed to reset socket waiting event: %i", (int) GetLastError()))); 
saag: socket:00000209:  ereport(ERROR, 
saag: socket:00000210:  (errmsg_internal("Bad return from WaitForMultipleObjects: %i (%i)", r, (int) GetLastError()))); 
saag: socket:00000342:  ereport(NOTICE, 
saag: socket:00000343:  (errmsg_internal("Failed to read from ready socket (after retries)"))); 
saag: socket:00000525:  ereport(FATAL, 
saag: socket:00000526:  (errmsg_internal("failed to enumerate network events: %i", (int) GetLastError()))); 
saag: socket:00000603:  ereport(FATAL, 
saag: socket:00000604:  (errmsg_internal("Failed to load netmsg.dll: %i", (int) GetLastError()))); 
aaaaa GP_IGNORE: taaf: timer - ./backend/port/win32/timer.c
taaf: timer:00000099:  ereport(FATAL, 
taaf: timer:00000100:  (errmsg_internal("failed to create timer event: %d", 
taaf: timer:00000101:  (int) GetLastError()))); 
taaf: timer:00000109:  ereport(FATAL, 
taaf: timer:00000110:  (errmsg_internal("failed to create timer thread: %d", 
taaf: timer:00000111:  (int) GetLastError()))); 
aaaaa GP_IGNORE: wabg: winthreetwoxsema - ./backend/port/win32_sema.c
wabg: winthreetwoxsema:00000160:  ereport(FATAL, 
wabg: winthreetwoxsema:00000161:  (errmsg("could not lock semaphore: error code %d", (int) GetLastError()))); 
wabg: winthreetwoxsema:00000173:  ereport(FATAL, 
wabg: winthreetwoxsema:00000174:  (errmsg("could not unlock semaphore: error code %d", (int) GetLastError()))); 
wabg: winthreetwoxsema:00000202:  ereport(FATAL, 
wabg: winthreetwoxsema:00000203:  (errmsg("could not try-lock semaphore: error code %d", (int) GetLastError()))); 
aaaaa GP_IGNORE: wabh: winthreetwoxshmem - ./backend/port/win32_shmem.c
wabh: winthreetwoxshmem:00000048:  elog(FATAL, "could not get size for full pathname of datadir %s: %lu", 
wabh: winthreetwoxshmem:00000049:  DataDir, GetLastError()); 
wabh: winthreetwoxshmem:00000053:  elog(FATAL, "could not allocate memory for shared memory name"); 
wabh: winthreetwoxshmem:00000058:  elog(FATAL, "could not generate full pathname for datadir %s: %lu", 
wabh: winthreetwoxshmem:00000059:  DataDir, GetLastError()); 
wabh: winthreetwoxshmem:00000158:  ereport(FATAL, 
wabh: winthreetwoxshmem:00000159:  (errmsg("could not create shared memory segment: %lu", GetLastError()), 
wabh: winthreetwoxshmem:00000160:  errdetail("Failed system call was CreateFileMapping(size=%lu, name=%s).", 
wabh: winthreetwoxshmem:00000161:  (unsigned long) size, szShareMem))); 
wabh: winthreetwoxshmem:00000183:  ereport(FATAL, 
wabh: winthreetwoxshmem:00000184:  (errmsg("pre-existing shared memory block is still in use"), 
wabh: winthreetwoxshmem:00000185:  errhint("Check if there are any old server processes still running, and terminate them."))); 
wabh: winthreetwoxshmem:00000193:  ereport(FATAL, 
wabh: winthreetwoxshmem:00000194:  (errmsg("could not create shared memory segment: %lu", GetLastError()), 
wabh: winthreetwoxshmem:00000195:  errdetail("Failed system call was DuplicateHandle."))); 
wabh: winthreetwoxshmem:00000214:  ereport(FATAL, 
wabh: winthreetwoxshmem:00000215:  (errmsg("could not create shared memory segment: %lu", GetLastError()), 
wabh: winthreetwoxshmem:00000216:  errdetail("Failed system call was MapViewOfFileEx."))); 
wabh: winthreetwoxshmem:00000266:  elog(FATAL, "failed to release reserved memory region (addr=%p): %lu", 
wabh: winthreetwoxshmem:00000267:  UsedShmemSegAddr, GetLastError()); 
wabh: winthreetwoxshmem:00000271:  elog(FATAL, "could not reattach to shared memory (key=%d, addr=%p): %lu", 
wabh: winthreetwoxshmem:00000272:  (int) UsedShmemSegID, UsedShmemSegAddr, GetLastError()); 
wabh: winthreetwoxshmem:00000274:  elog(FATAL, "reattaching to shared memory returned unexpected address (got %p, expected %p)", 
wabh: winthreetwoxshmem:00000275:  hdr, origUsedShmemSegAddr); 
wabh: winthreetwoxshmem:00000277:  elog(FATAL, "reattaching to shared memory returned non-PostgreSQL memory"); 
aaaaa GP_IGNORE: aaba: autovacuum - ./backend/postmaster/autovacuum.c
aaba: autovacuum:00000363:  elog(FATAL, "setsid() failed: %m"); 
aaba: autovacuum:00000569:  ereport(FATAL, 
aaba: autovacuum:00000570:  (errcode_for_file_access(), 
aaba: autovacuum:00000571:  errmsg("could not open file \"%s\": %m", filename))); 
aaba: autovacuum:00000640:  elog(ERROR, "cache lookup failed for database %u", MyDatabaseId); 
aaba: autovacuum:00000989:  elog(ERROR,"Expected relkind to be 't' (toast), but was '%c'.",classForm->relkind); 
aaba: autovacuum:00001113:  ereport(WARNING, 
aaba: autovacuum:00001114:  (errmsg("autovacuum not started because of misconfiguration"), 
aaba: autovacuum:00001115:  errhint("Enable options \"stats_start_collector\" and \"stats_row_level\"."))); 
aaba: autovacuum:00001186:  ereport(FATAL, 
aaba: autovacuum:00001187:  (errcode(ERRCODE_OUT_OF_MEMORY), 
aaba: autovacuum:00001188:  errmsg("not enough shared memory for autovacuum"))); 
aaba: autovacuum:00001315:  ereport(ERROR, 
aaba: autovacuum:00001316:  (errcode(ERRCODE_UNDEFINED_TABLE), 
aaba: autovacuum:00001317:  errmsg("relation with OID %u does not exist", 
aaba: autovacuum:00001318:  relationOid))); 
aaaaa GP_IGNORE: baah: backoff - ./backend/postmaster/backoff.c
baah: backoff:00000431:  elog(ERROR, "Unable to execute gettimeofday(). Please disable query prioritization."); 
baah: backoff:00000451:  elog(ERROR, "Unable to execute getrusage(). Please disable query prioritization."); 
baah: backoff:00000503:  elog(ERROR, "Unable to execute gettimeofday(). Please disable query prioritization."); 
baah: backoff:00000508:  elog(ERROR, "Unable to execute getrusage(). Please disable query prioritization."); 
baah: backoff:00000670:  elog(ERROR, "Unable to execute gettimeofday(). Please disable query prioritization."); 
baah: backoff:00000926:  elog(ERROR, "Invalid priority value specified."); 
baah: backoff:00000958:  elog(ERROR, "Query prioritization is disabled."); 
baah: backoff:00000961:  ereport(ERROR, 
baah: backoff:00000962:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
baah: backoff:00000963:  (errmsg("Only superuser can re-prioritize a query after it has begun execution.")))); 
baah: backoff:00000966:  elog(ERROR, "Query prioritization does not work in utility mode."); 
baah: backoff:00000969:  elog(ERROR, "Weight of statement must be greater than 0."); 
baah: backoff:00001003:  elog(ERROR, "Did not find any backend entries for session %d, command count %d.", session_id, command_count); 
baah: backoff:00001013:  ereport(ERROR,( 
baah: backoff:00001014:  errmsg("gp_adjust_priority error (gathered %d results from cmd '%s')", 
baah: backoff:00001015:  resultCount, cmd), errdetail("%s", errbuf.data))); 
baah: backoff:00001021:  elog(ERROR, "gp_adjust_priority: resultStatus not tuples_Ok"); 
baah: backoff:00001444:  elog(ERROR, "Invalid priority value."); 
aaaaa GP_IGNORE: baai: bgwriter - ./backend/postmaster/bgwriter.c
baai: bgwriter:00000137:  elog(FATAL, "setsid() failed: %m"); 
baai: bgwriter:00000480:  ereport(FATAL, 
baai: bgwriter:00000481:  (errcode(ERRCODE_OUT_OF_MEMORY), 
baai: bgwriter:00000482:  errmsg("not enough shared memory for background writer"))); 
aaaaa GP_IGNORE: caba: checkpoint - ./backend/postmaster/checkpoint.c
caba: checkpoint:00000162:  elog(FATAL, "setsid() failed: %m"); 
caba: checkpoint:00000484:  ereport(FATAL, 
caba: checkpoint:00000485:  (errcode(ERRCODE_OUT_OF_MEMORY), 
caba: checkpoint:00000486:  errmsg("not enough shared memory for checkpoint server"))); 
caba: checkpoint:00000572:  ereport(ERROR, 
caba: checkpoint:00000573:  (errmsg("checkpoint request failed"), 
caba: checkpoint:00000574:  errhint("Consult recent messages in the server log for details."))); 
aaaaa GP_IGNORE: daaj: ddaserver - ./backend/postmaster/ddaserver.c
daaj: ddaserver:00000190:  elog( ERROR, "Lost Connection to ddaserver"); 
daaj: ddaserver:00000211:  elog(ERROR, "Error: ddaserver socket closed."); 
daaj: ddaserver:00000219:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
daaj: ddaserver:00000220:  errmsg("Error: Could not write() message to ddaserver: %s", 
daaj: ddaserver:00000221:  strerror(errno)), 
daaj: ddaserver:00000222:  errdetail("error during write() call (error:%d) to ddaserver on sockfd: %d ", 
daaj: ddaserver:00000223:  errno, sockfd))); 
daaj: ddaserver:00000247:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
daaj: ddaserver:00000248:  errmsg("Error: Could not write() message to ddaserver: %s", 
daaj: ddaserver:00000249:  strerror(errno)), 
daaj: ddaserver:00000250:  errdetail("error during write() call (error:%d) to ddaserver on sockfd: %d ", 
daaj: ddaserver:00000251:  errno, sockfd))); 
daaj: ddaserver:00000278:  elog( ERROR, "ddaserver socket is closed"); 
daaj: ddaserver:00000286:  elog( ERROR, "Error: Could not read() message from ddaserver." 
daaj: ddaserver:00000287:  "(error:%d). Closing connection.", saved_err); 
daaj: ddaserver:00000311:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
daaj: ddaserver:00000312:  errmsg("Error: Could not read() message from ddaserver"), 
daaj: ddaserver:00000313:  errdetail("error during read() call (error:%d) from remote" 
daaj: ddaserver:00000314:  "sockfd = %d", errno, sockfd))); 
daaj: ddaserver:00000576:  elog(ERROR,"Error during select() call (error:%d).", errno); 
daaj: ddaserver:00000856:  elog(ERROR,"getaddrinfo says %s",gai_strerror(s)); 
daaj: ddaserver:00000916:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
daaj: ddaserver:00000917:  errmsg("SeqServer Error: Could not setup listener socket: %m"), 
daaj: ddaserver:00000918:  errdetail("error during bind() call (error:%d).", errno))); 
daaj: ddaserver:00000924:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
daaj: ddaserver:00000925:  errmsg("SeqServer Error: Could not setup listener socket: %s", strerror(errno)), 
daaj: ddaserver:00000926:  errdetail("error during listen() call (error:%d).", errno))); 
daaj: ddaserver:00000934:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
daaj: ddaserver:00000935:  errmsg("SeqServer Error: Could not setup listener socket: %s", strerror(errno)), 
daaj: ddaserver:00000936:  errdetail("error during getsockname() call (error:%d).", errno))); 
daaj: ddaserver:00000988:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
daaj: ddaserver:00000989:  errmsg("Interconnect Error: Could not parse remote ddaserver" 
daaj: ddaserver:00000990:  "address: '%s'", ddaServerHost), 
daaj: ddaserver:00000991:  errdetail("inet_pton() unable to parse address: '%s'", 
daaj: ddaserver:00000992:  ddaServerHost))); 
daaj: ddaserver:00000996:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
daaj: ddaserver:00000997:  errmsg("Interconnect Error: System error occured during parsing" 
daaj: ddaserver:00000998:  " of remote ddaserver address: '%s'", ddaServerHost), 
daaj: ddaserver:00000999:  errdetail("inet_pton() (errno: %d) unable to parse address: '%s'", 
daaj: ddaserver:00001000:  errno, ddaServerHost))); 
daaj: ddaserver:00001007:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
daaj: ddaserver:00001008:  errmsg("Interconnect Error: Could not connect to ddaserver."), 
daaj: ddaserver:00001009:  errdetail("%m%s", "connect") 
daaj: ddaserver:00001010:  )); 
daaj: ddaserver:00001014:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
daaj: ddaserver:00001015:  errmsg("Interconnect Error: Could not set ddaserver socket" 
daaj: ddaserver:00001016:  "to non-blocking mode."), 
daaj: ddaserver:00001017:  errdetail("%m%s sockfd=%d", "fcntl", ddaserverFd) 
daaj: ddaserver:00001018:  )); 
aaaaa GP_IGNORE: oaaj: optserver - ./backend/postmaster/optserver.c
oaaj: optserver:00000240:  elog(ERROR, "%ls", (const wchar_t *) params.error_buffer); 
aaaaa GP_IGNORE: paah: perfmon - ./backend/postmaster/perfmon.c
paah: perfmon:00000114:  elog(FATAL,"Failed to find gpmmon executable: %s (%s)", gpmmon_bin, 
paah: perfmon:00000115:  GPMMON_PACKET_VERSION_STRING); 
paah: perfmon:00000136:  elog(FATAL, "could not execute server process \"%s\"", gpmmon_bin); 
aaaaa GP_IGNORE: paag: pgarch - ./backend/postmaster/pgarch.c
paag: pgarch:00000234:  elog(FATAL, "setsid() failed: %m"); 
paag: pgarch:00000391:  ereport(WARNING, 
paag: pgarch:00000392:  (errmsg("transaction log file \"%s\" could not be archived: too many failures", 
paag: pgarch:00000393:  xlog))); 
paag: pgarch:00000422:  ereport(ERROR, (errmsg("cannot generate path %s/%s", xlogDir, xlog))); 
paag: pgarch:00000543:  ereport(ERROR, (errmsg("cannot generate path %s/archive_status", xlogDir))); 
paag: pgarch:00000549:  ereport(ERROR, 
paag: pgarch:00000550:  (errcode_for_file_access(), 
paag: pgarch:00000551:  errmsg("could not open archive status directory \"%s\": %m", 
paag: pgarch:00000552:  XLogArchiveStatusDir))); 
paag: pgarch:00000603:  ereport(WARNING, 
paag: pgarch:00000604:  (errcode_for_file_access(), 
paag: pgarch:00000605:  errmsg("could not rename file \"%s\" to \"%s\": %m", 
paag: pgarch:00000606:  rlogready, rlogdone))); 
aaaaa GP_IGNORE: paag: pgstat - ./backend/postmaster/pgstat.c
paag: pgstat:00001168:  ereport(ERROR, 
paag: pgstat:00001169:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
paag: pgstat:00001170:  errmsg("must be superuser to reset statistics counters"))); 
paag: pgstat:00002734:  elog(FATAL, "setsid() failed: %m"); 
paag: pgstat:00002838:  ereport(ERROR, 
paag: pgstat:00002839:  (errcode_for_socket_access(), 
paag: pgstat:00002840:  errmsg("poll() failed in statistics collector: %m"))); 
paag: pgstat:00002859:  ereport(ERROR, 
paag: pgstat:00002860:  (errcode_for_socket_access(), 
paag: pgstat:00002861:  errmsg("select() failed in statistics collector: %m"))); 
paag: pgstat:00002883:  ereport(ERROR, 
paag: pgstat:00002884:  (errcode_for_socket_access(), 
paag: pgstat:00002885:  errmsg("could not read statistics message: %m"))); 
paag: pgstat:00003618:  elog(WARNING, "pgstat wait timeout"); 
paag: pgstat:00003840:  ereport(ERROR, 
paag: pgstat:00003841:  (errmsg("database hash table corrupted " 
paag: pgstat:00003842:  "during cleanup --- abort"))); 
aaaaa GP_IGNORE: paba: postmaster - ./backend/postmaster/postmaster.c
paba: postmaster:00001092:  ereport(ERROR, 
paba: postmaster:00001093:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: postmaster:00001094:  errmsg("--%s requires a value", 
paba: postmaster:00001095:  optarg))); 
paba: postmaster:00001097:  ereport(ERROR, 
paba: postmaster:00001098:  (errcode(ERRCODE_SYNTAX_ERROR), 
paba: postmaster:00001099:  errmsg("-c %s requires a value", 
paba: postmaster:00001100:  optarg))); 
paba: postmaster:00001214:  ereport(FATAL, 
paba: postmaster:00001215:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paba: postmaster:00001216:  errmsg("dbid (from -b option) is not specified or is invalid. This value must be >= 0, or >= -1 in utility mode. " 
paba: postmaster:00001217:  "The dbid value to pass can be determined from this server's entry in the segment configuration; it may be -1 if running in utility mode."))); 
paba: postmaster:00001222:  ereport(FATAL, 
paba: postmaster:00001223:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paba: postmaster:00001224:  errmsg("contentid (from -C option) is not specified or is invalid. This value must be >= -1. " 
paba: postmaster:00001225:  "The contentid value to pass can be determined this server's entry in the segment configuration; it may be -1 for a master, or in utility mode." 
paba: postmaster:00001226:  ))); 
paba: postmaster:00001231:  ereport(FATAL, 
paba: postmaster:00001232:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paba: postmaster:00001233:  errmsg("numContentsInCluster (from -z option) is not specified or is invalid. This value must be >= 0. " 
paba: postmaster:00001234:  "The value to pass can be determined by determining the number of primary segments in the cluster." 
paba: postmaster:00001235:  ))); 
paba: postmaster:00001354:  ereport(FATAL, 
paba: postmaster:00001355:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paba: postmaster:00001356:  errmsg("invalid list syntax for \"listen_addresses\""))); 
paba: postmaster:00001376:  ereport(WARNING, 
paba: postmaster:00001377:  (errmsg("could not create listen socket for \"%s\"", 
paba: postmaster:00001378:  curhost))); 
paba: postmaster:00001382:  ereport(FATAL, 
paba: postmaster:00001383:  (errmsg("could not create any TCP/IP sockets"))); 
paba: postmaster:00001409:  ereport(WARNING, 
paba: postmaster:00001410:  (errmsg("could not create Unix-domain socket"))); 
paba: postmaster:00001417:  ereport(FATAL, 
paba: postmaster:00001418:  (errmsg("no socket created for listening"))); 
paba: postmaster:00001443:  ereport(FATAL, 
paba: postmaster:00001444:  (errmsg("could not create I/O completion port for child queue"))); 
paba: postmaster:00001457:  ereport(FATAL, 
paba: postmaster:00001458:  (errmsg_internal("could not duplicate postmaster handle: error code %d", 
paba: postmaster:00001459:  (int) GetLastError()))); 
paba: postmaster:00001544:  ereport(FATAL, 
paba: postmaster:00001545:  (errmsg("could not load pg_hba.conf"), 
paba: postmaster:00001546:  errOmitLocation(true))); 
paba: postmaster:00001679:  elog(FATAL, "%s: could not locate my own executable path", argv0); 
paba: postmaster:00001685:  ereport(FATAL, 
paba: postmaster:00001686:  (errmsg("%s: could not locate matching postgres executable", 
paba: postmaster:00001687:  argv0))); 
paba: postmaster:00001705:  ereport(ERROR, 
paba: postmaster:00001706:  (errcode_for_file_access(), 
paba: postmaster:00001707:  errmsg("could not open directory \"%s\": %m", 
paba: postmaster:00001708:  pkglib_path), 
paba: postmaster:00001709:  errSendAlert(true), 
paba: postmaster:00001710:  errhint("This may indicate an incomplete PostgreSQL installation, or that the file \"%s\" has been moved away from its proper location.", 
paba: postmaster:00001711:  my_exec_path))); 
paba: postmaster:00001734:  ereport(FATAL, 
paba: postmaster:00001735:  (errcode_for_file_access(), 
paba: postmaster:00001736:  errmsg("data directory \"%s\" does not exist", 
paba: postmaster:00001737:  DataDir))); 
paba: postmaster:00001739:  ereport(FATAL, 
paba: postmaster:00001740:  (errcode_for_file_access(), 
paba: postmaster:00001741:  errmsg("could not read permissions of directory \"%s\": %m", 
paba: postmaster:00001742:  DataDir))); 
paba: postmaster:00001747:  ereport(FATAL, 
paba: postmaster:00001748:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paba: postmaster:00001749:  errmsg("specified data directory \"%s\" is not a directory", 
paba: postmaster:00001750:  DataDir))); 
paba: postmaster:00001763:  ereport(FATAL, 
paba: postmaster:00001764:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paba: postmaster:00001765:  errmsg("data directory \"%s\" has wrong ownership", 
paba: postmaster:00001766:  DataDir), 
paba: postmaster:00001767:  errhint("The server must be started by the user that owns the data directory."))); 
paba: postmaster:00001785:  ereport(FATAL, 
paba: postmaster:00001786:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paba: postmaster:00001787:  errmsg("data directory \"%s\" has group or world access", 
paba: postmaster:00001788:  DataDir), 
paba: postmaster:00001789:  errdetail("Permissions should be u=rwx (0700)."))); 
paba: postmaster:00002010:  elog(FATAL, "silent_mode is not supported under Windows"); 
paba: postmaster:00002533:  ereport(FATAL, 
paba: postmaster:00002534:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paba: postmaster:00002535:  errmsg("invalid value for boolean option \"replication\""))); 
paba: postmaster:00002591:  elog(FATAL, "could not disable timer for authorization timeout"); 
paba: postmaster:00002599:  elog(FATAL, "could not disable timer for authorization timeout"); 
paba: postmaster:00002654:  ereport(FATAL, 
paba: postmaster:00002655:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paba: postmaster:00002656:  errmsg("unsupported frontend protocol %u.%u: server supports %u.0 to %u.%u", 
paba: postmaster:00002657:  PG_PROTOCOL_MAJOR(proto), PG_PROTOCOL_MINOR(proto), 
paba: postmaster:00002658:  PG_PROTOCOL_MAJOR(PG_PROTOCOL_EARLIEST), 
paba: postmaster:00002659:  PG_PROTOCOL_MAJOR(PG_PROTOCOL_LATEST), 
paba: postmaster:00002660:  PG_PROTOCOL_MINOR(PG_PROTOCOL_LATEST)))); 
paba: postmaster:00002723:  ereport(FATAL, 
paba: postmaster:00002724:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paba: postmaster:00002725:  errmsg("option not supported: \"replication\""))); 
paba: postmaster:00002743:  ereport(FATAL, 
paba: postmaster:00002744:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paba: postmaster:00002745:  errmsg("invalid startup packet layout: expected terminator as last byte"))); 
paba: postmaster:00002771:  ereport(FATAL, 
paba: postmaster:00002772:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
paba: postmaster:00002773:  errmsg("no PostgreSQL user name specified in startup packet"))); 
paba: postmaster:00002820:  ereport(FATAL, 
paba: postmaster:00002821:  (errcode(ERRCODE_CANNOT_CONNECT_NOW), 
paba: postmaster:00002822:  errSendAlert(true), 
paba: postmaster:00002823:  errOmitLocation(true), 
paba: postmaster:00002824:  errmsg("GPAgent deprecated."))); 
paba: postmaster:00002840:  ereport(FATAL, 
paba: postmaster:00002841:  (errcode(ERRCODE_CANNOT_CONNECT_NOW), 
paba: postmaster:00002842:  errSendAlert(false), 
paba: postmaster:00002843:  errOmitLocation(true), 
paba: postmaster:00002844:  errmsg(POSTMASTER_IN_STARTUP_MSG))); 
paba: postmaster:00002847:  ereport(FATAL, 
paba: postmaster:00002848:  (errcode(ERRCODE_CANNOT_CONNECT_NOW), 
paba: postmaster:00002849:  errSendAlert(false), 
paba: postmaster:00002850:  errOmitLocation(true), 
paba: postmaster:00002851:  errmsg("the database system is shutting down"))); 
paba: postmaster:00002854:  ereport(FATAL, 
paba: postmaster:00002855:  (errcode(ERRCODE_CANNOT_CONNECT_NOW), 
paba: postmaster:00002856:  errSendAlert(true), 
paba: postmaster:00002857:  errOmitLocation(true), 
paba: postmaster:00002858:  errmsg(POSTMASTER_IN_RECOVERY_MSG))); 
paba: postmaster:00002861:  ereport(FATAL, 
paba: postmaster:00002862:  (errcode(ERRCODE_CANNOT_CONNECT_NOW), 
paba: postmaster:00002863:  errSendAlert(true), 
paba: postmaster:00002864:  errOmitLocation(true), 
paba: postmaster:00002865:  errmsg("the database system is in mirror or uninitialized mode"))); 
paba: postmaster:00002868:  ereport(FATAL, 
paba: postmaster:00002869:  (errcode(ERRCODE_TOO_MANY_CONNECTIONS), 
paba: postmaster:00002870:  errSendAlert(true), 
paba: postmaster:00002871:  errOmitLocation(true), 
paba: postmaster:00002872:  errmsg("sorry, too many clients already"))); 
paba: postmaster:00003019:  elog(ERROR, "Can only get postmaster reset status on a primary or mirror segment"); 
paba: postmaster:00004162:  ereport(WARNING, 
paba: postmaster:00004163:  (errmsg("pg_hba.conf not reloaded"))); 
paba: postmaster:00004205:  ereport(LOG, 
paba: postmaster:00004206:  (errmsg("received smart shutdown request"), 
paba: postmaster:00004207:  errSendAlert(true), 
paba: postmaster:00004208:  errOmitLocation(true))); 
paba: postmaster:00004227:  ereport(LOG, 
paba: postmaster:00004228:  (errmsg("received fast shutdown request"), 
paba: postmaster:00004229:  errSendAlert(true), 
paba: postmaster:00004230:  errOmitLocation(true))); 
paba: postmaster:00004252:  ereport(LOG, 
paba: postmaster:00004253:  (errmsg("received immediate shutdown request"), 
paba: postmaster:00004254:  errSendAlert(true), 
paba: postmaster:00004255:  errOmitLocation(true))); 
paba: postmaster:00004466:  ereport(LOG, 
paba: postmaster:00004467:  (errmsg("database system is ready to accept connections"), 
paba: postmaster:00004468:  errdetail("%s",version), 
paba: postmaster:00004469:  errSendAlert(true), 
paba: postmaster:00004470:  errOmitLocation(true))); 
paba: postmaster:00004901:  ereport(LOG, 
paba: postmaster:00004902:  (errmsg("abnormal database system shutdown"),errSendAlert(true))); 
paba: postmaster:00004973:  elog(WARNING, "filerep peer reset during postmaster reset has failed"); 
paba: postmaster:00006016:  ereport(LOG, (errmsg("abnormal database system shutdown"),errSendAlert(true))); 
paba: postmaster:00006563:  elog(FATAL, "setsid() failed: %m"); 
paba: postmaster:00006593:  ereport(WARNING, 
paba: postmaster:00006594:  (errmsg_internal("pg_getnameinfo_all() failed: %s", 
paba: postmaster:00006595:  gai_strerror(ret)))); 
paba: postmaster:00006637:  ereport(FATAL, 
paba: postmaster:00006638:  (errmsg("could not load pg_hba.conf"))); 
paba: postmaster:00006650:  elog(FATAL, "could not set timer for authorization timeout"); 
paba: postmaster:00006685:  elog(FATAL, "could not disable timer for authorization timeout"); 
paba: postmaster:00007044:  ereport(ERROR, 
paba: postmaster:00007045:  (errmsg_internal("could not terminate unstarted process: error code %d", 
paba: postmaster:00007046:  (int) GetLastError()))); 
paba: postmaster:00007071:  ereport(ERROR, 
paba: postmaster:00007072:  (errmsg_internal("could not terminate process that failed to reserve memory: error code %d", 
paba: postmaster:00007073:  (int) GetLastError()))); 
paba: postmaster:00007088:  ereport(ERROR, 
paba: postmaster:00007089:  (errmsg_internal("could not terminate unstartable process: error code %d", 
paba: postmaster:00007090:  (int) GetLastError()))); 
paba: postmaster:00007097:  ereport(ERROR, 
paba: postmaster:00007098:  (errmsg_internal("could not resume thread of unstarted process: error code %d", 
paba: postmaster:00007099:  (int) GetLastError()))); 
paba: postmaster:00007113:  ereport(FATAL, 
paba: postmaster:00007114:  (errcode(ERRCODE_OUT_OF_MEMORY), 
paba: postmaster:00007115:  errmsg("out of memory"))); 
paba: postmaster:00007126:  ereport(FATAL, 
paba: postmaster:00007127:  (errmsg_internal("could not register process for wait: error code %d", 
paba: postmaster:00007128:  (int) GetLastError()))); 
paba: postmaster:00007203:  ereport(FATAL, 
paba: postmaster:00007204:  (errcode(ERRCODE_OUT_OF_MEMORY), 
paba: postmaster:00007205:  errmsg("out of memory"))); 
paba: postmaster:00007211:  elog(FATAL, "invalid subpostmaster invocation"); 
paba: postmaster:00007981:  ereport(ERROR, 
paba: postmaster:00007982:  (errmsg_internal("could not duplicate handle to be written to backend parameter file: error code %d", 
paba: postmaster:00007983:  (int) GetLastError()))); 
paba: postmaster:00008003:  ereport(ERROR, 
paba: postmaster:00008004:  (errmsg("could not duplicate socket %d for use in backend: error code %d", 
paba: postmaster:00008005:  src, WSAGetLastError()))); 
aaaaa GP_IGNORE: pabj: primaryxmirrorxmode - ./backend/postmaster/primary_mirror_mode.c
pabj: primaryxmirrorxmode:00001914:  elog(ERROR, "Invalid state %d", *stateInOut); 
pabj: primaryxmirrorxmode:00002294:  elog(ERROR, "Request for filerep arguments from local memory made when they do not exist."); 
pabj: primaryxmirrorxmode:00002417:  ereport(ERROR, (errmsg("cannot form path %s\n", path))); 
pabj: primaryxmirrorxmode:00002424:  ereport(ERROR, (errmsg("cannot form path %s/%s", primaryMirrorGetTxnFilespacePath(), path))); 
pabj: primaryxmirrorxmode:00002615:  elog(NOTICE, "current default temporary directory: \"%s\"", getCurrentTempFilePath); 
pabj: primaryxmirrorxmode:00002641:  elog(NOTICE, "temp dir id: %d path: %s marked %s", 
pabj: primaryxmirrorxmode:00002642:  temp_dir_idx, 
pabj: primaryxmirrorxmode:00002643:  pmModuleState->tempFilespacePath[abs_dir_idx - 1], 
pabj: primaryxmirrorxmode:00002644:  state); 
pabj: primaryxmirrorxmode:00002648:  elog(WARNING, "temporary directory index range is between [%d, %d]", 
pabj: primaryxmirrorxmode:00002649:  1, 
pabj: primaryxmirrorxmode:00002650:  pmModuleState->numOfFilespacePath); 
aaaaa GP_IGNORE: saaj: sendalert - ./backend/postmaster/sendalert.c
saaj: sendalert:00000138:  elog(ERROR,"send_alert_from_chunks only works when CSV logging is enabled"); 
aaaaa GP_IGNORE: saaj: seqserver - ./backend/postmaster/seqserver.c
saaj: seqserver:00000183:  elog(ERROR, "Lost Connection to seqserver"); 
saaj: seqserver:00000209:  elog(ERROR, "Error: seqserver socket closed."); 
saaj: seqserver:00000217:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
saaj: seqserver:00000218:  errmsg("Error: Could not write() message to seqserver: %s", 
saaj: seqserver:00000219:  strerror(errno)), 
saaj: seqserver:00000220:  errdetail("error during write() call (error:%d) to seqserver on sockfd: %d ", 
saaj: seqserver:00000221:  errno, sockfd))); 
saaj: seqserver:00000245:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
saaj: seqserver:00000246:  errmsg("Error: Could not write() message to seqserver: %s", 
saaj: seqserver:00000247:  strerror(errno)), 
saaj: seqserver:00000248:  errdetail("error during write() call (error:%d) to seqserver on sockfd: %d ", 
saaj: seqserver:00000249:  errno, sockfd))); 
saaj: seqserver:00000275:  elog( ERROR, "seqserver socket is closed"); 
saaj: seqserver:00000283:  elog( ERROR, "Error: Could not read() message from seqserver." 
saaj: seqserver:00000284:  "(error:%d). Closing connection.", saved_err); 
saaj: seqserver:00000308:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
saaj: seqserver:00000309:  errmsg("Error: Could not read() message from seqserver"), 
saaj: seqserver:00000310:  errdetail("error during read() call (error:%d) from remote" 
saaj: seqserver:00000311:  "sockfd = %d", errno, sockfd))); 
saaj: seqserver:00000327:  ereport(ERROR, 
saaj: seqserver:00000328:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
saaj: seqserver:00000329:  errmsg("nextval: reached %s value of sequence \"%s\" (" INT64_FORMAT ")", 
saaj: seqserver:00000330:  response.pincrement>0 ? "maximum":"minimum", 
saaj: seqserver:00000331:  RelationGetRelationName(seqrel), response.plast))); 
saaj: seqserver:00000494:  ereport(FATAL, (errcode(ERRCODE_UNDEFINED_DATABASE), 
saaj: seqserver:00000495:  errmsg("database 'template0' does not exist"))); 
saaj: seqserver:00000521:  elog(FATAL, "bad backend id: %d", MyBackendId); 
saaj: seqserver:00000603:  elog(ERROR,"Error during select() call (error:%d).", errno); 
saaj: seqserver:00000937:  elog(ERROR,"getaddrinfo says %s",gai_strerror(s)); 
saaj: seqserver:00000997:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
saaj: seqserver:00000998:  errmsg("SeqServer Error: Could not setup listener socket: %m"), 
saaj: seqserver:00000999:  errdetail("error during bind() call (error:%d).", errno))); 
saaj: seqserver:00001005:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
saaj: seqserver:00001006:  errmsg("SeqServer Error: Could not setup listener socket: %s", strerror(errno)), 
saaj: seqserver:00001007:  errdetail("error during listen() call (error:%d).", errno))); 
saaj: seqserver:00001015:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
saaj: seqserver:00001016:  errmsg("SeqServer Error: Could not setup listener socket: %s", strerror(errno)), 
saaj: seqserver:00001017:  errdetail("error during getsockname() call (error:%d).", errno))); 
aaaaa GP_IGNORE: saah: service - ./backend/postmaster/service.c
saah: service:00000150:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000151:  errmsg("Could not connect to '%s': %s", 
saah: service:00000152:  serviceConfig->title, 
saah: service:00000153:  strerror(saved_err)))); 
saah: service:00000169:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000170:  errmsg("Could not set '%s' socket to non-blocking mode: %s", 
saah: service:00000171:  serviceConfig->title, 
saah: service:00000172:  strerror(saved_err)))); 
saah: service:00000276:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000277:  errmsg("Not connected to '%s'", 
saah: service:00000278:  serviceConfig->title))); 
saah: service:00000282:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000283:  errmsg("Expecting request length %d and actual length is %d for '%s'", 
saah: service:00000284:  serviceClient->serviceConfig->requestLen, requestLen, 
saah: service:00000285:  serviceConfig->title))); 
saah: service:00000344:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000345:  errmsg("Lost connection to '%s'", 
saah: service:00000346:  serviceConfig->title))); 
saah: service:00000360:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000361:  errmsg("Connection to '%s' is closed", 
saah: service:00000362:  serviceConfig->title))); 
saah: service:00000369:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000370:  errmsg("Write error to '%s': %s", 
saah: service:00000371:  serviceConfig->title, 
saah: service:00000372:  strerror(saved_err)))); 
saah: service:00000392:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000393:  errmsg("Write to '%s' timed out after %d.%03d seconds)", 
saah: service:00000394:  serviceConfig->title, 
saah: service:00000395:  (int)wholeTimeout.tv_sec, 
saah: service:00000396:  (int)wholeTimeout.tv_usec / 1000))); 
saah: service:00000404:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000405:  errmsg("Write error to '%s': %s", 
saah: service:00000406:  serviceConfig->title, 
saah: service:00000407:  strerror(saved_err)))); 
saah: service:00000508:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000509:  errmsg("Connection to '%s' is closed (%d)", 
saah: service:00000510:  serviceConfig->title, serviceClient->sockfd))); 
saah: service:00000517:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000518:  errmsg("Read error from '%s': %s (%d)", 
saah: service:00000519:  serviceConfig->title, 
saah: service:00000520:  strerror(saved_err), serviceClient->sockfd))); 
saah: service:00000538:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000539:  errmsg("Read from '%s' timed out after %d.%03d seconds", 
saah: service:00000540:  serviceConfig->title, 
saah: service:00000541:  (int)timeout->tv_sec, 
saah: service:00000542:  (int)timeout->tv_usec / 1000))); 
saah: service:00000551:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000552:  errmsg("Read error from '%s': %s (%d)", 
saah: service:00000553:  serviceConfig->title, 
saah: service:00000554:  strerror(saved_err), serviceClient->sockfd))); 
saah: service:00000648:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000649:  errmsg("Connection to '%s' is closed", 
saah: service:00000650:  serviceConfig->title))); 
saah: service:00000663:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000664:  errmsg("Read error from '%s': %s", 
saah: service:00000665:  serviceConfig->title, 
saah: service:00000666:  strerror(saved_err)))); 
saah: service:00000671:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000672:  errmsg("Expecting message length %d and actual read length was %d from '%s'", 
saah: service:00000673:  responseLen, n, 
saah: service:00000674:  serviceConfig->title))); 
saah: service:00000992:  ereport(ERROR, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00000993:  errmsg("'%s': error during select() call (error:%d).", 
saah: service:00000994:  serviceConfig->title, errno))); 
saah: service:00001010:  ereport(NOTICE, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00001011:  errmsg("'%s': error from client connection: %s)", 
saah: service:00001012:  serviceConfig->title, 
saah: service:00001013:  strerror(errno)))); 
saah: service:00001023:  ereport(NOTICE, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00001024:  errmsg("'%s': could not set outbound socket to non-blocking mode: %s", 
saah: service:00001025:  serviceConfig->title, 
saah: service:00001026:  strerror(errno)))); 
saah: service:00001139:  ereport(NOTICE, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00001140:  errmsg("'%s': read error from backend process: %s", 
saah: service:00001141:  serviceConfig->title, 
saah: service:00001142:  strerror(saved_err)))); 
saah: service:00001168:  ereport(NOTICE, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00001169:  errmsg("'%s': read from backend process timed out after %d.%03d seconds", 
saah: service:00001170:  serviceConfig->title, 
saah: service:00001171:  (int)wholeTimeout.tv_sec, 
saah: service:00001172:  (int)wholeTimeout.tv_usec / 1000))); 
saah: service:00001181:  ereport(NOTICE, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00001182:  errmsg("'%s': read error from backend process: %s", 
saah: service:00001183:  serviceConfig->title, 
saah: service:00001184:  strerror(saved_err)))); 
saah: service:00001241:  ereport(NOTICE, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00001242:  errmsg("'%s': connection to backend process is closed", 
saah: service:00001243:  serviceConfig->title))); 
saah: service:00001251:  ereport(NOTICE, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00001252:  errmsg("'%s': write error to backend process: %s", 
saah: service:00001253:  serviceConfig->title, 
saah: service:00001254:  strerror(saved_err)))); 
saah: service:00001277:  ereport(NOTICE, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00001278:  errmsg("'%s': write to backend process timed out after %d.%03d seconds)", 
saah: service:00001279:  serviceConfig->title, 
saah: service:00001280:  (int)wholeTimeout.tv_sec, 
saah: service:00001281:  (int)wholeTimeout.tv_usec / 1000))); 
saah: service:00001290:  ereport(NOTICE, (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
saah: service:00001291:  errmsg("'%s': write error to backend process: %s)", 
saah: service:00001292:  serviceConfig->title, 
saah: service:00001293:  strerror(saved_err)))); 
saah: service:00001354:  elog(ERROR,"getaddrinfo says %s",gai_strerror(s)); 
saah: service:00001413:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
saah: service:00001414:  errmsg("SeqServer Error: Could not setup listener socket: %m"), 
saah: service:00001415:  errdetail("error during bind() call (error:%d).", errno))); 
saah: service:00001421:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
saah: service:00001422:  errmsg("SeqServer Error: Could not setup listener socket: %s", strerror(errno)), 
saah: service:00001423:  errdetail("error during listen() call (error:%d).", errno))); 
saah: service:00001435:  ereport(ERROR, (errcode(ERRCODE_GP_INTERNAL_ERROR), 
saah: service:00001436:  errmsg("'%s' could not setup listener socket: %s", 
saah: service:00001437:  serviceConfig->title, 
saah: service:00001438:  strerror(errno)), 
saah: service:00001439:  errdetail("error during getsockname() call (error:%d).", errno))); 
aaaaa GP_IGNORE: saaj: syslogger - ./backend/postmaster/syslogger.c
saaj: syslogger:00000255:  elog(FATAL, "setsid() failed: %m"); 
saaj: syslogger:00000292:  elog(FATAL, "could not create syslogger data transfer thread: %m"); 
saaj: syslogger:00000434:  elog(ERROR, "Syslogger could not read from logger pipe: %m"); 
saaj: syslogger:00000614:  ereport(FATAL, 
saaj: syslogger:00000615:  (errcode_for_socket_access(), 
saaj: syslogger:00000616:  (errmsg("could not create pipe for syslog: %m")))); 
saaj: syslogger:00000628:  ereport(FATAL, 
saaj: syslogger:00000629:  (errcode_for_file_access(), 
saaj: syslogger:00000630:  (errmsg("could not create pipe for syslog: %m")))); 
saaj: syslogger:00000648:  ereport(FATAL, 
saaj: syslogger:00000649:  (errcode_for_file_access(), 
saaj: syslogger:00000650:  (errmsg("could not create log file \"%s\": %m", 
saaj: syslogger:00000651:  filename)))); 
saaj: syslogger:00000694:  ereport(FATAL, 
saaj: syslogger:00000695:  (errcode_for_file_access(), 
saaj: syslogger:00000696:  errmsg("could not redirect stdout: %m"))); 
saaj: syslogger:00000699:  ereport(FATAL, 
saaj: syslogger:00000700:  (errcode_for_file_access(), 
saaj: syslogger:00000701:  errmsg("could not redirect stderr: %m"))); 
saaj: syslogger:00000717:  ereport(FATAL, 
saaj: syslogger:00000718:  (errcode_for_file_access(), 
saaj: syslogger:00000719:  errmsg("could not redirect stderr: %m"))); 
aaaaa GP_IGNORE: wabd: walredoserver - ./backend/postmaster/walredoserver.c
wabd: walredoserver:00000316:  elog(FATAL,"WAL Redo server shared memory not initialized"); 
wabd: walredoserver:00000350:  elog(FATAL,"WAL Redo server shared memory not initialized"); 
wabd: walredoserver:00000447:  elog(NOTICE,"error occurred during redo"); 
wabd: walredoserver:00000469:  elog(ERROR, "Unknown WalRedoRequestCommand %d", walRedoRequest->command); 
wabd: walredoserver:00000480:  elog(NOTICE,"disabling redo (unexpected error encountered)"); 
aaaaa GP_IGNORE: wabd: walsendserver - ./backend/postmaster/walsendserver.c
wabd: walsendserver:00000128:  elog(FATAL, "could not initialize WAL Send server shared memory"); 
wabd: walsendserver:00000239:  elog(FATAL,"WAL Send server shared memory not initialized"); 
wabd: walsendserver:00000325:  elog(FATAL,"WAL Send server shared memory not initialized"); 
wabd: walsendserver:00000480:  elog(WARNING,"Standby master transaction log location %s is beyond the current master end location %s", 
wabd: walsendserver:00000481:  XLogLocationToString(&originalEndLocation), 
wabd: walsendserver:00000482:  XLogLocationToString2(&walSendRequest->flushedLocation)); 
wabd: walsendserver:00000498:  ereport(ERROR, 
wabd: walsendserver:00000499:  (errcode(ERRCODE_INTERNAL_ERROR), 
wabd: walsendserver:00000500:  errmsg("format command string failure"))); 
wabd: walsendserver:00000535:  elog(ERROR,"unexpected master mirroring state %s", 
wabd: walsendserver:00000536:  QDMirroringStateString()); 
wabd: walsendserver:00000561:  elog(ERROR,"Could not allocate buffer for xlog data (%d bytes)", 
wabd: walsendserver:00000562:  totalBufferLen); 
wabd: walsendserver:00000615:  elog(ERROR,"could not create cmd for qd mirror logid %d seg %d", 
wabd: walsendserver:00000616:  writeLogId, writeLogSeg); 
wabd: walsendserver:00000689:  elog(ERROR,"could not create cmd for qd mirror logid %d seg %d offset %d", 
wabd: walsendserver:00000690:  logid, seg, offset); 
wabd: walsendserver:00000714:  elog(ERROR,"unexpected master mirroring state %s", 
wabd: walsendserver:00000715:  QDMirroringStateString()); 
wabd: walsendserver:00000731:  elog(ERROR, "Unknown WalSendRequestCommand %d", walSendRequest->command); 
aaaaa GP_IGNORE: rabd: rewritedefine - ./backend/rewrite/rewriteDefine.c
rabd: rewritedefine:00000115:  ereport(ERROR, 
rabd: rewritedefine:00000116:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
rabd: rewritedefine:00000117:  errmsg("rule \"%s\" for relation \"%s\" already exists", 
rabd: rewritedefine:00000118:  rulname, get_rel_name(eventrel_oid)))); 
rabd: rewritedefine:00000239:  ereport(ERROR, 
rabd: rewritedefine:00000240:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabd: rewritedefine:00000241:  errmsg("rule actions on OLD are not implemented"), 
rabd: rewritedefine:00000242:  errhint("Use views or triggers instead."))); 
rabd: rewritedefine:00000244:  ereport(ERROR, 
rabd: rewritedefine:00000245:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabd: rewritedefine:00000246:  errmsg("rule actions on NEW are not implemented"), 
rabd: rewritedefine:00000247:  errhint("Use triggers instead."))); 
rabd: rewritedefine:00000258:  ereport(ERROR, 
rabd: rewritedefine:00000259:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabd: rewritedefine:00000260:  errmsg("INSTEAD NOTHING rules on SELECT are not implemented"), 
rabd: rewritedefine:00000261:  errhint("Use views instead."))); 
rabd: rewritedefine:00000267:  ereport(ERROR, 
rabd: rewritedefine:00000268:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabd: rewritedefine:00000269:  errmsg("multiple actions for rules on SELECT are not implemented"))); 
rabd: rewritedefine:00000277:  ereport(ERROR, 
rabd: rewritedefine:00000278:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabd: rewritedefine:00000279:  errmsg("rules on SELECT must have action INSTEAD SELECT"))); 
rabd: rewritedefine:00000285:  ereport(ERROR, 
rabd: rewritedefine:00000286:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabd: rewritedefine:00000287:  errmsg("event qualifications are not implemented for rules on SELECT"))); 
rabd: rewritedefine:00000310:  ereport(ERROR, 
rabd: rewritedefine:00000311:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
rabd: rewritedefine:00000312:  errmsg("\"%s\" is already a view", 
rabd: rewritedefine:00000313:  RelationGetRelationName(event_relation)))); 
rabd: rewritedefine:00000334:  ereport(ERROR, 
rabd: rewritedefine:00000335:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabd: rewritedefine:00000336:  errmsg("view rule for \"%s\" must be named \"%s\"", 
rabd: rewritedefine:00000337:  event_obj->relname, ViewSelectRuleName))); 
rabd: rewritedefine:00000354:  ereport(ERROR, 
rabd: rewritedefine:00000355:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
rabd: rewritedefine:00000356:  errmsg("could not convert table \"%s\" to a view because it is not empty", 
rabd: rewritedefine:00000357:  event_obj->relname))); 
rabd: rewritedefine:00000361:  ereport(ERROR, 
rabd: rewritedefine:00000362:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
rabd: rewritedefine:00000363:  errmsg("could not convert table \"%s\" to a view because it has triggers", 
rabd: rewritedefine:00000364:  event_obj->relname), 
rabd: rewritedefine:00000365:  errhint("In particular, the table may not be involved in any foreign key relationships."))); 
rabd: rewritedefine:00000368:  ereport(ERROR, 
rabd: rewritedefine:00000369:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
rabd: rewritedefine:00000370:  errmsg("could not convert table \"%s\" to a view because it has indexes", 
rabd: rewritedefine:00000371:  event_obj->relname))); 
rabd: rewritedefine:00000374:  ereport(ERROR, 
rabd: rewritedefine:00000375:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
rabd: rewritedefine:00000376:  errmsg("could not convert table \"%s\" to a view because it has child tables", 
rabd: rewritedefine:00000377:  event_obj->relname))); 
rabd: rewritedefine:00000401:  ereport(ERROR, 
rabd: rewritedefine:00000402:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabd: rewritedefine:00000403:  errmsg("cannot have multiple RETURNING lists in a rule"))); 
rabd: rewritedefine:00000406:  ereport(ERROR, 
rabd: rewritedefine:00000407:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabd: rewritedefine:00000408:  errmsg("RETURNING lists are not supported in conditional rules"))); 
rabd: rewritedefine:00000410:  ereport(ERROR, 
rabd: rewritedefine:00000411:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabd: rewritedefine:00000412:  errmsg("RETURNING lists are not supported in non-INSTEAD rules"))); 
rabd: rewritedefine:00000564:  ereport(ERROR, 
rabd: rewritedefine:00000565:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabd: rewritedefine:00000566:  isSelect ? 
rabd: rewritedefine:00000567:  errmsg("SELECT rule's target list has too many entries") : 
rabd: rewritedefine:00000568:  errmsg("RETURNING list has too many entries"))); 
rabd: rewritedefine:00000582:  ereport(ERROR, 
rabd: rewritedefine:00000583:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabd: rewritedefine:00000584:  errmsg("cannot convert relation containing dropped columns to view"))); 
rabd: rewritedefine:00000587:  ereport(ERROR, 
rabd: rewritedefine:00000588:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabd: rewritedefine:00000589:  errmsg("SELECT rule's target entry %d has different column name from \"%s\"", i, attname))); 
rabd: rewritedefine:00000592:  ereport(ERROR, 
rabd: rewritedefine:00000593:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabd: rewritedefine:00000594:  isSelect ? 
rabd: rewritedefine:00000595:  errmsg("SELECT rule's target entry %d has different type from column \"%s\"", 
rabd: rewritedefine:00000596:  i, attname) : 
rabd: rewritedefine:00000597:  errmsg("RETURNING list's entry %d has different type from column \"%s\"", 
rabd: rewritedefine:00000598:  i, attname))); 
rabd: rewritedefine:00000609:  ereport(ERROR, 
rabd: rewritedefine:00000610:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabd: rewritedefine:00000611:  isSelect ? 
rabd: rewritedefine:00000612:  errmsg("SELECT rule's target entry %d has different size from column \"%s\"", 
rabd: rewritedefine:00000613:  i, attname) : 
rabd: rewritedefine:00000614:  errmsg("RETURNING list's entry %d has different size from column \"%s\"", 
rabd: rewritedefine:00000615:  i, attname))); 
rabd: rewritedefine:00000619:  ereport(ERROR, 
rabd: rewritedefine:00000620:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabd: rewritedefine:00000621:  isSelect ? 
rabd: rewritedefine:00000622:  errmsg("SELECT rule's target list has too few entries") : 
rabd: rewritedefine:00000623:  errmsg("RETURNING list has too few entries"))); 
rabd: rewritedefine:00000722:  ereport(ERROR, 
rabd: rewritedefine:00000723:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
rabd: rewritedefine:00000724:  errmsg("rule \"%s\" for relation \"%s\" does not exist", 
rabd: rewritedefine:00000725:  oldName, get_rel_name(owningRel)))); 
rabd: rewritedefine:00000729:  ereport(ERROR, 
rabd: rewritedefine:00000730:  (errcode(ERRCODE_DUPLICATE_OBJECT), 
rabd: rewritedefine:00000731:  errmsg("rule \"%s\" for relation \"%s\" already exists", 
rabd: rewritedefine:00000732:  newName, get_rel_name(owningRel)))); 
aaaaa GP_IGNORE: rabe: rewritehandler - ./backend/rewrite/rewriteHandler.c
rabe: rewritehandler:00000213:  elog(ERROR, "unexpected varno %d in JOIN RTE %d", 
rabe: rewritehandler:00000214:  curinputvarno, rt_index); 
rabe: rewritehandler:00000457:  ereport(ERROR, 
rabe: rewritehandler:00000458:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabe: rewritehandler:00000459:  errmsg("conditional UNION/INTERSECT/EXCEPT statements are not implemented"))); 
rabe: rewritehandler:00000519:  ereport(ERROR, 
rabe: rewritehandler:00000520:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabe: rewritehandler:00000521:  errmsg("cannot have RETURNING lists in multiple rules"))); 
rabe: rewritehandler:00000654:  elog(ERROR, "bogus resno %d in targetlist", attrno); 
rabe: rewritehandler:00000819:  ereport(ERROR, 
rabe: rewritehandler:00000820:  (errcode(ERRCODE_SYNTAX_ERROR), 
rabe: rewritehandler:00000821:  errmsg("multiple assignments to same column \"%s\"", 
rabe: rewritehandler:00000822:  attrName), 
rabe: rewritehandler:00000823:  errOmitLocation(true))); 
rabe: rewritehandler:00000838:  ereport(ERROR, 
rabe: rewritehandler:00000839:  (errcode(ERRCODE_SYNTAX_ERROR), 
rabe: rewritehandler:00000840:  errmsg("multiple assignments to same column \"%s\"", 
rabe: rewritehandler:00000841:  attrName))); 
rabe: rewritehandler:00000879:  elog(ERROR, "can't happen"); 
rabe: rewritehandler:00000976:  ereport(ERROR, 
rabe: rewritehandler:00000977:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
rabe: rewritehandler:00000978:  errmsg("column \"%s\" is of type %s" 
rabe: rewritehandler:00000979:  " but default expression is of type %s", 
rabe: rewritehandler:00000980:  NameStr(att_tup->attname), 
rabe: rewritehandler:00000981:  format_type_be(atttype), 
rabe: rewritehandler:00000982:  format_type_be(exprtype)), 
rabe: rewritehandler:00000983:  errhint("You will need to rewrite or cast the expression."))); 
rabe: rewritehandler:00001157:  elog(ERROR, "expected just one rule action"); 
rabe: rewritehandler:00001159:  elog(ERROR, "cannot handle qualified ON SELECT rule"); 
rabe: rewritehandler:00001161:  elog(ERROR, "cannot handle per-attribute ON SELECT rule"); 
rabe: rewritehandler:00001270:  elog(ERROR, "unrecognized node type: %d", 
rabe: rewritehandler:00001271:  (int) nodeTag(jtnode)); 
rabe: rewritehandler:00001408:  ereport(ERROR, 
rabe: rewritehandler:00001409:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabe: rewritehandler:00001410:  errmsg("infinite recursion detected in rules for relation \"%s\"", 
rabe: rewritehandler:00001411:  RelationGetRelationName(rel)))); 
rabe: rewritehandler:00001662:  ereport(ERROR, 
rabe: rewritehandler:00001663:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabe: rewritehandler:00001664:  errmsg("Update append-only table statement not supported yet"))); 
rabe: rewritehandler:00001672:  ereport(ERROR, 
rabe: rewritehandler:00001673:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabe: rewritehandler:00001674:  errmsg("Delete append-only table statement not supported yet"))); 
rabe: rewritehandler:00001747:  ereport(ERROR, 
rabe: rewritehandler:00001748:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabe: rewritehandler:00001749:  errmsg("infinite recursion detected in rules for relation \"%s\"", 
rabe: rewritehandler:00001750:  RelationGetRelationName(rt_entry_relation)))); 
rabe: rewritehandler:00001785:  ereport(ERROR, 
rabe: rewritehandler:00001786:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabe: rewritehandler:00001787:  errmsg("cannot perform INSERT RETURNING on relation \"%s\"", 
rabe: rewritehandler:00001788:  RelationGetRelationName(rt_entry_relation)), 
rabe: rewritehandler:00001789:  errhint("You need an unconditional ON INSERT DO INSTEAD rule with a RETURNING clause."))); 
rabe: rewritehandler:00001792:  ereport(ERROR, 
rabe: rewritehandler:00001793:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabe: rewritehandler:00001794:  errmsg("cannot perform UPDATE RETURNING on relation \"%s\"", 
rabe: rewritehandler:00001795:  RelationGetRelationName(rt_entry_relation)), 
rabe: rewritehandler:00001796:  errhint("You need an unconditional ON UPDATE DO INSTEAD rule with a RETURNING clause."))); 
rabe: rewritehandler:00001799:  ereport(ERROR, 
rabe: rewritehandler:00001800:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabe: rewritehandler:00001801:  errmsg("cannot perform DELETE RETURNING on relation \"%s\"", 
rabe: rewritehandler:00001802:  RelationGetRelationName(rt_entry_relation)), 
rabe: rewritehandler:00001803:  errhint("You need an unconditional ON DELETE DO INSTEAD rule with a RETURNING clause."))); 
rabe: rewritehandler:00001806:  elog(ERROR, "unrecognized commandType: %d", 
rabe: rewritehandler:00001807:  (int) event); 
rabe: rewritehandler:00001899:  ereport(ERROR, 
rabe: rewritehandler:00001900:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabe: rewritehandler:00001901:  errmsg("cannot insert into a view"), 
rabe: rewritehandler:00001902:  errhint("You need an unconditional ON INSERT DO INSTEAD rule."))); 
rabe: rewritehandler:00001905:  ereport(ERROR, 
rabe: rewritehandler:00001906:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabe: rewritehandler:00001907:  errmsg("cannot update a view"), 
rabe: rewritehandler:00001908:  errhint("You need an unconditional ON UPDATE DO INSTEAD rule."))); 
rabe: rewritehandler:00001911:  ereport(ERROR, 
rabe: rewritehandler:00001912:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabe: rewritehandler:00001913:  errmsg("cannot delete from a view"), 
rabe: rewritehandler:00001914:  errhint("You need an unconditional ON DELETE DO INSTEAD rule."))); 
rabe: rewritehandler:00001917:  elog(ERROR, "unrecognized commandType: %d", 
rabe: rewritehandler:00001918:  (int) query->commandType); 
aaaaa GP_IGNORE: rabc: rewritemanip - ./backend/rewrite/rewriteManip.c
rabc: rewritemanip:00000722:  elog(ERROR, "expected to find SELECT subquery"); 
rabc: rewritemanip:00000729:  elog(ERROR, "expected to find SELECT subquery"); 
rabc: rewritemanip:00000740:  elog(ERROR, "could not find rule placeholders"); 
rabc: rewritemanip:00000774:  ereport(ERROR, 
rabc: rewritemanip:00000775:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabc: rewritemanip:00000776:  errmsg("conditional utility statements are not implemented"))); 
rabc: rewritemanip:00000786:  ereport(ERROR, 
rabc: rewritemanip:00000787:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabc: rewritemanip:00000788:  errmsg("conditional UNION/INTERSECT/EXCEPT statements are not implemented"))); 
aaaaa GP_IGNORE: rabd: rewriteremove - ./backend/rewrite/rewriteRemove.c
rabd: rewriteremove:00000066:  ereport(ERROR, 
rabd: rewriteremove:00000067:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
rabd: rewriteremove:00000068:  errmsg("rule \"%s\" for relation \"%s\" does not exist", 
rabd: rewriteremove:00000069:  ruleName, get_rel_name(owningRel)))); 
rabd: rewriteremove:00000071:  ereport(NOTICE, 
rabd: rewriteremove:00000072:  (errmsg("rule \"%s\" for relation \"%s\" does not exist, skipping", 
rabd: rewriteremove:00000073:  ruleName, get_rel_name(owningRel)))); 
rabd: rewriteremove:00000126:  elog(ERROR, "could not find tuple for rule %u", ruleOid); 
aaaaa GP_IGNORE: rabe: rewritesupport - ./backend/rewrite/rewriteSupport.c
rabe: rewritesupport:00000063:  elog(ERROR, "cache lookup failed for relation %u", relationId); 
aaaaa GP_IGNORE: baai: bufxinit - ./backend/storage/buffer/buf_init.c
baai: bufxinit:00000084:  ereport(ERROR, 
baai: bufxinit:00000085:  (errmsg("Unable to set memory level to %d, error %d, allocation size %ud, ptr %ld", PROT_NONE, 
baai: bufxinit:00000086:  errno, (unsigned int) bufferBlocksTotalSize, (long int) BufferBlocks))); 
baai: bufxinit:00000183:  ereport(FATAL, 
baai: bufxinit:00000184:  (errcode(ERRCODE_OUT_OF_MEMORY), 
baai: bufxinit:00000185:  errmsg("out of memory"))); 
aaaaa GP_IGNORE: baaj: bufxtable - ./backend/storage/buffer/buf_table.c
baaj: bufxtable:00000071:  elog(FATAL, "could not initialize shared buffer hash table"); 
baaj: bufxtable:00000166:  elog(ERROR, "shared buffer hash table corrupted"); 
aaaaa GP_IGNORE: baag: bufmgr - ./backend/storage/buffer/bufmgr.c
baag: bufmgr:00000144:  ereport(ERROR, 
baag: bufmgr:00000145:  (errmsg("Unable to set memory level to %d, error %d, block size %d, ptr %ld", protectionLevel, 
baag: bufmgr:00000146:  errno, BLCKSZ, (long int) BufHdrGetBlock(bufHdr)))); 
baag: bufmgr:00000385:  ereport(ERROR, 
baag: bufmgr:00000386:  (errmsg("unexpected data beyond EOF in block %u of relation \"%s\"", 
baag: bufmgr:00000387:  blockNum, relErrMsgString), 
baag: bufmgr:00000388:  errhint("This has been seen to occur with buggy kernels; consider updating your system."))); 
baag: bufmgr:00000458:  ereport(WARNING, 
baag: bufmgr:00000459:  (errcode(ERRCODE_DATA_CORRUPTED), 
baag: bufmgr:00000460:  errmsg("invalid page header in block %u of relation \"%s\"; zeroing out page", 
baag: bufmgr:00000461:  blockNum, relErrMsgString))); 
baag: bufmgr:00000465:  ereport(ERROR, 
baag: bufmgr:00000466:  (errcode(ERRCODE_DATA_CORRUPTED), 
baag: bufmgr:00000467:  errmsg("invalid page header in block %u of relation \"%s\"", 
baag: bufmgr:00000468:  blockNum, relErrMsgString), 
baag: bufmgr:00000469:  errSendAlert(true))); 
baag: bufmgr:00000609:  ereport(ERROR, 
baag: bufmgr:00000610:  (errmsg("unexpected data beyond EOF in block %u of relation \"%s\"", 
baag: bufmgr:00000611:  blockNum, RelationGetRelationName(reln)), 
baag: bufmgr:00000612:  errhint("This has been seen to occur with buggy kernels; consider updating your system."))); 
baag: bufmgr:00000682:  ereport(WARNING, 
baag: bufmgr:00000683:  (errcode(ERRCODE_DATA_CORRUPTED), 
baag: bufmgr:00000684:  errmsg("invalid page header in block %u of relation \"%s\"; zeroing out page", 
baag: bufmgr:00000685:  blockNum, RelationGetRelationName(reln)))); 
baag: bufmgr:00000689:  ereport(ERROR, 
baag: bufmgr:00000690:  (errcode(ERRCODE_DATA_CORRUPTED), 
baag: bufmgr:00000691:  errmsg("invalid page header in block %u of relation \"%s\"", 
baag: bufmgr:00000692:  blockNum, RelationGetRelationName(reln)), 
baag: bufmgr:00000693:  errSendAlert(true))); 
baag: bufmgr:00000804:  ereport(WARNING, 
baag: bufmgr:00000805:  (errcode(ERRCODE_DATA_CORRUPTED), 
baag: bufmgr:00000806:  errmsg("invalid page header in block %u of relation \"\"; zeroing out page", 
baag: bufmgr:00000807:  blockNum/*, relpath(reln->smgr_rnode)*/))); 
baag: bufmgr:00000811:  ereport(ERROR, 
baag: bufmgr:00000812:  (errcode(ERRCODE_DATA_CORRUPTED), 
baag: bufmgr:00000813:  errmsg("invalid page header in block %u of relation \"\"", 
baag: bufmgr:00000814:  blockNum/*, relpath(reln->smgr_rnode)*/), 
baag: bufmgr:00000815:  errSendAlert(true))); 
baag: bufmgr:00002259:  elog(WARNING, 
baag: bufmgr:00002260:  "buffer refcount leak: [%03d] " 
baag: bufmgr:00002261:  "(rel=%u/%u/%u, blockNum=%u, flags=0x%x, refcount=%u %d)", 
baag: bufmgr:00002262:  buffer, 
baag: bufmgr:00002263:  buf->tag.rnode.spcNode, buf->tag.rnode.dbNode, 
baag: bufmgr:00002264:  buf->tag.rnode.relNode, 
baag: bufmgr:00002265:  buf->tag.blockNum, buf->flags, 
baag: bufmgr:00002266:  buf->refcount, loccount); 
baag: bufmgr:00003269:  ereport(WARNING, 
baag: bufmgr:00003270:  (errcode(ERRCODE_IO_ERROR), 
baag: bufmgr:00003271:  errmsg("could not write block %u of %u/%u/%u", 
baag: bufmgr:00003272:  buf->tag.blockNum, 
baag: bufmgr:00003273:  buf->tag.rnode.spcNode, 
baag: bufmgr:00003274:  buf->tag.rnode.dbNode, 
baag: bufmgr:00003275:  buf->tag.rnode.relNode), 
baag: bufmgr:00003276:  errdetail("Multiple failures --- write error might be permanent."))); 
aaaaa GP_IGNORE: faai: freelist - ./backend/storage/buffer/freelist.c
faai: freelist:00000124:  ereport(ERROR, (errcode(ERRCODE_INSUFFICIENT_RESOURCES), 
faai: freelist:00000125:  errmsg("Unable to allocate database I/O buffer; " 
faai: freelist:00000126:  "no unpinned buffers available. " 
faai: freelist:00000127:  "(shared_buffers=%d)", NBuffers), 
faai: freelist:00000128:  errhint("The shared_buffers setting may need to " 
faai: freelist:00000129:  "be increased.") 
faai: freelist:00000130:  )); 
aaaaa GP_IGNORE: laai: localbuf - ./backend/storage/buffer/localbuf.c
laai: localbuf:00000140:  ereport(ERROR, 
laai: localbuf:00000141:  (errcode(ERRCODE_INSUFFICIENT_RESOURCES), 
laai: localbuf:00000142:  errmsg("no empty local buffer available"))); 
laai: localbuf:00000265:  elog(ERROR, "block %u of %u/%u/%u is still referenced (local %u)", 
laai: localbuf:00000266:  bufHdr->tag.blockNum, 
laai: localbuf:00000267:  bufHdr->tag.rnode.spcNode, 
laai: localbuf:00000268:  bufHdr->tag.rnode.dbNode, 
laai: localbuf:00000269:  bufHdr->tag.rnode.relNode, 
laai: localbuf:00000270:  LocalRefCount[i]); 
laai: localbuf:00000302:  ereport(FATAL, 
laai: localbuf:00000303:  (errcode(ERRCODE_OUT_OF_MEMORY), 
laai: localbuf:00000304:  errmsg("out of memory"))); 
aaaaa GP_IGNORE: baad: bfz - ./backend/storage/file/bfz.c
baad: bfz:00000195:  elog(NOTICE, "Simulate a torn page at block " INT64_FORMAT, bfz->blockNo); 
baad: bfz:00000218:  ereport(ERROR, 
baad: bfz:00000219:  (errcode(ERRCODE_IO_ERROR), 
baad: bfz:00000220:  errmsg("temporary file block checksum mismatch: current %u, " 
baad: bfz:00000221:  "expected %u", storedCrc, crc))); 
baad: bfz:00000260:  ereport(ERROR, (errmsg("cannot generate path %s/PG_TEMP_FILES_DIR", getCurrentTempFilePath))); 
baad: bfz:00000275:  ereport(ERROR, (errmsg("cannot generate path %s/%s.%s", 
baad: bfz:00000276:  getCurrentTempFilePath, 
baad: bfz:00000277:  tempfileprefix, 
baad: bfz:00000278:  BFZ_MKTEMP_MASK))); 
baad: bfz:00000292:  ereport(ERROR, 
baad: bfz:00000293:  (errcode(ERRCODE_IO_ERROR), 
baad: bfz:00000294:  errmsg("could not create temporary file %s: %m", thiz->filename))); 
baad: bfz:00000335:  ereport(ERROR, 
baad: bfz:00000336:  (errcode(ERRCODE_IO_ERROR), 
baad: bfz:00000337:  errmsg("could not close temporary file %s: %m", thiz->filename))); 
baad: bfz:00000364:  ereport(ERROR, 
baad: bfz:00000365:  (errcode(ERRCODE_IO_ERROR), 
baad: bfz:00000366:  errmsg("could not seek in temporary file: %m"))); 
baad: bfz:00000393:  ereport(ERROR, 
baad: bfz:00000394:  (errcode(ERRCODE_IO_ERROR), 
baad: bfz:00000395:  errmsg("could not seek in temporary file: %m"))); 
aaaaa GP_IGNORE: baah: buffile - ./backend/storage/file/buffile.c
baah: buffile:00000239:  elog(ERROR, "could not open temporary file \"%s\": %m", fileName); 
baah: buffile:00000415:  elog(ERROR, "could not seek in temporary file: %m"); 
baah: buffile:00000427:  elog(ERROR, "could not read from temporary file: %m"); 
baah: buffile:00000471:  elog(ERROR, "could not create (or extend) temporary file: %m"); 
baah: buffile:00000500:  elog(ERROR, "could not seek in temporary file: %m"); 
baah: buffile:00000509:  elog(ERROR, "could not write %d bytes to temporary file: %m", (int)bytestowrite); 
baah: buffile:00000998:  elog(NOTICE, "reading %d bytes (bot %d, top %d, max %d), size %d", 
baah: buffile:00000999:  file->peek.max - file->peek.top, 
baah: buffile:00001000:  file->peek.bot, file->peek.top, file->peek.max, 
baah: buffile:00001001:  size); 
aaaaa GP_IGNORE: cabg: compressxnothing - ./backend/storage/file/compress_nothing.c
cabg: compressxnothing:00000041:  ereport(ERROR, 
cabg: compressxnothing:00000042:  (errcode(ERRCODE_IO_ERROR), 
cabg: compressxnothing:00000043:  errmsg("could not read from temporary file: %m"))); 
cabg: compressxnothing:00000060:  ereport(ERROR, 
cabg: compressxnothing:00000061:  (errcode(ERRCODE_IO_ERROR), 
cabg: compressxnothing:00000062:  errmsg("could not write to temporary file: %m"))); 
cabg: compressxnothing:00000074:  ereport(ERROR, 
cabg: compressxnothing:00000075:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cabg: compressxnothing:00000076:  errmsg("out of memory"))); 
aaaaa GP_IGNORE: cabh: compressxthreaded - ./backend/storage/file/compress_threaded.c
cabh: compressxthreaded:00000043:  ereport(ERROR, 
cabh: compressxthreaded:00000044:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cabh: compressxthreaded:00000045:  errmsg("out of memory"))); 
aaaaa GP_IGNORE: cabd: compressxzlib - ./backend/storage/file/compress_zlib.c
cabd: compressxzlib:00000044:  ereport(ERROR, 
cabd: compressxzlib:00000045:  (errcode(ERRCODE_IO_ERROR), 
cabd: compressxzlib:00000046:  errmsg("could not write to temporary file: %m"))); 
cabd: compressxzlib:00000062:  ereport(ERROR, 
cabd: compressxzlib:00000063:  (errcode(ERRCODE_IO_ERROR), 
cabd: compressxzlib:00000064:  errmsg("could not read from temporary file: %m"))); 
cabd: compressxzlib:00000095:  ereport(ERROR, 
cabd: compressxzlib:00000096:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cabd: compressxzlib:00000097:  errmsg("out of memory"))); 
cabd: compressxzlib:00000110:  ereport(ERROR, 
cabd: compressxzlib:00000111:  (errcode(ERRCODE_IO_ERROR), 
cabd: compressxzlib:00000112:  errmsg("could not open temporary file: %m"))); 
cabd: compressxzlib:00000125:  ereport(ERROR, 
cabd: compressxzlib:00000126:  (errcode(ERRCODE_IO_ERROR), 
cabd: compressxzlib:00000127:  errmsg("could not open temporary file: %m"))); 
cabd: compressxzlib:00000131:  ereport(ERROR, 
cabd: compressxzlib:00000132:  (errcode(ERRCODE_IO_ERROR), 
cabd: compressxzlib:00000133:  errmsg("could not duplicate file descriptor: %m"))); 
cabd: compressxzlib:00000149:  ereport(ERROR, 
cabd: compressxzlib:00000150:  (errcode(ERRCODE_IO_ERROR), 
cabd: compressxzlib:00000151:  errmsg("could not open temporary file: %m"))); 
cabd: compressxzlib:00000157:  ereport(ERROR, 
cabd: compressxzlib:00000158:  (errcode(ERRCODE_IO_ERROR), 
cabd: compressxzlib:00000159:  errmsg("could not duplicate file descriptor: %m"))); 
aaaaa GP_IGNORE: faac: fd - ./backend/storage/file/fd.c
faac: fd:00000361:  ereport(FATAL, 
faac: fd:00000362:  (errcode(ERRCODE_OUT_OF_MEMORY), 
faac: fd:00000363:  errmsg("out of memory"))); 
faac: fd:00000475:  ereport(FATAL, 
faac: fd:00000476:  (errcode(ERRCODE_INSUFFICIENT_RESOURCES), 
faac: fd:00000477:  errmsg("insufficient file handles available to start server process"), 
faac: fd:00000478:  errdetail("System allows %d, we need at least %d.", 
faac: fd:00000479:  max_safe_fds + NUM_RESERVED_FDS, 
faac: fd:00000480:  FD_MINFREE + NUM_RESERVED_FDS))); 
faac: fd:00000592:  elog(ERROR, "could not get the current position of file \"%s\": %m", vfdP->fileName); 
faac: fd:00000598:  elog(ERROR, "could not close file \"%s\": %m", vfdP->fileName); 
faac: fd:00000604:  elog(ERROR, "could not close file \"%s\": %m", vfdP->fileName); 
faac: fd:00000725:  elog(FATAL, "reopen hdfs file %s length "INT64_FORMAT" is not equal to logic file length "INT64_FORMAT, 
faac: fd:00000726:  vfdP->fileName, len, vfdP->seekPos); 
faac: fd:00000797:  ereport(ERROR, 
faac: fd:00000798:  (errcode(ERRCODE_OUT_OF_MEMORY), 
faac: fd:00000799:  errmsg("out of memory"))); 
faac: fd:00000926:  ereport(ERROR, 
faac: fd:00000927:  (errcode(ERRCODE_OUT_OF_MEMORY), errmsg("out of memory"))); 
faac: fd:00000980:  ereport(ERROR, (errmsg("cannot generate path %s/%s", temp_dir, 
faac: fd:00000981:  fileName))); 
faac: fd:00001097:  elog(ERROR, "could not create temporary file \"%s\": %m", 
faac: fd:00001098:  tempfilepath); 
faac: fd:00001137:  elog(ERROR, "could not close file \"%s\": %m", 
faac: fd:00001138:  vfdP->fileName); 
faac: fd:00001585:  elog(ERROR, "could not allocate file: out of file handles"); 
faac: fd:00001705:  elog(ERROR, "could not allocate directory: out of file handles"); 
faac: fd:00001730:  ereport(ERROR, 
faac: fd:00001731:  (errcode(ERRCODE_OUT_OF_MEMORY), errmsg("out of memory"))); 
faac: fd:00001799:  ereport(ERROR, 
faac: fd:00001800:  (errcode_for_file_access(), 
faac: fd:00001801:  errmsg("could not open directory \"%s\": %m", 
faac: fd:00001802:  dirname))); 
faac: fd:00001850:  elog(ERROR, "file name is too long \"%s\"", filename); 
faac: fd:00001872:  ereport(ERROR, 
faac: fd:00001873:  (errcode_for_file_access(), 
faac: fd:00001874:  errmsg("could not read directory \"%s\": %m", 
faac: fd:00001875:  dirname))); 
faac: fd:00002214:  elog(WARNING, "no filesystem protocol found: %s", path); 
faac: fd:00002232:  elog(WARNING, "cannot find hdfs port in path: %s", path); 
faac: fd:00002241:  elog(WARNING, "cannot find hdfs port in path: %s", path); 
faac: fd:00002271:  elog(WARNING, "failed to create hash table."); 
faac: fd:00002289:  elog(WARNING, "fail to connect hdfs at %s, errno = %d", location, 
faac: fd:00002290:  errno); 
faac: fd:00002366:  elog(WARNING, "internal error HdfsParseOptions: no filesystem protocol found in path \"%s\"", 
faac: fd:00002367:  fileName); 
faac: fd:00002379:  elog(WARNING, "internal error HdfsParseOptions: options format error in path \"%s\"", 
faac: fd:00002380:  fileName); 
faac: fd:00002405:  elog(WARNING, "internal error: no filesystem protocol found in path \"%s\"", 
faac: fd:00002406:  fileName); 
faac: fd:00002413:  elog(WARNING, "internal error: cannot convert path \"%s\" into unix format", 
faac: fd:00002414:  fileName); 
faac: fd:00002441:  elog(WARNING, "cannot get protocol for path: %s", fileName); 
faac: fd:00002496:  ereport(ERROR, 
faac: fd:00002497:  (errcode(ERRCODE_OUT_OF_MEMORY), errmsg("out of memory"))); 
faac: fd:00002595:  elog(ERROR, "could not close file %d : (%s) errno %d", file, fileName, errno); 
faac: fd:00002619:  elog(WARNING, "cannot reopen file %s for read, errno %d", 
faac: fd:00002620:  vfdP->fileName, errno); 
faac: fd:00002635:  elog(WARNING, "cannot read from file %s, errno %d", 
faac: fd:00002636:  VfdCache[file].fileName, errno); 
faac: fd:00002691:  elog(WARNING, "cannot reopen file %s for file tell, errno %d", 
faac: fd:00002692:  VfdCache[file].fileName, errno); 
faac: fd:00003008:  elog(ERROR, "cannot get protocol for path: %s", path); 
faac: fd:00003017:  elog(ERROR, "cannot convert to unix path for path: %s", path); 
aaaaa GP_IGNORE: faba: filesystem - ./backend/storage/file/filesystem.c
faba: filesystem:00000083:  ereport(FATAL, 
faba: filesystem:00000084:  (errcode_for_file_access(), 
faba: filesystem:00000085:  errmsg("could not open file \"%s\": %m", filename))); 
faba: filesystem:00000088:  ereport(ERROR, 
faba: filesystem:00000089:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
faba: filesystem:00000090:  errmsg("cannot find filesystem \"%s\" in flatfile \"%s\"", name, filename))); 
faba: filesystem:00000093:  elog(ERROR, "not enough items in flatfile for filesystem \"%s\", need %d, found %d", 
faba: filesystem:00000094:  name, FSYS_FUNC_TOTALNUM+1, list_length(list)); 
faba: filesystem:00000168:  ereport(ERROR, 
faba: filesystem:00000169:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
faba: filesystem:00000170:  errmsg("filesystem \"%s\" does not exist", name))); 
faba: filesystem:00000176:  ereport(ERROR, 
faba: filesystem:00000177:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
faba: filesystem:00000178:  errmsg("filesystem \"%s\" has no libfile specified", name))); 
faba: filesystem:00000192:  ereport(ERROR, 
faba: filesystem:00000193:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
faba: filesystem:00000194:  errmsg("filesystem \"%s\" has no %s function defined", name, 
faba: filesystem:00000195:  fsys_func_type_to_name(i)))); 
faba: filesystem:00000248:  elog(WARNING, "failed to create hash table: FsysInterfaceTable."); 
faba: filesystem:00000266:  elog(WARNING, "fail to init filesystem: %s", name); 
faba: filesystem:00000314:  elog(WARNING, "function %u returned error: %d", fcinfo.flinfo->fn_oid, DatumGetInt32(d)); 
faba: filesystem:00000343:  elog(WARNING, "function %u returned error: %d", fcinfo.flinfo->fn_oid, DatumGetInt32(d)); 
faba: filesystem:00000379:  elog(WARNING, "function %u returned error: %d", fcinfo.flinfo->fn_oid, DatumGetInt32(d)); 
faba: filesystem:00000410:  elog(WARNING, "function %u returned error", fcinfo.flinfo->fn_oid); 
faba: filesystem:00000440:  elog(WARNING, "function %u returned error", fcinfo.flinfo->fn_oid); 
faba: filesystem:00000470:  elog(WARNING, "function %u returned error", fcinfo.flinfo->fn_oid); 
faba: filesystem:00000502:  elog(WARNING, "function %u returned error", fcinfo.flinfo->fn_oid); 
faba: filesystem:00000534:  elog(WARNING, "function %u returned error", fcinfo.flinfo->fn_oid); 
faba: filesystem:00000567:  elog(WARNING, "function %u returned error", fcinfo.flinfo->fn_oid); 
faba: filesystem:00000600:  elog(WARNING, "function %u returned error", fcinfo.flinfo->fn_oid); 
faba: filesystem:00000632:  elog(WARNING, "function %u returned error", fcinfo.flinfo->fn_oid); 
faba: filesystem:00000662:  elog(WARNING, "function %u returned error", fcinfo.flinfo->fn_oid); 
faba: filesystem:00000693:  elog(WARNING, "function %u returned error", fcinfo.flinfo->fn_oid); 
faba: filesystem:00000719:  elog(WARNING, "function %u returned error", fcinfo.flinfo->fn_oid); 
faba: filesystem:00000744:  elog(WARNING, "function %u returned error", fcinfo.flinfo->fn_oid); 
aaaaa GP_IGNORE: gabb: gpxcompress - ./backend/storage/file/gp_compress.c
gabb: gpxcompress:00000101:  elog(ERROR, 
gabb: gpxcompress:00000102:  "Uncompress returned length %d which is different than the " 
gabb: gpxcompress:00000103:  "expected length %d (block count " INT64_FORMAT ")", 
gabb: gpxcompress:00000104:  resultingUncompressedLen, 
gabb: gpxcompress:00000105:  uncompressedLen, 
gabb: gpxcompress:00000106:  bufferCount); 
gabb: gpxcompress:00000140:  elog(ERROR, 
gabb: gpxcompress:00000141:  "Uncompress returned length %d which is different than the " 
gabb: gpxcompress:00000142:  "expected length %d (block count " INT64_FORMAT ")", 
gabb: gpxcompress:00000143:  resultingUncompressedLen, 
gabb: gpxcompress:00000144:  uncompressedLen, 
gabb: gpxcompress:00000145:  bufferCount); 
gabb: gpxcompress:00000167:  elog(ERROR,"ZLIB compress2 failed -- reason %d unknown (uncompressed length %d)", 
gabb: gpxcompress:00000168:  zlibCompressError, sourceLen); 
gabb: gpxcompress:00000172:  elog(ERROR,"ZLIB compress2 failed (detail: '%s', uncompressed length %d)", 
gabb: gpxcompress:00000173:  detail, sourceLen); 
aaaaa GP_IGNORE: faaj: freespace - ./backend/storage/freespace/freespace.c
faaj: freespace:00000188:  ereport(FATAL, 
faaj: freespace:00000189:  (errcode(ERRCODE_OUT_OF_MEMORY), 
faaj: freespace:00000190:  errmsg("insufficient shared memory for free space map"))); 
faaj: freespace:00000206:  ereport(FATAL, 
faaj: freespace:00000207:  (errcode(ERRCODE_OUT_OF_MEMORY), 
faaj: freespace:00000208:  errmsg("insufficient shared memory for free space map"))); 
faaj: freespace:00000218:  ereport(FATAL, 
faaj: freespace:00000219:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
faaj: freespace:00000220:  errmsg("max_fsm_pages must exceed max_fsm_relations * %d", 
faaj: freespace:00000221:  CHUNKPAGES))); 
faaj: freespace:00000225:  ereport(FATAL, 
faaj: freespace:00000226:  (errcode(ERRCODE_OUT_OF_MEMORY), 
faaj: freespace:00000227:  errmsg("insufficient shared memory for free space map"))); 
faaj: freespace:00000429:  elog(ERROR, "free-space data is not in page order"); 
faaj: freespace:00000518:  elog(ERROR, "free-space data is not in page order"); 
faaj: freespace:00001004:  elog(ERROR, "FreeSpaceMap hashtable corrupted"); 
faaj: freespace:00001152:  elog(ERROR, "find_free_space called for an index relation"); 
faaj: freespace:00001202:  elog(ERROR, "find_index_free_space called for a non-index relation"); 
faaj: freespace:00001231:  elog(ERROR, "fsm_record_free_space called for an index relation"); 
faaj: freespace:00001567:  elog(ERROR, "bogus freespace amount"); 
faaj: freespace:00001593:  elog(ERROR, "free-space data is not in page order"); 
faaj: freespace:00001638:  elog(ERROR, "bogus freespace amount"); 
aaaaa GP_IGNORE: iaad: ipc - ./backend/storage/ipc/ipc.c
iaad: ipc:00000251:  ereport(FATAL, 
iaad: ipc:00000252:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
iaad: ipc:00000253:  errmsg_internal("out of on_proc_exit slots"))); 
iaad: ipc:00000282:  ereport(FATAL, 
iaad: ipc:00000283:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
iaad: ipc:00000284:  errmsg_internal("out of on_shmem_exit slots"))); 
aaaaa GP_IGNORE: paai: pmsignal - ./backend/storage/ipc/pmsignal.c
paai: pmsignal:00000166:  elog(FATAL, "no free slots in PMChildFlags array"); 
aaaaa GP_IGNORE: paaj: procarray - ./backend/storage/ipc/procarray.c
paaj: procarray:00000144:  ereport(FATAL, 
paaj: procarray:00000145:  (errcode(ERRCODE_TOO_MANY_CONNECTIONS), 
paaj: procarray:00000146:  errmsg("sorry, too many clients already"))); 
paaj: procarray:00000596:  elog(FATAL, "Unexpected segment distribute transaction context: '%s'", 
paaj: procarray:00000597:  DtxContextToString(DistributedTransactionContext)); 
paaj: procarray:00000601:  elog(FATAL, "Unrecognized DTX transaction context: %d", 
paaj: procarray:00000602:  (int) DistributedTransactionContext); 
paaj: procarray:00000660:  elog(ERROR, "Distributed snapshot in-progress array too long"); 
paaj: procarray:00000693:  elog(FATAL, "Unexpected segment distribute transaction context: '%s'", 
paaj: procarray:00000694:  DtxContextToString(DistributedTransactionContext)); 
paaj: procarray:00000698:  elog(FATAL, "Unrecognized DTX transaction context: %d", 
paaj: procarray:00000699:  (int) DistributedTransactionContext); 
paaj: procarray:00000721:  elog(ERROR, "SharedLocalSnapshotSlot is NULL"); 
paaj: procarray:00000797:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), errmsg("out of memory"))); 
paaj: procarray:00000805:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), errmsg("out of memory"))); 
paaj: procarray:00000829:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), errmsg("out of memory"))); 
paaj: procarray:00000977:  ereport(ERROR, 
paaj: procarray:00000978:  (errcode(ERRCODE_GP_INTERCONNECTION_ERROR), 
paaj: procarray:00000979:  errmsg("GetSnapshotData timed out waiting for Writer to set the shared snapshot."), 
paaj: procarray:00000980:  errdetail("We are waiting for the shared snapshot to have XID: %d but the value " 
paaj: procarray:00000981:  "is currently: %d." 
paaj: procarray:00000982:  " waiting for cid to be %d but is currently %d. ready=%d." 
paaj: procarray:00000983:  "DistributedTransactionContext = %s. " 
paaj: procarray:00000984:  " Our slotindex is: %d \n" 
paaj: procarray:00000985:  "Dump of all sharedsnapshots in shmem: %s", 
paaj: procarray:00000986:  QEDtxContextInfo.distributedXid, SharedLocalSnapshotSlot->QDxid, 
paaj: procarray:00000987:  QEDtxContextInfo.curcid, 
paaj: procarray:00000988:  SharedLocalSnapshotSlot->QDcid, SharedLocalSnapshotSlot->ready, 
paaj: procarray:00000989:  DtxContextToString(DistributedTransactionContext), 
paaj: procarray:00000990:  SharedLocalSnapshotSlot->slotindex, SharedSnapshotDump()))); 
paaj: procarray:00001576:  elog(WARNING, "did not find subXID %u in MyProc", anxid); 
paaj: procarray:00001589:  elog(WARNING, "did not find subXID %u in MyProc", xid); 
paaj: procarray:00001687:  elog(NOTICE, "sent an interrupt to process %d", pid); 
aaaaa GP_IGNORE: saaf: shmem - ./backend/storage/ipc/shmem.c
saaf: shmem:00000128:  ereport(ERROR, 
saaf: shmem:00000129:  (errcode(ERRCODE_INTERNAL_ERROR), 
saaf: shmem:00000130:  errmsg("invalid page size %d; must be a power of two and not an error", ShmemSystemPageSize))); 
saaf: shmem:00000204:  ereport(WARNING, 
saaf: shmem:00000205:  (errcode(ERRCODE_OUT_OF_MEMORY), 
saaf: shmem:00000206:  errmsg("out of shared memory"))); 
saaf: shmem:00000247:  elog(FATAL, "could not initialize Shmem Index"); 
saaf: shmem:00000373:  ereport(ERROR, 
saaf: shmem:00000374:  (errcode(ERRCODE_OUT_OF_MEMORY), 
saaf: shmem:00000375:  errmsg("out of shared memory"))); 
saaf: shmem:00000389:  elog(WARNING, "ShmemIndex entry size is wrong. entry is %ld, we were looking for %ld", result->size, (long)size); 
saaf: shmem:00000406:  ereport(WARNING, 
saaf: shmem:00000407:  (errcode(ERRCODE_OUT_OF_MEMORY), 
saaf: shmem:00000408:  errmsg("could not allocate shared memory segment \"%s\"", 
saaf: shmem:00000409:  name))); 
saaf: shmem:00000434:  ereport(ERROR, 
saaf: shmem:00000435:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
saaf: shmem:00000436:  errmsg("requested shared memory size overflows size_t"))); 
saaf: shmem:00000453:  ereport(ERROR, 
saaf: shmem:00000454:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
saaf: shmem:00000455:  errmsg("requested shared memory size overflows size_t"))); 
aaaaa GP_IGNORE: saag: sinval - ./backend/storage/ipc/sinval.c
saag: sinval:00000079:  elog(FATAL, "shared cache invalidation initialization failed"); 
saag: sinval:00000081:  ereport(FATAL, 
saag: sinval:00000082:  (errcode(ERRCODE_TOO_MANY_CONNECTIONS), 
saag: sinval:00000083:  errmsg("sorry, too many clients already"))); 
aaaaa GP_IGNORE: iaah: invxapi - ./backend/storage/large_object/inv_api.c
iaah: invxapi:00000180:  elog(ERROR, "invalid VARSIZE(data)"); 
iaah: invxapi:00000261:  elog(ERROR, "invalid flags: %d", flags); 
iaah: invxapi:00000265:  ereport(ERROR, 
iaah: invxapi:00000266:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
iaah: invxapi:00000267:  errmsg("large object %u does not exist", lobjId))); 
iaah: invxapi:00000354:  elog(ERROR, "null field found in pg_largeobject"); 
iaah: invxapi:00000373:  ereport(ERROR, 
iaah: invxapi:00000374:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
iaah: invxapi:00000375:  errmsg("large object %u does not exist", obj_desc->id))); 
iaah: invxapi:00000388:  elog(ERROR, "invalid seek offset: %d", offset); 
iaah: invxapi:00000393:  elog(ERROR, "invalid seek offset: %d", offset); 
iaah: invxapi:00000401:  elog(ERROR, "invalid seek offset: %d", offset); 
iaah: invxapi:00000406:  elog(ERROR, "invalid whence: %d", whence); 
iaah: invxapi:00000468:  elog(ERROR, "null field found in pg_largeobject"); 
iaah: invxapi:00000555:  ereport(ERROR, 
iaah: invxapi:00000556:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
iaah: invxapi:00000557:  errmsg("large object %u was not opened for writing", 
iaah: invxapi:00000558:  obj_desc->id))); 
iaah: invxapi:00000603:  elog(ERROR, "null field found in pg_largeobject"); 
iaah: invxapi:00000754:  ereport(ERROR, 
iaah: invxapi:00000755:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
iaah: invxapi:00000756:  errmsg("large object %u was not opened for writing", 
iaah: invxapi:00000757:  obj_desc->id))); 
iaah: invxapi:00000792:  elog(ERROR, "null field found in pg_largeobject"); 
aaaaa GP_IGNORE: daai: deadlock - ./backend/storage/lmgr/deadlock.c
daai: deadlock:00000220:  elog(FATAL, "deadlock seems to have disappeared"); 
daai: deadlock:00000308:  elog(FATAL, "inconsistent results during deadlock check"); 
daai: deadlock:00000962:  ereport(ERROR, 
daai: deadlock:00000963:  (errcode(ERRCODE_T_R_DEADLOCK_DETECTED), 
daai: deadlock:00000964:  errmsg("deadlock detected"), 
daai: deadlock:00000965:  errdetail("%s", buf.data))); 
aaaaa GP_IGNORE: laae: lock - ./backend/storage/lmgr/lock.c
laae: lock:00000341:  elog(FATAL, "could not initialize lock hash table"); 
laae: lock:00000363:  elog(FATAL, "could not initialize proclock hash table"); 
laae: lock:00000501:  elog(ERROR, "unrecognized lock method: %d", lockmethodid); 
laae: lock:00000504:  elog(ERROR, "unrecognized lock mode: %d", lockmode); 
laae: lock:00000648:  ereport(ERROR, 
laae: lock:00000649:  (errcode(ERRCODE_OUT_OF_MEMORY), 
laae: lock:00000650:  errmsg("out of shared memory"), 
laae: lock:00000651:  errhint("You might need to increase max_locks_per_transaction."))); 
laae: lock:00000783:  elog(ERROR,"Session has deadlocked itself due to function callback"); 
laae: lock:00000785:  elog(ERROR,"Session has deadlocked itself"); 
laae: lock:00000823:  ereport(ERROR, 
laae: lock:00000824:  (errcode(ERRCODE_OUT_OF_MEMORY), 
laae: lock:00000825:  errmsg("out of shared memory"), 
laae: lock:00000826:  errhint("You might need to increase max_locks_per_transaction."))); 
laae: lock:00001042:  elog(ERROR, "LockAcquire failed"); 
laae: lock:00001064:  elog(WARNING, "locallock table corrupted"); 
laae: lock:00001510:  elog(ERROR, "unrecognized lock method: %d", lockmethodid); 
laae: lock:00001513:  elog(ERROR, "unrecognized lock mode: %d", lockmode); 
laae: lock:00001538:  elog(WARNING, "you don't own a lock of type %s", 
laae: lock:00001539:  lockMethodTable->lockModeNames[lockmode]); 
laae: lock:00001575:  elog(WARNING, "you don't own a lock of type %s", 
laae: lock:00001576:  lockMethodTable->lockModeNames[lockmode]); 
laae: lock:00001621:  elog(WARNING, "you don't own a lock of type %s", 
laae: lock:00001622:  lockMethodTable->lockModeNames[lockmode]); 
laae: lock:00001663:  elog(ERROR, "unrecognized lock method: %d", lockmethodid); 
laae: lock:00001877:  elog(WARNING, "LockReleaseCurrentOwner: failed??"); 
laae: lock:00001972:  elog(ERROR, "unrecognized lock method: %d", lockmethodid); 
laae: lock:00001975:  elog(ERROR, "unrecognized lock mode: %d", lockmode); 
laae: lock:00002088:  elog(ERROR, "cannot PREPARE when session locks exist"); 
laae: lock:00002759:  elog(ERROR, "unrecognized lock method: %d", lockmethodid); 
laae: lock:00002779:  ereport(ERROR, 
laae: lock:00002780:  (errcode(ERRCODE_OUT_OF_MEMORY), 
laae: lock:00002781:  errmsg("out of shared memory"), 
laae: lock:00002782:  errhint("You might need to increase max_locks_per_transaction."))); 
laae: lock:00002844:  ereport(ERROR, 
laae: lock:00002845:  (errcode(ERRCODE_OUT_OF_MEMORY), 
laae: lock:00002846:  errmsg("out of shared memory"), 
laae: lock:00002847:  errhint("You might need to increase max_locks_per_transaction."))); 
laae: lock:00002926:  elog(ERROR, "unrecognized lock method: %d", lockmethodid); 
laae: lock:00002969:  elog(WARNING, "you don't own a lock of type %s", 
laae: lock:00002970:  lockMethodTable->lockModeNames[lockmode]); 
aaaaa GP_IGNORE: laag: lwlock - ./backend/storage/lmgr/lwlock.c
laag: lwlock:00000314:  elog(ERROR, "no more LWLockIds available"); 
laag: lwlock:00000416:  ereport(ERROR, errcode(ERRCODE_OUT_OF_MEMORY), 
laag: lwlock:00000417:  errmsg("LWLockAcquire failed: out of memory")); 
laag: lwlock:00000438:  elog(ERROR, "too many LWLocks taken"); 
laag: lwlock:00000629:  elog(ERROR, "too many LWLocks taken"); 
laag: lwlock:00000723:  elog(ERROR, "lock %d is not held", (int) lockid); 
aaaaa GP_IGNORE: paae: proc - ./backend/storage/lmgr/proc.c
paae: proc:00000181:  ereport(FATAL, 
paae: proc:00000182:  (errcode(ERRCODE_OUT_OF_MEMORY), 
paae: proc:00000183:  errmsg("out of shared memory"))); 
paae: proc:00000313:  elog(ERROR, "you already exist"); 
paae: proc:00000319:  ereport(FATAL, 
paae: proc:00000320:  (errcode(ERRCODE_TOO_MANY_CONNECTIONS), 
paae: proc:00000321:  errmsg("sorry, too many clients already"))); 
paae: proc:00000474:  elog(ERROR, "you already exist"); 
paae: proc:00000493:  elog(FATAL, "all AuxiliaryProcs are in use"); 
paae: proc:00000982:  elog(FATAL, "could not set timer for process wakeup"); 
paae: proc:00001010:  elog(FATAL, "could not disable timer for process wakeup"); 
paae: proc:00001615:  ereport(ERROR, 
paae: proc:00001616:  (errcode(ERRCODE_T_R_DEADLOCK_DETECTED), 
paae: proc:00001617:  errmsg("deadlock detected, locking against self"), 
paae: proc:00001618:  errOmitLocation(true))); 
paae: proc:00001625:  elog(FATAL, "could not set timer for (resource lock) process wakeup"); 
paae: proc:00001633:  elog(FATAL, "could not disable timer for (resource lock) process wakeup"); 
aaaaa GP_IGNORE: saae: spin - ./backend/storage/lmgr/spin.c
saae: spin:00000083:  elog(ERROR, "spin.c does not support S_LOCK_FREE()"); 
aaaaa GP_IGNORE: baah: bufpage - ./backend/storage/page/bufpage.c
baah: bufpage:00000156:  elog(WARNING, "will not overwrite a used ItemId"); 
baah: bufpage:00000195:  elog(WARNING, "specified item offset is too large"); 
baah: bufpage:00000346:  ereport(ERROR, 
baah: bufpage:00000347:  (errcode(ERRCODE_DATA_CORRUPTED), 
baah: bufpage:00000348:  errmsg("corrupted page pointers: lower = %u, upper = %u, special = %u", 
baah: bufpage:00000349:  pd_lower, pd_upper, pd_special), 
baah: bufpage:00000350:  errSendAlert(true))); 
baah: bufpage:00000390:  ereport(ERROR, 
baah: bufpage:00000391:  (errcode(ERRCODE_DATA_CORRUPTED), 
baah: bufpage:00000392:  errmsg("corrupted item pointer: %u", 
baah: bufpage:00000393:  itemidptr->itemoff), 
baah: bufpage:00000394:  errSendAlert(true))); 
baah: bufpage:00000406:  ereport(ERROR, 
baah: bufpage:00000407:  (errcode(ERRCODE_DATA_CORRUPTED), 
baah: bufpage:00000408:  errmsg("corrupted item lengths: total %u, available space %u", 
baah: bufpage:00000409:  (unsigned int) totallen, pd_special - pd_lower), 
baah: bufpage:00000410:  errSendAlert(true))); 
baah: bufpage:00000493:  ereport(ERROR, 
baah: bufpage:00000494:  (errcode(ERRCODE_DATA_CORRUPTED), 
baah: bufpage:00000495:  errmsg("corrupted page pointers: lower = %u, upper = %u, special = %u", 
baah: bufpage:00000496:  phdr->pd_lower, phdr->pd_upper, phdr->pd_special), 
baah: bufpage:00000497:  errSendAlert(true))); 
baah: bufpage:00000501:  elog(ERROR, "invalid index offnum: %u", offnum); 
baah: bufpage:00000512:  ereport(ERROR, 
baah: bufpage:00000513:  (errcode(ERRCODE_DATA_CORRUPTED), 
baah: bufpage:00000514:  errmsg("corrupted item pointer: offset = %u, size = %u", 
baah: bufpage:00000515:  offset, (unsigned int) size), 
baah: bufpage:00000516:  errSendAlert(true))); 
baah: bufpage:00000623:  ereport(ERROR, 
baah: bufpage:00000624:  (errcode(ERRCODE_DATA_CORRUPTED), 
baah: bufpage:00000625:  errmsg("corrupted page pointers: lower = %u, upper = %u, special = %u", 
baah: bufpage:00000626:  pd_lower, pd_upper, pd_special), 
baah: bufpage:00000627:  errSendAlert(true))); 
baah: bufpage:00000648:  ereport(ERROR, 
baah: bufpage:00000649:  (errcode(ERRCODE_DATA_CORRUPTED), 
baah: bufpage:00000650:  errmsg("corrupted item pointer: offset = %u, size = %u", 
baah: bufpage:00000651:  offset, (unsigned int) size), 
baah: bufpage:00000652:  errSendAlert(true))); 
baah: bufpage:00000673:  elog(ERROR, "incorrect index offsets supplied"); 
baah: bufpage:00000676:  ereport(ERROR, 
baah: bufpage:00000677:  (errcode(ERRCODE_DATA_CORRUPTED), 
baah: bufpage:00000678:  errmsg("corrupted item lengths: total %u, available space %u", 
baah: bufpage:00000679:  (unsigned int) totallen, pd_special - pd_lower), 
baah: bufpage:00000680:  errSendAlert(true))); 
aaaaa GP_IGNORE: maac: md - ./backend/storage/smgr/md.c
maac: md:00000248:  elog(ERROR, "Empty primary filespace directory location"); 
maac: md:00000542:  ereport(ERROR, 
maac: md:00000543:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
maac: md:00000544:  errmsg("could not create dbdir on mirror '%s' ", 
maac: md:00000545:  FileRepStatusToString[mirrorStatus]))); 
maac: md:00000925:  elog(ERROR, "No mirror configured for mirror only"); 
maac: md:00000957:  elog(ERROR, "Unexpected mirror data loss tracking state: %d", 
maac: md:00000958:  mirrorDataLossTrackingState); 
maac: md:00001353:  ereport(ERROR, 
maac: md:00001354:  (errcode_for_file_access(), 
maac: md:00001355:  errmsg("could not open relation %u/%u/%u: %s", 
maac: md:00001356:  reln->smgr_rnode.spcNode, 
maac: md:00001357:  reln->smgr_rnode.dbNode, 
maac: md:00001358:  reln->smgr_rnode.relNode, 
maac: md:00001359:  strerror(saved_err)), 
maac: md:00001360:  errdetail_nonexistent_relation(saved_err, &reln->smgr_rnode))); 
maac: md:00001536:  elog(FATAL, "segment too big"); 
maac: md:00001905:  elog(ERROR, "pendingOpsTable corrupted"); 
maac: md:00002229:  ereport(ERROR, 
maac: md:00002230:  (errcode_for_file_access(), 
maac: md:00002231:  errmsg("could not open segment %u of relation %u/%u/%u (target block %u): %s", 
maac: md:00002232:  nextsegno, 
maac: md:00002233:  reln->smgr_rnode.spcNode, 
maac: md:00002234:  reln->smgr_rnode.dbNode, 
maac: md:00002235:  reln->smgr_rnode.relNode, 
maac: md:00002236:  blkno, 
maac: md:00002237:  strerror(saved_err)), 
maac: md:00002238:  errdetail_nonexistent_relation(saved_err, &reln->smgr_rnode))); 
aaaaa GP_IGNORE: saae: smgr - ./backend/storage/smgr/smgr.c
saae: smgr:00000394:  ereport(ERROR, 
saae: smgr:00000395:  (errcode_for_file_access(), 
saae: smgr:00000396:  errmsg("could not close relation %u/%u/%u: %m", 
saae: smgr:00000397:  reln->smgr_rnode.spcNode, 
saae: smgr:00000398:  reln->smgr_rnode.dbNode, 
saae: smgr:00000399:  reln->smgr_rnode.relNode))); 
saae: smgr:00000406:  elog(ERROR, "SMgrRelation hashtable corrupted"); 
saae: smgr:00000940:  ereport(WARNING, 
saae: smgr:00000941:  (errcode_for_file_access(), 
saae: smgr:00000942:  errmsg("could not remove relation %u/%u/%u: %m", 
saae: smgr:00000943:  rnode.spcNode, 
saae: smgr:00000944:  rnode.dbNode, 
saae: smgr:00000945:  rnode.relNode))); 
saae: smgr:00000947:  ereport(WARNING, 
saae: smgr:00000948:  (errcode_for_file_access(), 
saae: smgr:00000949:  errmsg("could not remove relation %u/%u/%u '%s': %m", 
saae: smgr:00000950:  rnode.spcNode, 
saae: smgr:00000951:  rnode.dbNode, 
saae: smgr:00000952:  rnode.relNode, 
saae: smgr:00000953:  relationName))); 
saae: smgr:00001022:  ereport(WARNING, 
saae: smgr:00001023:  (errcode_for_file_access(), 
saae: smgr:00001024:  errmsg("could not remove filespace directory %u: %m", 
saae: smgr:00001025:  filespaceOid))); 
saae: smgr:00001118:  ereport(WARNING, 
saae: smgr:00001119:  (errcode_for_file_access(), 
saae: smgr:00001120:  errmsg("could not remove tablespace directory %u: %m", 
saae: smgr:00001121:  tablespaceOid))); 
saae: smgr:00001148:  ereport(WARNING, 
saae: smgr:00001149:  (errcode_for_file_access(), 
saae: smgr:00001150:  errmsg("could not remove database directory %u/%u: %m", 
saae: smgr:00001151:  dbDirNode->tablespace, 
saae: smgr:00001152:  dbDirNode->database))); 
saae: smgr:00001190:  ereport(ERROR, 
saae: smgr:00001191:  (errcode_for_file_access(), 
saae: smgr:00001192:  errmsg("could not extend relation %u/%u/%u: %m", 
saae: smgr:00001193:  reln->smgr_rnode.spcNode, 
saae: smgr:00001194:  reln->smgr_rnode.dbNode, 
saae: smgr:00001195:  reln->smgr_rnode.relNode), 
saae: smgr:00001196:  errhint("Check free disk space."))); 
saae: smgr:00001211:  ereport(ERROR, 
saae: smgr:00001212:  (errcode_for_file_access(), 
saae: smgr:00001213:  errmsg("could not read block %u of relation %u/%u/%u: %m", 
saae: smgr:00001214:  blocknum, 
saae: smgr:00001215:  reln->smgr_rnode.spcNode, 
saae: smgr:00001216:  reln->smgr_rnode.dbNode, 
saae: smgr:00001217:  reln->smgr_rnode.relNode))); 
saae: smgr:00001235:  ereport(ERROR, 
saae: smgr:00001236:  (errcode_for_file_access(), 
saae: smgr:00001237:  errmsg("could not write block %u of relation %u/%u/%u: %m", 
saae: smgr:00001238:  blocknum, 
saae: smgr:00001239:  reln->smgr_rnode.spcNode, 
saae: smgr:00001240:  reln->smgr_rnode.dbNode, 
saae: smgr:00001241:  reln->smgr_rnode.relNode))); 
saae: smgr:00001265:  ereport(ERROR, 
saae: smgr:00001266:  (errcode_for_file_access(), 
saae: smgr:00001267:  errmsg("could not count blocks of relation %u/%u/%u: %m", 
saae: smgr:00001268:  reln->smgr_rnode.spcNode, 
saae: smgr:00001269:  reln->smgr_rnode.dbNode, 
saae: smgr:00001270:  reln->smgr_rnode.relNode))); 
saae: smgr:00001303:  ereport(ERROR, 
saae: smgr:00001304:  (errcode_for_file_access(), 
saae: smgr:00001305:  errmsg("could not truncate relation %u/%u/%u to %u blocks: %m", 
saae: smgr:00001306:  reln->smgr_rnode.spcNode, 
saae: smgr:00001307:  reln->smgr_rnode.dbNode, 
saae: smgr:00001308:  reln->smgr_rnode.relNode, 
saae: smgr:00001309:  nblocks))); 
saae: smgr:00001395:  ereport(ERROR, 
saae: smgr:00001396:  (errcode_for_file_access(), 
saae: smgr:00001397:  errmsg("could not sync relation %u/%u/%u: %m", 
saae: smgr:00001398:  reln->smgr_rnode.spcNode, 
saae: smgr:00001399:  reln->smgr_rnode.dbNode, 
saae: smgr:00001400:  reln->smgr_rnode.relNode))); 
saae: smgr:00001587:  elog(ERROR, "Unexpected persistent end transaction file-system action: %d", 
saae: smgr:00001588:  action); 
saae: smgr:00001674:  elog(ERROR, "Unexpected persistent end transaction file-system action: %d", 
saae: smgr:00001675:  action); 
saae: smgr:00001881:  elog(ERROR, "Expected a CREATE for file-system object name '%s'", 
saae: smgr:00001882:  PersistentFileSysObjName_ObjectName(&prev->fsObjName)); 
saae: smgr:00001884:  elog(ERROR, "Expected a DROP for file-system object name '%s'", 
saae: smgr:00001885:  PersistentFileSysObjName_ObjectName(&current->fsObjName)); 
saae: smgr:00001940:  elog(ERROR, "Not sorted correctly ('%s' >= '%s')", 
saae: smgr:00001941:  PersistentFileSysObjName_ObjectName(&checkPrev->fsObjName), 
saae: smgr:00001942:  PersistentFileSysObjName_ObjectName(&check->fsObjName)); 
saae: smgr:00001950:  elog(ERROR, "List count does not match (expected %d, found %d)", 
saae: smgr:00001951:  *listCount, checkCount); 
saae: smgr:00002375:  ereport(WARNING, 
saae: smgr:00002376:  (errcode_for_file_access(), 
saae: smgr:00002377:  errmsg("could not truncate relation %u/%u/%u to %u blocks: %m", 
saae: smgr:00002378:  reln->smgr_rnode.spcNode, 
saae: smgr:00002379:  reln->smgr_rnode.dbNode, 
saae: smgr:00002380:  reln->smgr_rnode.relNode, 
saae: smgr:00002381:  xlrec->blkno))); 
aaaaa GP_IGNORE: saai: smgrtype - ./backend/storage/smgr/smgrtype.c
saai: smgrtype:00000046:  elog(ERROR, "unrecognized storage manager name \"%s\"", s); 
saai: smgrtype:00000057:  elog(ERROR, "invalid storage manager id: %d", i); 
aaaaa GP_IGNORE: daae: dest - ./backend/tcop/dest.c
daae: dest:00000117:  elog(ERROR, "no portal specified for DestRemote receiver"); 
daae: dest:00000131:  elog(ERROR, "no portal specified for DestTuplestore receiver"); 
daae: dest:00000134:  elog(ERROR, "portal has no holdStore"); 
aaaaa GP_IGNORE: faai: fastpath - ./backend/tcop/fastpath.c
faai: fastpath:00000106:  ereport(FATAL, 
faai: fastpath:00000107:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
faai: fastpath:00000108:  errmsg("invalid argument size %d in function call message", 
faai: fastpath:00000109:  argsize))); 
faai: fastpath:00000177:  ereport(ERROR, 
faai: fastpath:00000178:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
faai: fastpath:00000179:  errmsg("unsupported format code: %d", format))); 
faai: fastpath:00000207:  * since we can be interrupted (i.e., with an ereport(ERROR, ...)) at any 
faai: fastpath:00000208:  * time. [No longer really an issue since we don't save the struct 
faai: fastpath:00000209:  * fp_info across transactions anymore, but keep it anyway.] 
faai: fastpath:00000210:  */ 
faai: fastpath:00000211:  MemSet(fip, 0, sizeof(struct fp_info)); 
faai: fastpath:00000220:  ereport(ERROR, 
faai: fastpath:00000221:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
faai: fastpath:00000222:  errmsg("function with OID %u does not exist", func_id))); 
faai: fastpath:00000227:  elog(ERROR, "function %s has more than %d arguments", 
faai: fastpath:00000228:  NameStr(pp->proname), FUNC_MAX_ARGS); 
faai: fastpath:00000259:  * Note: All ordinary errors result in ereport(ERROR,...). However, 
faai: fastpath:00000260:  * if we lose the frontend connection there is no one to ereport to, 
faai: fastpath:00000261:  * and no use in proceeding... 
faai: fastpath:00000262:  * 
faai: fastpath:00000263:  * Note: palloc()s done here and in the called function do not need to be 
faai: fastpath:00000264:  * cleaned up explicitly. We are called from PostgresMain() in the 
faai: fastpath:00000265:  * MessageContext memory context, which will be automatically reset when 
faai: fastpath:00000266:  * control returns to PostgresMain. 
faai: fastpath:00000267:  */ 
faai: fastpath:00000268: int 
faai: fastpath:00000269: HandleFunctionRequest(StringInfo msgBuf) 
faai: fastpath:00000270: { 
faai: fastpath:00000271:  Oid fid; 
faai: fastpath:00000302:  ereport(ERROR, 
faai: fastpath:00000303:  (errcode(ERRCODE_IN_FAILED_SQL_TRANSACTION), 
faai: fastpath:00000304:  errmsg("current transaction is aborted, " 
faai: fastpath:00000305:  "commands ignored until end of transaction block"))); 
faai: fastpath:00000445:  ereport(ERROR, 
faai: fastpath:00000446:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
faai: fastpath:00000447:  errmsg("function call message contains %d arguments but function requires %d", 
faai: fastpath:00000448:  nargs, fip->flinfo.fn_nargs))); 
faai: fastpath:00000453:  ereport(ERROR, 
faai: fastpath:00000454:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
faai: fastpath:00000455:  errmsg("function call message contains %d argument formats but %d arguments", 
faai: fastpath:00000456:  numAFormats, nargs))); 
faai: fastpath:00000477:  ereport(ERROR, 
faai: fastpath:00000478:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
faai: fastpath:00000479:  errmsg("invalid argument size %d in function call message", 
faai: fastpath:00000480:  argsize))); 
faai: fastpath:00000540:  ereport(ERROR, 
faai: fastpath:00000541:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
faai: fastpath:00000542:  errmsg("incorrect binary data format in function argument %d", 
faai: fastpath:00000543:  i + 1))); 
faai: fastpath:00000546:  ereport(ERROR, 
faai: fastpath:00000547:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
faai: fastpath:00000548:  errmsg("unsupported format code: %d", aformat))); 
faai: fastpath:00000572:  ereport(ERROR, 
faai: fastpath:00000573:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
faai: fastpath:00000574:  errmsg("function call message contains %d arguments but function requires %d", 
faai: fastpath:00000575:  nargs, fip->flinfo.fn_nargs))); 
faai: fastpath:00000607:  ereport(ERROR, 
faai: fastpath:00000608:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
faai: fastpath:00000609:  errmsg("invalid argument size %d in function call message", 
faai: fastpath:00000610:  argsize))); 
faai: fastpath:00000623:  ereport(ERROR, 
faai: fastpath:00000624:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
faai: fastpath:00000625:  errmsg("incorrect binary data format in function argument %d", 
faai: fastpath:00000626:  i + 1))); 
aaaaa GP_IGNORE: paai: postgres - ./backend/tcop/postgres.c
paai: postgres:00000395:  elog(FATAL, "could not disable timer for client wiat timeout"); 
paai: postgres:00000478:  ereport(FATAL, 
paai: postgres:00000479:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: postgres:00000480:  errmsg("invalid frontend message type %d", qtype))); 
paai: postgres:00000490:  ereport(FATAL, 
paai: postgres:00000491:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: postgres:00000492:  errmsg("invalid frontend message type %d", qtype))); 
paai: postgres:00000501:  ereport(FATAL, 
paai: postgres:00000502:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: postgres:00000503:  errmsg("invalid frontend message type %d", qtype))); 
paai: postgres:00000517:  ereport(FATAL, 
paai: postgres:00000518:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: postgres:00000519:  errmsg("invalid frontend message type %d", qtype))); 
paai: postgres:00000677:  elog(WARNING, "copyObject() failed to produce an equal raw parse tree"); 
paai: postgres:00000775:  elog(WARNING, "copyObject() failed to produce an equal parse tree"); 
paai: postgres:00000820:  elog(WARNING, "copyObject() failed to produce an equal plan tree"); 
paai: postgres:00000985:  elog(ERROR, "MPPEXEC: received non-utility Query node."); 
paai: postgres:00001014:  elog(ERROR, "MPPEXEC: received invalid slice table:, %d", localSlice); 
paai: postgres:00001032:  elog(ERROR, "MPPEXEC: receive invalid planned statement"); 
paai: postgres:00001070:  elog(ERROR, "MPPEXEC: received neither Query nor Plan"); 
paai: postgres:00001077:  elog(ERROR, "MPPEXEC: received non-DML Plan"); 
paai: postgres:00001226:  elog(ERROR,"Raise ERROR for debug_dtm_action = %d, commandTag = %s", 
paai: postgres:00001227:  Debug_dtm_action, commandTag); 
paai: postgres:00001240:  ereport(ERROR, 
paai: postgres:00001241:  (errcode(ERRCODE_IN_FAILED_SQL_TRANSACTION), 
paai: postgres:00001242:  errmsg("current transaction is aborted, " 
paai: postgres:00001243:  "commands ignored until end of transaction block"))); 
paai: postgres:00001343:  elog(ERROR,"Raise ERROR for debug_dtm_action = %d, commandTag = %s", 
paai: postgres:00001344:  Debug_dtm_action, commandTag); 
paai: postgres:00001438:  elog(ERROR,"Raise ERROR for debug_dtm_action = %d, debug_dtm_action_protocol = %s", 
paai: postgres:00001439:  Debug_dtm_action, DtxProtocolCommandToString(dtxProtocolCommand)); 
paai: postgres:00001458:  elog(ERROR,"Raise error for debug_dtm_action = %d, debug_dtm_action_protocol = %s", 
paai: postgres:00001459:  Debug_dtm_action, DtxProtocolCommandToString(dtxProtocolCommand)); 
paai: postgres:00001508:  elog(NOTICE, "running query (sessionId, commandId): (%d, %d)", 
paai: postgres:00001509:  MyProc->mppSessionId, gp_command_count); 
paai: postgres:00001622:  elog(ERROR,"Raise ERROR for debug_dtm_action = %d, commandTag = %s", 
paai: postgres:00001623:  Debug_dtm_action, commandTag); 
paai: postgres:00001648:  ereport(ERROR, 
paai: postgres:00001649:  (errcode(ERRCODE_IN_FAILED_SQL_TRANSACTION), 
paai: postgres:00001650:  errmsg("current transaction is aborted, " 
paai: postgres:00001651:  "commands ignored until end of transaction block"), 
paai: postgres:00001652:  errOmitLocation(true))); 
paai: postgres:00001793:  elog(ERROR, "segment alive information changed, cleanup the gangs."); 
paai: postgres:00001831:  elog(ERROR,"Raise ERROR for debug_dtm_action = %d, commandTag = %s", 
paai: postgres:00001832:  Debug_dtm_action, commandTag); 
paai: postgres:00001983:  ereport(ERROR, 
paai: postgres:00001984:  (errcode(ERRCODE_SYNTAX_ERROR), 
paai: postgres:00001985:  errmsg("cannot insert multiple commands into a prepared statement"))); 
paai: postgres:00002008:  ereport(ERROR, 
paai: postgres:00002009:  (errcode(ERRCODE_IN_FAILED_SQL_TRANSACTION), 
paai: postgres:00002010:  errmsg("current transaction is aborted, " 
paai: postgres:00002011:  "commands ignored until end of transaction block"))); 
paai: postgres:00002045:  ereport(ERROR, 
paai: postgres:00002046:  (errcode(ERRCODE_INDETERMINATE_DATATYPE), 
paai: postgres:00002047:  errmsg("could not determine data type of parameter $%d", 
paai: postgres:00002048:  i + 1))); 
paai: postgres:00002213:  ereport(ERROR, 
paai: postgres:00002214:  (errcode(ERRCODE_UNDEFINED_PSTATEMENT), 
paai: postgres:00002215:  errmsg("unnamed prepared statement does not exist"))); 
paai: postgres:00002255:  ereport(ERROR, 
paai: postgres:00002256:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: postgres:00002257:  errmsg("bind message has %d parameter formats but %d parameters", 
paai: postgres:00002258:  numPFormats, numParams))); 
paai: postgres:00002261:  ereport(ERROR, 
paai: postgres:00002262:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: postgres:00002263:  errmsg("bind message supplies %d parameters, but prepared statement \"%s\" requires %d", 
paai: postgres:00002264:  numParams, stmt_name, list_length(pstmt->argtype_list)))); 
paai: postgres:00002277:  ereport(ERROR, 
paai: postgres:00002278:  (errcode(ERRCODE_IN_FAILED_SQL_TRANSACTION), 
paai: postgres:00002279:  errmsg("current transaction is aborted, " 
paai: postgres:00002280:  "commands ignored until end of transaction block"))); 
paai: postgres:00002407:  ereport(ERROR, 
paai: postgres:00002408:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
paai: postgres:00002409:  errmsg("incorrect binary data format in bind parameter %d", 
paai: postgres:00002410:  paramno + 1))); 
paai: postgres:00002414:  ereport(ERROR, 
paai: postgres:00002415:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paai: postgres:00002416:  errmsg("unsupported format code: %d", 
paai: postgres:00002417:  pformat))); 
paai: postgres:00002581:  elog(NOTICE, "running query (sessionId, commandId): (%d, %d)", 
paai: postgres:00002582:  MyProc->mppSessionId, gp_command_count); 
paai: postgres:00002594:  ereport(ERROR, 
paai: postgres:00002595:  (errcode(ERRCODE_UNDEFINED_CURSOR), 
paai: postgres:00002596:  errmsg("portal \"%s\" does not exist", portal_name))); 
paai: postgres:00002700:  ereport(ERROR, 
paai: postgres:00002701:  (errcode(ERRCODE_IN_FAILED_SQL_TRANSACTION), 
paai: postgres:00002702:  errmsg("current transaction is aborted, " 
paai: postgres:00002703:  "commands ignored until end of transaction block"))); 
paai: postgres:00002996:  ereport(ERROR, 
paai: postgres:00002997:  (errcode(ERRCODE_UNDEFINED_PSTATEMENT), 
paai: postgres:00002998:  errmsg("unnamed prepared statement does not exist"))); 
paai: postgres:00003012:  ereport(ERROR, 
paai: postgres:00003013:  (errcode(ERRCODE_IN_FAILED_SQL_TRANSACTION), 
paai: postgres:00003014:  errmsg("current transaction is aborted, " 
paai: postgres:00003015:  "commands ignored until end of transaction block"))); 
paai: postgres:00003068:  ereport(ERROR, 
paai: postgres:00003069:  (errcode(ERRCODE_UNDEFINED_CURSOR), 
paai: postgres:00003070:  errmsg("portal \"%s\" does not exist", portal_name))); 
paai: postgres:00003082:  ereport(ERROR, 
paai: postgres:00003083:  (errcode(ERRCODE_IN_FAILED_SQL_TRANSACTION), 
paai: postgres:00003084:  errmsg("current transaction is aborted, " 
paai: postgres:00003085:  "commands ignored until end of transaction block"))); 
paai: postgres:00003448:  ereport(ERROR, 
paai: postgres:00003449:  (errcode(ERRCODE_FLOATING_POINT_EXCEPTION), 
paai: postgres:00003450:  errmsg("floating-point exception"), 
paai: postgres:00003451:  errdetail("An invalid floating-point operation was signaled. " 
paai: postgres:00003452:  "This probably means an out-of-range result or an " 
paai: postgres:00003453:  "invalid operation, such as division by zero."))); 
paai: postgres:00003510:  ereport(FATAL, 
paai: postgres:00003511:  (errcode(ERRCODE_ADMIN_SHUTDOWN), 
paai: postgres:00003512:  errmsg("terminating connection due to administrator command"), 
paai: postgres:00003513:  errSendAlert(false))); 
paai: postgres:00003525:  ereport(ERROR, 
paai: postgres:00003526:  (errcode(ERRCODE_GP_OPERATION_CANCELED), 
paai: postgres:00003527:  errmsg("canceling MPP operation"))); 
paai: postgres:00003529:  ereport(ERROR, 
paai: postgres:00003530:  (errcode(ERRCODE_QUERY_CANCELED), 
paai: postgres:00003531:  errmsg("canceling statement due to statement timeout"))); 
paai: postgres:00003533:  ereport(ERROR, 
paai: postgres:00003534:  (errcode(ERRCODE_QUERY_CANCELED), 
paai: postgres:00003535:  errmsg("canceling statement due to user request"))); 
paai: postgres:00003616:  ereport(ERROR, 
paai: postgres:00003617:  (errcode(ERRCODE_STATEMENT_TOO_COMPLEX), 
paai: postgres:00003618:  errmsg("stack depth limit exceeded"), 
paai: postgres:00003619:  errhint("Increase the configuration parameter \"max_stack_depth\", " 
paai: postgres:00003620:  "after ensuring the platform's stack depth limit is adequate."))); 
paai: postgres:00003812:  elog(FATAL, "%s: could not locate my own executable path", 
paai: postgres:00003813:  argv[0]); 
paai: postgres:00004055:  ereport(ERROR, 
paai: postgres:00004056:  (errcode(ERRCODE_SYNTAX_ERROR), 
paai: postgres:00004057:  errmsg("--%s requires a value", 
paai: postgres:00004058:  optarg))); 
paai: postgres:00004060:  ereport(ERROR, 
paai: postgres:00004061:  (errcode(ERRCODE_SYNTAX_ERROR), 
paai: postgres:00004062:  errmsg("-c %s requires a value", 
paai: postgres:00004063:  optarg))); 
paai: postgres:00004103:  ereport(FATAL, 
paai: postgres:00004104:  (errcode(ERRCODE_CANNOT_CONNECT_NOW), 
paai: postgres:00004105:  errmsg("System was started in master-only utility mode - only utility mode connections are allowed"))); 
paai: postgres:00004223:  ereport(FATAL, 
paai: postgres:00004224:  (errcode(ERRCODE_SYNTAX_ERROR), 
paai: postgres:00004225:  errmsg("invalid command-line arguments for server process"), 
paai: postgres:00004226:  errhint("Try \"%s --help\" for more information.", argv[0]))); 
paai: postgres:00004236:  ereport(FATAL, 
paai: postgres:00004237:  (errcode(ERRCODE_SYNTAX_ERROR), 
paai: postgres:00004238:  errmsg("%s: invalid command-line arguments", 
paai: postgres:00004239:  argv[0]), 
paai: postgres:00004240:  errhint("Try \"%s --help\" for more information.", argv[0]))); 
paai: postgres:00004246:  ereport(FATAL, 
paai: postgres:00004247:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paai: postgres:00004248:  errmsg("%s: no database nor user name specified", 
paai: postgres:00004249:  argv[0]))); 
paai: postgres:00004645:  elog(FATAL, "could not set timer for client wait timeout"); 
paai: postgres:00005116:  ereport(ERROR, 
paai: postgres:00005117:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: postgres:00005118:  errmsg("invalid CLOSE message subtype %d", 
paai: postgres:00005119:  close_type))); 
paai: postgres:00005156:  ereport(ERROR, 
paai: postgres:00005157:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: postgres:00005158:  errmsg("invalid DESCRIBE message subtype %d", 
paai: postgres:00005159:  describe_type))); 
paai: postgres:00005213:  ereport(FATAL, 
paai: postgres:00005214:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: postgres:00005215:  errmsg("invalid frontend message type %d ('%c')", 
paai: postgres:00005216:  firstchar,firstchar))); 
paai: postgres:00005511:  elog(FATAL, "%s: could not locate my own executable path", 
paai: postgres:00005512:  argv[0]); 
paai: postgres:00005717:  ereport(ERROR, 
paai: postgres:00005718:  (errcode(ERRCODE_SYNTAX_ERROR), 
paai: postgres:00005719:  errmsg("--%s requires a value", 
paai: postgres:00005720:  optarg))); 
paai: postgres:00005722:  ereport(ERROR, 
paai: postgres:00005723:  (errcode(ERRCODE_SYNTAX_ERROR), 
paai: postgres:00005724:  errmsg("-c %s requires a value", 
paai: postgres:00005725:  optarg))); 
paai: postgres:00005838:  ereport(FATAL, 
paai: postgres:00005839:  (errcode(ERRCODE_SYNTAX_ERROR), 
paai: postgres:00005840:  errmsg("invalid command-line arguments for server process"), 
paai: postgres:00005841:  errhint("Try \"%s --help\" for more information.", argv[0]))); 
paai: postgres:00005852:  ereport(FATAL, 
paai: postgres:00005853:  (errcode(ERRCODE_SYNTAX_ERROR), 
paai: postgres:00005854:  errmsg("%s: invalid command-line arguments", 
paai: postgres:00005855:  argv[0]), 
paai: postgres:00005856:  errhint("Try \"%s --help\" for more information.", argv[0]))); 
paai: postgres:00005862:  ereport(FATAL, 
paai: postgres:00005863:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paai: postgres:00005864:  errmsg("%s: no database nor user name specified", 
paai: postgres:00005865:  argv[0]))); 
paai: postgres:00006188:  ereport(FATAL, 
paai: postgres:00006189:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paai: postgres:00006190:  errmsg("invalid frontend message type %d", 
paai: postgres:00006191:  firstchar))); 
aaaaa GP_IGNORE: paag: pquery - ./backend/tcop/pquery.c
paag: pquery:00000117:  elog(NOTICE, "running query (sessionId, commandId): (%d, %d)", 
paag: pquery:00000118:  MyProc->mppSessionId, gp_command_count); 
paag: pquery:00000996:  ereport(ERROR, 
paag: pquery:00000997:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paag: pquery:00000998:  errmsg("bind message has %d result formats but query has %d columns", 
paag: pquery:00000999:  nFormats, natts), 
paag: pquery:00001000:  errOmitLocation(true))); 
paag: pquery:00001072:  ereport(ERROR, 
paag: pquery:00001073:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paag: pquery:00001074:  errmsg("portal \"%s\" cannot be run", portal->name), 
paag: pquery:00001075:  errOmitLocation(true))); 
paag: pquery:00001168:  elog(ERROR, "unrecognized portal strategy: %d", 
paag: pquery:00001169:  (int) portal->strategy); 
paag: pquery:00001315:  ereport(ERROR, 
paag: pquery:00001316:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paag: pquery:00001317:  errmsg("cursor can only scan forward"), 
paag: pquery:00001318:  errhint("Declare it with SCROLL option to enable backward scan."), 
paag: pquery:00001319:  errOmitLocation(true))); 
paag: pquery:00001407:  elog(ERROR, "unsupported portal strategy: %d", 
paag: pquery:00001408:  (int) portal->strategy); 
paag: pquery:00001708:  ereport(ERROR, 
paag: pquery:00001709:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paag: pquery:00001710:  errmsg("portal \"%s\" cannot be run", portal->name))); 
paag: pquery:00001757:  elog(ERROR, "unsupported portal strategy"); 
paag: pquery:00001818:  ereport(ERROR, 
paag: pquery:00001819:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
paag: pquery:00001820:  errmsg("backward scan is not supported in this version of Greenplum Database"), 
paag: pquery:00001821:  errOmitLocation(true))); 
paag: pquery:00001834:  ereport(ERROR, 
paag: pquery:00001835:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
paag: pquery:00001836:  errmsg("backward scan is not supported in this version of Greenplum Database"), 
paag: pquery:00001837:  errOmitLocation(true))); 
paag: pquery:00001857:  ereport(ERROR, 
paag: pquery:00001858:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
paag: pquery:00001859:  errmsg("backward scan is not supported in this version of Greenplum Database"), 
paag: pquery:00001860:  errOmitLocation(true))); 
paag: pquery:00001893:  ereport(ERROR, 
paag: pquery:00001894:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
paag: pquery:00001895:  errmsg("backward scan is not supported in this version of Greenplum Database"), 
paag: pquery:00001896:  errOmitLocation(true))); 
paag: pquery:00001908:  ereport(ERROR, 
paag: pquery:00001909:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
paag: pquery:00001910:  errmsg("backward scan is not supported in this version of Greenplum Database"), 
paag: pquery:00001911:  errOmitLocation(true))); 
paag: pquery:00001936:  ereport(ERROR, 
paag: pquery:00001937:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
paag: pquery:00001938:  errmsg("backward scan is not supported in this version of Greenplum Database"))); 
paag: pquery:00001952:  elog(ERROR, "bogus direction"); 
paag: pquery:00002004:  ereport(ERROR, 
paag: pquery:00002005:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
paag: pquery:00002006:  errmsg("backward scan is not supported in this version of Greenplum Database"), 
paag: pquery:00002007:  errOmitLocation(true))); 
aaaaa GP_IGNORE: uaah: utility - ./backend/tcop/utility.c
uaah: utility:00000141:  ereport(ERROR, 
uaah: utility:00000142:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
uaah: utility:00000143:  errmsg(rentry->nota_msg, relname), 
uaah: utility:00000144:  (wentry->kind != '\0') ? errhint("%s", wentry->drophint_msg) : 0, 
uaah: utility:00000145:  errOmitLocation(true))); 
uaah: utility:00000163:  ereport(ERROR, 
uaah: utility:00000164:  (errcode(rentry->nonexistent_code), 
uaah: utility:00000165:  errmsg(rentry->nonexistent_msg, rel->relname), 
uaah: utility:00000166:  errOmitLocation(true))); 
uaah: utility:00000171:  ereport(NOTICE, (errmsg(rentry->skipping_msg, rel->relname), 
uaah: utility:00000172:  errOmitLocation(true))); 
uaah: utility:00000213:  elog(ERROR, "cache lookup failed for relation %u", relOid); 
uaah: utility:00000228:  ereport(ERROR, 
uaah: utility:00000229:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaah: utility:00000230:  errmsg("permission denied: \"%s\" is a system catalog", 
uaah: utility:00000231:  rel->relname))); 
uaah: utility:00000267:  elog(ERROR, "cache lookup failed for relation %u", relOid); 
uaah: utility:00000295:  ereport(ERROR, 
uaah: utility:00000296:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
uaah: utility:00000297:  errmsg("\"%s\" is not %s table", rel->relname, want_type), 
uaah: utility:00000298:  errhint("%s", hint), 
uaah: utility:00000299:  errOmitLocation(true))); 
uaah: utility:00000331:  elog(ERROR, "cache lookup failed for relation %u", relOid); 
uaah: utility:00000341:  ereport(ERROR, 
uaah: utility:00000342:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaah: utility:00000343:  errmsg("permission denied: \"%s\" is a system catalog", 
uaah: utility:00000344:  rel->relname))); 
uaah: utility:00000379:  elog(WARNING, "unrecognized commandType: %d", 
uaah: utility:00000380:  (int) parsetree->commandType); 
uaah: utility:00000416:  elog(WARNING, "unrecognized commandType: %d", 
uaah: utility:00000417:  (int) stmt->commandType); 
uaah: utility:00000454:  ereport(ERROR, 
uaah: utility:00000455:  (errcode(ERRCODE_READ_ONLY_SQL_TRANSACTION), 
uaah: utility:00000456:  errmsg("transaction is read-only"))); 
uaah: utility:00000478:  ereport(ERROR, 
uaah: utility:00000479:  (errcode(ERRCODE_READ_ONLY_SQL_TRANSACTION), 
uaah: utility:00000480:  errmsg("transaction is read-only"))); 
uaah: utility:00000541:  ereport(ERROR, 
uaah: utility:00000542:  (errcode(ERRCODE_READ_ONLY_SQL_TRANSACTION), 
uaah: utility:00000543:  errmsg("transaction is read-only"))); 
uaah: utility:00000576:  ereport(ERROR, 
uaah: utility:00000577:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support drop foreign table statement yet") )); 
uaah: utility:00000607:  ereport(ERROR, 
uaah: utility:00000608:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support drop index statement yet") )); 
uaah: utility:00000618:  ereport(ERROR, 
uaah: utility:00000619:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support drop type statement yet") )); 
uaah: utility:00000627:  ereport(ERROR, 
uaah: utility:00000628:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support drop domain statement yet") )); 
uaah: utility:00000638:  ereport(ERROR, 
uaah: utility:00000639:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support drop conversion statement yet") )); 
uaah: utility:00000678:  ereport(ERROR, 
uaah: utility:00000679:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support drop protocol statement yet") )); 
uaah: utility:00000688:  elog(ERROR, "unrecognized drop object type: %d", 
uaah: utility:00000689:  (int) stmt->removeType); 
uaah: utility:00000789:  ereport(ERROR, ( 
uaah: utility:00000790:  errcode(ERRCODE_GP_COMMAND_ERROR), 
uaah: utility:00000791:  errmsg("PREPARE TRANSACTION is not yet supported in Greenplum Database.") 
uaah: utility:00000792:  )); 
uaah: utility:00000806:  ereport(ERROR, ( 
uaah: utility:00000807:  errcode(ERRCODE_GP_COMMAND_ERROR), 
uaah: utility:00000808:  errmsg("COMMIT PREPARED is not yet supported in Greenplum Database.") 
uaah: utility:00000809:  )); 
uaah: utility:00000819:  ereport(ERROR, ( 
uaah: utility:00000820:  errcode(ERRCODE_GP_COMMAND_ERROR), 
uaah: utility:00000821:  errmsg("ROLLBACK PREPARED is not yet supported in Greenplum Database.") 
uaah: utility:00000822:  )); 
uaah: utility:00000886:  elog(ERROR, "non-DECLARE CURSOR PlannedStmt passed to ProcessUtility"); 
uaah: utility:00000977:  ereport(ERROR, 
uaah: utility:00000978:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create foreign statement yet") )); 
uaah: utility:00000992:  ereport(ERROR, 
uaah: utility:00000993:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create foreign data wrapper statement yet") )); 
uaah: utility:00000999:  ereport(ERROR, 
uaah: utility:00001000:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter foreign data wrapper statement yet") )); 
uaah: utility:00001006:  ereport(ERROR, 
uaah: utility:00001007:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support drop foreign data wrapper statement yet") )); 
uaah: utility:00001013:  ereport(ERROR, 
uaah: utility:00001014:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create server statement yet") )); 
uaah: utility:00001020:  ereport(ERROR, 
uaah: utility:00001021:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter server statement yet") )); 
uaah: utility:00001027:  ereport(ERROR, 
uaah: utility:00001028:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support drop server statement yet") )); 
uaah: utility:00001034:  ereport(ERROR, 
uaah: utility:00001035:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create user mapping statement yet") )); 
uaah: utility:00001041:  ereport(ERROR, 
uaah: utility:00001042:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter user mapping statement yet") )); 
uaah: utility:00001048:  ereport(ERROR, 
uaah: utility:00001049:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support drop user mapping statement yet") )); 
uaah: utility:00001146:  ereport(ERROR, 
uaah: utility:00001147:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter domain statement yet") )); 
uaah: utility:00001184:  elog(ERROR, "unrecognized alter domain type: %d", 
uaah: utility:00001185:  (int) stmt->subtype); 
uaah: utility:00001215:  ereport(ERROR, 
uaah: utility:00001216:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create aggregate statement yet") )); 
uaah: utility:00001225:  ereport(ERROR, 
uaah: utility:00001226:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create operator statement yet") )); 
uaah: utility:00001233:  ereport(ERROR, 
uaah: utility:00001234:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create type statement yet") )); 
uaah: utility:00001241:  ereport(ERROR, 
uaah: utility:00001242:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create protocol statement yet") )); 
uaah: utility:00001252:  elog(ERROR, "unrecognized define stmt type: %d", 
uaah: utility:00001253:  (int) stmt->kind); 
uaah: utility:00001262:  ereport(ERROR, 
uaah: utility:00001263:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create type yet") )); 
uaah: utility:00001282:  ereport(ERROR, 
uaah: utility:00001283:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create function statement yet") )); 
uaah: utility:00001291:  ereport(ERROR, 
uaah: utility:00001292:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter function statement yet") )); 
uaah: utility:00001300:  ereport(ERROR, 
uaah: utility:00001301:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create index statement yet") )); 
uaah: utility:00001334:  ereport(ERROR, 
uaah: utility:00001335:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create rule statement yet") )); 
uaah: utility:00001356:  ereport(ERROR, 
uaah: utility:00001357:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support remove function statement yet") )); 
uaah: utility:00001374:  elog(ERROR, "unrecognized object type: %d", 
uaah: utility:00001375:  (int) stmt->kind); 
uaah: utility:00001390:  ereport(ERROR, 
uaah: utility:00001391:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter database statement yet") )); 
uaah: utility:00001410:  ereport(ERROR, 
uaah: utility:00001411:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support notify statement yet") )); 
uaah: utility:00001416:  ereport(ERROR, ( 
uaah: utility:00001417:  errcode(ERRCODE_GP_COMMAND_ERROR), 
uaah: utility:00001418:  errmsg("Notify command cannot run in a function running on a segDB.") 
uaah: utility:00001419:  )); 
uaah: utility:00001427:  ereport(ERROR, 
uaah: utility:00001428:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support listen statement yet") )); 
uaah: utility:00001433:  ereport(ERROR, ( 
uaah: utility:00001434:  errcode(ERRCODE_GP_COMMAND_ERROR), 
uaah: utility:00001435:  errmsg("Listen command cannot run in a function running on a segDB.") 
uaah: utility:00001436:  )); 
uaah: utility:00001444:  ereport(ERROR, 
uaah: utility:00001445:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support unlisten statement yet") )); 
uaah: utility:00001450:  ereport(ERROR, ( 
uaah: utility:00001451:  errcode(ERRCODE_GP_COMMAND_ERROR), 
uaah: utility:00001452:  errmsg("Unlisten command cannot run in a function running on a segDB.") 
uaah: utility:00001453:  )); 
uaah: utility:00001461:  ereport(ERROR, 
uaah: utility:00001462:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support load statement yet") )); 
uaah: utility:00001484:  ereport(ERROR, 
uaah: utility:00001485:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support cluster statement yet") )); 
uaah: utility:00001585:  ereport(ERROR, 
uaah: utility:00001586:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create trigger statement yet") )); 
uaah: utility:00001600:  ereport(ERROR, 
uaah: utility:00001601:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support drop property statement yet") )); 
uaah: utility:00001621:  elog(ERROR, "unrecognized object type: %d", 
uaah: utility:00001622:  (int) stmt->removeType); 
uaah: utility:00001637:  ereport(ERROR, 
uaah: utility:00001638:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create plang statement yet") )); 
uaah: utility:00001646:  ereport(ERROR, 
uaah: utility:00001647:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support drop plang statement yet") )); 
uaah: utility:00001659:  ereport(ERROR, 
uaah: utility:00001660:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create domain statement yet") )); 
uaah: utility:00001678:  ereport(ERROR, 
uaah: utility:00001679:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter resource queue statement yet") )); 
uaah: utility:00001700:  ereport(ERROR, 
uaah: utility:00001701:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter role set statement yet") )); 
uaah: utility:00001723:  ereport(ERROR, 
uaah: utility:00001724:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support lock statement yet") )); 
uaah: utility:00001730:  ereport(ERROR, 
uaah: utility:00001731:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support constraints set statement yet") )); 
uaah: utility:00001738:  ereport(ERROR, 
uaah: utility:00001739:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
uaah: utility:00001740:  errmsg("must be superuser to do CHECKPOINT"))); 
uaah: utility:00001750:  ereport(ERROR, 
uaah: utility:00001751:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support reindex statement yet") )); 
uaah: utility:00001767:  elog(ERROR, "unrecognized object type: %d", 
uaah: utility:00001768:  (int) stmt->kind); 
uaah: utility:00001802:  ereport(ERROR, 
uaah: utility:00001803:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create conversion statement yet") )); 
uaah: utility:00001811:  ereport(ERROR, 
uaah: utility:00001812:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create cast statement yet") )); 
uaah: utility:00001818:  ereport(ERROR, 
uaah: utility:00001819:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support drop cast statement yet") )); 
uaah: utility:00001826:  ereport(ERROR, 
uaah: utility:00001827:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support create opclass statement yet") )); 
uaah: utility:00001833:  ereport(ERROR, 
uaah: utility:00001834:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support remove opclass statement yet") )); 
uaah: utility:00001840:  ereport(ERROR, 
uaah: utility:00001841:  (errcode(ERRCODE_CDB_FEATURE_NOT_YET), errmsg("Cannot support alter type statement yet") )); 
uaah: utility:00001852:  elog(ERROR, "unrecognized node type: %d", 
uaah: utility:00001853:  (int) nodeTag(parsetree)); 
uaah: utility:00002690:  elog(WARNING, "unrecognized commandType: %d", 
uaah: utility:00002691:  (int) query->commandType); 
uaah: utility:00002703:  elog(WARNING, "unrecognized node type: %d", 
uaah: utility:00002704:  (int) nodeTag(parsetree)); 
uaah: utility:00003069:  elog(WARNING, "unrecognized node type: %d", 
uaah: utility:00003070:  (int) nodeTag(parsetree)); 
uaah: utility:00003114:  elog(WARNING, "unrecognized commandType: %d", 
uaah: utility:00003115:  (int) parsetree->commandType); 
uaah: utility:00003140:  elog(WARNING, "into specified on utility statement type: %d", 
uaah: utility:00003141:  (int) stmt->utilityStmt->type); 
uaah: utility:00003143:  elog(WARNING, "unexpected utility statement type: %d", 
uaah: utility:00003144:  (int) stmt->utilityStmt->type); 
uaah: utility:00003160:  elog(WARNING, "expected commandType: %d", 
uaah: utility:00003161:  (int) stmt->commandType); 
aaaaa GP_IGNORE: aaad: acl - ./backend/utils/adt/acl.c
aaad: acl:00000156:  ereport(ERROR, 
aaad: acl:00000157:  (errcode(ERRCODE_NAME_TOO_LONG), 
aaad: acl:00000158:  errmsg("identifier too long"), 
aaad: acl:00000159:  errdetail("Identifier must be less than %d characters.", 
aaad: acl:00000160:  NAMEDATALEN))); 
aaad: acl:00000243:  ereport(ERROR, 
aaad: acl:00000244:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaad: acl:00000245:  errmsg("unrecognized key word: \"%s\"", name), 
aaad: acl:00000246:  errhint("ACL key word must be \"group\" or \"user\"."))); 
aaad: acl:00000249:  ereport(ERROR, 
aaad: acl:00000250:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaad: acl:00000251:  errmsg("missing name"), 
aaad: acl:00000252:  errhint("A name must follow the \"group\" or \"user\" key word."))); 
aaad: acl:00000256:  ereport(ERROR, 
aaad: acl:00000257:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaad: acl:00000258:  errmsg("missing \"=\" sign"))); 
aaad: acl:00000306:  ereport(ERROR, 
aaad: acl:00000307:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaad: acl:00000308:  errmsg("invalid mode character: must be one of \"%s\"", 
aaad: acl:00000309:  ACL_ALL_RIGHTS_STR))); 
aaad: acl:00000328:  ereport(ERROR, 
aaad: acl:00000329:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaad: acl:00000330:  errmsg("a name must follow the \"/\" sign"))); 
aaad: acl:00000336:  ereport(WARNING, 
aaad: acl:00000337:  (errcode(ERRCODE_INVALID_GRANTOR), 
aaad: acl:00000338:  errmsg("defaulting grantor to user ID %u", 
aaad: acl:00000339:  BOOTSTRAP_SUPERUSERID))); 
aaad: acl:00000366:  elog(ERROR, "invalid size: %d", n); 
aaad: acl:00000385:  ereport(ERROR, 
aaad: acl:00000386:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaad: acl:00000387:  errmsg("ACL array contains wrong data type"))); 
aaad: acl:00000389:  ereport(ERROR, 
aaad: acl:00000390:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaad: acl:00000391:  errmsg("ACL arrays must be one-dimensional"))); 
aaad: acl:00000393:  ereport(ERROR, 
aaad: acl:00000394:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
aaad: acl:00000395:  errmsg("ACL arrays must not contain null values"))); 
aaad: acl:00000417:  ereport(ERROR, 
aaad: acl:00000418:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaad: acl:00000419:  errmsg("extra garbage at the end of the ACL specification"))); 
aaad: acl:00000621:  elog(ERROR, "unrecognized objtype: %d", (int) objtype); 
aaad: acl:00000953:  ereport(ERROR, 
aaad: acl:00000954:  (errcode(ERRCODE_INVALID_GRANT_OPERATION), 
aaad: acl:00000955:  errmsg("grant options cannot be granted back to your own grantor"))); 
aaad: acl:00001014:  ereport(ERROR, 
aaad: acl:00001015:  (errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST), 
aaad: acl:00001016:  errmsg("dependent privileges exist"), 
aaad: acl:00001017:  errhint("Use CASCADE to revoke them too."), 
aaad: acl:00001018:  errOmitLocation(true))); 
aaad: acl:00001078:  elog(ERROR, "null ACL"); 
aaad: acl:00001166:  elog(ERROR, "null ACL"); 
aaad: acl:00001295:  ereport(ERROR, 
aaad: acl:00001296:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaad: acl:00001297:  errmsg("aclinsert is no longer supported"))); 
aaad: acl:00001305:  ereport(ERROR, 
aaad: acl:00001306:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaad: acl:00001307:  errmsg("aclremove is no longer supported"))); 
aaad: acl:00001392:  ereport(ERROR, 
aaad: acl:00001393:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaad: acl:00001394:  errmsg("unrecognized privilege type: \"%s\"", priv_type))); 
aaad: acl:00001445:  ereport(ERROR, 
aaad: acl:00001446:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaad: acl:00001447:  errmsg("unrecognized privilege type: \"%s\"", chunk))); 
aaad: acl:00001696:  ereport(ERROR, 
aaad: acl:00001697:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaad: acl:00001698:  errmsg("unrecognized privilege type: \"%s\"", priv_type))); 
aaad: acl:00001892:  ereport(ERROR, 
aaad: acl:00001893:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
aaad: acl:00001894:  errmsg("database \"%s\" does not exist", dbname))); 
aaad: acl:00001934:  ereport(ERROR, 
aaad: acl:00001935:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaad: acl:00001936:  errmsg("unrecognized privilege type: \"%s\"", priv_type))); 
aaad: acl:00002312:  ereport(ERROR, 
aaad: acl:00002313:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
aaad: acl:00002314:  errmsg("function \"%s\" does not exist", funcname), 
aaad: acl:00002315:  errOmitLocation(true))); 
aaad: acl:00002340:  ereport(ERROR, 
aaad: acl:00002341:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaad: acl:00002342:  errmsg("unrecognized privilege type: \"%s\"", priv_type))); 
aaad: acl:00002541:  ereport(ERROR, 
aaad: acl:00002542:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaad: acl:00002543:  errmsg("language \"%s\" does not exist", langname), 
aaad: acl:00002544:  errOmitLocation(true))); 
aaad: acl:00002569:  ereport(ERROR, 
aaad: acl:00002570:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaad: acl:00002571:  errmsg("unrecognized privilege type: \"%s\"", priv_type))); 
aaad: acl:00002770:  ereport(ERROR, 
aaad: acl:00002771:  (errcode(ERRCODE_UNDEFINED_SCHEMA), 
aaad: acl:00002772:  errmsg("schema \"%s\" does not exist", nspname), 
aaad: acl:00002773:  errOmitLocation(true))); 
aaad: acl:00002803:  ereport(ERROR, 
aaad: acl:00002804:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaad: acl:00002805:  errmsg("unrecognized privilege type: \"%s\"", priv_type))); 
aaad: acl:00003159:  ereport(ERROR, 
aaad: acl:00003160:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaad: acl:00003161:  errmsg("tablespace \"%s\" does not exist", spcname))); 
aaad: acl:00003186:  ereport(ERROR, 
aaad: acl:00003187:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaad: acl:00003188:  errmsg("unrecognized privilege type: \"%s\"", priv_type))); 
aaad: acl:00003377:  ereport(ERROR, 
aaad: acl:00003378:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaad: acl:00003379:  errmsg("unrecognized privilege type: \"%s\"", priv_type))); 
aaad: acl:00003701:  ereport(ERROR, 
aaad: acl:00003702:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
aaad: acl:00003703:  errmsg("must be member of role \"%s\"", 
aaad: acl:00003704:  GetUserNameFromId(role)), 
aaad: acl:00003705:  errOmitLocation(true))); 
aaaaa GP_IGNORE: aabf: arrayxuserfuncs - ./backend/utils/adt/array_userfuncs.c
aabf: arrayxuserfuncs:00000047:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000048:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aabf: arrayxuserfuncs:00000049:  errmsg("could not determine input data types"))); 
aabf: arrayxuserfuncs:00000081:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000082:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
aabf: arrayxuserfuncs:00000083:  errmsg("neither input type is an array"))); 
aabf: arrayxuserfuncs:00000102:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000103:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
aabf: arrayxuserfuncs:00000104:  errmsg("integer out of range"))); 
aabf: arrayxuserfuncs:00000112:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000113:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
aabf: arrayxuserfuncs:00000114:  errmsg("integer out of range"))); 
aabf: arrayxuserfuncs:00000120:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000121:  (errcode(ERRCODE_DATA_EXCEPTION), 
aabf: arrayxuserfuncs:00000122:  errmsg("argument must be empty or one-dimensional array"))); 
aabf: arrayxuserfuncs:00000223:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000224:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
aabf: arrayxuserfuncs:00000225:  errmsg("cannot concatenate incompatible arrays"), 
aabf: arrayxuserfuncs:00000226:  errdetail("Arrays with element types %s and %s are not " 
aabf: arrayxuserfuncs:00000227:  "compatible for concatenation.", 
aabf: arrayxuserfuncs:00000228:  format_type_be(element_type1), 
aabf: arrayxuserfuncs:00000229:  format_type_be(element_type2)))); 
aabf: arrayxuserfuncs:00000262:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000263:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aabf: arrayxuserfuncs:00000264:  errmsg("cannot concatenate incompatible arrays"), 
aabf: arrayxuserfuncs:00000265:  errdetail("Arrays of %d and %d dimensions are not " 
aabf: arrayxuserfuncs:00000266:  "compatible for concatenation.", 
aabf: arrayxuserfuncs:00000267:  ndims1, ndims2))); 
aabf: arrayxuserfuncs:00000299:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000300:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aabf: arrayxuserfuncs:00000301:  errmsg("cannot concatenate incompatible arrays"), 
aabf: arrayxuserfuncs:00000302:  errdetail("Arrays with differing element dimensions are " 
aabf: arrayxuserfuncs:00000303:  "not compatible for concatenation."))); 
aabf: arrayxuserfuncs:00000328:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000329:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aabf: arrayxuserfuncs:00000330:  errmsg("cannot concatenate incompatible arrays"), 
aabf: arrayxuserfuncs:00000331:  errdetail("Arrays with differing dimensions are not " 
aabf: arrayxuserfuncs:00000332:  "compatible for concatenation."))); 
aabf: arrayxuserfuncs:00000356:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000357:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aabf: arrayxuserfuncs:00000358:  errmsg("cannot concatenate incompatible arrays"), 
aabf: arrayxuserfuncs:00000359:  errdetail("Arrays with differing dimensions are not " 
aabf: arrayxuserfuncs:00000360:  "compatible for concatenation."))); 
aabf: arrayxuserfuncs:00000423:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000424:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aabf: arrayxuserfuncs:00000425:  errmsg("invalid number of dimensions: %d", ndims))); 
aabf: arrayxuserfuncs:00000427:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000428:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aabf: arrayxuserfuncs:00000429:  errmsg("number of array dimensions (%d) exceeds the maximum allowed (%d)", 
aabf: arrayxuserfuncs:00000430:  ndims, MAXDIM))); 
aabf: arrayxuserfuncs:00000483:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000484:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aabf: arrayxuserfuncs:00000485:  errmsg("could not determine input data type"))); 
aabf: arrayxuserfuncs:00000490:  elog(ERROR, "array_agg_transfn called in non-aggregate context"); 
aabf: arrayxuserfuncs:00000530:  elog(ERROR, "array_agg_finalfn called in non-aggregate context"); 
aabf: arrayxuserfuncs:00000609:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000610:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
aabf: arrayxuserfuncs:00000611:  errmsg("cannot add non-int arrays"), 
aabf: arrayxuserfuncs:00000612:  errdetail("Arrays with element types %s and %s are not " 
aabf: arrayxuserfuncs:00000613:  "compatible for array_add.", 
aabf: arrayxuserfuncs:00000614:  format_type_be(element_type1), 
aabf: arrayxuserfuncs:00000615:  format_type_be(element_type2)))); 
aabf: arrayxuserfuncs:00000644:  ereport(ERROR, 
aabf: arrayxuserfuncs:00000645:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aabf: arrayxuserfuncs:00000646:  errmsg("cannot add incompatible arrays"), 
aabf: arrayxuserfuncs:00000647:  errdetail("Arrays of %d and %d dimensions are not " 
aabf: arrayxuserfuncs:00000648:  "compatible for array_add.", 
aabf: arrayxuserfuncs:00000649:  ndims1, ndims2))); 
aaaaa GP_IGNORE: aaba: arrayfuncs - ./backend/utils/adt/arrayfuncs.c
aaba: arrayfuncs:00000206:  ereport(ERROR, 
aaba: arrayfuncs:00000207:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayfuncs:00000208:  errmsg("number of array dimensions (%d) exceeds the maximum allowed (%d)", 
aaba: arrayfuncs:00000209:  ndim, MAXDIM))); 
aaba: arrayfuncs:00000213:  ereport(ERROR, 
aaba: arrayfuncs:00000214:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000215:  errmsg("missing dimension value"))); 
aaba: arrayfuncs:00000225:  ereport(ERROR, 
aaba: arrayfuncs:00000226:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000227:  errmsg("missing dimension value"))); 
aaba: arrayfuncs:00000235:  ereport(ERROR, 
aaba: arrayfuncs:00000236:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000237:  errmsg("missing \"]\" in array dimensions"))); 
aaba: arrayfuncs:00000243:  ereport(ERROR, 
aaba: arrayfuncs:00000244:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00000245:  errmsg("upper bound cannot be less than lower bound"))); 
aaba: arrayfuncs:00000255:  ereport(ERROR, 
aaba: arrayfuncs:00000256:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000257:  errmsg("array value must start with \"{\" or dimension information"))); 
aaba: arrayfuncs:00000269:  ereport(ERROR, 
aaba: arrayfuncs:00000270:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000271:  errmsg("missing assignment operator"))); 
aaba: arrayfuncs:00000281:  ereport(ERROR, 
aaba: arrayfuncs:00000282:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000283:  errmsg("array value must start with \"{\" or dimension information"))); 
aaba: arrayfuncs:00000286:  ereport(ERROR, 
aaba: arrayfuncs:00000287:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000288:  errmsg("array dimensions incompatible with array literal"))); 
aaba: arrayfuncs:00000292:  ereport(ERROR, 
aaba: arrayfuncs:00000293:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000294:  errmsg("array dimensions incompatible with array literal"))); 
aaba: arrayfuncs:00000395:  ereport(ERROR, 
aaba: arrayfuncs:00000396:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000397:  errmsg("malformed array literal: \"%s\"", str))); 
aaba: arrayfuncs:00000410:  ereport(ERROR, 
aaba: arrayfuncs:00000411:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000412:  errmsg("malformed array literal: \"%s\"", str))); 
aaba: arrayfuncs:00000419:  ereport(ERROR, 
aaba: arrayfuncs:00000420:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000421:  errmsg("malformed array literal: \"%s\"", str))); 
aaba: arrayfuncs:00000433:  ereport(ERROR, 
aaba: arrayfuncs:00000434:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000435:  errmsg("malformed array literal: \"%s\"", str))); 
aaba: arrayfuncs:00000453:  ereport(ERROR, 
aaba: arrayfuncs:00000454:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000455:  errmsg("malformed array literal: \"%s\"", str))); 
aaba: arrayfuncs:00000458:  ereport(ERROR, 
aaba: arrayfuncs:00000459:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayfuncs:00000460:  errmsg("number of array dimensions (%d) exceeds the maximum allowed (%d)", 
aaba: arrayfuncs:00000461:  nest_level, MAXDIM))); 
aaba: arrayfuncs:00000481:  ereport(ERROR, 
aaba: arrayfuncs:00000482:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000483:  errmsg("malformed array literal: \"%s\"", str))); 
aaba: arrayfuncs:00000486:  ereport(ERROR, 
aaba: arrayfuncs:00000487:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000488:  errmsg("malformed array literal: \"%s\"", str))); 
aaba: arrayfuncs:00000493:  ereport(ERROR, 
aaba: arrayfuncs:00000494:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000495:  errmsg("multidimensional arrays must have " 
aaba: arrayfuncs:00000496:  "array expressions with matching " 
aaba: arrayfuncs:00000497:  "dimensions"))); 
aaba: arrayfuncs:00000526:  ereport(ERROR, 
aaba: arrayfuncs:00000527:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000528:  errmsg("malformed array literal: \"%s\"", str))); 
aaba: arrayfuncs:00000547:  ereport(ERROR, 
aaba: arrayfuncs:00000548:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000549:  errmsg("malformed array literal: \"%s\"", str))); 
aaba: arrayfuncs:00000566:  ereport(ERROR, 
aaba: arrayfuncs:00000567:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000568:  errmsg("malformed array literal: \"%s\"", str))); 
aaba: arrayfuncs:00000676:  ereport(ERROR, 
aaba: arrayfuncs:00000677:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000678:  errmsg("malformed array literal: \"%s\"", 
aaba: arrayfuncs:00000679:  origStr))); 
aaba: arrayfuncs:00000685:  ereport(ERROR, 
aaba: arrayfuncs:00000686:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000687:  errmsg("malformed array literal: \"%s\"", 
aaba: arrayfuncs:00000688:  origStr))); 
aaba: arrayfuncs:00000715:  ereport(ERROR, 
aaba: arrayfuncs:00000716:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000717:  errmsg("malformed array literal: \"%s\"", 
aaba: arrayfuncs:00000718:  origStr))); 
aaba: arrayfuncs:00000730:  ereport(ERROR, 
aaba: arrayfuncs:00000731:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000732:  errmsg("malformed array literal: \"%s\"", 
aaba: arrayfuncs:00000733:  origStr))); 
aaba: arrayfuncs:00000783:  ereport(ERROR, 
aaba: arrayfuncs:00000784:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
aaba: arrayfuncs:00000785:  errmsg("malformed array literal: \"%s\"", 
aaba: arrayfuncs:00000786:  origStr))); 
aaba: arrayfuncs:00000822:  ereport(ERROR, 
aaba: arrayfuncs:00000823:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayfuncs:00000824:  errmsg("array size exceeds the maximum allowed (%d)", 
aaba: arrayfuncs:00000825:  (int) MaxAllocSize))); 
aaba: arrayfuncs:00000872:  elog(ERROR, "null array element where not supported"); 
aaba: arrayfuncs:00001189:  ereport(ERROR, 
aaba: arrayfuncs:00001190:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
aaba: arrayfuncs:00001191:  errmsg("invalid number of dimensions: %d", ndim))); 
aaba: arrayfuncs:00001193:  ereport(ERROR, 
aaba: arrayfuncs:00001194:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayfuncs:00001195:  errmsg("number of array dimensions (%d) exceeds the maximum allowed (%d)", 
aaba: arrayfuncs:00001196:  ndim, MAXDIM))); 
aaba: arrayfuncs:00001200:  ereport(ERROR, 
aaba: arrayfuncs:00001201:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
aaba: arrayfuncs:00001202:  errmsg("invalid array flags"))); 
aaba: arrayfuncs:00001208:  ereport(ERROR, 
aaba: arrayfuncs:00001209:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
aaba: arrayfuncs:00001210:  errmsg("wrong element type"))); 
aaba: arrayfuncs:00001244:  ereport(ERROR, 
aaba: arrayfuncs:00001245:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
aaba: arrayfuncs:00001246:  errmsg("no binary input function available for type %s", 
aaba: arrayfuncs:00001247:  format_type_be(element_type)))); 
aaba: arrayfuncs:00001348:  ereport(ERROR, 
aaba: arrayfuncs:00001349:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
aaba: arrayfuncs:00001350:  errmsg("insufficient data left in message"))); 
aaba: arrayfuncs:00001384:  ereport(ERROR, 
aaba: arrayfuncs:00001385:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
aaba: arrayfuncs:00001386:  errmsg("improper binary format in array element %d", 
aaba: arrayfuncs:00001387:  i + 1))); 
aaba: arrayfuncs:00001410:  ereport(ERROR, 
aaba: arrayfuncs:00001411:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayfuncs:00001412:  errmsg("array size exceeds the maximum allowed (%d)", 
aaba: arrayfuncs:00001413:  (int) MaxAllocSize))); 
aaba: arrayfuncs:00001466:  ereport(ERROR, 
aaba: arrayfuncs:00001467:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
aaba: arrayfuncs:00001468:  errmsg("no binary output function available for type %s", 
aaba: arrayfuncs:00001469:  format_type_be(element_type)))); 
aaba: arrayfuncs:00001840:  ereport(ERROR, 
aaba: arrayfuncs:00001841:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaba: arrayfuncs:00001842:  errmsg("slices of fixed-length arrays not implemented"))); 
aaba: arrayfuncs:00002013:  ereport(ERROR, 
aaba: arrayfuncs:00002014:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00002015:  errmsg("wrong number of array subscripts"))); 
aaba: arrayfuncs:00002018:  ereport(ERROR, 
aaba: arrayfuncs:00002019:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00002020:  errmsg("array subscript out of range"))); 
aaba: arrayfuncs:00002023:  ereport(ERROR, 
aaba: arrayfuncs:00002024:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
aaba: arrayfuncs:00002025:  errmsg("cannot assign null value to an element of a fixed-length array"))); 
aaba: arrayfuncs:00002035:  ereport(ERROR, 
aaba: arrayfuncs:00002036:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00002037:  errmsg("wrong number of array subscripts"))); 
aaba: arrayfuncs:00002069:  ereport(ERROR, 
aaba: arrayfuncs:00002070:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00002071:  errmsg("wrong number of array subscripts"))); 
aaba: arrayfuncs:00002111:  ereport(ERROR, 
aaba: arrayfuncs:00002112:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00002113:  errmsg("array subscript out of range"))); 
aaba: arrayfuncs:00002309:  ereport(ERROR, 
aaba: arrayfuncs:00002310:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaba: arrayfuncs:00002311:  errmsg("updates on slices of fixed-length arrays not implemented"))); 
aaba: arrayfuncs:00002345:  ereport(ERROR, 
aaba: arrayfuncs:00002346:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00002347:  errmsg("source array too small"))); 
aaba: arrayfuncs:00002355:  ereport(ERROR, 
aaba: arrayfuncs:00002356:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00002357:  errmsg("wrong number of array subscripts"))); 
aaba: arrayfuncs:00002373:  ereport(ERROR, 
aaba: arrayfuncs:00002374:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00002375:  errmsg("upper bound cannot be less than lower bound"))); 
aaba: arrayfuncs:00002401:  ereport(ERROR, 
aaba: arrayfuncs:00002402:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00002403:  errmsg("upper bound cannot be less than lower bound"))); 
aaba: arrayfuncs:00002406:  ereport(ERROR, 
aaba: arrayfuncs:00002407:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00002408:  errmsg("array subscript out of range"))); 
aaba: arrayfuncs:00002416:  ereport(ERROR, 
aaba: arrayfuncs:00002417:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00002418:  errmsg("upper bound cannot be less than lower bound"))); 
aaba: arrayfuncs:00002432:  ereport(ERROR, 
aaba: arrayfuncs:00002433:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00002434:  errmsg("source array too small"))); 
aaba: arrayfuncs:00002612:  elog(ERROR, "invalid nargs: %d", fcinfo->nargs); 
aaba: arrayfuncs:00002614:  elog(ERROR, "null input array"); 
aaba: arrayfuncs:00002728:  ereport(ERROR, 
aaba: arrayfuncs:00002729:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayfuncs:00002730:  errmsg("array size exceeds the maximum allowed (%d)", 
aaba: arrayfuncs:00002731:  (int) MaxAllocSize))); 
aaba: arrayfuncs:00002850:  ereport(ERROR, 
aaba: arrayfuncs:00002851:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaba: arrayfuncs:00002852:  errmsg("invalid number of dimensions: %d", ndims))); 
aaba: arrayfuncs:00002854:  ereport(ERROR, 
aaba: arrayfuncs:00002855:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayfuncs:00002856:  errmsg("number of array dimensions (%d) exceeds the maximum allowed (%d)", 
aaba: arrayfuncs:00002857:  ndims, MAXDIM))); 
aaba: arrayfuncs:00002917:  ereport(ERROR, 
aaba: arrayfuncs:00002918:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayfuncs:00002919:  errmsg("array size exceeds the maximum allowed (%d)", 
aaba: arrayfuncs:00002920:  (int) MaxAllocSize))); 
aaba: arrayfuncs:00003032:  ereport(ERROR, 
aaba: arrayfuncs:00003033:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
aaba: arrayfuncs:00003034:  errmsg("null array element not allowed in this context"))); 
aaba: arrayfuncs:00003093:  ereport(ERROR, 
aaba: arrayfuncs:00003094:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
aaba: arrayfuncs:00003095:  errmsg("cannot compare arrays of different element types"))); 
aaba: arrayfuncs:00003116:  ereport(ERROR, 
aaba: arrayfuncs:00003117:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
aaba: arrayfuncs:00003118:  errmsg("could not identify an equality operator for type %s", 
aaba: arrayfuncs:00003119:  format_type_be(element_type)))); 
aaba: arrayfuncs:00003300:  ereport(ERROR, 
aaba: arrayfuncs:00003301:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
aaba: arrayfuncs:00003302:  errmsg("cannot compare arrays of different element types"))); 
aaba: arrayfuncs:00003317:  ereport(ERROR, 
aaba: arrayfuncs:00003318:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
aaba: arrayfuncs:00003319:  errmsg("could not identify a comparison function for type %s", 
aaba: arrayfuncs:00003320:  format_type_be(element_type)))); 
aaba: arrayfuncs:00003500:  ereport(ERROR, 
aaba: arrayfuncs:00003501:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
aaba: arrayfuncs:00003502:  errmsg("cannot compare arrays of different element types"))); 
aaba: arrayfuncs:00003517:  ereport(ERROR, 
aaba: arrayfuncs:00003518:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
aaba: arrayfuncs:00003519:  errmsg("could not identify an equality operator for type %s", 
aaba: arrayfuncs:00003520:  format_type_be(element_type)))); 
aaba: arrayfuncs:00004251:  ereport(ERROR, 
aaba: arrayfuncs:00004252:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaba: arrayfuncs:00004253:  errmsg("could not determine target array type"))); 
aaba: arrayfuncs:00004257:  ereport(ERROR, 
aaba: arrayfuncs:00004258:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaba: arrayfuncs:00004259:  errmsg("target type is not an array"))); 
aaba: arrayfuncs:00004269:  ereport(ERROR, 
aaba: arrayfuncs:00004270:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaba: arrayfuncs:00004271:  errmsg("array coercion to domain type elements not " 
aaba: arrayfuncs:00004272:  "currently supported"))); 
aaba: arrayfuncs:00004278:  elog(ERROR, "no conversion function from %s to %s", 
aaba: arrayfuncs:00004279:  format_type_be(src_elem_type), 
aaba: arrayfuncs:00004280:  format_type_be(tgt_elem_type)); 
aaba: arrayfuncs:00004667:  ereport(ERROR, 
aaba: arrayfuncs:00004668:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
aaba: arrayfuncs:00004669:  errmsg("dimension array or low bound array cannot be NULL"))); 
aaba: arrayfuncs:00004687:  elog(ERROR, "could not determine data type of input"); 
aaba: arrayfuncs:00004707:  ereport(ERROR, 
aaba: arrayfuncs:00004708:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
aaba: arrayfuncs:00004709:  errmsg("dimension array or low bound array cannot be NULL"))); 
aaba: arrayfuncs:00004726:  elog(ERROR, "could not determine data type of input"); 
aaba: arrayfuncs:00004769:  ereport(ERROR, 
aaba: arrayfuncs:00004770:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00004771:  errmsg("wrong number of array subscripts"), 
aaba: arrayfuncs:00004772:  errdetail("Dimension array must be one dimensional."))); 
aaba: arrayfuncs:00004775:  ereport(ERROR, 
aaba: arrayfuncs:00004776:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00004777:  errmsg("wrong range of array subscripts"), 
aaba: arrayfuncs:00004778:  errdetail("Lower bound of dimension array must be one."))); 
aaba: arrayfuncs:00004781:  ereport(ERROR, 
aaba: arrayfuncs:00004782:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
aaba: arrayfuncs:00004783:  errmsg("dimension values cannot be null"))); 
aaba: arrayfuncs:00004789:  ereport(ERROR, 
aaba: arrayfuncs:00004790:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
aaba: arrayfuncs:00004791:  errmsg("invalid number of dimensions: %d", ndims))); 
aaba: arrayfuncs:00004793:  ereport(ERROR, 
aaba: arrayfuncs:00004794:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayfuncs:00004795:  errmsg("number of array dimensions (%d) exceeds the maximum allowed (%d)", 
aaba: arrayfuncs:00004796:  ndims, MAXDIM))); 
aaba: arrayfuncs:00004801:  ereport(ERROR, 
aaba: arrayfuncs:00004802:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00004803:  errmsg("wrong number of array subscripts"), 
aaba: arrayfuncs:00004804:  errdetail("Dimension array must be one dimensional."))); 
aaba: arrayfuncs:00004807:  ereport(ERROR, 
aaba: arrayfuncs:00004808:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00004809:  errmsg("wrong range of array subscripts"), 
aaba: arrayfuncs:00004810:  errdetail("Lower bound of dimension array must be one."))); 
aaba: arrayfuncs:00004813:  ereport(ERROR, 
aaba: arrayfuncs:00004814:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
aaba: arrayfuncs:00004815:  errmsg("dimension values cannot be null"))); 
aaba: arrayfuncs:00004818:  ereport(ERROR, 
aaba: arrayfuncs:00004819:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayfuncs:00004820:  errmsg("wrong number of array subscripts"), 
aaba: arrayfuncs:00004821:  errdetail("Low bound array has different size than dimensions array."))); 
aaba: arrayfuncs:00004889:  ereport(ERROR, 
aaba: arrayfuncs:00004890:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayfuncs:00004891:  errmsg("array size exceeds the maximum allowed (%d)", 
aaba: arrayfuncs:00004892:  (int) MaxAllocSize))); 
aaaaa GP_IGNORE: aaba: arrayutils - ./backend/utils/adt/arrayutils.c
aaba: arrayutils:00000091:  ereport(ERROR, 
aaba: arrayutils:00000092:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayutils:00000093:  errmsg("array size exceeds the maximum allowed (%d)", 
aaba: arrayutils:00000094:  (int) MaxArraySize))); 
aaba: arrayutils:00000100:  ereport(ERROR, 
aaba: arrayutils:00000101:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayutils:00000102:  errmsg("array size exceeds the maximum allowed (%d)", 
aaba: arrayutils:00000103:  (int) MaxArraySize))); 
aaba: arrayutils:00000107:  ereport(ERROR, 
aaba: arrayutils:00000108:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
aaba: arrayutils:00000109:  errmsg("array size exceeds the maximum allowed (%d)", 
aaba: arrayutils:00000110:  (int) MaxArraySize))); 
aaba: arrayutils:00000207:  ereport(ERROR, 
aaba: arrayutils:00000208:  (errcode(ERRCODE_ARRAY_ELEMENT_ERROR), 
aaba: arrayutils:00000209:  errmsg("typmod array must be type cstring[]"))); 
aaba: arrayutils:00000212:  ereport(ERROR, 
aaba: arrayutils:00000213:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
aaba: arrayutils:00000214:  errmsg("typmod array must be one-dimensional"))); 
aaba: arrayutils:00000217:  ereport(ERROR, 
aaba: arrayutils:00000218:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
aaba: arrayutils:00000219:  errmsg("typmod array must not contain nulls"))); 
aaaaa GP_IGNORE: aaaf: ascii - ./backend/utils/adt/ascii.c
aaaf: ascii:00000073:  ereport(ERROR, 
aaaf: ascii:00000074:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
aaaf: ascii:00000075:  errmsg("encoding conversion from %s to ASCII not supported", 
aaaf: ascii:00000076:  pg_encoding_to_char(enc)))); 
aaaf: ascii:00000124:  ereport(ERROR, 
aaaf: ascii:00000125:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaaf: ascii:00000126:  errmsg("%s is not a valid encoding name", encname))); 
aaaf: ascii:00000142:  ereport(ERROR, 
aaaf: ascii:00000143:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaaf: ascii:00000144:  errmsg("%d is not a valid encoding code", enc))); 
aaaaa GP_IGNORE: baae: bool - ./backend/utils/adt/bool.c
baae: bool:00000093:  ereport(ERROR, 
baae: bool:00000094:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
baae: bool:00000095:  errmsg("invalid input syntax for type boolean: \"%s\"", in_str), 
baae: bool:00000096:  errOmitLocation(true))); 
aaaaa GP_IGNORE: caae: cash - ./backend/utils/adt/cash.c
caae: cash:00000194:  ereport(ERROR, 
caae: cash:00000195:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
caae: cash:00000196:  errmsg("invalid input syntax for type money: \"%s\"", str))); 
caae: cash:00000485:  ereport(ERROR, 
caae: cash:00000486:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
caae: cash:00000487:  errmsg("division by zero"))); 
caae: cash:00000537:  ereport(ERROR, 
caae: cash:00000538:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
caae: cash:00000539:  errmsg("division by zero"))); 
caae: cash:00000590:  ereport(ERROR, 
caae: cash:00000591:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
caae: cash:00000592:  errmsg("division by zero"))); 
caae: cash:00000642:  ereport(ERROR, 
caae: cash:00000643:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
caae: cash:00000644:  errmsg("division by zero"))); 
aaaaa GP_IGNORE: caae: char - ./backend/utils/adt/char.c
caae: char:00000167:  ereport(ERROR, 
caae: char:00000168:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
caae: char:00000169:  errmsg("\"char\" out of range"))); 
aaaaa GP_IGNORE: daae: date - ./backend/utils/adt/date.c
daae: date:00000083:  ereport(ERROR, 
daae: date:00000084:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
daae: date:00000085:  errmsg("date/time value \"current\" is no longer supported"))); 
daae: date:00000100:  ereport(ERROR, 
daae: date:00000101:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
daae: date:00000102:  errmsg("date out of range: \"%s\"", str))); 
daae: date:00000294:  ereport(ERROR, 
daae: date:00000295:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
daae: date:00000296:  errmsg("date out of range for timestamp"))); 
daae: date:00000325:  ereport(ERROR, 
daae: date:00000326:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
daae: date:00000327:  errmsg("date out of range for timestamp"))); 
daae: date:00000748:  ereport(ERROR, 
daae: date:00000749:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
daae: date:00000750:  errmsg("timestamp out of range"))); 
daae: date:00000791:  ereport(ERROR, 
daae: date:00000792:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
daae: date:00000793:  errmsg("timestamp out of range"))); 
daae: date:00000818:  ereport(ERROR, 
daae: date:00000819:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
daae: date:00000820:  errmsg("cannot convert reserved abstime value to date"))); 
daae: date:00000879:  ereport(ERROR, 
daae: date:00000880:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
daae: date:00000881:  errmsg("invalid input syntax for type date: \"%s\"", 
daae: date:00000882:  DatumGetCString(DirectFunctionCall1(textout, 
daae: date:00000883:  PointerGetDatum(str)))))); 
daae: date:00001378:  ereport(ERROR, 
daae: date:00001379:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
daae: date:00001380:  errmsg("timestamp out of range"))); 
daae: date:00001415:  ereport(ERROR, 
daae: date:00001416:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
daae: date:00001417:  errmsg("timestamp out of range"))); 
daae: date:00001622:  ereport(ERROR, 
daae: date:00001623:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
daae: date:00001624:  errmsg("invalid input syntax for type time: \"%s\"", 
daae: date:00001625:  DatumGetCString(DirectFunctionCall1(textout, 
daae: date:00001626:  PointerGetDatum(str)))))); 
daae: date:00001714:  ereport(ERROR, 
daae: date:00001715:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
daae: date:00001716:  errmsg("\"time\" units \"%s\" not recognized", 
daae: date:00001717:  DatumGetCString(DirectFunctionCall1(textout, 
daae: date:00001718:  PointerGetDatum(units)))))); 
daae: date:00001733:  ereport(ERROR, 
daae: date:00001734:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
daae: date:00001735:  errmsg("\"time\" units \"%s\" not recognized", 
daae: date:00001736:  DatumGetCString(DirectFunctionCall1(textout, 
daae: date:00001737:  PointerGetDatum(units)))))); 
daae: date:00002315:  ereport(ERROR, 
daae: date:00002316:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
daae: date:00002317:  errmsg("timestamp out of range"))); 
daae: date:00002392:  ereport(ERROR, 
daae: date:00002393:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
daae: date:00002394:  errmsg("invalid input syntax for type time with time zone: \"%s\"", 
daae: date:00002395:  DatumGetCString(DirectFunctionCall1(textout, 
daae: date:00002396:  PointerGetDatum(str)))))); 
daae: date:00002498:  ereport(ERROR, 
daae: date:00002499:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
daae: date:00002500:  errmsg("\"time with time zone\" units \"%s\" not recognized", 
daae: date:00002501:  DatumGetCString(DirectFunctionCall1(textout, 
daae: date:00002502:  PointerGetDatum(units)))))); 
daae: date:00002517:  ereport(ERROR, 
daae: date:00002518:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
daae: date:00002519:  errmsg("\"time with time zone\" units \"%s\" not recognized", 
daae: date:00002520:  DatumGetCString(DirectFunctionCall1(textout, 
daae: date:00002521:  PointerGetDatum(units)))))); 
daae: date:00002579:  ereport(ERROR, 
daae: date:00002580:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
daae: date:00002581:  errmsg("time zone \"%s\" not recognized", tzname))); 
daae: date:00002619:  ereport(ERROR, 
daae: date:00002620:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
daae: date:00002621:  errmsg("\"interval\" time zone \"%s\" not valid", 
daae: date:00002622:  DatumGetCString(DirectFunctionCall1(interval_out, 
daae: date:00002623:  PointerGetDatum(zone)))))); 
aaaaa GP_IGNORE: daai: datetime - ./backend/utils/adt/datetime.c
daai: datetime:00000995:  ereport(ERROR, 
daai: datetime:00000996:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
daai: datetime:00000997:  errmsg("time zone \"%s\" not recognized", 
daai: datetime:00000998:  field[i]), 
daai: datetime:00000999:  errOmitLocation(true))); 
daai: datetime:00001255:  ereport(ERROR, 
daai: datetime:00001256:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
daai: datetime:00001257:  errmsg("date/time value \"current\" is no longer supported"), 
daai: datetime:00001258:  errOmitLocation(true))); 
daai: datetime:00001732:  ereport(ERROR, 
daai: datetime:00001733:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
daai: datetime:00001734:  errmsg("time zone \"%s\" not recognized", 
daai: datetime:00001735:  field[i]), 
daai: datetime:00001736:  errOmitLocation(true))); 
daai: datetime:00002002:  ereport(ERROR, 
daai: datetime:00002003:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
daai: datetime:00002004:  errmsg("date/time value \"current\" is no longer supported"))); 
daai: datetime:00003618:  ereport(ERROR, 
daai: datetime:00003619:  (errcode(ERRCODE_DATETIME_FIELD_OVERFLOW), 
daai: datetime:00003620:  errmsg("date/time field value out of range: \"%s\"", 
daai: datetime:00003621:  str), 
daai: datetime:00003622:  errOmitLocation(true))); 
daai: datetime:00003626:  ereport(ERROR, 
daai: datetime:00003627:  (errcode(ERRCODE_DATETIME_FIELD_OVERFLOW), 
daai: datetime:00003628:  errmsg("date/time field value out of range: \"%s\"", 
daai: datetime:00003629:  str), 
daai: datetime:00003630:  errhint("Perhaps you need a different \"datestyle\" setting."), 
daai: datetime:00003631:  errOmitLocation(true))); 
daai: datetime:00003634:  ereport(ERROR, 
daai: datetime:00003635:  (errcode(ERRCODE_INTERVAL_FIELD_OVERFLOW), 
daai: datetime:00003636:  errmsg("interval field value out of range: \"%s\"", 
daai: datetime:00003637:  str), 
daai: datetime:00003638:  errOmitLocation(true))); 
daai: datetime:00003641:  ereport(ERROR, 
daai: datetime:00003642:  (errcode(ERRCODE_INVALID_TIME_ZONE_DISPLACEMENT_VALUE), 
daai: datetime:00003643:  errmsg("time zone displacement out of range: \"%s\"", 
daai: datetime:00003644:  str), 
daai: datetime:00003645:  errOmitLocation(true))); 
daai: datetime:00003649:  ereport(ERROR, 
daai: datetime:00003650:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
daai: datetime:00003651:  errmsg("invalid input syntax for type %s: \"%s\"", 
daai: datetime:00003652:  datatype, str), 
daai: datetime:00003653:  errOmitLocation(true))); 
aaaaa GP_IGNORE: daaf: datum - ./backend/utils/adt/datum.c
daaf: datum:00000078:  ereport(ERROR, 
daaf: datum:00000079:  (errcode(ERRCODE_DATA_EXCEPTION), 
daaf: datum:00000080:  errmsg("invalid Datum pointer"))); 
daaf: datum:00000090:  ereport(ERROR, 
daaf: datum:00000091:  (errcode(ERRCODE_DATA_EXCEPTION), 
daaf: datum:00000092:  errmsg("invalid Datum pointer"))); 
daaf: datum:00000098:  elog(ERROR, "invalid typLen: %d", typLen); 
aaaaa GP_IGNORE: daag: dbsize - ./backend/utils/adt/dbsize.c
daag: dbsize:00000101:  elog(ERROR, "Unable to get sizes from segments"); 
daag: dbsize:00000147:  ereport(ERROR, 
daag: dbsize:00000148:  (errcode_for_file_access(), 
daag: dbsize:00000149:  errmsg("could not stat file \"%s\": %m", filename))); 
daag: dbsize:00000209:  ereport(ERROR, 
daag: dbsize:00000210:  (ERRCODE_UNDEFINED_DATABASE, 
daag: dbsize:00000211:  errmsg("database with OID %u does not exist", dbOid))); 
daag: dbsize:00000222:  ereport(ERROR, 
daag: dbsize:00000223:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
daag: dbsize:00000224:  errmsg("pg_database_size function not supported"), 
daag: dbsize:00000225:  errOmitLocation(true))); 
daag: dbsize:00000250:  ereport(ERROR, 
daag: dbsize:00000251:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
daag: dbsize:00000252:  errmsg("pg_database_size function not supported"), 
daag: dbsize:00000253:  errOmitLocation(true))); 
daag: dbsize:00000256:  ereport(ERROR, 
daag: dbsize:00000257:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
daag: dbsize:00000258:  errmsg("database \"%s\" does not exist", 
daag: dbsize:00000259:  NameStr(*dbName)))); 
daag: dbsize:00000315:  ereport(ERROR, 
daag: dbsize:00000316:  (errcode_for_file_access(), 
daag: dbsize:00000317:  errmsg("could not open tablespace directory \"%s\": %m", 
daag: dbsize:00000318:  tblspcPath))); 
daag: dbsize:00000335:  ereport(ERROR, 
daag: dbsize:00000336:  (errcode_for_file_access(), 
daag: dbsize:00000337:  errmsg("could not stat file \"%s\": %m", pathname))); 
daag: dbsize:00000381:  ereport(ERROR, 
daag: dbsize:00000382:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
daag: dbsize:00000383:  errmsg("tablespace \"%s\" does not exist", 
daag: dbsize:00000384:  NameStr(*tblspcName)))); 
daag: dbsize:00000443:  ereport(ERROR, (errcode_for_file_access(), 
daag: dbsize:00000444:  errmsg("could not stat file %s: %m", pathname) 
daag: dbsize:00000445:  )); 
daag: dbsize:00000468:  ereport(ERROR, 
daag: dbsize:00000469:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
daag: dbsize:00000470:  errmsg("pg_relation_size: cannot be executed in segment"))); 
daag: dbsize:00000495:  ereport(ERROR, 
daag: dbsize:00000496:  (errcode(ERRCODE_GP_COMMAND_ERROR), 
daag: dbsize:00000497:  errmsg("pg_relation_size: cannot be executed in segment"))); 
daag: dbsize:00000602:  elog(ERROR, "Cannot find schema for oid %d", relOid); 
daag: dbsize:00000608:  elog(ERROR, "Cannot find relation for oid %d", relOid); 
aaaaa GP_IGNORE: daah: domains - ./backend/utils/adt/domains.c
daah: domains:00000077:  ereport(ERROR, 
daah: domains:00000078:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
daah: domains:00000079:  errmsg("type %s is not a domain", 
daah: domains:00000080:  format_type_be(domainType)))); 
daah: domains:00000125:  ereport(ERROR, 
daah: domains:00000126:  (errcode(ERRCODE_NOT_NULL_VIOLATION), 
daah: domains:00000127:  errmsg("domain %s does not allow null values", 
daah: domains:00000128:  format_type_be(my_extra->domain_type)))); 
daah: domains:00000161:  ereport(ERROR, 
daah: domains:00000162:  (errcode(ERRCODE_CHECK_VIOLATION), 
daah: domains:00000163:  errmsg("value for domain %s violates check constraint \"%s\"", 
daah: domains:00000164:  format_type_be(my_extra->domain_type), 
daah: domains:00000165:  con->name))); 
daah: domains:00000169:  elog(ERROR, "unrecognized constraint type: %d", 
daah: domains:00000170:  (int) con->constrainttype); 
aaaaa GP_IGNORE: eaag: encode - ./backend/utils/adt/encode.c
eaag: encode:00000053:  ereport(ERROR, 
eaag: encode:00000054:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
eaag: encode:00000055:  errmsg("unrecognized encoding: \"%s\"", namebuf))); 
eaag: encode:00000064:  elog(FATAL, "overflow - encode estimate too small"); 
eaag: encode:00000089:  ereport(ERROR, 
eaag: encode:00000090:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
eaag: encode:00000091:  errmsg("unrecognized encoding: \"%s\"", namebuf))); 
eaag: encode:00000100:  elog(FATAL, "overflow - decode estimate too small"); 
eaag: encode:00000148:  ereport(ERROR, 
eaag: encode:00000149:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
eaag: encode:00000150:  errmsg("invalid hexadecimal digit: \"%c\"", c))); 
eaag: encode:00000176:  ereport(ERROR, 
eaag: encode:00000177:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
eaag: encode:00000178:  errmsg("invalid hexadecimal data: odd number of digits"))); 
eaag: encode:00000293:  ereport(ERROR, 
eaag: encode:00000294:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
eaag: encode:00000295:  errmsg("unexpected \"=\""))); 
eaag: encode:00000305:  ereport(ERROR, 
eaag: encode:00000306:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
eaag: encode:00000307:  errmsg("invalid symbol"))); 
eaag: encode:00000325:  ereport(ERROR, 
eaag: encode:00000326:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
eaag: encode:00000327:  errmsg("invalid end sequence"))); 
eaag: encode:00000439:  ereport(ERROR, 
eaag: encode:00000440:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
eaag: encode:00000441:  errmsg("invalid input syntax for type bytea"))); 
eaag: encode:00000504:  ereport(ERROR, 
eaag: encode:00000505:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
eaag: encode:00000506:  errmsg("invalid input syntax for type bytea"))); 
aaaaa GP_IGNORE: faaf: float - ./backend/utils/adt/float.c
faaf: float:00000052:  ereport(ERROR, \ 
faaf: float:00000053:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), \ 
faaf: float:00000054:  errmsg("value out of range: overflow"),errOmitLocation(true))); \ 
faaf: float:00000055:  \ 
faaf: float:00000056:  if ((val) == 0.0 && !(zero_is_valid)) \ 
faaf: float:00000057:  ereport(ERROR, \ 
faaf: float:00000058:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), \ 
faaf: float:00000059:  errmsg("value out of range: underflow"),errOmitLocation(true))); \ 
faaf: float:00000060: } while(0) 
faaf: float:00000061:  
faaf: float:00000062:  
faaf: float:00000063: /* ========== USER I/O ROUTINES ========== */ 
faaf: float:00000064:  
faaf: float:00000065:  
faaf: float:00000066: /* Configurable GUC parameter */ 
faaf: float:00000067: int extra_float_digits = 0; /* Added to DBL_DIG or FLT_DIG */ 
faaf: float:00000068:  
faaf: float:00000069:  
faaf: float:00000070: static int float4_cmp_internal(float4 a, float4 b); 
faaf: float:00000205:  ereport(ERROR, 
faaf: float:00000206:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
faaf: float:00000207:  errmsg("invalid input syntax for type real: \"%s\"", 
faaf: float:00000208:  orig_num), 
faaf: float:00000209:  errOmitLocation(true))); 
faaf: float:00000242:  ereport(ERROR, 
faaf: float:00000243:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00000244:  errmsg("\"%s\" is out of range for type real", 
faaf: float:00000245:  orig_num), 
faaf: float:00000246:  errOmitLocation(true))); 
faaf: float:00000248:  ereport(ERROR, 
faaf: float:00000249:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
faaf: float:00000250:  errmsg("invalid input syntax for type real: \"%s\"", 
faaf: float:00000251:  orig_num), 
faaf: float:00000252:  errOmitLocation(true))); 
faaf: float:00000300:  ereport(ERROR, 
faaf: float:00000301:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
faaf: float:00000302:  errmsg("invalid input syntax for type real: \"%s\"", 
faaf: float:00000303:  orig_num), 
faaf: float:00000304:  errOmitLocation(true))); 
faaf: float:00000402:  ereport(ERROR, 
faaf: float:00000403:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
faaf: float:00000404:  errmsg("invalid input syntax for type double precision: \"%s\"", 
faaf: float:00000405:  orig_num), 
faaf: float:00000406:  errOmitLocation(true))); 
faaf: float:00000439:  ereport(ERROR, 
faaf: float:00000440:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00000441:  errmsg("\"%s\" is out of range for type double precision", 
faaf: float:00000442:  orig_num), 
faaf: float:00000443:  errOmitLocation(true))); 
faaf: float:00000445:  ereport(ERROR, 
faaf: float:00000446:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
faaf: float:00000447:  errmsg("invalid input syntax for type double precision: \"%s\"", 
faaf: float:00000448:  orig_num), 
faaf: float:00000449:  errOmitLocation(true))); 
faaf: float:00000497:  ereport(ERROR, 
faaf: float:00000498:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
faaf: float:00000499:  errmsg("invalid input syntax for type double precision: \"%s\"", 
faaf: float:00000500:  orig_num), 
faaf: float:00000501:  errOmitLocation(true))); 
faaf: float:00000771:  ereport(ERROR, 
faaf: float:00000772:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
faaf: float:00000773:  errmsg("division by zero"), 
faaf: float:00000774:  errOmitLocation(true))); 
faaf: float:00000836:  ereport(ERROR, 
faaf: float:00000837:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
faaf: float:00000838:  errmsg("division by zero"), 
faaf: float:00000839:  errOmitLocation(true))); 
faaf: float:00001110:  ereport(ERROR, 
faaf: float:00001111:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00001112:  errmsg("integer out of range"), 
faaf: float:00001113:  errOmitLocation(true))); 
faaf: float:00001129:  ereport(ERROR, 
faaf: float:00001130:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00001131:  errmsg("smallint out of range"), 
faaf: float:00001132:  errOmitLocation(true))); 
faaf: float:00001171:  ereport(ERROR, 
faaf: float:00001172:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00001173:  errmsg("integer out of range"), 
faaf: float:00001174:  errOmitLocation(true))); 
faaf: float:00001189:  ereport(ERROR, 
faaf: float:00001190:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00001191:  errmsg("smallint out of range"), 
faaf: float:00001192:  errOmitLocation(true))); 
faaf: float:00001417:  ereport(ERROR, 
faaf: float:00001418:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_POWER_FUNCTION), 
faaf: float:00001419:  errmsg("cannot take square root of a negative number"), 
faaf: float:00001420:  errOmitLocation(true))); 
faaf: float:00001460:  ereport(ERROR, 
faaf: float:00001461:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_POWER_FUNCTION), 
faaf: float:00001462:  errmsg("zero raised to a negative power is undefined"), 
faaf: float:00001463:  errOmitLocation(true))); 
faaf: float:00001465:  ereport(ERROR, 
faaf: float:00001466:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_POWER_FUNCTION), 
faaf: float:00001467:  errmsg("a negative number raised to a non-integer power yields a complex result"), 
faaf: float:00001468:  errOmitLocation(true))); 
faaf: float:00001532:  ereport(ERROR, 
faaf: float:00001533:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_LOG), 
faaf: float:00001534:  errmsg("cannot take logarithm of zero"), 
faaf: float:00001535:  errOmitLocation(true))); 
faaf: float:00001537:  ereport(ERROR, 
faaf: float:00001538:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_LOG), 
faaf: float:00001539:  errmsg("cannot take logarithm of a negative number"), 
faaf: float:00001540:  errOmitLocation(true))); 
faaf: float:00001564:  ereport(ERROR, 
faaf: float:00001565:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_LOG), 
faaf: float:00001566:  errmsg("cannot take logarithm of zero"), 
faaf: float:00001567:  errOmitLocation(true))); 
faaf: float:00001569:  ereport(ERROR, 
faaf: float:00001570:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_LOG), 
faaf: float:00001571:  errmsg("cannot take logarithm of a negative number"), 
faaf: float:00001572:  errOmitLocation(true))); 
faaf: float:00001597:  ereport(ERROR, 
faaf: float:00001598:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00001599:  errmsg("input is out of range"), 
faaf: float:00001600:  errOmitLocation(true))); 
faaf: float:00001619:  ereport(ERROR, 
faaf: float:00001620:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00001621:  errmsg("input is out of range"), 
faaf: float:00001622:  errOmitLocation(true))); 
faaf: float:00001641:  ereport(ERROR, 
faaf: float:00001642:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00001643:  errmsg("input is out of range"), 
faaf: float:00001644:  errOmitLocation(true))); 
faaf: float:00001664:  ereport(ERROR, 
faaf: float:00001665:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00001666:  errmsg("input is out of range"), 
faaf: float:00001667:  errOmitLocation(true))); 
faaf: float:00001686:  ereport(ERROR, 
faaf: float:00001687:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00001688:  errmsg("input is out of range"), 
faaf: float:00001689:  errOmitLocation(true))); 
faaf: float:00001716:  ereport(ERROR, 
faaf: float:00001717:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00001718:  errmsg("input is out of range"), 
faaf: float:00001719:  errOmitLocation(true))); 
faaf: float:00001739:  ereport(ERROR, 
faaf: float:00001740:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00001741:  errmsg("input is out of range"), 
faaf: float:00001742:  errOmitLocation(true))); 
faaf: float:00001766:  ereport(ERROR, 
faaf: float:00001767:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00001768:  errmsg("input is out of range"), 
faaf: float:00001769:  errOmitLocation(true))); 
faaf: float:00001848:  elog(ERROR, "setseed parameter %f out of range [-1,1]", seed); 
faaf: float:00001892:  elog(ERROR, "%s: expected %d-element float8 array", caller, n); 
faaf: float:00002702:  ereport(ERROR, 
faaf: float:00002703:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
faaf: float:00002704:  errmsg("division by zero"), 
faaf: float:00002705:  errOmitLocation(true))); 
faaf: float:00002766:  ereport(ERROR, 
faaf: float:00002767:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
faaf: float:00002768:  errmsg("division by zero"), 
faaf: float:00002769:  errOmitLocation(true))); 
faaf: float:00002921:  ereport(ERROR, 
faaf: float:00002922:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION), 
faaf: float:00002923:  errmsg("count must be greater than zero"))); 
faaf: float:00002926:  ereport(ERROR, 
faaf: float:00002927:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION), 
faaf: float:00002928:  errmsg("operand, lower bound and upper bound cannot be NaN"))); 
faaf: float:00002932:  ereport(ERROR, 
faaf: float:00002933:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION), 
faaf: float:00002934:  errmsg("lower and upper bounds must be finite"))); 
faaf: float:00002945:  ereport(ERROR, 
faaf: float:00002946:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00002947:  errmsg("integer out of range"))); 
faaf: float:00002961:  ereport(ERROR, 
faaf: float:00002962:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
faaf: float:00002963:  errmsg("integer out of range"))); 
faaf: float:00002970:  ereport(ERROR, 
faaf: float:00002971:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION), 
faaf: float:00002972:  errmsg("lower bound cannot equal upper bound"))); 
aaaaa GP_IGNORE: fabb: formatxtype - ./backend/utils/adt/format_type.c
fabb: formatxtype:00000146:  elog(ERROR, "cache lookup failed for type %u", type_oid); 
fabb: formatxtype:00000209:  elog(ERROR, "cache lookup failed for type %u", type_oid); 
fabb: formatxtype:00000393:  elog(ERROR, "invalid INTERVAL typmod: 0x%x", typemod); 
aaaaa GP_IGNORE: faba: formatting - ./backend/utils/adt/formatting.c
faba: formatting:00000505:  ereport(ERROR, \ 
faba: formatting:00000506:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), \ 
faba: formatting:00000507:  errmsg("invalid format specification for an interval value"), \ 
faba: formatting:00000508:  errhint("Intervals are not tied to specific calendar dates."))); \ 
faba: formatting:00000509: } while(0) 
faba: formatting:00000510:  
faba: formatting:00000511: /***************************************************************************** 
faba: formatting:00000512:  * KeyWord definitions 
faba: formatting:00000513:  *****************************************************************************/ 
faba: formatting:00000514:  
faba: formatting:00000515: /* ---------- 
faba: formatting:00000516:  * Suffixes: 
faba: formatting:00000517:  * ---------- 
faba: formatting:00000518:  */ 
faba: formatting:00000519: #define DCH_S_FM 0x01 
faba: formatting:00000520: #define DCH_S_TH 0x02 
faba: formatting:00000521: #define DCH_S_th 0x04 
faba: formatting:00000522: #define DCH_S_SP 0x08 
faba: formatting:00000523: #define DCH_S_TM 0x10 
faba: formatting:00000524:  
faba: formatting:00000525: /* ---------- 
faba: formatting:00000526:  * Suffix tests 
faba: formatting:00000527:  * ---------- 
faba: formatting:00000528:  */ 
faba: formatting:00000529: #define S_THth(_s) ((((_s) & DCH_S_TH) *PIPE**PIPE* ((_s) & DCH_S_th)) ? 1 : 0) 
faba: formatting:00000530: #define S_TH(_s) (((_s) & DCH_S_TH) ? 1 : 0) 
faba: formatting:00000531: #define S_th(_s) (((_s) & DCH_S_th) ? 1 : 0) 
faba: formatting:00000532: #define S_TH_TYPE(_s) (((_s) & DCH_S_TH) ? TH_UPPER : TH_LOWER) 
faba: formatting:00000533:  
faba: formatting:00000534: #define S_FM(_s) (((_s) & DCH_S_FM) ? 1 : 0) 
faba: formatting:00000535: #define S_SP(_s) (((_s) & DCH_S_SP) ? 1 : 0) 
faba: formatting:00000536: #define S_TM(_s) (((_s) & DCH_S_TM) ? 1 : 0) 
faba: formatting:00000537:  
faba: formatting:00000538: /* ---------- 
faba: formatting:00000539:  * Suffixes definition for DATE-TIME TO/FROM CHAR 
faba: formatting:00000540:  * ---------- 
faba: formatting:00000541:  */ 
faba: formatting:00000542: static KeySuffix DCH_suff[] = { 
faba: formatting:00000543:  {"FM", 2, DCH_S_FM, SUFFTYPE_PREFIX}, 
faba: formatting:00000544:  {"fm", 2, DCH_S_FM, SUFFTYPE_PREFIX}, 
faba: formatting:00000545:  {"TM", 2, DCH_S_TM, SUFFTYPE_PREFIX}, 
faba: formatting:00000546:  {"tm", 2, DCH_S_TM, SUFFTYPE_PREFIX}, 
faba: formatting:00000547:  {"TH", 2, DCH_S_TH, SUFFTYPE_POSTFIX}, 
faba: formatting:00000548:  {"th", 2, DCH_S_th, SUFFTYPE_POSTFIX}, 
faba: formatting:00000549:  {"SP", 2, DCH_S_SP, SUFFTYPE_POSTFIX}, 
faba: formatting:00000550:  /* last */ 
faba: formatting:00000551:  {NULL, 0, 0, 0} 
faba: formatting:00000552: }; 
faba: formatting:00001071:  ereport(ERROR, 
faba: formatting:00001072:  (errcode(ERRCODE_SYNTAX_ERROR), 
faba: formatting:00001073:  errmsg("\"9\" must be ahead of \"PR\" for function \"%s\"", func))); 
faba: formatting:00001090:  ereport(ERROR, 
faba: formatting:00001091:  (errcode(ERRCODE_SYNTAX_ERROR), 
faba: formatting:00001092:  errmsg("\"0\" must be ahead of \"PR\" for function \"%s\"", func))); 
faba: formatting:00001119:  ereport(ERROR, 
faba: formatting:00001120:  (errcode(ERRCODE_SYNTAX_ERROR), 
faba: formatting:00001121:  errmsg("multiple decimal points for function \"%s\"", func))); 
faba: formatting:00001126:  ereport(ERROR, 
faba: formatting:00001127:  (errcode(ERRCODE_SYNTAX_ERROR), 
faba: formatting:00001128:  errmsg("cannot use \"V\" and decimal point together for function \"%s\"", func))); 
faba: formatting:00001141:  ereport(ERROR, 
faba: formatting:00001142:  (errcode(ERRCODE_SYNTAX_ERROR), 
faba: formatting:00001143:  errmsg("cannot use \"S\" twice for function \"%s\"", func))); 
faba: formatting:00001148:  ereport(ERROR, 
faba: formatting:00001149:  (errcode(ERRCODE_SYNTAX_ERROR), 
faba: formatting:00001150:  errmsg("cannot use \"S\" and \"PL\"/\"MI\"/\"SG\"/\"PR\" together for function \"%s\"", func))); 
faba: formatting:00001171:  ereport(ERROR, 
faba: formatting:00001172:  (errcode(ERRCODE_SYNTAX_ERROR), 
faba: formatting:00001173:  errmsg("cannot use \"S\" and \"MI\" together for function \"%s\"", func))); 
faba: formatting:00001184:  ereport(ERROR, 
faba: formatting:00001185:  (errcode(ERRCODE_SYNTAX_ERROR), 
faba: formatting:00001186:  errmsg("cannot use \"S\" and \"PL\" together for function \"%s\"", func))); 
faba: formatting:00001197:  ereport(ERROR, 
faba: formatting:00001198:  (errcode(ERRCODE_SYNTAX_ERROR), 
faba: formatting:00001199:  errmsg("cannot use \"S\" and \"SG\" together for function \"%s\"", func))); 
faba: formatting:00001209:  ereport(ERROR, 
faba: formatting:00001210:  (errcode(ERRCODE_SYNTAX_ERROR), 
faba: formatting:00001211:  errmsg("cannot use \"PR\" and \"S\"/\"PL\"/\"MI\"/\"SG\" together for function \"%s\"", func))); 
faba: formatting:00001230:  ereport(ERROR, 
faba: formatting:00001231:  (errcode(ERRCODE_SYNTAX_ERROR), 
faba: formatting:00001232:  errmsg("cannot use \"V\" and decimal point together for function \"%s\"", func))); 
faba: formatting:00001239:  ereport(ERROR, 
faba: formatting:00001240:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
faba: formatting:00001241:  errmsg("\"E\" is not supported for function \"%s\"", func))); 
faba: formatting:00001430:  ereport(ERROR, 
faba: formatting:00001431:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
faba: formatting:00001432:  errmsg("\"%s\" is not a number", num))); 
faba: formatting:00001510:  ereport(ERROR, 
faba: formatting:00001511:  (errcode(ERRCODE_OUT_OF_MEMORY), 
faba: formatting:00001512:  errmsg("out of memory"))); 
faba: formatting:00001566:  ereport(ERROR, 
faba: formatting:00001567:  (errcode(ERRCODE_OUT_OF_MEMORY), 
faba: formatting:00001568:  errmsg("out of memory"))); 
faba: formatting:00001623:  ereport(ERROR, 
faba: formatting:00001624:  (errcode(ERRCODE_OUT_OF_MEMORY), 
faba: formatting:00001625:  errmsg("out of memory"))); 
faba: formatting:00001807:  ereport(ERROR, 
faba: formatting:00001808:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
faba: formatting:00001809:  errmsg("invalid combination of date conventions"), 
faba: formatting:00001810:  errhint("Do not mix Gregorian and ISO week date " 
faba: formatting:00001811:  "conventions in a formatting template."))); 
faba: formatting:00001825:  ereport(ERROR, 
faba: formatting:00001826:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
faba: formatting:00001827:  errmsg("conflicting values for \"%s\" field in formatting string", 
faba: formatting:00001828:  node->key->name), 
faba: formatting:00001829:  errdetail("This value contradicts a previous setting for " 
faba: formatting:00001830:  "the same field type."))); 
faba: formatting:00001889:  ereport(ERROR, 
faba: formatting:00001890:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
faba: formatting:00001891:  errmsg("source string too short for \"%s\" formatting field", 
faba: formatting:00001892:  node->key->name), 
faba: formatting:00001893:  errdetail("Field requires %d characters, but only %d " 
faba: formatting:00001894:  "remain.", 
faba: formatting:00001895:  len, used), 
faba: formatting:00001896:  errhint("If your source string is not fixed-width, try " 
faba: formatting:00001897:  "using the \"FM\" modifier."))); 
faba: formatting:00001904:  ereport(ERROR, 
faba: formatting:00001905:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
faba: formatting:00001906:  errmsg("invalid value \"%s\" for \"%s\"", 
faba: formatting:00001907:  copy, node->key->name), 
faba: formatting:00001908:  errdetail("Field requires %d characters, but only %d " 
faba: formatting:00001909:  "could be parsed.", len, used), 
faba: formatting:00001910:  errhint("If your source string is not fixed-width, try " 
faba: formatting:00001911:  "using the \"FM\" modifier."))); 
faba: formatting:00001917:  ereport(ERROR, 
faba: formatting:00001918:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
faba: formatting:00001919:  errmsg("invalid value \"%s\" for \"%s\"", 
faba: formatting:00001920:  copy, node->key->name), 
faba: formatting:00001921:  errdetail("Value must be an integer."))); 
faba: formatting:00001924:  ereport(ERROR, 
faba: formatting:00001925:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
faba: formatting:00001926:  errmsg("value for \"%s\" in source string is out of range", 
faba: formatting:00001927:  node->key->name), 
faba: formatting:00001928:  errdetail("Value must be in the range %d to %d.", 
faba: formatting:00001929:  INT_MIN, INT_MAX))); 
faba: formatting:00002047:  ereport(ERROR, 
faba: formatting:00002048:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
faba: formatting:00002049:  errmsg("invalid value \"%s\" for \"%s\"", 
faba: formatting:00002050:  copy, node->key->name), 
faba: formatting:00002051:  errdetail("The given value did not match any of the allowed " 
faba: formatting:00002052:  "values for this field."), 
faba: formatting:00002053:  errOmitLocation(true))); 
faba: formatting:00002612:  ereport(ERROR, 
faba: formatting:00002613:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
faba: formatting:00002614:  errmsg("\"TZ\"/\"tz\" format patterns are not supported in to_date"))); 
faba: formatting:00002710:  ereport(ERROR, 
faba: formatting:00002711:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
faba: formatting:00002712:  errmsg("invalid input string for \"Y,YYY\" in function \"to_date\""))); 
faba: formatting:00002979:  ereport(ERROR, 
faba: formatting:00002980:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
faba: formatting:00002981:  errmsg("timestamp out of range for function \"to_char\""))); 
faba: formatting:00003011:  ereport(ERROR, 
faba: formatting:00003012:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
faba: formatting:00003013:  errmsg("timestamp out of range for function \"to_char\""))); 
faba: formatting:00003079:  ereport(ERROR, 
faba: formatting:00003080:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
faba: formatting:00003081:  errmsg("timestamp out of range for function \"to_timestamp\""))); 
faba: formatting:00003231:  ereport(WARNING, 
faba: formatting:00003232:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
faba: formatting:00003233:  errmsg("hour \"%d\" is invalid for the 12-hour clock", 
faba: formatting:00003234:  tm->tm_hour), 
faba: formatting:00003235:  errhint("Use the 24-hour clock, or give an hour between 1 and 12."))); 
faba: formatting:00003240:  ereport(ERROR, 
faba: formatting:00003241:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
faba: formatting:00003242:  errmsg("hour \"%d\" is invalid for the 12-hour clock", 
faba: formatting:00003243:  tm->tm_hour), 
faba: formatting:00003244:  errhint("Use the 24-hour clock, or give an hour between 1 and 12."))); 
faba: formatting:00003281:  ereport(ERROR, 
faba: formatting:00003282:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
faba: formatting:00003283:  errmsg("inconsistent use of year %04d and \"BC\"", 
faba: formatting:00003284:  tm->tm_year))); 
faba: formatting:00003328:  ereport(ERROR, 
faba: formatting:00003329:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
faba: formatting:00003330:  errmsg("cannot calculate day of year without year information"))); 
faba: formatting:00004192:  ereport(ERROR, 
faba: formatting:00004193:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
faba: formatting:00004194:  errmsg("\"RN\" not supported with function \"to_number\""))); 
aaaaa GP_IGNORE: gaah: genfile - ./backend/utils/adt/genfile.c
gaah: genfile:00000072:  ereport(ERROR, 
gaah: genfile:00000073:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
gaah: genfile:00000074:  (errmsg("reference to parent directory (\"..\") not allowed")))); 
gaah: genfile:00000086:  ereport(ERROR, 
gaah: genfile:00000087:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
gaah: genfile:00000088:  (errmsg("absolute path not allowed")))); 
gaah: genfile:00000104:  ereport(ERROR, 
gaah: genfile:00000105:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
gaah: genfile:00000106:  (errmsg("only superuser may access generic file functions")))); 
gaah: genfile:00000125:  ereport(ERROR, 
gaah: genfile:00000126:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
gaah: genfile:00000127:  (errmsg("must be superuser to read files")))); 
gaah: genfile:00000132:  ereport(ERROR, 
gaah: genfile:00000133:  (errcode_for_file_access(), 
gaah: genfile:00000134:  errmsg("could not open file \"%s\" for reading: %m", 
gaah: genfile:00000135:  filename))); 
gaah: genfile:00000139:  ereport(ERROR, 
gaah: genfile:00000140:  (errcode_for_file_access(), 
gaah: genfile:00000141:  errmsg("could not seek in file \"%s\": %m", filename))); 
gaah: genfile:00000144:  ereport(ERROR, 
gaah: genfile:00000145:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaah: genfile:00000146:  errmsg("requested length cannot be negative"))); 
gaah: genfile:00000150:  ereport(ERROR, 
gaah: genfile:00000151:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaah: genfile:00000152:  errmsg("requested length too large"))); 
gaah: genfile:00000159:  ereport(ERROR, 
gaah: genfile:00000160:  (errcode_for_file_access(), 
gaah: genfile:00000161:  errmsg("could not read file \"%s\": %m", filename))); 
gaah: genfile:00000186:  ereport(ERROR, 
gaah: genfile:00000187:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
gaah: genfile:00000188:  (errmsg("must be superuser to get file information")))); 
gaah: genfile:00000193:  ereport(ERROR, 
gaah: genfile:00000194:  (errcode_for_file_access(), 
gaah: genfile:00000195:  errmsg("could not stat file \"%s\": %m", filename))); 
gaah: genfile:00000250:  ereport(ERROR, 
gaah: genfile:00000251:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
gaah: genfile:00000252:  (errmsg("must be superuser to get directory listings")))); 
gaah: genfile:00000267:  ereport(ERROR, 
gaah: genfile:00000268:  (errcode_for_file_access(), 
gaah: genfile:00000269:  errmsg("could not open directory \"%s\": %m", 
gaah: genfile:00000270:  fctx->location))); 
gaah: genfile:00000322:  ereport(ERROR, 
gaah: genfile:00000323:  (ERRCODE_DUPLICATE_FILE, 
gaah: genfile:00000324:  errmsg("file \"%s\" exists", filename))); 
gaah: genfile:00000332:  ereport(ERROR, 
gaah: genfile:00000333:  (errcode_for_file_access(), 
gaah: genfile:00000334:  errmsg("could not open file \"%s\" for writing: %m", 
gaah: genfile:00000335:  filename))); 
gaah: genfile:00000342:  ereport(ERROR, 
gaah: genfile:00000343:  (errcode_for_file_access(), 
gaah: genfile:00000344:  errmsg("could not write file \"%s\": %m", filename))); 
gaah: genfile:00000374:  ereport(WARNING, 
gaah: genfile:00000375:  (errcode_for_file_access(), 
gaah: genfile:00000376:  errmsg("file \"%s\" is not accessible: %m", fn1))); 
gaah: genfile:00000383:  ereport(WARNING, 
gaah: genfile:00000384:  (errcode_for_file_access(), 
gaah: genfile:00000385:  errmsg("file \"%s\" is not accessible: %m", fn2))); 
gaah: genfile:00000393:  ereport(ERROR, 
gaah: genfile:00000394:  (ERRCODE_DUPLICATE_FILE, 
gaah: genfile:00000395:  errmsg("cannot rename to target file \"%s\"", 
gaah: genfile:00000396:  fn3 ? fn3 : fn2))); 
gaah: genfile:00000403:  ereport(ERROR, 
gaah: genfile:00000404:  (errcode_for_file_access(), 
gaah: genfile:00000405:  errmsg("could not rename \"%s\" to \"%s\": %m", 
gaah: genfile:00000406:  fn2, fn3))); 
gaah: genfile:00000410:  ereport(WARNING, 
gaah: genfile:00000411:  (errcode_for_file_access(), 
gaah: genfile:00000412:  errmsg("could not rename \"%s\" to \"%s\": %m", 
gaah: genfile:00000413:  fn1, fn2))); 
gaah: genfile:00000417:  ereport(ERROR, 
gaah: genfile:00000418:  (errcode_for_file_access(), 
gaah: genfile:00000419:  errmsg("could not rename \"%s\" back to \"%s\": %m", 
gaah: genfile:00000420:  fn3, fn2))); 
gaah: genfile:00000424:  ereport(ERROR, 
gaah: genfile:00000425:  (ERRCODE_UNDEFINED_FILE, 
gaah: genfile:00000426:  errmsg("renaming \"%s\" to \"%s\" was reverted", 
gaah: genfile:00000427:  fn2, fn3))); 
gaah: genfile:00000433:  ereport(ERROR, 
gaah: genfile:00000434:  (errcode_for_file_access(), 
gaah: genfile:00000435:  errmsg("could not rename \"%s\" to \"%s\": %m", fn1, fn2))); 
gaah: genfile:00000456:  ereport(ERROR, 
gaah: genfile:00000457:  (errcode_for_file_access(), 
gaah: genfile:00000458:  errmsg("file \"%s\" is not accessible: %m", filename))); 
gaah: genfile:00000463:  ereport(WARNING, 
gaah: genfile:00000464:  (errcode_for_file_access(), 
gaah: genfile:00000465:  errmsg("could not unlink file \"%s\": %m", filename))); 
gaah: genfile:00000482:  ereport(ERROR, 
gaah: genfile:00000483:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
gaah: genfile:00000484:  (errmsg("only superuser can list the log directory")))); 
gaah: genfile:00000489:  ereport(ERROR, 
gaah: genfile:00000490:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaah: genfile:00000491:  (errmsg("the log_filename parameter must equal 'gpdb-%%Y-%%m-%%d_%%H%%M%%S.csv'")))); 
gaah: genfile:00000518:  ereport(ERROR, 
gaah: genfile:00000519:  (errcode_for_file_access(), 
gaah: genfile:00000520:  errmsg("could not read directory \"%s\": %m", 
gaah: genfile:00000521:  fctx->location))); 
gaah: genfile:00000623:  ereport(ERROR, 
gaah: genfile:00000624:  (errcode_for_file_access(), 
gaah: genfile:00000625:  errmsg("could not stat file \"%s\": %m", filename))); 
aaaaa GP_IGNORE: gaah: geoxops - ./backend/utils/adt/geo_ops.c
gaah: geoxops:00000292:  ereport(ERROR, 
gaah: geoxops:00000293:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
gaah: geoxops:00000294:  errmsg("too many points requested"), 
gaah: geoxops:00000295:  errOmitLocation(true))); 
gaah: geoxops:00000316:  ereport(ERROR, 
gaah: geoxops:00000317:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaah: geoxops:00000318:  errmsg("could not format \"path\" value"), 
gaah: geoxops:00000319:  errOmitLocation(true))); 
gaah: geoxops:00000392:  ereport(ERROR, 
gaah: geoxops:00000393:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
gaah: geoxops:00000394:  errmsg("invalid input syntax for type box: \"%s\"", str), 
gaah: geoxops:00000395:  errOmitLocation(true))); 
gaah: geoxops:00000957:  ereport(ERROR, 
gaah: geoxops:00000958:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
gaah: geoxops:00000959:  errmsg("invalid input syntax for type line: \"%s\"", str))); 
gaah: geoxops:00000964:  ereport(ERROR, 
gaah: geoxops:00000965:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaah: geoxops:00000966:  errmsg("type \"line\" not yet implemented"))); 
gaah: geoxops:00001031:  ereport(ERROR, 
gaah: geoxops:00001032:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaah: geoxops:00001033:  errmsg("type \"line\" not yet implemented"))); 
gaah: geoxops:00001046:  ereport(ERROR, 
gaah: geoxops:00001047:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaah: geoxops:00001048:  errmsg("type \"line\" not yet implemented"))); 
gaah: geoxops:00001058:  ereport(ERROR, 
gaah: geoxops:00001059:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaah: geoxops:00001060:  errmsg("type \"line\" not yet implemented"))); 
gaah: geoxops:00001405:  ereport(ERROR, 
gaah: geoxops:00001406:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
gaah: geoxops:00001407:  errmsg("invalid input syntax for type path: \"%s\"", str), 
gaah: geoxops:00001408:  errOmitLocation(true))); 
gaah: geoxops:00001429:  ereport(ERROR, 
gaah: geoxops:00001430:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
gaah: geoxops:00001431:  errmsg("invalid input syntax for type path: \"%s\"", str), 
gaah: geoxops:00001432:  errOmitLocation(true))); 
gaah: geoxops:00001469:  ereport(ERROR, 
gaah: geoxops:00001470:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
gaah: geoxops:00001471:  errmsg("invalid number of points in external \"path\" value"), 
gaah: geoxops:00001472:  errOmitLocation(true))); 
gaah: geoxops:00001811:  ereport(ERROR, 
gaah: geoxops:00001812:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
gaah: geoxops:00001813:  errmsg("invalid input syntax for type point: \"%s\"", str), 
gaah: geoxops:00001814:  errOmitLocation(true))); 
gaah: geoxops:00002040:  ereport(ERROR, 
gaah: geoxops:00002041:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
gaah: geoxops:00002042:  errmsg("invalid input syntax for type lseg: \"%s\"", str), 
gaah: geoxops:00002043:  errOmitLocation(true))); 
gaah: geoxops:00002631:  ereport(ERROR, 
gaah: geoxops:00002632:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaah: geoxops:00002633:  errmsg("function \"dist_lb\" not implemented"))); 
gaah: geoxops:00003144:  ereport(ERROR, 
gaah: geoxops:00003145:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaah: geoxops:00003146:  errmsg("function \"close_lb\" not implemented"))); 
gaah: geoxops:00003423:  ereport(ERROR, 
gaah: geoxops:00003424:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaah: geoxops:00003425:  errmsg("cannot create bounding box for empty polygon"))); 
gaah: geoxops:00003447:  ereport(ERROR, 
gaah: geoxops:00003448:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
gaah: geoxops:00003449:  errmsg("invalid input syntax for type polygon: \"%s\"", str), 
gaah: geoxops:00003450:  errOmitLocation(true))); 
gaah: geoxops:00003460:  ereport(ERROR, 
gaah: geoxops:00003461:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
gaah: geoxops:00003462:  errmsg("invalid input syntax for type polygon: \"%s\"", str), 
gaah: geoxops:00003463:  errOmitLocation(true))); 
gaah: geoxops:00003501:  ereport(ERROR, 
gaah: geoxops:00003502:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
gaah: geoxops:00003503:  errmsg("invalid number of points in external \"polygon\" value"), 
gaah: geoxops:00003504:  errOmitLocation(true))); 
gaah: geoxops:00003888:  ereport(ERROR, 
gaah: geoxops:00003889:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaah: geoxops:00003890:  errmsg("function \"poly_distance\" not implemented"))); 
gaah: geoxops:00003969:  ereport(ERROR, 
gaah: geoxops:00003970:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
gaah: geoxops:00003971:  errmsg("division by zero"), 
gaah: geoxops:00003972:  errOmitLocation(true))); 
gaah: geoxops:00004091:  ereport(ERROR, 
gaah: geoxops:00004092:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
gaah: geoxops:00004093:  errmsg("too many points requested"), 
gaah: geoxops:00004094:  errOmitLocation(true))); 
gaah: geoxops:00004202:  ereport(ERROR, 
gaah: geoxops:00004203:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaah: geoxops:00004204:  errmsg("function \"path_center\" not implemented"))); 
gaah: geoxops:00004219:  ereport(ERROR, 
gaah: geoxops:00004220:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaah: geoxops:00004221:  errmsg("open path cannot be converted to polygon"), 
gaah: geoxops:00004222:  errOmitLocation(true))); 
gaah: geoxops:00004387:  ereport(ERROR, 
gaah: geoxops:00004388:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
gaah: geoxops:00004389:  errmsg("invalid input syntax for type circle: \"%s\"", str), 
gaah: geoxops:00004390:  errOmitLocation(true))); 
gaah: geoxops:00004398:  ereport(ERROR, 
gaah: geoxops:00004399:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
gaah: geoxops:00004400:  errmsg("invalid input syntax for type circle: \"%s\"", str), 
gaah: geoxops:00004401:  errOmitLocation(true))); 
gaah: geoxops:00004414:  ereport(ERROR, 
gaah: geoxops:00004415:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
gaah: geoxops:00004416:  errmsg("invalid input syntax for type circle: \"%s\"", str), 
gaah: geoxops:00004417:  errOmitLocation(true))); 
gaah: geoxops:00004421:  ereport(ERROR, 
gaah: geoxops:00004422:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
gaah: geoxops:00004423:  errmsg("invalid input syntax for type circle: \"%s\"", str), 
gaah: geoxops:00004424:  errOmitLocation(true))); 
gaah: geoxops:00004444:  ereport(ERROR, 
gaah: geoxops:00004445:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaah: geoxops:00004446:  errmsg("could not format \"circle\" value"), 
gaah: geoxops:00004447:  errOmitLocation(true))); 
gaah: geoxops:00004453:  ereport(ERROR, 
gaah: geoxops:00004454:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaah: geoxops:00004455:  errmsg("could not format \"circle\" value"), 
gaah: geoxops:00004456:  errOmitLocation(true))); 
gaah: geoxops:00004481:  ereport(ERROR, 
gaah: geoxops:00004482:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
gaah: geoxops:00004483:  errmsg("invalid radius in external \"circle\" value"), 
gaah: geoxops:00004484:  errOmitLocation(true))); 
gaah: geoxops:00005003:  ereport(ERROR, 
gaah: geoxops:00005004:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaah: geoxops:00005005:  errmsg("cannot convert circle with radius zero to polygon"), 
gaah: geoxops:00005006:  errOmitLocation(true))); 
gaah: geoxops:00005009:  ereport(ERROR, 
gaah: geoxops:00005010:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaah: geoxops:00005011:  errmsg("must request at least 2 points"), 
gaah: geoxops:00005012:  errOmitLocation(true))); 
gaah: geoxops:00005019:  ereport(ERROR, 
gaah: geoxops:00005020:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
gaah: geoxops:00005021:  errmsg("too many points requested"), 
gaah: geoxops:00005022:  errOmitLocation(true))); 
gaah: geoxops:00005055:  ereport(ERROR, 
gaah: geoxops:00005056:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaah: geoxops:00005057:  errmsg("cannot convert empty polygon to circle"), 
gaah: geoxops:00005058:  errOmitLocation(true))); 
gaah: geoxops:00005079:  ereport(ERROR, 
gaah: geoxops:00005080:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaah: geoxops:00005081:  errmsg("cannot convert empty polygon to circle"), 
gaah: geoxops:00005082:  errOmitLocation(true))); 
aaaaa GP_IGNORE: gacc: gpxpartitionxfunctions - ./backend/utils/adt/gp_partition_functions.c
gacc: gpxpartitionxfunctions:00000774:  elog(ERROR, "partitioning kind '%c' not allowed", 
gacc: gpxpartitionxfunctions:00000775:  metadata->partsAndRules->part->parkind); 
aaaaa GP_IGNORE: iaad: int - ./backend/utils/adt/int.c
iaad: int:00000160:  ereport(ERROR, 
iaad: int:00000161:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
iaad: int:00000162:  errmsg("int2vector has too many elements"))); 
iaad: int:00000233:  ereport(ERROR, 
iaad: int:00000234:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
iaad: int:00000235:  errmsg("invalid int2vector data"))); 
iaad: int:00000338:  ereport(ERROR, 
iaad: int:00000339:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000340:  errmsg("smallint out of range"), 
iaad: int:00000341:  errOmitLocation(true))); 
iaad: int:00000675:  ereport(ERROR, 
iaad: int:00000676:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000677:  errmsg("integer out of range"), 
iaad: int:00000678:  errOmitLocation(true))); 
iaad: int:00000705:  ereport(ERROR, 
iaad: int:00000706:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000707:  errmsg("integer out of range"), 
iaad: int:00000708:  errOmitLocation(true))); 
iaad: int:00000727:  ereport(ERROR, 
iaad: int:00000728:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000729:  errmsg("integer out of range"), 
iaad: int:00000730:  errOmitLocation(true))); 
iaad: int:00000748:  ereport(ERROR, 
iaad: int:00000749:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000750:  errmsg("integer out of range"))); 
iaad: int:00000770:  ereport(ERROR, 
iaad: int:00000771:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000772:  errmsg("integer out of range"), 
iaad: int:00000773:  errOmitLocation(true))); 
iaad: int:00000785:  ereport(ERROR, 
iaad: int:00000786:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaad: int:00000787:  errmsg("division by zero"), 
iaad: int:00000788:  errOmitLocation(true))); 
iaad: int:00000797:  ereport(ERROR, 
iaad: int:00000798:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000799:  errmsg("integer out of range"))); 
iaad: int:00000811:  ereport(ERROR, 
iaad: int:00000812:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000813:  errmsg("integer out of range"), 
iaad: int:00000814:  errOmitLocation(true))); 
iaad: int:00000827:  ereport(ERROR, 
iaad: int:00000828:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000829:  errmsg("integer out of range"), 
iaad: int:00000830:  errOmitLocation(true))); 
iaad: int:00000844:  ereport(ERROR, 
iaad: int:00000845:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000846:  errmsg("smallint out of range"), 
iaad: int:00000847:  errOmitLocation(true))); 
iaad: int:00000874:  ereport(ERROR, 
iaad: int:00000875:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000876:  errmsg("smallint out of range"), 
iaad: int:00000877:  errOmitLocation(true))); 
iaad: int:00000896:  ereport(ERROR, 
iaad: int:00000897:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000898:  errmsg("smallint out of range"), 
iaad: int:00000899:  errOmitLocation(true))); 
iaad: int:00000917:  ereport(ERROR, 
iaad: int:00000918:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000919:  errmsg("smallint out of range"), 
iaad: int:00000920:  errOmitLocation(true))); 
iaad: int:00000933:  ereport(ERROR, 
iaad: int:00000934:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaad: int:00000935:  errmsg("division by zero"), 
iaad: int:00000936:  errOmitLocation(true))); 
iaad: int:00000947:  ereport(ERROR, 
iaad: int:00000948:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000949:  errmsg("smallint out of range"))); 
iaad: int:00000968:  ereport(ERROR, 
iaad: int:00000969:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000970:  errmsg("integer out of range"), 
iaad: int:00000971:  errOmitLocation(true))); 
iaad: int:00000990:  ereport(ERROR, 
iaad: int:00000991:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00000992:  errmsg("integer out of range"), 
iaad: int:00000993:  errOmitLocation(true))); 
iaad: int:00001018:  ereport(ERROR, 
iaad: int:00001019:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00001020:  errmsg("integer out of range"), 
iaad: int:00001021:  errOmitLocation(true))); 
iaad: int:00001033:  ereport(ERROR, 
iaad: int:00001034:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaad: int:00001035:  errmsg("division by zero"), 
iaad: int:00001036:  errOmitLocation(true))); 
iaad: int:00001060:  ereport(ERROR, 
iaad: int:00001061:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00001062:  errmsg("integer out of range"), 
iaad: int:00001063:  errOmitLocation(true))); 
iaad: int:00001082:  ereport(ERROR, 
iaad: int:00001083:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00001084:  errmsg("integer out of range"), 
iaad: int:00001085:  errOmitLocation(true))); 
iaad: int:00001110:  ereport(ERROR, 
iaad: int:00001111:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00001112:  errmsg("integer out of range"), 
iaad: int:00001113:  errOmitLocation(true))); 
iaad: int:00001125:  ereport(ERROR, 
iaad: int:00001126:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaad: int:00001127:  errmsg("division by zero"), 
iaad: int:00001128:  errOmitLocation(true))); 
iaad: int:00001139:  ereport(ERROR, 
iaad: int:00001140:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00001141:  errmsg("integer out of range"), 
iaad: int:00001142:  errOmitLocation(true))); 
iaad: int:00001153:  ereport(ERROR, 
iaad: int:00001154:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaad: int:00001155:  errmsg("division by zero"), 
iaad: int:00001156:  errOmitLocation(true))); 
iaad: int:00001174:  ereport(ERROR, 
iaad: int:00001175:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaad: int:00001176:  errmsg("division by zero"), 
iaad: int:00001177:  errOmitLocation(true))); 
iaad: int:00001190:  ereport(ERROR, 
iaad: int:00001191:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaad: int:00001192:  errmsg("division by zero"), 
iaad: int:00001193:  errOmitLocation(true))); 
iaad: int:00001206:  ereport(ERROR, 
iaad: int:00001207:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaad: int:00001208:  errmsg("division by zero"))); 
iaad: int:00001227:  ereport(ERROR, 
iaad: int:00001228:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00001229:  errmsg("integer out of range"), 
iaad: int:00001230:  errOmitLocation(true))); 
iaad: int:00001243:  ereport(ERROR, 
iaad: int:00001244:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaad: int:00001245:  errmsg("smallint out of range"), 
iaad: int:00001246:  errOmitLocation(true))); 
iaad: int:00001432:  ereport(ERROR, 
iaad: int:00001433:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
iaad: int:00001434:  errmsg("step size cannot equal zero"))); 
aaaaa GP_IGNORE: iaai: inteight - ./backend/utils/adt/int8.c
iaai: inteight:00000099:  ereport(ERROR, 
iaai: inteight:00000100:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
iaai: inteight:00000101:  errmsg("invalid input syntax for integer: \"%s\"",str), 
iaai: inteight:00000102:  errOmitLocation(true))); 
iaai: inteight:00000115:  ereport(ERROR, 
iaai: inteight:00000116:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000117:  errmsg("value \"%s\" is out of range for type bigint",str), 
iaai: inteight:00000118:  errOmitLocation(true))); 
iaai: inteight:00000134:  ereport(ERROR, 
iaai: inteight:00000135:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
iaai: inteight:00000136:  errmsg("invalid input syntax for integer: \"%s\"", 
iaai: inteight:00000137:  str), 
iaai: inteight:00000138:  errOmitLocation(true))); 
iaai: inteight:00000170:  elog(ERROR, "could not format int8"); 
iaai: inteight:00000505:  ereport(ERROR, 
iaai: inteight:00000506:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000507:  errmsg("bigint out of range"), 
iaai: inteight:00000508:  errOmitLocation(true))); 
iaai: inteight:00000535:  ereport(ERROR, 
iaai: inteight:00000536:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000537:  errmsg("bigint out of range"), 
iaai: inteight:00000538:  errOmitLocation(true))); 
iaai: inteight:00000557:  ereport(ERROR, 
iaai: inteight:00000558:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000559:  errmsg("bigint out of range"), 
iaai: inteight:00000560:  errOmitLocation(true))); 
iaai: inteight:00000588:  ereport(ERROR, 
iaai: inteight:00000589:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000590:  errmsg("bigint out of range"), 
iaai: inteight:00000591:  errOmitLocation(true))); 
iaai: inteight:00000603:  ereport(ERROR, 
iaai: inteight:00000604:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaai: inteight:00000605:  errmsg("division by zero"), 
iaai: inteight:00000606:  errOmitLocation(true))); 
iaai: inteight:00000617:  ereport(ERROR, 
iaai: inteight:00000618:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000619:  errmsg("bigint out of range"), 
iaai: inteight:00000620:  errOmitLocation(true))); 
iaai: inteight:00000636:  ereport(ERROR, 
iaai: inteight:00000637:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000638:  errmsg("bigint out of range"), 
iaai: inteight:00000639:  errOmitLocation(true))); 
iaai: inteight:00000653:  ereport(ERROR, 
iaai: inteight:00000654:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaai: inteight:00000655:  errmsg("division by zero"), 
iaai: inteight:00000656:  errOmitLocation(true))); 
iaai: inteight:00000673:  ereport(ERROR, 
iaai: inteight:00000674:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000675:  errmsg("bigint out of range"), 
iaai: inteight:00000676:  errOmitLocation(true))); 
iaai: inteight:00000690:  ereport(ERROR, 
iaai: inteight:00000691:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000692:  errmsg("bigint out of range"), 
iaai: inteight:00000693:  errOmitLocation(true))); 
iaai: inteight:00000759:  ereport(ERROR, 
iaai: inteight:00000760:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000761:  errmsg("bigint out of range"), 
iaai: inteight:00000762:  errOmitLocation(true))); 
iaai: inteight:00000781:  ereport(ERROR, 
iaai: inteight:00000782:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000783:  errmsg("bigint out of range"), 
iaai: inteight:00000784:  errOmitLocation(true))); 
iaai: inteight:00000809:  ereport(ERROR, 
iaai: inteight:00000810:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000811:  errmsg("bigint out of range"), 
iaai: inteight:00000812:  errOmitLocation(true))); 
iaai: inteight:00000824:  ereport(ERROR, 
iaai: inteight:00000825:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaai: inteight:00000826:  errmsg("division by zero"), 
iaai: inteight:00000827:  errOmitLocation(true))); 
iaai: inteight:00000838:  ereport(ERROR, 
iaai: inteight:00000839:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000840:  errmsg("bigint out of range"), 
iaai: inteight:00000841:  errOmitLocation(true))); 
iaai: inteight:00000860:  ereport(ERROR, 
iaai: inteight:00000861:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000862:  errmsg("bigint out of range"), 
iaai: inteight:00000863:  errOmitLocation(true))); 
iaai: inteight:00000882:  ereport(ERROR, 
iaai: inteight:00000883:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000884:  errmsg("bigint out of range"), 
iaai: inteight:00000885:  errOmitLocation(true))); 
iaai: inteight:00000910:  ereport(ERROR, 
iaai: inteight:00000911:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000912:  errmsg("bigint out of range"), 
iaai: inteight:00000913:  errOmitLocation(true))); 
iaai: inteight:00000925:  ereport(ERROR, 
iaai: inteight:00000926:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaai: inteight:00000927:  errmsg("division by zero"), 
iaai: inteight:00000928:  errOmitLocation(true))); 
iaai: inteight:00000952:  ereport(ERROR, 
iaai: inteight:00000953:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000954:  errmsg("bigint out of range"), 
iaai: inteight:00000955:  errOmitLocation(true))); 
iaai: inteight:00000974:  ereport(ERROR, 
iaai: inteight:00000975:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00000976:  errmsg("bigint out of range"), 
iaai: inteight:00000977:  errOmitLocation(true))); 
iaai: inteight:00001002:  ereport(ERROR, 
iaai: inteight:00001003:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00001004:  errmsg("bigint out of range"), 
iaai: inteight:00001005:  errOmitLocation(true))); 
iaai: inteight:00001017:  ereport(ERROR, 
iaai: inteight:00001018:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaai: inteight:00001019:  errmsg("division by zero"), 
iaai: inteight:00001020:  errOmitLocation(true))); 
iaai: inteight:00001031:  ereport(ERROR, 
iaai: inteight:00001032:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00001033:  errmsg("bigint out of range"), 
iaai: inteight:00001034:  errOmitLocation(true))); 
iaai: inteight:00001053:  ereport(ERROR, 
iaai: inteight:00001054:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00001055:  errmsg("bigint out of range"), 
iaai: inteight:00001056:  errOmitLocation(true))); 
iaai: inteight:00001075:  ereport(ERROR, 
iaai: inteight:00001076:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00001077:  errmsg("bigint out of range"), 
iaai: inteight:00001078:  errOmitLocation(true))); 
iaai: inteight:00001103:  ereport(ERROR, 
iaai: inteight:00001104:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00001105:  errmsg("bigint out of range"), 
iaai: inteight:00001106:  errOmitLocation(true))); 
iaai: inteight:00001118:  ereport(ERROR, 
iaai: inteight:00001119:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
iaai: inteight:00001120:  errmsg("division by zero"), 
iaai: inteight:00001121:  errOmitLocation(true))); 
iaai: inteight:00001215:  ereport(ERROR, 
iaai: inteight:00001216:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00001217:  errmsg("integer out of range"), 
iaai: inteight:00001218:  errOmitLocation(true))); 
iaai: inteight:00001241:  ereport(ERROR, 
iaai: inteight:00001242:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00001243:  errmsg("smallint out of range"), 
iaai: inteight:00001244:  errOmitLocation(true))); 
iaai: inteight:00001280:  ereport(ERROR, 
iaai: inteight:00001281:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00001282:  errmsg("bigint out of range"), 
iaai: inteight:00001283:  errOmitLocation(true))); 
iaai: inteight:00001320:  ereport(ERROR, 
iaai: inteight:00001321:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00001322:  errmsg("bigint out of range"), 
iaai: inteight:00001323:  errOmitLocation(true))); 
iaai: inteight:00001338:  ereport(ERROR, 
iaai: inteight:00001339:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
iaai: inteight:00001340:  errmsg("OID out of range"), 
iaai: inteight:00001341:  errOmitLocation(true))); 
iaai: inteight:00001424:  ereport(ERROR, 
iaai: inteight:00001425:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
iaai: inteight:00001426:  errmsg("step size cannot equal zero"))); 
aaaaa GP_IGNORE: laae: like - ./backend/utils/adt/like.c
laae: like:00000489:  ereport(ERROR, 
laae: like:00000490:  (errcode(ERRCODE_INVALID_ESCAPE_SEQUENCE), 
laae: like:00000491:  errmsg("invalid escape string"), 
laae: like:00000492:  errhint("Escape string must be empty or one character."))); 
aaaaa GP_IGNORE: laba: likexmatch - ./backend/utils/adt/like_match.c
laba: likexmatch:00000289:  ereport(ERROR, 
laba: likexmatch:00000290:  (errcode(ERRCODE_INVALID_ESCAPE_SEQUENCE), 
laba: likexmatch:00000291:  errmsg("invalid escape string"), 
laba: likexmatch:00000292:  errhint("Escape string must be empty or one character."))); 
aaaaa GP_IGNORE: laaj: lockfuncs - ./backend/utils/adt/lockfuncs.c
laaj: lockfuncs:00000206:  ereport(ERROR, (errmsg("pg_lock internal error (gathered %d results from cmd '%s')", resultCount, buffer.data), 
laaj: lockfuncs:00000207:  errdetail("%s", errbuf.data))); 
laaj: lockfuncs:00000214:  elog(ERROR, "pg_locks didn't get back any data from the segDBs"); 
laaj: lockfuncs:00000225:  elog(ERROR,"pg_locks: resultStatus not tuples_Ok"); 
aaaaa GP_IGNORE: maad: mac - ./backend/utils/adt/mac.c
maad: mac:00000063:  ereport(ERROR, 
maad: mac:00000064:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
maad: mac:00000065:  errmsg("invalid input syntax for type macaddr: \"%s\"", str))); 
maad: mac:00000070:  ereport(ERROR, 
maad: mac:00000071:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
maad: mac:00000072:  errmsg("invalid octet value in \"macaddr\" value: \"%s\"", str))); 
maad: mac:00000188:  ereport(ERROR, 
maad: mac:00000189:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
maad: mac:00000190:  errmsg("text too long to convert to MAC address"))); 
aaaaa GP_IGNORE: maag: matrix - ./backend/utils/adt/matrix.c
maag: matrix:00000020:  ereport(ERROR, \ 
maag: matrix:00000021:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), \ 
maag: matrix:00000022:  errmsg("value out of range: overflow"),errOmitLocation(true))); \ 
maag: matrix:00000023:  \ 
maag: matrix:00000024:  if ((val) == 0.0 && !(zero_is_valid)) \ 
maag: matrix:00000025:  ereport(ERROR, \ 
maag: matrix:00000026:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), \ 
maag: matrix:00000027:  errmsg("value out of range: underflow"),errOmitLocation(true))); \ 
maag: matrix:00000028: } while(0) 
maag: matrix:00000029:  
maag: matrix:00000030:  
maag: matrix:00000031: /* 
maag: matrix:00000032:  * check to see if a int16/32/64 val has overflow in addition 
maag: matrix:00000033:  */ 
maag: matrix:00000034: #define CHECKINTADD(result, arg1, arg2) \ 
maag: matrix:00000035: do { \ 
maag: matrix:00000036:  if (SAMESIGN(arg1, arg2) && !SAMESIGN(result, arg1)) \ 
maag: matrix:00000037:  ereport(ERROR, \ 
maag: matrix:00000038:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), \ 
maag: matrix:00000039:  errmsg("int value out of range: overflow"),errOmitLocation(true))); \ 
maag: matrix:00000040: } while(0) 
maag: matrix:00000041:  
maag: matrix:00000042: /* 
maag: matrix:00000043:  * check to see if a int64 val has overflow in addition 
maag: matrix:00000044: * 
maag: matrix:00000045: * Overflow check. We basically check to see if result / arg2 gives arg1 
maag: matrix:00000046: * again. There are two cases where this fails: arg2 = 0 (which cannot 
maag: matrix:00000047: * overflow) and arg1 = INT64_MIN, arg2 = -1 (where the division itself 
maag: matrix:00000048: * will overflow and thus incorrectly match). 
maag: matrix:00000049: * 
maag: matrix:00000050: * Since the division is likely much more expensive than the actual 
maag: matrix:00000051: * multiplication, we'd like to skip it where possible. The best bang for 
maag: matrix:00000052: * the buck seems to be to check whether both inputs are in the int32 
maag: matrix:00000053: * range; if so, no overflow is possible. (But that only works if we 
maag: matrix:00000054: * really have a 64-bit int64 datatype...) 
maag: matrix:00000055: * 
maag: matrix:00000056: */ 
maag: matrix:00000057: #define CHECKINT64MULT(result, arg1, arg2) \ 
maag: matrix:00000058: do { \ 
maag: matrix:00000059:  if (!(arg1 >= (int32) INT_MIN && arg1 <= (int32) INT_MAX && \ 
maag: matrix:00000060:  arg2 >= (int32) INT_MIN && arg2 <= (int32) INT_MAX) && \ 
maag: matrix:00000061:  arg2 != 0 && \ 
maag: matrix:00000062:  (result / arg2 != arg1 *PIPE**PIPE* (arg2 == -1 && arg1 < 0 && result < 0))) \ 
maag: matrix:00000063:  ereport(ERROR, \ 
maag: matrix:00000064:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), \ 
maag: matrix:00000065:  errmsg("int value out of range: overflow"),errOmitLocation(true))); \ 
maag: matrix:00000066: } while(0) 
maag: matrix:00000067:  
maag: matrix:00000068:  
maag: matrix:00000069: /* 
maag: matrix:00000070:  * matrix_transpose - transpose an array[x][y] into an array[y][x]. 
maag: matrix:00000071:  */ 
maag: matrix:00000072: Datum 
maag: matrix:00000073: matrix_transpose(PG_FUNCTION_ARGS) 
maag: matrix:00000074: { 
maag: matrix:00000075:  ArrayType *m, *result; 
maag: matrix:00000089:  ereport(ERROR, 
maag: matrix:00000090:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maag: matrix:00000091:  errmsg("argument must be a two dimensional array"))); 
maag: matrix:00000093:  ereport(ERROR, 
maag: matrix:00000094:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
maag: matrix:00000095:  errmsg("null array element not allowed in this context"))); 
maag: matrix:00000097:  ereport(ERROR, 
maag: matrix:00000098:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00000099:  errmsg("could not determine anyarray/anyelement type because " 
maag: matrix:00000100:  "input has type \"unknown\""))); 
maag: matrix:00000182:  ereport(ERROR, 
maag: matrix:00000183:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maag: matrix:00000184:  errmsg("argument must be a two dimensional array"))); 
maag: matrix:00000186:  ereport(ERROR, 
maag: matrix:00000187:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maag: matrix:00000188:  errmsg("non-conformable arrays"))); 
maag: matrix:00000191:  ereport(ERROR, 
maag: matrix:00000192:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
maag: matrix:00000193:  errmsg("null array element not allowed in this context"))); 
maag: matrix:00000195:  ereport(ERROR, 
maag: matrix:00000196:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00000197:  errmsg("could not determine anyarray/anyelement type because " 
maag: matrix:00000198:  "input has type \"unknown\""))); 
maag: matrix:00000200:  ereport(ERROR, 
maag: matrix:00000201:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00000202:  errmsg("cannot multiply arrays of different element types"))); 
maag: matrix:00000205:  ereport(ERROR, 
maag: matrix:00000206:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00000207:  errmsg("datatype not supported for array multiplication"))); 
maag: matrix:00000344:  ereport(ERROR, 
maag: matrix:00000345:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maag: matrix:00000346:  errmsg("matrix_add called with %d arguments", PG_NARGS()))); 
maag: matrix:00000375:  ereport(ERROR, 
maag: matrix:00000376:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00000377:  errmsg("matrix_add: unsupported datatype"))); 
maag: matrix:00000415:  ereport(ERROR, 
maag: matrix:00000416:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00000417:  errmsg("matrix_add: return datatype lookup failure"))); 
maag: matrix:00000444:  ereport(ERROR, 
maag: matrix:00000445:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maag: matrix:00000446:  errmsg("matrix_add: Dimensionality of both arrays must match"))); 
maag: matrix:00000450:  ereport(ERROR, 
maag: matrix:00000451:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maag: matrix:00000452:  errmsg("matrix_add: non-conformable arrays"))); 
maag: matrix:00000455:  ereport(ERROR, 
maag: matrix:00000456:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
maag: matrix:00000457:  errmsg("matrix_add: null array element not allowed in this context"))); 
maag: matrix:00000462:  ereport(ERROR, 
maag: matrix:00000463:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00000464:  errmsg("matrix_add: unsupported datatype"))); 
maag: matrix:00000500:  ereport(ERROR, 
maag: matrix:00000501:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00000502:  errmsg("matrix_add: can not downconvert state"))); 
maag: matrix:00000536:  ereport(ERROR, 
maag: matrix:00000537:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00000538:  errmsg("matrix_add: can not downconvert state"))); 
maag: matrix:00000583:  ereport(ERROR, 
maag: matrix:00000584:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00000585:  errmsg("matrix_add: can not downconvert state"))); 
maag: matrix:00000631:  ereport(ERROR, 
maag: matrix:00000632:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00000633:  errmsg("matrix_add: can not downconvert state"))); 
maag: matrix:00000684:  ereport(ERROR, 
maag: matrix:00000685:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00000686:  errmsg("matrix_add: can not downconvert state"))); 
maag: matrix:00001066:  ereport(ERROR, 
maag: matrix:00001067:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maag: matrix:00001068:  errmsg("matrix_smultiply_int8 called with %d arguments", 
maag: matrix:00001069:  PG_NARGS()))); 
maag: matrix:00001079:  ereport(ERROR, 
maag: matrix:00001080:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00001081:  errmsg("matrix_smultiply_int8 datatype mismatch"))); 
maag: matrix:00001117:  ereport(ERROR, 
maag: matrix:00001118:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maag: matrix:00001119:  errmsg("matrix_smultiply_float8 called with %d arguments", 
maag: matrix:00001120:  PG_NARGS()))); 
maag: matrix:00001130:  ereport(ERROR, 
maag: matrix:00001131:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
maag: matrix:00001132:  errmsg("matrix_smultiply_float8 datatype mismatch"))); 
aaaaa GP_IGNORE: maae: misc - ./backend/utils/adt/misc.c
maae: misc:00000099:  ereport(ERROR, 
maae: misc:00000100:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
maae: misc:00000101:  (errmsg("must be superuser to signal other server processes")))); 
maae: misc:00000109:  ereport(WARNING, 
maae: misc:00000110:  (errmsg("PID %d is not a PostgreSQL server process", pid))); 
maae: misc:00000122:  ereport(WARNING, 
maae: misc:00000123:  (errmsg("could not send signal to process %d: %m", pid))); 
maae: misc:00000157:  ereport(ERROR, 
maae: misc:00000158:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
maae: misc:00000159:  (errmsg("must be superuser to cancel a query")))); 
maae: misc:00000164:  ereport(WARNING, 
maae: misc:00000165:  (errcode(ERRCODE_WARNING), 
maae: misc:00000166:  errmsg("invalid session_id or command_id for query (session_id, command_id): (%d, %d)", 
maae: misc:00000167:  DatumGetInt32(sessionId), DatumGetInt32(commandId)))); 
maae: misc:00000174:  ereport(WARNING, 
maae: misc:00000175:  (errcode(ERRCODE_WARNING), 
maae: misc:00000176:  errmsg("failed to cancel query (session_id, command_id): (%d, %d)", 
maae: misc:00000177:  DatumGetInt32(sessionId), DatumGetInt32(commandId)))); 
maae: misc:00000199:  ereport(ERROR, 
maae: misc:00000200:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
maae: misc:00000201:  (errmsg("must be superuser to signal the postmaster")))); 
maae: misc:00000205:  ereport(WARNING, 
maae: misc:00000206:  (errmsg("failed to send signal to postmaster: %m"))); 
maae: misc:00000221:  ereport(ERROR, 
maae: misc:00000222:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
maae: misc:00000223:  (errmsg("must be superuser to rotate log files")))); 
maae: misc:00000227:  ereport(WARNING, 
maae: misc:00000228:  (errmsg("rotation not possible because log redirection not active"))); 
maae: misc:00000268:  ereport(WARNING, 
maae: misc:00000269:  (errmsg("global tablespace never has databases"))); 
maae: misc:00000284:  ereport(ERROR, 
maae: misc:00000285:  (errcode_for_file_access(), 
maae: misc:00000286:  errmsg("could not open directory \"%s\": %m", 
maae: misc:00000287:  fctx->location))); 
maae: misc:00000288:  ereport(WARNING, 
maae: misc:00000289:  (errmsg("%u is not a tablespace OID", tablespaceOid))); 
aaaaa GP_IGNORE: naai: nabstime - ./backend/utils/adt/nabstime.c
naai: nabstime:00000158:  ereport(WARNING, 
naai: nabstime:00000159:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
naai: nabstime:00000160:  errmsg("invalid time zone name: \"%s\"", 
naai: nabstime:00000161:  tm->tm_zone), 
naai: nabstime:00000162:  errOmitLocation(true))); 
naai: nabstime:00000271:  elog(ERROR, "unexpected dtype %d while parsing abstime \"%s\"", 
naai: nabstime:00000272:  dtype, str); 
naai: nabstime:00000479:  ereport(ERROR, 
naai: nabstime:00000480:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
naai: nabstime:00000481:  errmsg("timestamp out of range"), 
naai: nabstime:00000482:  errOmitLocation(true))); 
naai: nabstime:00000506:  ereport(ERROR, 
naai: nabstime:00000507:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
naai: nabstime:00000508:  errmsg("cannot convert abstime \"invalid\" to timestamp"), 
naai: nabstime:00000509:  errOmitLocation(true))); 
naai: nabstime:00000524:  ereport(ERROR, 
naai: nabstime:00000525:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
naai: nabstime:00000526:  errmsg("timestamp out of range"), 
naai: nabstime:00000527:  errOmitLocation(true))); 
naai: nabstime:00000555:  ereport(ERROR, 
naai: nabstime:00000556:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
naai: nabstime:00000557:  errmsg("timestamp out of range"), 
naai: nabstime:00000558:  errOmitLocation(true))); 
naai: nabstime:00000582:  ereport(ERROR, 
naai: nabstime:00000583:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
naai: nabstime:00000584:  errmsg("cannot convert abstime \"invalid\" to timestamp"), 
naai: nabstime:00000585:  errOmitLocation(true))); 
naai: nabstime:00000600:  ereport(ERROR, 
naai: nabstime:00000601:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
naai: nabstime:00000602:  errmsg("timestamp out of range"), 
naai: nabstime:00000603:  errOmitLocation(true))); 
naai: nabstime:00000659:  elog(ERROR, "unexpected dtype %d while parsing reltime \"%s\"", 
naai: nabstime:00000660:  dtype, str); 
naai: nabstime:00000803:  ereport(ERROR, 
naai: nabstime:00000804:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naai: nabstime:00000805:  errmsg("invalid status in external \"tinterval\" value"), 
naai: nabstime:00000806:  errOmitLocation(true))); 
naai: nabstime:00000881:  ereport(ERROR, 
naai: nabstime:00000882:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
naai: nabstime:00000883:  errmsg("cannot convert reltime \"invalid\" to interval"), 
naai: nabstime:00000884:  errOmitLocation(true))); 
naai: nabstime:00001564:  ereport(ERROR, 
naai: nabstime:00001565:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
naai: nabstime:00001566:  errmsg("invalid input syntax for type tinterval: \"%s\"", 
naai: nabstime:00001567:  i_string), 
naai: nabstime:00001568:  errOmitLocation(true))); 
aaaaa GP_IGNORE: naae: name - ./backend/utils/adt/name.c
naae: name:00000085:  ereport(ERROR, 
naae: name:00000086:  (errcode(ERRCODE_NAME_TOO_LONG), 
naae: name:00000087:  errmsg("identifier too long"), 
naae: name:00000088:  errdetail("Identifier must be less than %d characters.", 
naae: name:00000089:  NAMEDATALEN))); 
aaaaa GP_IGNORE: naah: network - ./backend/utils/adt/network.c
naah: network:00000105:  ereport(ERROR, 
naah: network:00000106:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
naah: network:00000107:  /* translator: first %s is inet or cidr */ 
naah: network:00000108:  errmsg("invalid input syntax for type %s: \"%s\"", 
naah: network:00000109:  is_cidr ? "cidr" : "inet", src), 
naah: network:00000110:  errOmitLocation(true))); 
naah: network:00000118:  ereport(ERROR, 
naah: network:00000119:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
naah: network:00000120:  errmsg("invalid cidr value: \"%s\"", src), 
naah: network:00000121:  errdetail("Value has bits set to right of mask."), 
naah: network:00000122:  errOmitLocation(true))); 
naah: network:00000161:  ereport(ERROR, 
naah: network:00000162:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naah: network:00000163:  errmsg("could not format inet value: %m"), 
naah: network:00000164:  errOmitLocation(true))); 
naah: network:00000218:  ereport(ERROR, 
naah: network:00000219:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naah: network:00000220:  /* translator: %s is inet or cidr */ 
naah: network:00000221:  errmsg("invalid address family in external \"%s\" value", 
naah: network:00000222:  is_cidr ? "cidr" : "inet"), 
naah: network:00000223:  errOmitLocation(true))); 
naah: network:00000226:  ereport(ERROR, 
naah: network:00000227:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naah: network:00000228:  /* translator: %s is inet or cidr */ 
naah: network:00000229:  errmsg("invalid bits in external \"%s\" value", 
naah: network:00000230:  is_cidr ? "cidr" : "inet"), 
naah: network:00000231:  errOmitLocation(true))); 
naah: network:00000236:  ereport(ERROR, 
naah: network:00000237:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naah: network:00000238:  /* translator: %s is inet or cidr */ 
naah: network:00000239:  errmsg("invalid length in external \"%s\" value", 
naah: network:00000240:  is_cidr ? "cidr" : "inet"), 
naah: network:00000241:  errOmitLocation(true))); 
naah: network:00000253:  ereport(ERROR, 
naah: network:00000254:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naah: network:00000255:  errmsg("invalid external \"cidr\" value"), 
naah: network:00000256:  errdetail("Value has bits set to right of mask."), 
naah: network:00000257:  errOmitLocation(true))); 
naah: network:00000368:  elog(ERROR, "invalid inet bit length: %d", bits); 
naah: network:00000405:  ereport(ERROR, 
naah: network:00000406:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
naah: network:00000407:  errmsg("invalid mask length: %d", bits), 
naah: network:00000408:  errOmitLocation(true))); 
naah: network:00000433:  ereport(ERROR, 
naah: network:00000434:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
naah: network:00000435:  errmsg("invalid mask length: %d", bits), 
naah: network:00000436:  errOmitLocation(true))); 
naah: network:00000650:  ereport(ERROR, 
naah: network:00000651:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naah: network:00000652:  errmsg("could not format inet value: %m"), 
naah: network:00000653:  errOmitLocation(true))); 
naah: network:00000676:  ereport(ERROR, 
naah: network:00000677:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naah: network:00000678:  errmsg("could not format inet value: %m"), 
naah: network:00000679:  errOmitLocation(true))); 
naah: network:00000702:  ereport(ERROR, 
naah: network:00000703:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naah: network:00000704:  errmsg("could not format inet value: %m"), 
naah: network:00000705:  errOmitLocation(true))); 
naah: network:00000721:  ereport(ERROR, 
naah: network:00000722:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naah: network:00000723:  errmsg("could not format cidr value: %m"), 
naah: network:00000724:  errOmitLocation(true))); 
naah: network:00000988:  elog(ERROR, "unsupported type: %u", typid); 
naah: network:00001291:  ereport(ERROR, 
naah: network:00001292:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
naah: network:00001293:  errmsg("cannot AND inet values of different sizes"), 
naah: network:00001294:  errOmitLocation(true))); 
naah: network:00001324:  ereport(ERROR, 
naah: network:00001325:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
naah: network:00001326:  errmsg("cannot OR inet values of different sizes"), 
naah: network:00001327:  errOmitLocation(true))); 
naah: network:00001386:  ereport(ERROR, 
naah: network:00001387:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naah: network:00001388:  errmsg("result is out of range"), 
naah: network:00001389:  errOmitLocation(true))); 
naah: network:00001428:  ereport(ERROR, 
naah: network:00001429:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
naah: network:00001430:  errmsg("cannot subtract inet values of different sizes"), 
naah: network:00001431:  errOmitLocation(true))); 
naah: network:00001464:  ereport(ERROR, 
naah: network:00001465:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naah: network:00001466:  errmsg("result is out of range"), 
naah: network:00001467:  errOmitLocation(true))); 
aaaaa GP_IGNORE: naag: notxin - ./backend/utils/adt/not_in.c
naag: notxin:00000062:  ereport(ERROR, 
naag: notxin:00000063:  (errcode(ERRCODE_INVALID_NAME), 
naag: notxin:00000064:  errmsg("invalid name syntax"), 
naag: notxin:00000065:  errhint("Must provide \"relationname.columnname\"."))); 
naag: notxin:00000076:  ereport(ERROR, 
naag: notxin:00000077:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
naag: notxin:00000078:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
naag: notxin:00000079:  attribute, 
naag: notxin:00000080:  RelationGetRelationName(relation_to_scan)))); 
aaaaa GP_IGNORE: naah: numeric - ./backend/utils/adt/numeric.c
naah: numeric:00000451:  ereport(ERROR, 
naah: numeric:00000452:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naah: numeric:00000453:  errmsg("invalid length in external \"numeric\" value"), 
naah: numeric:00000454:  errOmitLocation(true))); 
naah: numeric:00000463:  ereport(ERROR, 
naah: numeric:00000464:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naah: numeric:00000465:  errmsg("invalid sign in external \"numeric\" value"), 
naah: numeric:00000466:  errOmitLocation(true))); 
naah: numeric:00000474:  ereport(ERROR, 
naah: numeric:00000475:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
naah: numeric:00000476:  errmsg("invalid digit in external \"numeric\" value"), 
naah: numeric:00000477:  errOmitLocation(true))); 
naah: numeric:00000874:  ereport(ERROR, 
naah: numeric:00000875:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION), 
naah: numeric:00000876:  errmsg("count must be greater than zero"), 
naah: numeric:00000877:  errOmitLocation(true))); 
naah: numeric:00000888:  ereport(ERROR, 
naah: numeric:00000889:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION), 
naah: numeric:00000890:  errmsg("lower bound cannot equal upper bound"), 
naah: numeric:00000891:  errOmitLocation(true))); 
naah: numeric:00001535:  ereport(ERROR, 
naah: numeric:00001536:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naah: numeric:00001537:  errmsg("value overflows numeric format"), 
naah: numeric:00001538:  errOmitLocation(true))); 
naah: numeric:00001808:  ereport(ERROR, 
naah: numeric:00001809:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_POWER_FUNCTION), 
naah: numeric:00001810:  errmsg("invalid argument for power function"), 
naah: numeric:00001811:  errOmitLocation(true))); 
naah: numeric:00001863:  ereport(ERROR, 
naah: numeric:00001864:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
naah: numeric:00001865:  errmsg("cannot convert NaN to integer"), 
naah: numeric:00001866:  errOmitLocation(true))); 
naah: numeric:00001887:  ereport(ERROR, 
naah: numeric:00001888:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naah: numeric:00001889:  errmsg("integer out of range"), 
naah: numeric:00001890:  errOmitLocation(true))); 
naah: numeric:00001897:  ereport(ERROR, 
naah: numeric:00001898:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naah: numeric:00001899:  errmsg("integer out of range"), 
naah: numeric:00001900:  errOmitLocation(true))); 
naah: numeric:00001931:  ereport(ERROR, 
naah: numeric:00001932:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
naah: numeric:00001933:  errmsg("cannot convert NaN to bigint"), 
naah: numeric:00001934:  errOmitLocation(true))); 
naah: numeric:00001940:  ereport(ERROR, 
naah: numeric:00001941:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naah: numeric:00001942:  errmsg("bigint out of range"), 
naah: numeric:00001943:  errOmitLocation(true))); 
naah: numeric:00001976:  ereport(ERROR, 
naah: numeric:00001977:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
naah: numeric:00001978:  errmsg("cannot convert NaN to smallint"), 
naah: numeric:00001979:  errOmitLocation(true))); 
naah: numeric:00001985:  ereport(ERROR, 
naah: numeric:00001986:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naah: numeric:00001987:  errmsg("smallint out of range"), 
naah: numeric:00001988:  errOmitLocation(true))); 
naah: numeric:00001995:  ereport(ERROR, 
naah: numeric:00001996:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naah: numeric:00001997:  errmsg("smallint out of range"), 
naah: numeric:00001998:  errOmitLocation(true))); 
naah: numeric:00002179:  elog(ERROR, "expected 3-element numeric array"); 
naah: numeric:00002355:  elog(ERROR, "expected 3-element numeric array"); 
naah: numeric:00002607:  elog(ERROR, "internal error: inversion function called with NULL " 
naah: numeric:00002608:  "transition value but non-NULL argument"); 
naah: numeric:00002638:  elog(ERROR, "internal error: inversion function called with NULL " 
naah: numeric:00002639:  "transition value but non-NULL argument"); 
naah: numeric:00002670:  elog(ERROR, "internal error: inversion function called with NULL " 
naah: numeric:00002671:  "transition value but non-NULL argument"); 
naah: numeric:00003324:  ereport(ERROR, 
naah: numeric:00003325:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
naah: numeric:00003326:  errmsg("invalid input syntax for type numeric: \"%s\"", str), 
naah: numeric:00003327:  errOmitLocation(true))); 
naah: numeric:00003351:  ereport(ERROR, 
naah: numeric:00003352:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
naah: numeric:00003353:  errmsg("invalid input syntax for type numeric: \"%s\"", 
naah: numeric:00003354:  str), 
naah: numeric:00003355:  errOmitLocation(true))); 
naah: numeric:00003376:  ereport(ERROR, 
naah: numeric:00003377:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
naah: numeric:00003378:  errmsg("invalid input syntax for type numeric: \"%s\"", 
naah: numeric:00003379:  str), 
naah: numeric:00003380:  errOmitLocation(true))); 
naah: numeric:00003384:  ereport(ERROR, 
naah: numeric:00003385:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
naah: numeric:00003386:  errmsg("invalid input syntax for type numeric: \"%s\"", 
naah: numeric:00003387:  str), 
naah: numeric:00003388:  errOmitLocation(true))); 
naah: numeric:00003399:  ereport(ERROR, 
naah: numeric:00003400:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
naah: numeric:00003401:  errmsg("invalid input syntax for type numeric: \"%s\"", 
naah: numeric:00003402:  str), 
naah: numeric:00003403:  errOmitLocation(true))); 
naah: numeric:00003777:  ereport(ERROR, 
naah: numeric:00003778:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naah: numeric:00003779:  errmsg("value overflows numeric format"), 
naah: numeric:00003780:  errdetail("Overflowing value: %s", ntp), 
naah: numeric:00003781:  errOmitLocation(true) 
naah: numeric:00003782:  )); 
naah: numeric:00003854:  ereport(ERROR, 
naah: numeric:00003855:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naah: numeric:00003856:  errmsg("value overflows numeric format"), 
naah: numeric:00003857:  errdetail("Overflowing value: %s", ntp), 
naah: numeric:00003858:  errOmitLocation(true) 
naah: numeric:00003859:  )); 
naah: numeric:00003932:  ereport(ERROR, 
naah: numeric:00003933:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naah: numeric:00003934:  errmsg("numeric field overflow"), 
naah: numeric:00003935:  errdetail("A field with precision %d, scale %d must round to an absolute value less than %s%d. Rounded overflowing value: %s", 
naah: numeric:00003936:  precision, scale, 
naah: numeric:00003937:  /* Display 10^0 as 1 */ 
naah: numeric:00003938:  maxdigits ? "10^" : "", 
naah: numeric:00003939:  maxdigits ? maxdigits : 1, 
naah: numeric:00003940:  ntp 
naah: numeric:00003941:  ), 
naah: numeric:00003942:  errOmitLocation(true))); 
naah: numeric:00004086:  ereport(ERROR, 
naah: numeric:00004087:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
naah: numeric:00004088:  errmsg("invalid input syntax for type double precision: \"%s\"", 
naah: numeric:00004089:  tmp), 
naah: numeric:00004090:  errOmitLocation(true))); 
naah: numeric:00004113:  ereport(ERROR, 
naah: numeric:00004114:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
naah: numeric:00004115:  errmsg("invalid input syntax for type double precision: \"%s\"", 
naah: numeric:00004116:  tmp), 
naah: numeric:00004117:  errOmitLocation(true))); 
naah: numeric:00004640:  ereport(ERROR, 
naah: numeric:00004641:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
naah: numeric:00004642:  errmsg("division by zero"), 
naah: numeric:00004643:  errOmitLocation(true))); 
naah: numeric:00005051:  ereport(ERROR, 
naah: numeric:00005052:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_POWER_FUNCTION), 
naah: numeric:00005053:  errmsg("cannot take square root of a negative number"), 
naah: numeric:00005054:  errOmitLocation(true))); 
naah: numeric:00005138:  ereport(ERROR, 
naah: numeric:00005139:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naah: numeric:00005140:  errmsg("argument for function \"exp\" too big"), 
naah: numeric:00005141:  errOmitLocation(true))); 
naah: numeric:00005262:  ereport(ERROR, 
naah: numeric:00005263:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_LOG), 
naah: numeric:00005264:  errmsg("cannot take logarithm of zero"), 
naah: numeric:00005265:  errOmitLocation(true))); 
naah: numeric:00005267:  ereport(ERROR, 
naah: numeric:00005268:  (errcode(ERRCODE_INVALID_ARGUMENT_FOR_LOG), 
naah: numeric:00005269:  errmsg("cannot take logarithm of a negative number"), 
naah: numeric:00005270:  errOmitLocation(true))); 
naah: numeric:00005511:  ereport(ERROR, 
naah: numeric:00005512:  (errcode(ERRCODE_FLOATING_POINT_EXCEPTION), 
naah: numeric:00005513:  errmsg("zero raised to zero is undefined"), 
naah: numeric:00005514:  errOmitLocation(true))); 
naah: numeric:00006077:  elog(ERROR, "expected 3-element numeric array"); 
naah: numeric:00006086:  elog(ERROR, "expected 3-element numeric array"); 
aaaaa GP_IGNORE: naai: numutils - ./backend/utils/adt/numutils.c
naai: numutils:00000049:  elog(ERROR, "NULL pointer"); 
naai: numutils:00000051:  ereport(ERROR, 
naai: numutils:00000052:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
naai: numutils:00000053:  errmsg("invalid input syntax for integer: \"%s\"",s), 
naai: numutils:00000054:  errOmitLocation(true))); 
naai: numutils:00000061:  ereport(ERROR, 
naai: numutils:00000062:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
naai: numutils:00000063:  errmsg("invalid input syntax for integer: \"%s\"",s), 
naai: numutils:00000064:  errOmitLocation(true))); 
naai: numutils:00000075:  ereport(ERROR, 
naai: numutils:00000076:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naai: numutils:00000077:  errmsg("value \"%s\" is out of range for type integer", s), 
naai: numutils:00000078:  errOmitLocation(true))); 
naai: numutils:00000082:  ereport(ERROR, 
naai: numutils:00000083:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naai: numutils:00000084:  errmsg("value \"%s\" is out of range for type smallint", s), 
naai: numutils:00000085:  errOmitLocation(true))); 
naai: numutils:00000089:  ereport(ERROR, 
naai: numutils:00000090:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
naai: numutils:00000091:  errmsg("value \"%s\" is out of range for 8-bit integer", s), 
naai: numutils:00000092:  errOmitLocation(true))); 
naai: numutils:00000095:  elog(ERROR, "unsupported result size: %d", size); 
naai: numutils:00000106:  ereport(ERROR, 
naai: numutils:00000107:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
naai: numutils:00000108:  errmsg("invalid input syntax for integer: \"%s\"",s), 
naai: numutils:00000109:  errOmitLocation(true))); 
aaaaa GP_IGNORE: oaad: oid - ./backend/utils/adt/oid.c
oaad: oid:00000041:  ereport(ERROR, 
oaad: oid:00000042:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
oaad: oid:00000043:  errmsg("invalid input syntax for type oid: \"%s\"",s), 
oaad: oid:00000044:  errOmitLocation(true))); 
oaad: oid:00000055:  ereport(ERROR, 
oaad: oid:00000056:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
oaad: oid:00000057:  errmsg("invalid input syntax for type oid: \"%s\"",s), 
oaad: oid:00000058:  errOmitLocation(true))); 
oaad: oid:00000061:  ereport(ERROR, 
oaad: oid:00000062:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
oaad: oid:00000063:  errmsg("invalid input syntax for type oid: \"%s\"",s), 
oaad: oid:00000064:  errOmitLocation(true))); 
oaad: oid:00000067:  ereport(ERROR, 
oaad: oid:00000068:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
oaad: oid:00000069:  errmsg("value \"%s\" is out of range for type oid", s), 
oaad: oid:00000070:  errOmitLocation(true))); 
oaad: oid:00000083:  ereport(ERROR, 
oaad: oid:00000084:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
oaad: oid:00000085:  errmsg("invalid input syntax for type oid: \"%s\"",s), 
oaad: oid:00000086:  errOmitLocation(true))); 
oaad: oid:00000106:  ereport(ERROR, 
oaad: oid:00000107:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
oaad: oid:00000108:  errmsg("value \"%s\" is out of range for type oid", s), 
oaad: oid:00000109:  errOmitLocation(true))); 
oaad: oid:00000212:  ereport(ERROR, 
oaad: oid:00000213:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
oaad: oid:00000214:  errmsg("oidvector has too many elements"))); 
oaad: oid:00000285:  ereport(ERROR, 
oaad: oid:00000286:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
oaad: oid:00000287:  errmsg("invalid oidvector data"))); 
aaaaa GP_IGNORE: oabd: oraclexcompat - ./backend/utils/adt/oracle_compat.c
oabd: oraclexcompat:00000074:  ereport(ERROR, 
oabd: oraclexcompat:00000075:  (errcode(ERRCODE_OUT_OF_MEMORY), 
oabd: oraclexcompat:00000076:  errmsg("out of memory"))); 
oabd: oraclexcompat:00000100:  ereport(ERROR, 
oabd: oraclexcompat:00000101:  (errcode(ERRCODE_CHARACTER_NOT_IN_REPERTOIRE), 
oabd: oraclexcompat:00000102:  errmsg("invalid multibyte character for locale"), 
oabd: oraclexcompat:00000103:  errhint("The server's LC_CTYPE locale is probably incompatible with the database encoding."))); 
oabd: oraclexcompat:00000126:  ereport(ERROR, 
oabd: oraclexcompat:00000127:  (errcode(ERRCODE_OUT_OF_MEMORY), 
oabd: oraclexcompat:00000128:  errmsg("out of memory"))); 
oabd: oraclexcompat:00000140:  ereport(ERROR, 
oabd: oraclexcompat:00000141:  (errcode(ERRCODE_CHARACTER_NOT_IN_REPERTOIRE), 
oabd: oraclexcompat:00000142:  errmsg("invalid multibyte character for locale"))); 
oabd: oraclexcompat:00000174:  ereport(ERROR, 
oabd: oraclexcompat:00000175:  (errcode(ERRCODE_OUT_OF_MEMORY), 
oabd: oraclexcompat:00000176:  errmsg("out of memory"))); 
oabd: oraclexcompat:00000194:  ereport(ERROR, 
oabd: oraclexcompat:00000195:  (errcode(ERRCODE_CHARACTER_NOT_IN_REPERTOIRE), 
oabd: oraclexcompat:00000196:  errmsg("invalid multibyte character for locale"), 
oabd: oraclexcompat:00000197:  errhint("The server's LC_CTYPE locale is probably incompatible with the database encoding."))); 
oabd: oraclexcompat:00000217:  ereport(ERROR, 
oabd: oraclexcompat:00000218:  (errcode(ERRCODE_CHARACTER_NOT_IN_REPERTOIRE), 
oabd: oraclexcompat:00000219:  errmsg("UTF-16 to UTF-8 translation failed: %lu", 
oabd: oraclexcompat:00000220:  GetLastError()))); 
oabd: oraclexcompat:00000227:  ereport(ERROR, 
oabd: oraclexcompat:00000228:  (errcode(ERRCODE_CHARACTER_NOT_IN_REPERTOIRE), 
oabd: oraclexcompat:00000229:  errmsg("UTF-16 to UTF-8 translation failed: %lu", 
oabd: oraclexcompat:00000230:  GetLastError()))); 
oabd: oraclexcompat:00000608:  ereport(ERROR, 
oabd: oraclexcompat:00000609:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
oabd: oraclexcompat:00000610:  errmsg("requested length too large"))); 
oabd: oraclexcompat:00000705:  ereport(ERROR, 
oabd: oraclexcompat:00000706:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
oabd: oraclexcompat:00000707:  errmsg("requested length too large"))); 
oabd: oraclexcompat:00001179:  ereport(ERROR, 
oabd: oraclexcompat:00001180:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
oabd: oraclexcompat:00001181:  errmsg("requested length too large"))); 
oabd: oraclexcompat:00001316:  ereport(ERROR, 
oabd: oraclexcompat:00001317:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
oabd: oraclexcompat:00001318:  errmsg("requested character too large"))); 
oabd: oraclexcompat:00001362:  ereport(ERROR, 
oabd: oraclexcompat:00001363:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
oabd: oraclexcompat:00001364:  errmsg("requested character too large for encoding: %d", 
oabd: oraclexcompat:00001365:  cvalue))); 
oabd: oraclexcompat:00001409:  ereport(ERROR, 
oabd: oraclexcompat:00001410:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
oabd: oraclexcompat:00001411:  errmsg("null character not permitted"))); 
oabd: oraclexcompat:00001416:  ereport(ERROR, 
oabd: oraclexcompat:00001417:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
oabd: oraclexcompat:00001418:  errmsg("requested character too large for encoding: %d", 
oabd: oraclexcompat:00001419:  cvalue))); 
oabd: oraclexcompat:00001468:  ereport(ERROR, 
oabd: oraclexcompat:00001469:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
oabd: oraclexcompat:00001470:  errmsg("requested length too large"))); 
aaaaa GP_IGNORE: paba: percentile - ./backend/utils/adt/percentile.c
paba: percentile:00000089:  ereport(ERROR, 
paba: percentile:00000090:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
paba: percentile:00000091:  errmsg("input is out of range"), 
paba: percentile:00000092:  errhint("Argument to percentile function must be between 0.0 and 1.0."))); 
paba: percentile:00000173:  elog(ERROR, "unexpected result type: %d", (int) resulttype); 
paba: percentile:00000229:  ereport(ERROR, 
paba: percentile:00000230:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
paba: percentile:00000231:  errmsg("input is out of range"), 
paba: percentile:00000232:  errhint("Argument to percentile function must be between 0.0 and 1.0."))); 
aaaaa GP_IGNORE: paaj: pgxlocale - ./backend/utils/adt/pg_locale.c
paaj: pgxlocale:00000181:  elog(FATAL, "unrecognized LC category: %d", category); 
paaj: pgxlocale:00000353:  elog(ERROR, "invalid LC_COLLATE setting"); 
paaj: pgxlocale:00000489:  elog(ERROR, "invalid LC_CTYPE setting"); 
paaj: pgxlocale:00000630:  elog(ERROR, 
paaj: pgxlocale:00000631:  "could not convert string to UTF-8:error %lu", GetLastError()); 
aaaaa GP_IGNORE: pabd: pgxlzcompress - ./backend/utils/adt/pg_lzcompress.c
pabd: pgxlzcompress:00000737:  elog(ERROR, "compressed data is corrupt"); 
aaaaa GP_IGNORE: pabb: pgstatfuncs - ./backend/utils/adt/pgstatfuncs.c
pabb: pgstatfuncs:00000973:  elog(NOTICE, "Renicing a session is not longer supported. Please use the Query Prioritization feature."); 
aaaaa GP_IGNORE: paaf: pivot - ./backend/utils/adt/pivot.c
paaf: pivot:00000128:  elog(ERROR, "unexpected data type"); 
paaf: pivot:00000169:  ereport(ERROR, 
paaf: pivot:00000170:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paaf: pivot:00000171:  errmsg("pivot_accum: labels are not type text"))); 
paaf: pivot:00000208:  ereport(ERROR, 
paaf: pivot:00000209:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paaf: pivot:00000210:  errmsg("pivot_accum called with %d input arguments", 
paaf: pivot:00000211:  PG_NARGS()))); 
paaf: pivot:00000335:  ereport(ERROR, 
paaf: pivot:00000336:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paaf: pivot:00000337:  errmsg("number of parameters != 2"))); 
paaf: pivot:00000348:  elog(ERROR, "could not determine data type of input 'label'"); 
paaf: pivot:00000350:  elog(ERROR, "could not determine data type of input 'value'"); 
paaf: pivot:00000364:  ereport(ERROR, 
paaf: pivot:00000365:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paaf: pivot:00000366:  errmsg("function returning record called in context " 
paaf: pivot:00000367:  "that cannot accept type record"))); 
aaaaa GP_IGNORE: pabb: pseudotypes - ./backend/utils/adt/pseudotypes.c
pabb: pseudotypes:00000092:  ereport(ERROR, 
pabb: pseudotypes:00000093:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000094:  errmsg("cannot accept a value of type any"))); 
pabb: pseudotypes:00000105:  ereport(ERROR, 
pabb: pseudotypes:00000106:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000107:  errmsg("cannot display a value of type any"))); 
pabb: pseudotypes:00000119:  ereport(ERROR, 
pabb: pseudotypes:00000120:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000121:  errmsg("cannot accept a value of type anyarray"))); 
pabb: pseudotypes:00000147:  ereport(ERROR, 
pabb: pseudotypes:00000148:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000149:  errmsg("cannot accept a value of type anyarray"))); 
pabb: pseudotypes:00000197:  ereport(ERROR, 
pabb: pseudotypes:00000198:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000199:  errmsg("cannot accept a value of type trigger"))); 
pabb: pseudotypes:00000210:  ereport(ERROR, 
pabb: pseudotypes:00000211:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000212:  errmsg("cannot display a value of type trigger"))); 
pabb: pseudotypes:00000224:  ereport(ERROR, 
pabb: pseudotypes:00000225:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000226:  errmsg("cannot accept a value of type language_handler"))); 
pabb: pseudotypes:00000237:  ereport(ERROR, 
pabb: pseudotypes:00000238:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000239:  errmsg("cannot display a value of type language_handler"))); 
pabb: pseudotypes:00000251:  ereport(ERROR, 
pabb: pseudotypes:00000252:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000253:  errmsg("cannot accept a value of type internal"))); 
pabb: pseudotypes:00000264:  ereport(ERROR, 
pabb: pseudotypes:00000265:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000266:  errmsg("cannot display a value of type internal"))); 
pabb: pseudotypes:00000278:  ereport(ERROR, 
pabb: pseudotypes:00000279:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000280:  errmsg("cannot accept a value of type opaque"))); 
pabb: pseudotypes:00000291:  ereport(ERROR, 
pabb: pseudotypes:00000292:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000293:  errmsg("cannot display a value of type opaque"))); 
pabb: pseudotypes:00000305:  ereport(ERROR, 
pabb: pseudotypes:00000306:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000307:  errmsg("cannot accept a value of type anyelement"))); 
pabb: pseudotypes:00000318:  ereport(ERROR, 
pabb: pseudotypes:00000319:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000320:  errmsg("cannot display a value of type anyelement"))); 
pabb: pseudotypes:00000331:  ereport(ERROR, 
pabb: pseudotypes:00000332:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000333:  errmsg("cannot accept a value of a shell type"))); 
pabb: pseudotypes:00000344:  ereport(ERROR, 
pabb: pseudotypes:00000345:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000346:  errmsg("cannot display a value of a shell type"))); 
pabb: pseudotypes:00000358:  ereport(ERROR, 
pabb: pseudotypes:00000359:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000360:  errmsg("cannot accept a value of type anytable"))); 
pabb: pseudotypes:00000371:  ereport(ERROR, 
pabb: pseudotypes:00000372:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabb: pseudotypes:00000373:  errmsg("cannot display a value of type anytable"))); 
aaaaa GP_IGNORE: raag: regexp - ./backend/utils/adt/regexp.c
raag: regexp:00000192:  ereport(ERROR, 
raag: regexp:00000193:  (errcode(ERRCODE_INVALID_REGULAR_EXPRESSION), 
raag: regexp:00000194:  errmsg("invalid regular expression: %s", errMsg), 
raag: regexp:00000195:  errOmitLocation(true))); 
raag: regexp:00000208:  ereport(ERROR, 
raag: regexp:00000209:  (errcode(ERRCODE_OUT_OF_MEMORY), 
raag: regexp:00000210:  errmsg("out of memory"))); 
raag: regexp:00000272:  ereport(ERROR, 
raag: regexp:00000273:  (errcode(ERRCODE_INVALID_REGULAR_EXPRESSION), 
raag: regexp:00000274:  errmsg("regular expression failed: %s", errMsg), 
raag: regexp:00000275:  errOmitLocation(true))); 
raag: regexp:00000434:  ereport(ERROR, 
raag: regexp:00000435:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raag: regexp:00000436:  errmsg("invalid regexp option: \"%c\"", 
raag: regexp:00000437:  opt_p[i]), 
raag: regexp:00000438:  errOmitLocation(true))); 
raag: regexp:00000708:  ereport(ERROR, 
raag: regexp:00000709:  (errcode(ERRCODE_INVALID_ESCAPE_SEQUENCE), 
raag: regexp:00000710:  errmsg("invalid escape string"), 
raag: regexp:00000711:  errhint("Escape string must be empty or one character."), 
raag: regexp:00000712:  errOmitLocation(true))); 
raag: regexp:00000892:  ereport(ERROR, 
raag: regexp:00000893:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raag: regexp:00000894:  errmsg("regexp_split does not support the global option"), 
raag: regexp:00000895:  errOmitLocation(true))); 
raag: regexp:00001161:  elog(ERROR, "invalid match ending position"); 
raag: regexp:00001167:  elog(ERROR, "invalid match starting position"); 
aaaaa GP_IGNORE: raah: regproc - ./backend/utils/adt/regproc.c
raah: regproc:00000100:  ereport(ERROR, 
raah: regproc:00000101:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
raah: regproc:00000102:  errmsg("function \"%s\" does not exist", pro_name_or_oid))); 
raah: regproc:00000105:  ereport(ERROR, 
raah: regproc:00000106:  (errcode(ERRCODE_AMBIGUOUS_FUNCTION), 
raah: regproc:00000107:  errmsg("more than one function named \"%s\"", 
raah: regproc:00000108:  pro_name_or_oid))); 
raah: regproc:00000121:  ereport(ERROR, 
raah: regproc:00000122:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
raah: regproc:00000123:  errmsg("function \"%s\" does not exist", pro_name_or_oid))); 
raah: regproc:00000125:  ereport(ERROR, 
raah: regproc:00000126:  (errcode(ERRCODE_AMBIGUOUS_FUNCTION), 
raah: regproc:00000127:  errmsg("more than one function named \"%s\"", 
raah: regproc:00000128:  pro_name_or_oid))); 
raah: regproc:00000279:  ereport(ERROR, 
raah: regproc:00000280:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
raah: regproc:00000281:  errmsg("function \"%s\" does not exist", pro_name_or_oid))); 
raah: regproc:00000449:  ereport(ERROR, 
raah: regproc:00000450:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
raah: regproc:00000451:  errmsg("operator does not exist: %s", opr_name_or_oid))); 
raah: regproc:00000453:  ereport(ERROR, 
raah: regproc:00000454:  (errcode(ERRCODE_AMBIGUOUS_FUNCTION), 
raah: regproc:00000455:  errmsg("more than one operator named %s", 
raah: regproc:00000456:  opr_name_or_oid))); 
raah: regproc:00000469:  ereport(ERROR, 
raah: regproc:00000470:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
raah: regproc:00000471:  errmsg("operator does not exist: %s", opr_name_or_oid))); 
raah: regproc:00000473:  ereport(ERROR, 
raah: regproc:00000474:  (errcode(ERRCODE_AMBIGUOUS_FUNCTION), 
raah: regproc:00000475:  errmsg("more than one operator named %s", 
raah: regproc:00000476:  opr_name_or_oid))); 
raah: regproc:00000624:  ereport(ERROR, 
raah: regproc:00000625:  (errcode(ERRCODE_UNDEFINED_PARAMETER), 
raah: regproc:00000626:  errmsg("missing argument"), 
raah: regproc:00000627:  errhint("Use NONE to denote the missing argument of a unary operator."))); 
raah: regproc:00000629:  ereport(ERROR, 
raah: regproc:00000630:  (errcode(ERRCODE_TOO_MANY_ARGUMENTS), 
raah: regproc:00000631:  errmsg("too many arguments"), 
raah: regproc:00000632:  errhint("Provide two argument types for operator."))); 
raah: regproc:00000637:  ereport(ERROR, 
raah: regproc:00000638:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
raah: regproc:00000639:  errmsg("operator does not exist: %s", opr_name_or_oid))); 
raah: regproc:00000807:  ereport(ERROR, 
raah: regproc:00000808:  (errcode(ERRCODE_UNDEFINED_TABLE), 
raah: regproc:00000809:  errmsg("relation \"%s\" does not exist", class_name_or_oid))); 
raah: regproc:00000971:  ereport(ERROR, 
raah: regproc:00000972:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
raah: regproc:00000973:  errmsg("type \"%s\" does not exist", typ_name_or_oid))); 
raah: regproc:00001090:  ereport(ERROR, 
raah: regproc:00001091:  (errcode(ERRCODE_INVALID_NAME), 
raah: regproc:00001092:  errmsg("invalid name syntax"))); 
raah: regproc:00001095:  ereport(ERROR, 
raah: regproc:00001096:  (errcode(ERRCODE_INVALID_NAME), 
raah: regproc:00001097:  errmsg("invalid name syntax"))); 
raah: regproc:00001154:  ereport(ERROR, 
raah: regproc:00001155:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
raah: regproc:00001156:  errmsg("expected a left parenthesis"))); 
raah: regproc:00001170:  ereport(ERROR, 
raah: regproc:00001171:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
raah: regproc:00001172:  errmsg("expected a right parenthesis"))); 
raah: regproc:00001189:  ereport(ERROR, 
raah: regproc:00001190:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
raah: regproc:00001191:  errmsg("expected a type name"))); 
raah: regproc:00001221:  ereport(ERROR, 
raah: regproc:00001222:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
raah: regproc:00001223:  errmsg("improper type name"))); 
raah: regproc:00001256:  ereport(ERROR, 
raah: regproc:00001257:  (errcode(ERRCODE_TOO_MANY_ARGUMENTS), 
raah: regproc:00001258:  errmsg("too many arguments"))); 
aaaaa GP_IGNORE: rabb: rixtriggers - ./backend/utils/adt/ri_triggers.c
rabb: rixtriggers:00000261:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00000293:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00000304:  ereport(ERROR, 
rabb: rixtriggers:00000305:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00000306:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00000340:  ereport(ERROR, 
rabb: rixtriggers:00000341:  (errcode(ERRCODE_FOREIGN_KEY_VIOLATION), 
rabb: rixtriggers:00000342:  errmsg("insert or update on table \"%s\" violates foreign key constraint \"%s\"", 
rabb: rixtriggers:00000343:  RelationGetRelationName(trigdata->tg_relation), 
rabb: rixtriggers:00000344:  tgargs[RI_CONSTRAINT_NAME_ARGNO]), 
rabb: rixtriggers:00000345:  errdetail("MATCH FULL does not allow mixing of null and nonnull key values."))); 
rabb: rixtriggers:00000366:  ereport(ERROR, 
rabb: rixtriggers:00000367:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00000368:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00000383:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00000437:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00000528:  ereport(ERROR, 
rabb: rixtriggers:00000529:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00000530:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00000544:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00000597:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00000699:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00000754:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00000764:  ereport(ERROR, 
rabb: rixtriggers:00000765:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00000766:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00000773:  elog(ERROR, "invalid match_type"); 
rabb: rixtriggers:00000888:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00000943:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00000953:  ereport(ERROR, 
rabb: rixtriggers:00000954:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00000955:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00000962:  elog(ERROR, "invalid match_type"); 
rabb: rixtriggers:00001047:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00001101:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00001111:  ereport(ERROR, 
rabb: rixtriggers:00001112:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00001113:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00001120:  elog(ERROR, "invalid match_type"); 
rabb: rixtriggers:00001219:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00001283:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00001293:  ereport(ERROR, 
rabb: rixtriggers:00001294:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00001295:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00001302:  elog(ERROR, "invalid match_type"); 
rabb: rixtriggers:00001394:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00001449:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00001459:  ereport(ERROR, 
rabb: rixtriggers:00001460:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00001461:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00001468:  elog(ERROR, "invalid match_type"); 
rabb: rixtriggers:00001573:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00001628:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00001638:  ereport(ERROR, 
rabb: rixtriggers:00001639:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00001640:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00001647:  elog(ERROR, "invalid match_type"); 
rabb: rixtriggers:00001732:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00001794:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00001804:  ereport(ERROR, 
rabb: rixtriggers:00001805:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00001806:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00001813:  elog(ERROR, "invalid match_type"); 
rabb: rixtriggers:00001913:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00002008:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00002018:  ereport(ERROR, 
rabb: rixtriggers:00002019:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00002020:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00002027:  elog(ERROR, "invalid match_type"); 
rabb: rixtriggers:00002111:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00002175:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00002195:  ereport(ERROR, 
rabb: rixtriggers:00002196:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00002197:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00002204:  elog(ERROR, "invalid match_type"); 
rabb: rixtriggers:00002303:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00002377:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00002397:  ereport(ERROR, 
rabb: rixtriggers:00002398:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00002399:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00002406:  elog(ERROR, "invalid match_type"); 
rabb: rixtriggers:00002436:  ereport(ERROR, 
rabb: rixtriggers:00002437:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
rabb: rixtriggers:00002438:  errmsg("function \"%s\" called with wrong number of trigger arguments", 
rabb: rixtriggers:00002439:  "RI_FKey_keyequal_upd"))); 
rabb: rixtriggers:00002448:  ereport(ERROR, 
rabb: rixtriggers:00002449:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabb: rixtriggers:00002450:  errmsg("no target table given for trigger \"%s\" on table \"%s\"", 
rabb: rixtriggers:00002451:  trigger->tgname, 
rabb: rixtriggers:00002452:  RelationGetRelationName(pk_rel)), 
rabb: rixtriggers:00002453:  errhint("Remove this referential integrity trigger and its mates, " 
rabb: rixtriggers:00002454:  "then do ALTER TABLE ADD CONSTRAINT."))); 
rabb: rixtriggers:00002474:  ereport(ERROR, 
rabb: rixtriggers:00002475:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00002476:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00002481:  elog(ERROR, "invalid match_type"); 
rabb: rixtriggers:00002510:  ereport(ERROR, 
rabb: rixtriggers:00002511:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
rabb: rixtriggers:00002512:  errmsg("function \"%s\" called with wrong number of trigger arguments", 
rabb: rixtriggers:00002513:  "RI_FKey_keyequal_upd"))); 
rabb: rixtriggers:00002522:  ereport(ERROR, 
rabb: rixtriggers:00002523:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabb: rixtriggers:00002524:  errmsg("no target table given for trigger \"%s\" on table \"%s\"", 
rabb: rixtriggers:00002525:  trigger->tgname, 
rabb: rixtriggers:00002526:  RelationGetRelationName(fk_rel)), 
rabb: rixtriggers:00002527:  errhint("Remove this referential integrity trigger and its mates, " 
rabb: rixtriggers:00002528:  "then do ALTER TABLE ADD CONSTRAINT."))); 
rabb: rixtriggers:00002548:  ereport(ERROR, 
rabb: rixtriggers:00002549:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00002550:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00002555:  elog(ERROR, "invalid match_type"); 
rabb: rixtriggers:00002668:  ereport(ERROR, 
rabb: rixtriggers:00002669:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
rabb: rixtriggers:00002670:  errmsg("MATCH PARTIAL not yet implemented"))); 
rabb: rixtriggers:00002673:  elog(ERROR, "unrecognized match type: %d", 
rabb: rixtriggers:00002674:  fkconstraint->fk_matchtype); 
rabb: rixtriggers:00002699:  elog(ERROR, "SPI_connect failed"); 
rabb: rixtriggers:00002708:  elog(ERROR, "SPI_prepare returned %d for %s", SPI_result, querystr); 
rabb: rixtriggers:00002724:  elog(ERROR, "SPI_execute_snapshot returned %d", spi_result); 
rabb: rixtriggers:00002751:  ereport(ERROR, 
rabb: rixtriggers:00002752:  (errcode(ERRCODE_FOREIGN_KEY_VIOLATION), 
rabb: rixtriggers:00002753:  errmsg("insert or update on table \"%s\" violates foreign key constraint \"%s\"", 
rabb: rixtriggers:00002754:  RelationGetRelationName(rel), 
rabb: rixtriggers:00002755:  constrname), 
rabb: rixtriggers:00002756:  errdetail("MATCH FULL does not allow mixing of null and nonnull key values."))); 
rabb: rixtriggers:00002776:  elog(ERROR, "SPI_finish failed"); 
rabb: rixtriggers:00002849:  elog(ERROR, "unrecognized referential integrity match type \"%s\"", str); 
rabb: rixtriggers:00002899:  ereport(ERROR, 
rabb: rixtriggers:00002900:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
rabb: rixtriggers:00002901:  errmsg("table \"%s\" does not have column \"%s\" referenced by constraint \"%s\"", 
rabb: rixtriggers:00002902:  RelationGetRelationName(fk_rel), 
rabb: rixtriggers:00002903:  argv[j], 
rabb: rixtriggers:00002904:  argv[RI_CONSTRAINT_NAME_ARGNO]))); 
rabb: rixtriggers:00002909:  ereport(ERROR, 
rabb: rixtriggers:00002910:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
rabb: rixtriggers:00002911:  errmsg("table \"%s\" does not have column \"%s\" referenced by constraint \"%s\"", 
rabb: rixtriggers:00002912:  RelationGetRelationName(pk_rel), 
rabb: rixtriggers:00002913:  argv[j + 1], 
rabb: rixtriggers:00002914:  argv[RI_CONSTRAINT_NAME_ARGNO]))); 
rabb: rixtriggers:00002929:  ereport(ERROR, 
rabb: rixtriggers:00002930:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
rabb: rixtriggers:00002931:  errmsg("function \"%s\" was not called by trigger manager", funcname))); 
rabb: rixtriggers:00002938:  ereport(ERROR, 
rabb: rixtriggers:00002939:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
rabb: rixtriggers:00002940:  errmsg("function \"%s\" must be fired AFTER ROW", funcname))); 
rabb: rixtriggers:00002946:  ereport(ERROR, 
rabb: rixtriggers:00002947:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
rabb: rixtriggers:00002948:  errmsg("function \"%s\" must be fired for INSERT", funcname))); 
rabb: rixtriggers:00002952:  ereport(ERROR, 
rabb: rixtriggers:00002953:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
rabb: rixtriggers:00002954:  errmsg("function \"%s\" must be fired for UPDATE", funcname))); 
rabb: rixtriggers:00002959:  ereport(ERROR, 
rabb: rixtriggers:00002960:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
rabb: rixtriggers:00002961:  errmsg("function \"%s\" must be fired for INSERT or UPDATE", 
rabb: rixtriggers:00002962:  funcname))); 
rabb: rixtriggers:00002966:  ereport(ERROR, 
rabb: rixtriggers:00002967:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
rabb: rixtriggers:00002968:  errmsg("function \"%s\" must be fired for DELETE", funcname))); 
rabb: rixtriggers:00002979:  ereport(ERROR, 
rabb: rixtriggers:00002980:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
rabb: rixtriggers:00002981:  errmsg("function \"%s\" called with wrong number of trigger arguments", 
rabb: rixtriggers:00002982:  funcname))); 
rabb: rixtriggers:00002989:  ereport(ERROR, 
rabb: rixtriggers:00002990:  (errcode(ERRCODE_INVALID_OBJECT_DEFINITION), 
rabb: rixtriggers:00002991:  errmsg("no target table given for trigger \"%s\" on table \"%s\"", 
rabb: rixtriggers:00002992:  trigdata->tg_trigger->tgname, 
rabb: rixtriggers:00002993:  RelationGetRelationName(trigdata->tg_relation)), 
rabb: rixtriggers:00002994:  errhint("Remove this referential integrity trigger and its mates, then do ALTER TABLE ADD CONSTRAINT."))); 
rabb: rixtriggers:00003033:  elog(ERROR, "SPI_prepare returned %d for %s", SPI_result, querystr); 
rabb: rixtriggers:00003158:  elog(ERROR, "SPI_execute_snapshot returned %d", spi_result); 
rabb: rixtriggers:00003224:  ereport(ERROR, 
rabb: rixtriggers:00003225:  (errcode(ERRCODE_INTERNAL_ERROR), 
rabb: rixtriggers:00003226:  errmsg("referential integrity query on \"%s\" from constraint \"%s\" on \"%s\" gave unexpected result", 
rabb: rixtriggers:00003227:  RelationGetRelationName(pk_rel), 
rabb: rixtriggers:00003228:  constrname, 
rabb: rixtriggers:00003229:  RelationGetRelationName(fk_rel)), 
rabb: rixtriggers:00003230:  errhint("This is most likely due to a rule having rewritten the query."))); 
rabb: rixtriggers:00003257:  ereport(ERROR, 
rabb: rixtriggers:00003258:  (errcode(ERRCODE_FOREIGN_KEY_VIOLATION), 
rabb: rixtriggers:00003259:  errmsg("insert or update on table \"%s\" violates foreign key constraint \"%s\"", 
rabb: rixtriggers:00003260:  RelationGetRelationName(fk_rel), constrname), 
rabb: rixtriggers:00003261:  errdetail("No rows were found in \"%s\".", 
rabb: rixtriggers:00003262:  RelationGetRelationName(pk_rel)))); 
rabb: rixtriggers:00003294:  ereport(ERROR, 
rabb: rixtriggers:00003295:  (errcode(ERRCODE_FOREIGN_KEY_VIOLATION), 
rabb: rixtriggers:00003296:  errmsg("insert or update on table \"%s\" violates foreign key constraint \"%s\"", 
rabb: rixtriggers:00003297:  RelationGetRelationName(fk_rel), constrname), 
rabb: rixtriggers:00003298:  errdetail("Key (%s)=(%s) is not present in table \"%s\".", 
rabb: rixtriggers:00003299:  key_names, key_values, 
rabb: rixtriggers:00003300:  RelationGetRelationName(pk_rel)))); 
rabb: rixtriggers:00003302:  ereport(ERROR, 
rabb: rixtriggers:00003303:  (errcode(ERRCODE_FOREIGN_KEY_VIOLATION), 
rabb: rixtriggers:00003304:  errmsg("update or delete on table \"%s\" violates foreign key constraint \"%s\" on table \"%s\"", 
rabb: rixtriggers:00003305:  RelationGetRelationName(pk_rel), 
rabb: rixtriggers:00003306:  constrname, RelationGetRelationName(fk_rel)), 
rabb: rixtriggers:00003307:  errdetail("Key (%s)=(%s) is still referenced from table \"%s\".", 
rabb: rixtriggers:00003308:  key_names, key_values, 
rabb: rixtriggers:00003309:  RelationGetRelationName(fk_rel)))); 
rabb: rixtriggers:00003356:  ereport(ERROR, 
rabb: rixtriggers:00003357:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
rabb: rixtriggers:00003358:  errmsg("table \"%s\" does not have column \"%s\" referenced by constraint \"%s\"", 
rabb: rixtriggers:00003359:  RelationGetRelationName(pk_rel), 
rabb: rixtriggers:00003360:  argv[j], 
rabb: rixtriggers:00003361:  argv[RI_CONSTRAINT_NAME_ARGNO]))); 
rabb: rixtriggers:00003646:  ereport(ERROR, 
rabb: rixtriggers:00003647:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
rabb: rixtriggers:00003648:  errmsg("could not identify an equality operator for type %s", 
rabb: rixtriggers:00003649:  format_type_be(typeid)))); 
aaaaa GP_IGNORE: raai: rowtypes - ./backend/utils/adt/rowtypes.c
raai: rowtypes:00000079:  ereport(ERROR, 
raai: rowtypes:00000080:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
raai: rowtypes:00000081:  errmsg("input of anonymous composite types is not implemented"))); 
raai: rowtypes:00000128:  ereport(ERROR, 
raai: rowtypes:00000129:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
raai: rowtypes:00000130:  errmsg("malformed record literal: \"%s\"", string), 
raai: rowtypes:00000131:  errdetail("Missing left parenthesis."))); 
raai: rowtypes:00000159:  ereport(ERROR, 
raai: rowtypes:00000160:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
raai: rowtypes:00000161:  errmsg("malformed record literal: \"%s\"", string), 
raai: rowtypes:00000162:  errdetail("Too few columns."), 
raai: rowtypes:00000163:  errOmitLocation(true))); 
raai: rowtypes:00000187:  ereport(ERROR, 
raai: rowtypes:00000188:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
raai: rowtypes:00000189:  errmsg("malformed record literal: \"%s\"", 
raai: rowtypes:00000190:  string), 
raai: rowtypes:00000191:  errdetail("Unexpected end of input."))); 
raai: rowtypes:00000198:  ereport(ERROR, 
raai: rowtypes:00000199:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
raai: rowtypes:00000200:  errmsg("malformed record literal: \"%s\"", 
raai: rowtypes:00000201:  string), 
raai: rowtypes:00000202:  errdetail("Unexpected end of input."))); 
raai: rowtypes:00000253:  ereport(ERROR, 
raai: rowtypes:00000254:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
raai: rowtypes:00000255:  errmsg("malformed record literal: \"%s\"", string), 
raai: rowtypes:00000256:  errdetail("Too many columns."), 
raai: rowtypes:00000257:  errOmitLocation(true))); 
raai: rowtypes:00000265:  ereport(ERROR, 
raai: rowtypes:00000266:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
raai: rowtypes:00000267:  errmsg("malformed record literal: \"%s\"", string), 
raai: rowtypes:00000268:  errdetail("Junk after right parenthesis."), 
raai: rowtypes:00000269:  errOmitLocation(true))); 
raai: rowtypes:00000468:  ereport(ERROR, 
raai: rowtypes:00000469:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
raai: rowtypes:00000470:  errmsg("input of anonymous composite types is not implemented"))); 
raai: rowtypes:00000517:  ereport(ERROR, 
raai: rowtypes:00000518:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
raai: rowtypes:00000519:  errmsg("wrong number of columns: %d, expected %d", 
raai: rowtypes:00000520:  usercols, validcols))); 
raai: rowtypes:00000544:  ereport(ERROR, 
raai: rowtypes:00000545:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
raai: rowtypes:00000546:  errmsg("wrong data type: %u, expected %u", 
raai: rowtypes:00000547:  coltypoid, column_type))); 
raai: rowtypes:00000552:  ereport(ERROR, 
raai: rowtypes:00000553:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
raai: rowtypes:00000554:  errmsg("insufficient data left in message"))); 
raai: rowtypes:00000605:  ereport(ERROR, 
raai: rowtypes:00000606:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
raai: rowtypes:00000607:  errmsg("improper binary format in record column %d", 
raai: rowtypes:00000608:  i + 1))); 
aaaaa GP_IGNORE: raaj: ruleutils - ./backend/utils/adt/ruleutils.c
raaj: ruleutils:00000266:  elog(ERROR, "SPI_connect failed"); 
raaj: ruleutils:00000281:  elog(ERROR, "SPI_prepare failed for \"%s\"", query_getrulebyoid); 
raaj: ruleutils:00000292:  elog(ERROR, "failed to get pg_rewrite tuple for rule %u", ruleoid); 
raaj: ruleutils:00000309:  elog(ERROR, "SPI_finish failed"); 
raaj: ruleutils:00000396:  elog(ERROR, "SPI_connect failed"); 
raaj: ruleutils:00000412:  elog(ERROR, "SPI_prepare failed for \"%s\"", query_getviewrule); 
raaj: ruleutils:00000425:  elog(ERROR, "failed to get pg_rewrite tuple for view %u", viewoid); 
raaj: ruleutils:00000442:  elog(ERROR, "SPI_finish failed"); 
raaj: ruleutils:00000475:  elog(ERROR, "could not find tuple for trigger %u", trigid); 
raaj: ruleutils:00000551:  elog(ERROR, "tgargs is null for trigger %u", trigid); 
raaj: ruleutils:00000668:  /* Was: elog(ERROR, "cache lookup failed for index %u", indexrelid); */ 
raaj: ruleutils:00000669:  /* See: MPP-10387. */ 
raaj: ruleutils:00000670:  return pstrdup("Not an index"); 
raaj: ruleutils:00000695:  elog(ERROR, "cache lookup failed for relation %u", indexrelid); 
raaj: ruleutils:00000710:  elog(ERROR, "cache lookup failed for access method %u", 
raaj: ruleutils:00000711:  idxrelrec->relam); 
raaj: ruleutils:00000780:  elog(ERROR, "too few entries in indexprs list"); 
raaj: ruleutils:00000932:  elog(ERROR, "could not find tuple for constraint %u", constraintId); 
raaj: ruleutils:00000959:  elog(ERROR, "null conkey for constraint %u", 
raaj: ruleutils:00000960:  constraintId); 
raaj: ruleutils:00000972:  elog(ERROR, "null confkey for constraint %u", 
raaj: ruleutils:00000973:  constraintId); 
raaj: ruleutils:00000992:  elog(ERROR, "unrecognized confmatchtype: %d", 
raaj: ruleutils:00000993:  conForm->confmatchtype); 
raaj: ruleutils:00001018:  elog(ERROR, "unrecognized confupdtype: %d", 
raaj: ruleutils:00001019:  conForm->confupdtype); 
raaj: ruleutils:00001044:  elog(ERROR, "unrecognized confdeltype: %d", 
raaj: ruleutils:00001045:  conForm->confdeltype); 
raaj: ruleutils:00001076:  elog(ERROR, "null conkey for constraint %u", 
raaj: ruleutils:00001077:  constraintId); 
raaj: ruleutils:00001118:  elog(ERROR, "null conbin for constraint %u", 
raaj: ruleutils:00001119:  constraintId); 
raaj: ruleutils:00001154:  elog(ERROR, "invalid constraint type \"%c\"", conForm->contype); 
raaj: ruleutils:00001343:  ereport(ERROR, 
raaj: ruleutils:00001344:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
raaj: ruleutils:00001345:  errmsg("column \"%s\" of relation \"%s\" does not exist", 
raaj: ruleutils:00001346:  column, tablerv->relname))); 
raaj: ruleutils:00001399:  elog(ERROR, "cache lookup failed for relation %u", sequenceId); 
raaj: ruleutils:00001405:  elog(ERROR, "cache lookup failed for namespace %u", 
raaj: ruleutils:00001406:  classtuple->relnamespace); 
raaj: ruleutils:00001672:  ereport(ERROR, 
raaj: ruleutils:00001673:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
raaj: ruleutils:00001674:  errmsg("rule \"%s\" has unsupported event type %d", 
raaj: ruleutils:00001675:  rulename, ev_type))); 
raaj: ruleutils:00001902:  elog(ERROR, "unrecognized query command type: %d", 
raaj: ruleutils:00001903:  query->commandType); 
raaj: ruleutils:00002412:  elog(ERROR, "unrecognized set op: %d", 
raaj: ruleutils:00002413:  (int) op->op); 
raaj: ruleutils:00002431:  elog(ERROR, "unrecognized node type: %d", 
raaj: ruleutils:00002432:  (int) nodeTag(setOp)); 
raaj: ruleutils:00002520:  elog(ERROR, "unrecognized grouping type: %d", 
raaj: ruleutils:00002521:  grp->groupType); 
raaj: ruleutils:00002592:  elog(ERROR, "too many subquery RTEs in INSERT"); 
raaj: ruleutils:00002599:  elog(ERROR, "too many values RTEs in INSERT"); 
raaj: ruleutils:00002604:  elog(ERROR, "both subquery and values RTEs in INSERT"); 
raaj: ruleutils:00002855:  elog(ERROR, "unexpected utility statement type"); 
raaj: ruleutils:00002884:  elog(ERROR, "bogus varlevelsup: %d offset %d", 
raaj: ruleutils:00002885:  var->varlevelsup, levelsup); 
raaj: ruleutils:00002951:  ereport(WARNING, (errcode(ERRCODE_INTERNAL_ERROR), 
raaj: ruleutils:00002952:  errmsg_internal("bogus var: varno=%d varattno=%d", 
raaj: ruleutils:00002953:  var->varno, var->varattno) )); 
raaj: ruleutils:00003074:  ereport(WARNING, (errcode(ERRCODE_INTERNAL_ERROR), 
raaj: ruleutils:00003075:  errmsg_internal("bogus var: varno=%d varattno=%d", 
raaj: ruleutils:00003076:  var->varno, var->varattno) )); 
raaj: ruleutils:00003107:  ereport(WARNING, (errcode(ERRCODE_INTERNAL_ERROR), 
raaj: ruleutils:00003108:  errmsg_internal("bogus var: varno=%d varattno=%d", 
raaj: ruleutils:00003109:  var->varno, var->varattno) )); 
raaj: ruleutils:00003174:  ereport(WARNING, (errcode(ERRCODE_INTERNAL_ERROR), 
raaj: ruleutils:00003175:  errmsg_internal("bogus var: varno=%d varattno=%d", 
raaj: ruleutils:00003176:  var->varno, var->varattno) )); 
raaj: ruleutils:00003270:  ereport(WARNING, (errcode(ERRCODE_INTERNAL_ERROR), 
raaj: ruleutils:00003271:  errmsg_internal("bogus var: varno=%d varattno=%d " 
raaj: ruleutils:00003272:  "subvarno=%d subattno=%d", 
raaj: ruleutils:00003273:  var->varno, var->varattno, 
raaj: ruleutils:00003274:  ((Var *)expr)->varno, 
raaj: ruleutils:00003275:  ((Var *)expr)->varattno) )); 
raaj: ruleutils:00003281:  ereport(WARNING, (errcode(ERRCODE_INTERNAL_ERROR), 
raaj: ruleutils:00003282:  errmsg_internal("bogus var: varno=%d varattno=%d", 
raaj: ruleutils:00003283:  var->varno, var->varattno) )); 
raaj: ruleutils:00003777:  elog(ERROR, "unexpected refassgnexpr"); 
raaj: ruleutils:00003879:  elog(ERROR, "unrecognized boolop: %d", 
raaj: ruleutils:00003880:  (int) expr->boolop); 
raaj: ruleutils:00003956:  elog(ERROR, "unexpected FieldStore"); 
raaj: ruleutils:00004076:  elog(ERROR, "unexpected CASE WHEN clause: %d", 
raaj: ruleutils:00004077:  (int) nodeTag(w)); 
raaj: ruleutils:00004278:  elog(ERROR, "unrecognized nulltesttype: %d", 
raaj: ruleutils:00004279:  (int) ntest->nulltesttype); 
raaj: ruleutils:00004314:  elog(ERROR, "unrecognized booltesttype: %d", 
raaj: ruleutils:00004315:  (int) btest->booltesttype); 
raaj: ruleutils:00004410:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(node)); 
raaj: ruleutils:00004458:  elog(ERROR, "cache lookup failed for operator %u", opno); 
raaj: ruleutils:00004477:  elog(ERROR, "bogus oprkind: %d", optup->oprkind); 
raaj: ruleutils:00004542:  ereport(ERROR, 
raaj: ruleutils:00004543:  (errcode(ERRCODE_TOO_MANY_ARGUMENTS), 
raaj: ruleutils:00004544:  errmsg("too many arguments"))); 
raaj: ruleutils:00004606:  ereport(ERROR, 
raaj: ruleutils:00004607:  (errcode(ERRCODE_TOO_MANY_ARGUMENTS), 
raaj: ruleutils:00004608:  errmsg("too many arguments"))); 
raaj: ruleutils:00004685:  elog(ERROR, "unknown frame type"); 
raaj: ruleutils:00004844:  elog(ERROR, "invalid exclusion type: %i", f->exclude); 
raaj: ruleutils:00004866:  ereport(ERROR, 
raaj: ruleutils:00004867:  (errcode(ERRCODE_TOO_MANY_ARGUMENTS), 
raaj: ruleutils:00004868:  errmsg("too many arguments"))); 
raaj: ruleutils:00004892:  elog(ERROR, "internal error"); 
raaj: ruleutils:00005117:  elog(ERROR, "unrecognized testexpr type: %d", 
raaj: ruleutils:00005118:  (int) nodeTag(sublink->testexpr)); 
raaj: ruleutils:00005150:  elog(ERROR, "unrecognized sublink type: %d", 
raaj: ruleutils:00005151:  (int) sublink->subLinkType); 
raaj: ruleutils:00005257:  elog(ERROR, "unrecognized RTE kind: %d", (int) rte->rtekind); 
raaj: ruleutils:00005365:  elog(ERROR, "unrecognized join type: %d", 
raaj: ruleutils:00005366:  (int) j->jointype); 
raaj: ruleutils:00005399:  elog(ERROR, "unrecognized join type: %d", 
raaj: ruleutils:00005400:  (int) j->jointype); 
raaj: ruleutils:00005452:  elog(ERROR, "unrecognized node type: %d", 
raaj: ruleutils:00005453:  (int) nodeTag(jtnode)); 
raaj: ruleutils:00005568:  elog(ERROR, "cache lookup failed for opclass %u", opclass); 
raaj: ruleutils:00005628:  elog(ERROR, "argument type %s of FieldStore is not a tuple type", 
raaj: ruleutils:00005629:  format_type_be(fstore->resulttype)); 
raaj: ruleutils:00005875:  elog(ERROR, "cache lookup failed for relation %u", relid); 
raaj: ruleutils:00005951:  elog(ERROR, "cache lookup failed for function %u", funcid); 
raaj: ruleutils:00006012:  elog(ERROR, "cache lookup failed for operator %u", operid); 
raaj: ruleutils:00006036:  elog(ERROR, "unrecognized oprkind: %d", operform->oprkind); 
raaj: ruleutils:00006125:  elog(ERROR, "cache lookup failed for relation %u", relid); 
raaj: ruleutils:00006165:  elog(ERROR, "cache lookup failed for relation %u", relid); 
raaj: ruleutils:00006767:  elog(ERROR, "unknown partitioning kind '%c'", 
raaj: ruleutils:00006768:  pn->part->parkind); 
raaj: ruleutils:00007176:  elog(ERROR, "unrecognized partitioning kind '%c'", 
raaj: ruleutils:00007177:  pn->part->parkind); 
aaaaa GP_IGNORE: saai: selfuncs - ./backend/utils/adt/selfuncs.c
saai: selfuncs:00000957:  elog(ERROR, "patternsel called for operator without a negator"); 
saai: selfuncs:00001061:  elog(ERROR, "unrecognized consttype: %u", 
saai: selfuncs:00001062:  prefix->consttype); 
saai: selfuncs:00001080:  elog(ERROR, "no = operator for opclass %u", opclass); 
saai: selfuncs:00001338:  elog(ERROR, "unrecognized booltesttype: %d", 
saai: selfuncs:00001339:  (int) booltesttype); 
saai: selfuncs:00001378:  elog(ERROR, "unrecognized booltesttype: %d", 
saai: selfuncs:00001379:  (int) booltesttype); 
saai: selfuncs:00001414:  elog(ERROR, "unrecognized booltesttype: %d", 
saai: selfuncs:00001415:  (int) booltesttype); 
saai: selfuncs:00001481:  elog(ERROR, "unrecognized nulltesttype: %d", 
saai: selfuncs:00001482:  (int) nulltesttype); 
saai: selfuncs:00001500:  elog(ERROR, "unrecognized nulltesttype: %d", 
saai: selfuncs:00001501:  (int) nulltesttype); 
saai: selfuncs:00002983:  elog(ERROR, "unsupported type: %u", typid); 
saai: selfuncs:00003153:  elog(ERROR, "unsupported type: %u", typid); 
saai: selfuncs:00003243:  elog(ERROR, "join operator should take two arguments"); 
saai: selfuncs:00003467:  elog(ERROR, "too few entries in indexprs list"); 
saai: selfuncs:00003813:  ereport(ERROR, 
saai: selfuncs:00003814:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
saai: selfuncs:00003815:  errmsg("case insensitive matching not supported on type bytea"))); 
saai: selfuncs:00003919:  ereport(ERROR, 
saai: selfuncs:00003920:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
saai: selfuncs:00003921:  errmsg("regular-expression matching not supported on type bytea"))); 
saai: selfuncs:00004116:  elog(ERROR, "unrecognized ptype: %d", (int) ptype); 
saai: selfuncs:00004153:  elog(ERROR, "no >= operator for opclass %u", opclass); 
saai: selfuncs:00004174:  elog(ERROR, "no < operator for opclass %u", opclass); 
saai: selfuncs:00004242:  ereport(ERROR, 
saai: selfuncs:00004243:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
saai: selfuncs:00004244:  errmsg("case insensitive matching not supported on type bytea"))); 
saai: selfuncs:00004409:  ereport(ERROR, 
saai: selfuncs:00004410:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
saai: selfuncs:00004411:  errmsg("regular-expression matching not supported on type bytea"))); 
saai: selfuncs:00004453:  elog(ERROR, "unrecognized ptype: %d", (int) ptype); 
saai: selfuncs:00005025:  elog(ERROR, "unsupported indexqual type: %d", 
saai: selfuncs:00005026:  (int) nodeTag(clause)); 
aaaaa GP_IGNORE: taad: tid - ./backend/utils/adt/tid.c
taad: tid:00000066:  ereport(ERROR, 
taad: tid:00000067:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
taad: tid:00000068:  errmsg("invalid input syntax for type tid: \"%s\"", 
taad: tid:00000069:  str))); 
taad: tid:00000074:  ereport(ERROR, 
taad: tid:00000075:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
taad: tid:00000076:  errmsg("invalid input syntax for type tid: \"%s\"", 
taad: tid:00000077:  str))); 
taad: tid:00000082:  ereport(ERROR, 
taad: tid:00000083:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
taad: tid:00000084:  errmsg("invalid input syntax for type tid: \"%s\"", 
taad: tid:00000085:  str))); 
taad: tid:00000300:  elog(ERROR, "ctid isn't of type TID"); 
taad: tid:00000306:  elog(ERROR, "currtid cannot handle views with no CTID"); 
taad: tid:00000309:  elog(ERROR, "the view has no rules"); 
taad: tid:00000319:  elog(ERROR, "only one select rule is allowed in views"); 
taad: tid:00000341:  elog(ERROR, "currtid cannot handle this view"); 
taad: tid:00000367:  elog(ERROR, "Function currtid is not supported by GPDB"); 
taad: tid:00000419:  elog(ERROR, "Function currtid2 is not supported by GPDB"); 
aaaaa GP_IGNORE: taaj: timestamp - ./backend/utils/adt/timestamp.c
taaj: timestamp:00000093:  ereport(ERROR, 
taaj: timestamp:00000094:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00000095:  errmsg("invalid type modifier"), 
taaj: timestamp:00000096:  errOmitLocation(true), 
taaj: timestamp:00000097:  errOmitLocation(true))); 
taaj: timestamp:00000100:  ereport(ERROR, 
taaj: timestamp:00000101:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00000102:  errmsg("TIMESTAMP(%d)%s precision must not be negative", 
taaj: timestamp:00000103:  *tl, (istz ? " WITH TIME ZONE" : "")), 
taaj: timestamp:00000104:  errOmitLocation(true))); 
taaj: timestamp:00000107:  ereport(WARNING, 
taaj: timestamp:00000108:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00000109:  errmsg("TIMESTAMP(%d)%s precision reduced to maximum allowed, %d", 
taaj: timestamp:00000110:  *tl, (istz ? " WITH TIME ZONE" : ""), 
taaj: timestamp:00000111:  MAX_TIMESTAMP_PRECISION), 
taaj: timestamp:00000112:  errOmitLocation(true))); 
taaj: timestamp:00000176:  ereport(ERROR, 
taaj: timestamp:00000177:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00000178:  errmsg("timestamp out of range: \"%s\"", str), 
taaj: timestamp:00000179:  errOmitLocation(true))); 
taaj: timestamp:00000195:  ereport(ERROR, 
taaj: timestamp:00000196:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: timestamp:00000197:  errmsg("date/time value \"%s\" is no longer supported", str), 
taaj: timestamp:00000198:  errOmitLocation(true))); 
taaj: timestamp:00000204:  elog(ERROR, "unexpected dtype %d while parsing timestamp \"%s\"", 
taaj: timestamp:00000205:  dtype, str); 
taaj: timestamp:00000233:  ereport(ERROR, 
taaj: timestamp:00000234:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00000235:  errmsg("timestamp out of range"), 
taaj: timestamp:00000236:  errOmitLocation(true))); 
taaj: timestamp:00000272:  ereport(ERROR, 
taaj: timestamp:00000273:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00000274:  errmsg("timestamp out of range"), 
taaj: timestamp:00000275:  errOmitLocation(true))); 
taaj: timestamp:00000374:  ereport(ERROR, 
taaj: timestamp:00000375:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00000376:  errmsg("timestamp(%d) precision must be between %d and %d", 
taaj: timestamp:00000377:  typmod, 0, MAX_TIMESTAMP_PRECISION), 
taaj: timestamp:00000378:  errOmitLocation(true))); 
taaj: timestamp:00000440:  ereport(ERROR, 
taaj: timestamp:00000441:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00000442:  errmsg("timestamp out of range: \"%s\"", str), 
taaj: timestamp:00000443:  errOmitLocation(true))); 
taaj: timestamp:00000459:  ereport(ERROR, 
taaj: timestamp:00000460:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: timestamp:00000461:  errmsg("date/time value \"%s\" is no longer supported", str), 
taaj: timestamp:00000462:  errOmitLocation(true))); 
taaj: timestamp:00000468:  elog(ERROR, "unexpected dtype %d while parsing timestamptz \"%s\"", 
taaj: timestamp:00000469:  dtype, str); 
taaj: timestamp:00000498:  ereport(ERROR, 
taaj: timestamp:00000499:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00000500:  errmsg("timestamp out of range"), 
taaj: timestamp:00000501:  errOmitLocation(true))); 
taaj: timestamp:00000539:  ereport(ERROR, 
taaj: timestamp:00000540:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00000541:  errmsg("timestamp out of range"), 
taaj: timestamp:00000542:  errOmitLocation(true))); 
taaj: timestamp:00000667:  ereport(ERROR, 
taaj: timestamp:00000668:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00000669:  errmsg("interval out of range"), 
taaj: timestamp:00000670:  errOmitLocation(true))); 
taaj: timestamp:00000674:  ereport(ERROR, 
taaj: timestamp:00000675:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: timestamp:00000676:  errmsg("date/time value \"%s\" is no longer supported", str), 
taaj: timestamp:00000677:  errOmitLocation(true))); 
taaj: timestamp:00000681:  elog(ERROR, "unexpected dtype %d while parsing interval \"%s\"", 
taaj: timestamp:00000682:  dtype, str); 
taaj: timestamp:00000704:  elog(ERROR, "could not convert interval to tm"); 
taaj: timestamp:00000798:  ereport(ERROR, 
taaj: timestamp:00000799:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00000800:  errmsg("invalid INTERVAL type modifier"), 
taaj: timestamp:00000801:  errOmitLocation(true))); 
taaj: timestamp:00000815:  ereport(ERROR, 
taaj: timestamp:00000816:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00000817:  errmsg("INTERVAL(%d) precision must not be negative", 
taaj: timestamp:00000818:  tl[1]), 
taaj: timestamp:00000819:  errOmitLocation(true))); 
taaj: timestamp:00000822:  ereport(WARNING, 
taaj: timestamp:00000823:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00000824:  errmsg("INTERVAL(%d) precision reduced to maximum allowed, %d", 
taaj: timestamp:00000825:  tl[1], MAX_INTERVAL_PRECISION), 
taaj: timestamp:00000826:  errOmitLocation(true))); 
taaj: timestamp:00000834:  ereport(ERROR, 
taaj: timestamp:00000835:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00000836:  errmsg("invalid INTERVAL type modifier"), 
taaj: timestamp:00000837:  errOmitLocation(true))); 
taaj: timestamp:00000907:  elog(ERROR, "invalid INTERVAL typmod: 0x%x", typmod); 
taaj: timestamp:00001110:  elog(ERROR, "unrecognized interval typmod: %d", typmod); 
taaj: timestamp:00001116:  ereport(ERROR, 
taaj: timestamp:00001117:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00001118:  errmsg("interval(%d) precision must be between %d and %d", 
taaj: timestamp:00001119:  precision, 0, MAX_INTERVAL_PRECISION), 
taaj: timestamp:00001120:  errOmitLocation(true))); 
taaj: timestamp:00001165:  elog(ERROR, "invalid argument for EncodeSpecialTimestamp"); 
taaj: timestamp:00002329:  ereport(ERROR, 
taaj: timestamp:00002330:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00002331:  errmsg("cannot subtract infinite timestamps"), 
taaj: timestamp:00002332:  errOmitLocation(true))); 
taaj: timestamp:00002554:  ereport(ERROR, 
taaj: timestamp:00002555:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00002556:  errmsg("timestamp out of range"), 
taaj: timestamp:00002557:  errOmitLocation(true))); 
taaj: timestamp:00002576:  ereport(ERROR, 
taaj: timestamp:00002577:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00002578:  errmsg("timestamp out of range"), 
taaj: timestamp:00002579:  errOmitLocation(true))); 
taaj: timestamp:00002590:  ereport(ERROR, 
taaj: timestamp:00002591:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00002592:  errmsg("timestamp out of range"), 
taaj: timestamp:00002593:  errOmitLocation(true))); 
taaj: timestamp:00002600:  ereport(ERROR, 
taaj: timestamp:00002601:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00002602:  errmsg("timestamp out of range"), 
taaj: timestamp:00002603:  errOmitLocation(true))); 
taaj: timestamp:00002659:  ereport(ERROR, 
taaj: timestamp:00002660:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00002661:  errmsg("timestamp out of range"), 
taaj: timestamp:00002662:  errOmitLocation(true))); 
taaj: timestamp:00002683:  ereport(ERROR, 
taaj: timestamp:00002684:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00002685:  errmsg("timestamp out of range"), 
taaj: timestamp:00002686:  errOmitLocation(true))); 
taaj: timestamp:00002697:  ereport(ERROR, 
taaj: timestamp:00002698:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00002699:  errmsg("timestamp out of range"), 
taaj: timestamp:00002700:  errOmitLocation(true))); 
taaj: timestamp:00002709:  ereport(ERROR, 
taaj: timestamp:00002710:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00002711:  errmsg("timestamp out of range"), 
taaj: timestamp:00002712:  errOmitLocation(true))); 
taaj: timestamp:00002902:  ereport(ERROR, 
taaj: timestamp:00002903:  (errcode(ERRCODE_DIVISION_BY_ZERO), 
taaj: timestamp:00002904:  errmsg("division by zero"), 
taaj: timestamp:00002905:  errOmitLocation(true))); 
taaj: timestamp:00002961:  elog(ERROR, "expected 2-element interval array"); 
taaj: timestamp:00003002:  elog(ERROR, "expected 2-element interval array"); 
taaj: timestamp:00003041:  elog(ERROR, "expected 2-element interval array"); 
taaj: timestamp:00003181:  ereport(ERROR, 
taaj: timestamp:00003182:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00003183:  errmsg("interval out of range"), 
taaj: timestamp:00003184:  errOmitLocation(true))); 
taaj: timestamp:00003187:  ereport(ERROR, 
taaj: timestamp:00003188:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00003189:  errmsg("timestamp out of range"), 
taaj: timestamp:00003190:  errOmitLocation(true))); 
taaj: timestamp:00003313:  ereport(ERROR, 
taaj: timestamp:00003314:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00003315:  errmsg("interval out of range"), 
taaj: timestamp:00003316:  errOmitLocation(true))); 
taaj: timestamp:00003319:  ereport(ERROR, 
taaj: timestamp:00003320:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00003321:  errmsg("timestamp out of range"), 
taaj: timestamp:00003322:  errOmitLocation(true))); 
taaj: timestamp:00003374:  ereport(ERROR, 
taaj: timestamp:00003375:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
taaj: timestamp:00003376:  errmsg("invalid input syntax for type timestamp: \"%s\"", 
taaj: timestamp:00003377:  DatumGetCString(DirectFunctionCall1(textout, 
taaj: timestamp:00003378:  PointerGetDatum(str)))), 
taaj: timestamp:00003379:  errOmitLocation(true))); 
taaj: timestamp:00003435:  ereport(ERROR, 
taaj: timestamp:00003436:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
taaj: timestamp:00003437:  errmsg("invalid input syntax for type timestamp with time zone: \"%s\"", 
taaj: timestamp:00003438:  DatumGetCString(DirectFunctionCall1(textout, 
taaj: timestamp:00003439:  PointerGetDatum(str)))), 
taaj: timestamp:00003440:  errOmitLocation(true))); 
taaj: timestamp:00003497:  ereport(ERROR, 
taaj: timestamp:00003498:  (errcode(ERRCODE_INVALID_DATETIME_FORMAT), 
taaj: timestamp:00003499:  errmsg("invalid input syntax for type interval: \"%s\"", 
taaj: timestamp:00003500:  DatumGetCString(DirectFunctionCall1(textout, 
taaj: timestamp:00003501:  PointerGetDatum(str)))), 
taaj: timestamp:00003502:  errOmitLocation(true))); 
taaj: timestamp:00003545:  ereport(ERROR, 
taaj: timestamp:00003546:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00003547:  errmsg("timestamp out of range"), 
taaj: timestamp:00003548:  errOmitLocation(true))); 
taaj: timestamp:00003626:  ereport(ERROR, 
taaj: timestamp:00003627:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: timestamp:00003628:  errmsg("timestamp units \"%s\" not supported", 
taaj: timestamp:00003629:  lowunits), 
taaj: timestamp:00003630:  errOmitLocation(true))); 
taaj: timestamp:00003635:  ereport(ERROR, 
taaj: timestamp:00003636:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00003637:  errmsg("timestamp out of range"), 
taaj: timestamp:00003638:  errOmitLocation(true))); 
taaj: timestamp:00003642:  ereport(ERROR, 
taaj: timestamp:00003643:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00003644:  errmsg("timestamp units \"%s\" not recognized", 
taaj: timestamp:00003645:  lowunits), 
taaj: timestamp:00003646:  errOmitLocation(true))); 
taaj: timestamp:00003684:  ereport(ERROR, 
taaj: timestamp:00003685:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00003686:  errmsg("timestamp out of range"), 
taaj: timestamp:00003687:  errOmitLocation(true))); 
taaj: timestamp:00003785:  ereport(ERROR, 
taaj: timestamp:00003786:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: timestamp:00003787:  errmsg("timestamp with time zone units \"%s\" not " 
taaj: timestamp:00003788:  "supported", lowunits), 
taaj: timestamp:00003789:  errOmitLocation(true))); 
taaj: timestamp:00003797:  ereport(ERROR, 
taaj: timestamp:00003798:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00003799:  errmsg("timestamp out of range"), 
taaj: timestamp:00003800:  errOmitLocation(true))); 
taaj: timestamp:00003804:  ereport(ERROR, 
taaj: timestamp:00003805:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00003806:  errmsg("timestamp with time zone units \"%s\" not recognized", 
taaj: timestamp:00003807:  lowunits), 
taaj: timestamp:00003808:  errOmitLocation(true))); 
taaj: timestamp:00003885:  ereport(ERROR, 
taaj: timestamp:00003886:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: timestamp:00003887:  errmsg("interval units \"%s\" not supported", 
taaj: timestamp:00003888:  lowunits), 
taaj: timestamp:00003889:  errOmitLocation(true))); 
taaj: timestamp:00003893:  ereport(ERROR, 
taaj: timestamp:00003894:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00003895:  errmsg("interval out of range"), 
taaj: timestamp:00003896:  errOmitLocation(true))); 
taaj: timestamp:00003899:  elog(ERROR, "could not convert interval to tm"); 
taaj: timestamp:00003903:  ereport(ERROR, 
taaj: timestamp:00003904:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00003905:  errmsg("interval units \"%s\" not recognized", 
taaj: timestamp:00003906:  lowunits), 
taaj: timestamp:00003907:  errOmitLocation(true))); 
taaj: timestamp:00004115:  ereport(ERROR, 
taaj: timestamp:00004116:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004117:  errmsg("timestamp out of range"), 
taaj: timestamp:00004118:  errOmitLocation(true))); 
taaj: timestamp:00004233:  ereport(ERROR, 
taaj: timestamp:00004234:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: timestamp:00004235:  errmsg("timestamp units \"%s\" not supported", 
taaj: timestamp:00004236:  lowunits))); 
taaj: timestamp:00004253:  ereport(ERROR, 
taaj: timestamp:00004254:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004255:  errmsg("timestamp out of range"), 
taaj: timestamp:00004256:  errOmitLocation(true))); 
taaj: timestamp:00004261:  ereport(ERROR, 
taaj: timestamp:00004262:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004263:  errmsg("timestamp out of range"), 
taaj: timestamp:00004264:  errOmitLocation(true))); 
taaj: timestamp:00004276:  ereport(ERROR, 
taaj: timestamp:00004277:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004278:  errmsg("timestamp out of range"), 
taaj: timestamp:00004279:  errOmitLocation(true))); 
taaj: timestamp:00004287:  ereport(ERROR, 
taaj: timestamp:00004288:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004289:  errmsg("timestamp out of range"), 
taaj: timestamp:00004290:  errOmitLocation(true))); 
taaj: timestamp:00004296:  ereport(ERROR, 
taaj: timestamp:00004297:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: timestamp:00004298:  errmsg("timestamp units \"%s\" not supported", 
taaj: timestamp:00004299:  lowunits), 
taaj: timestamp:00004300:  errOmitLocation(true))); 
taaj: timestamp:00004307:  ereport(ERROR, 
taaj: timestamp:00004308:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00004309:  errmsg("timestamp units \"%s\" not recognized", lowunits), 
taaj: timestamp:00004310:  errOmitLocation(true))); 
taaj: timestamp:00004353:  ereport(ERROR, 
taaj: timestamp:00004354:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004355:  errmsg("timestamp out of range"), 
taaj: timestamp:00004356:  errOmitLocation(true))); 
taaj: timestamp:00004471:  ereport(ERROR, 
taaj: timestamp:00004472:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: timestamp:00004473:  errmsg("timestamp with time zone units \"%s\" not supported", 
taaj: timestamp:00004474:  lowunits), 
taaj: timestamp:00004475:  errOmitLocation(true))); 
taaj: timestamp:00004495:  ereport(ERROR, 
taaj: timestamp:00004496:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004497:  errmsg("timestamp out of range"), 
taaj: timestamp:00004498:  errOmitLocation(true))); 
taaj: timestamp:00004506:  ereport(ERROR, 
taaj: timestamp:00004507:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004508:  errmsg("timestamp out of range"), 
taaj: timestamp:00004509:  errOmitLocation(true))); 
taaj: timestamp:00004515:  ereport(ERROR, 
taaj: timestamp:00004516:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: timestamp:00004517:  errmsg("timestamp with time zone units \"%s\" not supported", 
taaj: timestamp:00004518:  lowunits), 
taaj: timestamp:00004519:  errOmitLocation(true))); 
taaj: timestamp:00004525:  ereport(ERROR, 
taaj: timestamp:00004526:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00004527:  errmsg("timestamp with time zone units \"%s\" not recognized", 
taaj: timestamp:00004528:  lowunits), 
taaj: timestamp:00004529:  errOmitLocation(true))); 
taaj: timestamp:00004632:  ereport(ERROR, 
taaj: timestamp:00004633:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taaj: timestamp:00004634:  errmsg("interval units \"%s\" not supported", 
taaj: timestamp:00004635:  lowunits), 
taaj: timestamp:00004636:  errOmitLocation(true))); 
taaj: timestamp:00004643:  elog(ERROR, "could not convert interval to tm"); 
taaj: timestamp:00004660:  ereport(ERROR, 
taaj: timestamp:00004661:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00004662:  errmsg("interval units \"%s\" not recognized", 
taaj: timestamp:00004663:  lowunits), 
taaj: timestamp:00004664:  errOmitLocation(true))); 
taaj: timestamp:00004726:  ereport(ERROR, 
taaj: timestamp:00004727:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004728:  errmsg("timestamp out of range"), 
taaj: timestamp:00004729:  errOmitLocation(true))); 
taaj: timestamp:00004732:  ereport(ERROR, 
taaj: timestamp:00004733:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00004734:  errmsg("could not convert to time zone \"%s\"", 
taaj: timestamp:00004735:  tzname), 
taaj: timestamp:00004736:  errOmitLocation(true))); 
taaj: timestamp:00004740:  ereport(ERROR, 
taaj: timestamp:00004741:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00004742:  errmsg("time zone \"%s\" not recognized", tzname), 
taaj: timestamp:00004743:  errOmitLocation(true))); 
taaj: timestamp:00004766:  ereport(ERROR, 
taaj: timestamp:00004767:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00004768:  errmsg("interval time zone \"%s\" must not specify month", 
taaj: timestamp:00004769:  DatumGetCString(DirectFunctionCall1(interval_out, 
taaj: timestamp:00004770:  PointerGetDatum(zone)))), 
taaj: timestamp:00004771:  errOmitLocation(true))); 
taaj: timestamp:00004809:  ereport(ERROR, 
taaj: timestamp:00004810:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004811:  errmsg("timestamp out of range"), 
taaj: timestamp:00004812:  errOmitLocation(true))); 
taaj: timestamp:00004817:  ereport(ERROR, 
taaj: timestamp:00004818:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004819:  errmsg("timestamp out of range"), 
taaj: timestamp:00004820:  errOmitLocation(true))); 
taaj: timestamp:00004845:  ereport(ERROR, 
taaj: timestamp:00004846:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004847:  errmsg("timestamp out of range"), 
taaj: timestamp:00004848:  errOmitLocation(true))); 
taaj: timestamp:00004850:  ereport(ERROR, 
taaj: timestamp:00004851:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004852:  errmsg("timestamp out of range"), 
taaj: timestamp:00004853:  errOmitLocation(true))); 
taaj: timestamp:00004908:  ereport(ERROR, 
taaj: timestamp:00004909:  (errcode(ERRCODE_DATETIME_VALUE_OUT_OF_RANGE), 
taaj: timestamp:00004910:  errmsg("timestamp out of range"), 
taaj: timestamp:00004911:  errOmitLocation(true))); 
taaj: timestamp:00004913:  ereport(ERROR, 
taaj: timestamp:00004914:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00004915:  errmsg("could not convert to time zone \"%s\"", 
taaj: timestamp:00004916:  tzname))); 
taaj: timestamp:00004920:  ereport(ERROR, 
taaj: timestamp:00004921:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00004922:  errmsg("time zone \"%s\" not recognized", tzname), 
taaj: timestamp:00004923:  errOmitLocation(true))); 
taaj: timestamp:00004947:  ereport(ERROR, 
taaj: timestamp:00004948:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00004949:  errmsg("interval time zone \"%s\" must not specify month", 
taaj: timestamp:00004950:  DatumGetCString(DirectFunctionCall1(interval_out, 
taaj: timestamp:00004951:  PointerGetDatum(zone)))), 
taaj: timestamp:00004952:  errOmitLocation(true))); 
taaj: timestamp:00005009:  ereport(ERROR, 
taaj: timestamp:00005010:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00005011:  errmsg("step size cannot equal zero"), 
taaj: timestamp:00005012:  errOmitLocation(true))); 
taaj: timestamp:00005091:  ereport(ERROR, 
taaj: timestamp:00005092:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
taaj: timestamp:00005093:  errmsg("step size cannot equal zero"), 
taaj: timestamp:00005094:  errOmitLocation(true))); 
taaj: timestamp:00005175:  elog(ERROR, "expected 2-element interval array"); 
taaj: timestamp:00005193:  elog(ERROR, "expected 2-element interval array"); 
aaaaa GP_IGNORE: vaag: varbit - ./backend/utils/adt/varbit.c
vaag: varbit:00000103:  ereport(ERROR, 
vaag: varbit:00000104:  (errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH), 
vaag: varbit:00000105:  errmsg("bit string length %d does not match type bit(%d)", 
vaag: varbit:00000106:  bitlen, atttypmod), 
vaag: varbit:00000107:  errOmitLocation(true))); 
vaag: varbit:00000126:  ereport(ERROR, 
vaag: varbit:00000127:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
vaag: varbit:00000128:  errmsg("\"%c\" is not a valid binary digit", 
vaag: varbit:00000129:  *sp), 
vaag: varbit:00000130:  errOmitLocation(true))); 
vaag: varbit:00000152:  ereport(ERROR, 
vaag: varbit:00000153:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
vaag: varbit:00000154:  errmsg("\"%c\" is not a valid hexadecimal digit", 
vaag: varbit:00000155:  *sp), 
vaag: varbit:00000156:  errOmitLocation(true))); 
vaag: varbit:00000237:  ereport(ERROR, 
vaag: varbit:00000238:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
vaag: varbit:00000239:  errmsg("invalid length in external bit string"), 
vaag: varbit:00000240:  errOmitLocation(true))); 
vaag: varbit:00000247:  ereport(ERROR, 
vaag: varbit:00000248:  (errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH), 
vaag: varbit:00000249:  errmsg("bit string length %d does not match type bit(%d)", 
vaag: varbit:00000250:  bitlen, atttypmod), 
vaag: varbit:00000251:  errOmitLocation(true))); 
vaag: varbit:00000304:  ereport(ERROR, 
vaag: varbit:00000305:  (errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH), 
vaag: varbit:00000306:  errmsg("bit string length %d does not match type bit(%d)", 
vaag: varbit:00000307:  VARBITLEN(arg), len), 
vaag: varbit:00000308:  errOmitLocation(true))); 
vaag: varbit:00000390:  ereport(ERROR, 
vaag: varbit:00000391:  (errcode(ERRCODE_STRING_DATA_RIGHT_TRUNCATION), 
vaag: varbit:00000392:  errmsg("bit string too long for type bit varying(%d)", 
vaag: varbit:00000393:  atttypmod), 
vaag: varbit:00000394:  errOmitLocation(true))); 
vaag: varbit:00000413:  ereport(ERROR, 
vaag: varbit:00000414:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
vaag: varbit:00000415:  errmsg("\"%c\" is not a valid binary digit", 
vaag: varbit:00000416:  *sp), 
vaag: varbit:00000417:  errOmitLocation(true))); 
vaag: varbit:00000439:  ereport(ERROR, 
vaag: varbit:00000440:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
vaag: varbit:00000441:  errmsg("\"%c\" is not a valid hexadecimal digit", 
vaag: varbit:00000442:  *sp), 
vaag: varbit:00000443:  errOmitLocation(true))); 
vaag: varbit:00000527:  ereport(ERROR, 
vaag: varbit:00000528:  (errcode(ERRCODE_INVALID_BINARY_REPRESENTATION), 
vaag: varbit:00000529:  errmsg("invalid length in external bit string"), 
vaag: varbit:00000530:  errOmitLocation(true))); 
vaag: varbit:00000537:  ereport(ERROR, 
vaag: varbit:00000538:  (errcode(ERRCODE_STRING_DATA_RIGHT_TRUNCATION), 
vaag: varbit:00000539:  errmsg("bit string too long for type bit varying(%d)", 
vaag: varbit:00000540:  atttypmod), 
vaag: varbit:00000541:  errOmitLocation(true))); 
vaag: varbit:00000599:  ereport(ERROR, 
vaag: varbit:00000600:  (errcode(ERRCODE_STRING_DATA_RIGHT_TRUNCATION), 
vaag: varbit:00000601:  errmsg("bit string too long for type bit varying(%d)", 
vaag: varbit:00000602:  len), 
vaag: varbit:00000603:  errOmitLocation(true))); 
vaag: varbit:00000973:  ereport(ERROR, 
vaag: varbit:00000974:  (errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH), 
vaag: varbit:00000975:  errmsg("cannot AND bit strings of different sizes"), 
vaag: varbit:00000976:  errOmitLocation(true))); 
vaag: varbit:00001015:  ereport(ERROR, 
vaag: varbit:00001016:  (errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH), 
vaag: varbit:00001017:  errmsg("cannot OR bit strings of different sizes"), 
vaag: varbit:00001018:  errOmitLocation(true))); 
vaag: varbit:00001062:  ereport(ERROR, 
vaag: varbit:00001063:  (errcode(ERRCODE_STRING_DATA_LENGTH_MISMATCH), 
vaag: varbit:00001064:  errmsg("cannot XOR bit strings of different sizes"), 
vaag: varbit:00001065:  errOmitLocation(true))); 
vaag: varbit:00001305:  ereport(ERROR, 
vaag: varbit:00001306:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
vaag: varbit:00001307:  errmsg("integer out of range"), 
vaag: varbit:00001308:  errOmitLocation(true))); 
vaag: varbit:00001385:  ereport(ERROR, 
vaag: varbit:00001386:  (errcode(ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE), 
vaag: varbit:00001387:  errmsg("bigint out of range"), 
vaag: varbit:00001388:  errOmitLocation(true))); 
aaaaa GP_IGNORE: vaah: varchar - ./backend/utils/adt/varchar.c
vaah: varchar:00000041:  ereport(ERROR, 
vaah: varchar:00000042:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
vaah: varchar:00000043:  errmsg("invalid type modifier"))); 
vaah: varchar:00000046:  ereport(ERROR, 
vaah: varchar:00000047:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
vaah: varchar:00000048:  errmsg("length for type %s must be at least 1", typename))); 
vaah: varchar:00000050:  ereport(ERROR, 
vaah: varchar:00000051:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
vaah: varchar:00000052:  errmsg("length for type %s cannot exceed %d", 
vaah: varchar:00000053:  typename, MaxAttrSize))); 
vaah: varchar:00000150:  ereport(ERROR, 
vaah: varchar:00000151:  (errcode(ERRCODE_STRING_DATA_RIGHT_TRUNCATION), 
vaah: varchar:00000152:  errmsg("value too long for type character(%d)", 
vaah: varchar:00000153:  (int) maxlen), 
vaah: varchar:00000154:  errOmitLocation(true))); 
vaah: varchar:00000320:  ereport(ERROR, 
vaah: varchar:00000321:  (errcode(ERRCODE_STRING_DATA_RIGHT_TRUNCATION), 
vaah: varchar:00000322:  errmsg("value too long for type character(%d)", 
vaah: varchar:00000323:  maxlen - VARHDRSZ), 
vaah: varchar:00000324:  errOmitLocation(true))); 
vaah: varchar:00000493:  ereport(ERROR, 
vaah: varchar:00000494:  (errcode(ERRCODE_STRING_DATA_RIGHT_TRUNCATION), 
vaah: varchar:00000495:  errmsg("value too long for type character varying(%d)", 
vaah: varchar:00000496:  (int) maxlen), 
vaah: varchar:00000497:  errOmitLocation(true))); 
vaah: varchar:00000625:  ereport(ERROR, 
vaah: varchar:00000626:  (errcode(ERRCODE_STRING_DATA_RIGHT_TRUNCATION), 
vaah: varchar:00000627:  errmsg("value too long for type character varying(%d)", 
vaah: varchar:00000628:  maxlen - VARHDRSZ), 
vaah: varchar:00000629:  errOmitLocation(true))); 
aaaaa GP_IGNORE: vaah: varlena - ./backend/utils/adt/varlena.c
vaah: varlena:00000181:  * ereport(ERROR, ...) if bad form. 
vaah: varlena:00000182:  * 
vaah: varlena:00000183:  * BUGS: 
vaah: varlena:00000184:  * The input is scanned twice. 
vaah: varlena:00000185:  * The error checking of input is minimal. 
vaah: varlena:00000186:  */ 
vaah: varlena:00000187: Datum 
vaah: varlena:00000188: byteain(PG_FUNCTION_ARGS) 
vaah: varlena:00000189: { 
vaah: varlena:00000190:  char *inputText = PG_GETARG_CSTRING(0); 
vaah: varlena:00000213:  ereport(ERROR, 
vaah: varlena:00000214:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
vaah: varlena:00000215:  errmsg("invalid input syntax for type bytea"), 
vaah: varlena:00000216:  errOmitLocation(true))); 
vaah: varlena:00000253:  ereport(ERROR, 
vaah: varlena:00000254:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
vaah: varlena:00000255:  errmsg("invalid input syntax for type bytea"), 
vaah: varlena:00000256:  errOmitLocation(true))); 
vaah: varlena:00000706:  ereport(ERROR, 
vaah: varlena:00000707:  (errcode(ERRCODE_SUBSTRING_ERROR), 
vaah: varlena:00000708:  errmsg("negative substring length not allowed"), 
vaah: varlena:00000709:  errOmitLocation(true))); 
vaah: varlena:00000771:  ereport(ERROR, 
vaah: varlena:00000772:  (errcode(ERRCODE_SUBSTRING_ERROR), 
vaah: varlena:00000773:  errmsg("negative substring length not allowed"), 
vaah: varlena:00000774:  errOmitLocation(true))); 
vaah: varlena:00000866:  elog(ERROR, "invalid backend encoding: encoding max length < 1"); 
vaah: varlena:00001120:  ereport(ERROR, 
vaah: varlena:00001121:  (errmsg("could not convert string to UTF-16: error %lu", 
vaah: varlena:00001122:  GetLastError()))); 
vaah: varlena:00001133:  ereport(ERROR, 
vaah: varlena:00001134:  (errmsg("could not convert string to UTF-16: error %lu", 
vaah: varlena:00001135:  GetLastError()))); 
vaah: varlena:00001143:  ereport(ERROR, 
vaah: varlena:00001144:  (errmsg("could not compare Unicode strings: %m"))); 
vaah: varlena:00001495:  ereport(ERROR, 
vaah: varlena:00001496:  (errcode(ERRCODE_SUBSTRING_ERROR), 
vaah: varlena:00001497:  errmsg("negative substring length not allowed"), 
vaah: varlena:00001498:  errOmitLocation(true))); 
vaah: varlena:00001594:  ereport(ERROR, 
vaah: varlena:00001595:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
vaah: varlena:00001596:  errmsg("index %d out of valid range, 0..%d", 
vaah: varlena:00001597:  n, len0 - 1), 
vaah: varlena:00001598:  errOmitLocation(true))); 
vaah: varlena:00001630:  ereport(ERROR, 
vaah: varlena:00001631:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
vaah: varlena:00001632:  errmsg("index %d out of valid range, 0..%d", 
vaah: varlena:00001633:  n, len0 * 8 - 1), 
vaah: varlena:00001634:  errOmitLocation(true))); 
vaah: varlena:00001670:  ereport(ERROR, 
vaah: varlena:00001671:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
vaah: varlena:00001672:  errmsg("index %d out of valid range, 0..%d", 
vaah: varlena:00001673:  n, len - 1), 
vaah: varlena:00001674:  errOmitLocation(true))); 
vaah: varlena:00001714:  ereport(ERROR, 
vaah: varlena:00001715:  (errcode(ERRCODE_ARRAY_SUBSCRIPT_ERROR), 
vaah: varlena:00001716:  errmsg("index %d out of valid range, 0..%d", 
vaah: varlena:00001717:  n, len * 8 - 1), 
vaah: varlena:00001718:  errOmitLocation(true))); 
vaah: varlena:00001727:  ereport(ERROR, 
vaah: varlena:00001728:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
vaah: varlena:00001729:  errmsg("new bit must be 0 or 1"), 
vaah: varlena:00001730:  errOmitLocation(true))); 
vaah: varlena:00001819:  ereport(ERROR, 
vaah: varlena:00001820:  (errcode(ERRCODE_INVALID_NAME), 
vaah: varlena:00001821:  errmsg("invalid name syntax"), 
vaah: varlena:00001822:  errOmitLocation(true))); 
vaah: varlena:00001825:  ereport(ERROR, 
vaah: varlena:00001826:  (errcode(ERRCODE_INVALID_NAME), 
vaah: varlena:00001827:  errmsg("invalid name syntax"), 
vaah: varlena:00001828:  errOmitLocation(true))); 
vaah: varlena:00002349:  ereport(ERROR, 
vaah: varlena:00002350:  (errcode(ERRCODE_INVALID_REGULAR_EXPRESSION), 
vaah: varlena:00002351:  errmsg("regular expression failed: %s", errMsg), 
vaah: varlena:00002352:  errOmitLocation(true))); 
vaah: varlena:00002471:  ereport(ERROR, 
vaah: varlena:00002472:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
vaah: varlena:00002473:  errmsg("field position must be greater than zero"), 
vaah: varlena:00002474:  errOmitLocation(true))); 
vaah: varlena:00002868:  ereport(ERROR, 
vaah: varlena:00002869:  (errcode(ERRCODE_OUT_OF_MEMORY), 
vaah: varlena:00002870:  errmsg("out of memory"))); 
vaah: varlena:00002889:  ereport(ERROR, 
vaah: varlena:00002890:  (errcode(ERRCODE_OUT_OF_MEMORY), 
vaah: varlena:00002891:  errmsg("out of memory"))); 
vaah: varlena:00002916:  elog(ERROR, "cache lookup failed for type %u", argtypeid); 
vaah: varlena:00002966:  elog(ERROR, "string_agg_transfn called in non-aggregate context"); 
vaah: varlena:00003038:  elog(ERROR, "string_agg_finalfn called in non-aggregate context"); 
aaaaa GP_IGNORE: xaad: xml - ./backend/utils/adt/xml.c
xaad: xml:00000195:  ereport(ERROR, 
xaad: xml:00000196:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
xaad: xml:00000197:  errmsg("invalid encoding name \"%s\"", 
xaad: xml:00000198:  (const char *) encoding_name))); 
xaad: xml:00000416:  ereport(ERROR, 
xaad: xml:00000417:  (errcode(ERRCODE_INVALID_XML_COMMENT), 
xaad: xml:00000418:  errmsg("invalid XML comment"))); 
xaad: xml:00000421:  ereport(ERROR, 
xaad: xml:00000422:  (errcode(ERRCODE_INVALID_XML_COMMENT), 
xaad: xml:00000423:  errmsg("invalid XML comment"))); 
xaad: xml:00000541:  ereport(ERROR, 
xaad: xml:00000542:  (errcode(ERRCODE_NOT_AN_XML_DOCUMENT), 
xaad: xml:00000543:  errmsg("not an XML document"))); 
xaad: xml:00000571:  ereport(ERROR, 
xaad: xml:00000572:  (errcode(ERRCODE_SYNTAX_ERROR), /* really */ 
xaad: xml:00000573:  errmsg("invalid XML processing instruction"), 
xaad: xml:00000574:  errdetail("XML processing instruction target name cannot be \"%s\".", target))); 
xaad: xml:00000594:  ereport(ERROR, 
xaad: xml:00000595:  (errcode(ERRCODE_INVALID_XML_PROCESSING_INSTRUCTION), 
xaad: xml:00000596:  errmsg("invalid XML processing instruction"), 
xaad: xml:00000597:  errdetail("XML processing instruction cannot contain \"?>\"."))); 
xaad: xml:00000665:  ereport(ERROR, 
xaad: xml:00000666:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
xaad: xml:00000667:  errmsg("xmlvalidate is not implemented"))); 
xaad: xml:00000745:  ereport(ERROR, 
xaad: xml:00000746:  (errmsg("could not initialize XML library"), 
xaad: xml:00000747:  errdetail("libxml2 has incompatible char type: sizeof(char)=%u, sizeof(xmlChar)=%u.", 
xaad: xml:00000748:  (int) sizeof(char), (int) sizeof(xmlChar)))); 
xaad: xml:00001064:  xml_ereport(ERROR, ERRCODE_OUT_OF_MEMORY, 
xaad: xml:00001065:  "could not allocate parser context"); 
xaad: xml:00001085:  xml_ereport(ERROR, ERRCODE_INVALID_XML_DOCUMENT, 
xaad: xml:00001086:  "invalid XML document"); 
xaad: xml:00001112:  xml_ereport(ERROR, ERRCODE_INVALID_XML_CONTENT, 
xaad: xml:00001113:  "invalid XML content"); 
xaad: xml:00001419:  ereport(ERROR, 
xaad: xml:00001420:  (errcode(ERRCODE_DATA_EXCEPTION), 
xaad: xml:00001421:  errmsg("invalid array for XML namespace mapping"), 
xaad: xml:00001422:  errdetail("The array must be two-dimensional with length of the second axis equal to 2."))); 
xaad: xml:00001444:  ereport(ERROR, 
xaad: xml:00001445:  (errcode(ERRCODE_DATA_EXCEPTION), 
xaad: xml:00001446:  errmsg("empty XPath expression"))); 
xaad: xml:00001467:  xml_ereport(ERROR, ERRCODE_OUT_OF_MEMORY, 
xaad: xml:00001468:  "could not allocate parser context"); 
xaad: xml:00001471:  xml_ereport(ERROR, ERRCODE_INVALID_XML_DOCUMENT, 
xaad: xml:00001472:  "could not parse XML document"); 
xaad: xml:00001475:  xml_ereport(ERROR, ERRCODE_OUT_OF_MEMORY, 
xaad: xml:00001476:  "could not allocate XPath context"); 
xaad: xml:00001479:  xml_ereport(ERROR, ERRCODE_INTERNAL_ERROR, 
xaad: xml:00001480:  "could not find root XML element"); 
xaad: xml:00001492:  ereport(ERROR, 
xaad: xml:00001493:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
xaad: xml:00001494:  errmsg("neither namespace name nor URI may be null"))); 
xaad: xml:00001500:  ereport(ERROR, /* is this an internal error??? */ 
xaad: xml:00001501:  (errmsg("could not register XML namespace with name \"%s\" and URI \"%s\"", 
xaad: xml:00001502:  ns_name, ns_uri))); 
xaad: xml:00001508:  xml_ereport(ERROR, ERRCODE_INTERNAL_ERROR, 
xaad: xml:00001509:  "invalid XPath expression"); 
xaad: xml:00001520:  xml_ereport(ERROR, ERRCODE_INTERNAL_ERROR, 
xaad: xml:00001521:  "could not create XPath object"); 
aaaaa GP_IGNORE: caai: catcache - ./backend/utils/cache/catcache.c
caai: catcache:00000158:  elog(FATAL, "type %u not supported as catcache key", keytype); 
caai: catcache:00000204:  elog(FATAL, "wrong number of hash keys: %d", nkeys); 
caai: catcache:00000269:  elog(FATAL, "wrong number of hash keys: %d", cache->cc_nkeys); 
caai: catcache:00000874:  elog(FATAL, "only sys attr supported in caches is OID"); 
caai: catcache:00001743:  elog(WARNING, "cache reference leak: cache %s (%d), tuple %u/%u (oid %d) has count %d, resowner '%s'", 
caai: catcache:00001744:  ct->my_cache->cc_relname, ct->my_cache->id, 
caai: catcache:00001745:  ItemPointerGetBlockNumber(&(tuple->t_self)), 
caai: catcache:00001746:  ItemPointerGetOffsetNumber(&(tuple->t_self)), 
caai: catcache:00001747:  tuple->t_data ? HeapTupleGetOid(tuple) : 0, 
caai: catcache:00001748:  ct->refcount, 
caai: catcache:00001749:  resOwnerName); 
caai: catcache:00001755:  elog(WARNING, "cache reference leak: cache %s (%d), list %p has count %d, resowner '%s'", 
caai: catcache:00001756:  list->my_cache->cc_relname, list->my_cache->id, 
caai: catcache:00001757:  list, list->refcount, resOwnerName); 
aaaaa GP_IGNORE: iaaf: inval - ./backend/utils/cache/inval.c
iaaf: inval:00000529:  elog(NOTICE, "invalid SI message: %s", si_to_str(msg)); 
iaaf: inval:00000531:  elog(FATAL, "unrecognized SI message id: %d", msg->id); 
iaaf: inval:00001142:  elog(ERROR, "cache lookup failed for relation %u", relid); 
iaaf: inval:00001163:  elog(FATAL, "out of cache_callback_list slots"); 
iaaf: inval:00001186:  elog(FATAL, "out of cache_callback_list slots"); 
aaaaa GP_IGNORE: laaj: lsyscache - ./backend/utils/cache/lsyscache.c
laaj: lsyscache:00000138:  elog(ERROR, "operator %u is not a member of opclass %u", 
laaj: lsyscache:00000139:  opno, opclass); 
laaj: lsyscache:00000417:  elog(ERROR, "cache lookup failed for attribute %d of relation %u", 
laaj: lsyscache:00000418:  attnum, relid); 
laaj: lsyscache:00000537:  elog(ERROR, "cache lookup failed for attribute %d of relation %u", 
laaj: lsyscache:00000538:  attnum, relid); 
laaj: lsyscache:00000576:  elog(ERROR, "cache lookup failed for opclass %u", opclass); 
laaj: lsyscache:00000605:  elog(ERROR, "cache lookup failed for opclass %u", opclass); 
laaj: lsyscache:00000635:  elog(ERROR, "cache lookup failed for opclass %u", opclass); 
laaj: lsyscache:00000664:  elog(ERROR, "cache lookup failed for opclass %u", opclass); 
laaj: lsyscache:00000825:  elog(ERROR, "cache lookup failed for operator %u", opno); 
laaj: lsyscache:00000834:  elog(ERROR, "mergejoin operator %u has no matching < operator", 
laaj: lsyscache:00000835:  opno); 
laaj: lsyscache:00000841:  elog(ERROR, "mergejoin operator %u has no matching > operator", 
laaj: lsyscache:00000842:  opno); 
laaj: lsyscache:00000889:  elog(ERROR, "operator %u does not exist", opno); 
laaj: lsyscache:00000905:  elog(ERROR, "operator %u does not exist", opno); 
laaj: lsyscache:00001106:  elog(ERROR, "cache lookup failed for trigger %u", triggerid); 
laaj: lsyscache:00001134:  elog(ERROR, "cache lookup failed for trigger %u", triggerid); 
laaj: lsyscache:00001264:  elog(ERROR, "cache lookup failed for aggregate %u", aggid); 
laaj: lsyscache:00001286:  elog(ERROR, "cache lookup failed for aggregate %u", aggid); 
laaj: lsyscache:00001317:  elog(ERROR, "cache lookup failed for aggregate %u", aggid); 
laaj: lsyscache:00001349:  elog(ERROR, "cache lookup failed for function %u", funcid); 
laaj: lsyscache:00001381:  elog(ERROR, "cache lookup failed for function %u", funcid); 
laaj: lsyscache:00001441:  elog(ERROR, "cache lookup failed for function %u", funcid); 
laaj: lsyscache:00001491:  elog(ERROR, "cache lookup failed for function %u", funcid); 
laaj: lsyscache:00001524:  elog(ERROR, "cache lookup failed for function %u", funcid); 
laaj: lsyscache:00001552:  elog(ERROR, "cache lookup failed for function %u", funcid); 
laaj: lsyscache:00001580:  elog(ERROR, "cache lookup failed for function %u", funcid); 
laaj: lsyscache:00001607:  elog(ERROR, "cache lookup failed for function %u", funcid); 
laaj: lsyscache:00002021:  elog(ERROR, "cache lookup failed for type %u", typid); 
laaj: lsyscache:00002051:  elog(ERROR, "cache lookup failed for type %u", typid); 
laaj: lsyscache:00002138:  elog(ERROR, "binary I/O not supported during bootstrap"); 
laaj: lsyscache:00002153:  elog(ERROR, "cache lookup failed for type %u", typid); 
laaj: lsyscache:00002263:  elog(ERROR, "cache lookup failed for type %u", typid); 
laaj: lsyscache:00002359:  elog(ERROR, "cache lookup failed for type %u", typid); 
laaj: lsyscache:00002674:  elog(ERROR, "cache lookup failed for type %u", type); 
laaj: lsyscache:00002678:  ereport(ERROR, 
laaj: lsyscache:00002679:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
laaj: lsyscache:00002680:  errmsg("type %s is only a shell", 
laaj: lsyscache:00002681:  format_type_be(type)), 
laaj: lsyscache:00002682:  errOmitLocation(true))); 
laaj: lsyscache:00002684:  ereport(ERROR, 
laaj: lsyscache:00002685:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
laaj: lsyscache:00002686:  errmsg("no input function available for type %s", 
laaj: lsyscache:00002687:  format_type_be(type)), 
laaj: lsyscache:00002688:  errOmitLocation(true))); 
laaj: lsyscache:00002717:  elog(ERROR, "cache lookup failed for type %u", type); 
laaj: lsyscache:00002721:  ereport(ERROR, 
laaj: lsyscache:00002722:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
laaj: lsyscache:00002723:  errmsg("type %s is only a shell", 
laaj: lsyscache:00002724:  format_type_be(type)), 
laaj: lsyscache:00002725:  errOmitLocation(true))); 
laaj: lsyscache:00002727:  ereport(ERROR, 
laaj: lsyscache:00002728:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
laaj: lsyscache:00002729:  errmsg("no output function available for type %s", 
laaj: lsyscache:00002730:  format_type_be(type)), 
laaj: lsyscache:00002731:  errOmitLocation(true))); 
laaj: lsyscache:00002760:  elog(ERROR, "cache lookup failed for type %u", type); 
laaj: lsyscache:00002764:  ereport(ERROR, 
laaj: lsyscache:00002765:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
laaj: lsyscache:00002766:  errmsg("type %s is only a shell", 
laaj: lsyscache:00002767:  format_type_be(type)), 
laaj: lsyscache:00002768:  errOmitLocation(true))); 
laaj: lsyscache:00002770:  ereport(ERROR, 
laaj: lsyscache:00002771:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
laaj: lsyscache:00002772:  errmsg("no binary input function available for type %s", 
laaj: lsyscache:00002773:  format_type_be(type)), 
laaj: lsyscache:00002774:  errOmitLocation(true))); 
laaj: lsyscache:00002803:  elog(ERROR, "cache lookup failed for type %u", type); 
laaj: lsyscache:00002807:  ereport(ERROR, 
laaj: lsyscache:00002808:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
laaj: lsyscache:00002809:  errmsg("type %s is only a shell", 
laaj: lsyscache:00002810:  format_type_be(type)), 
laaj: lsyscache:00002811:  errOmitLocation(true))); 
laaj: lsyscache:00002813:  ereport(ERROR, 
laaj: lsyscache:00002814:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
laaj: lsyscache:00002815:  errmsg("no binary output function available for type %s", 
laaj: lsyscache:00002816:  format_type_be(type)), 
laaj: lsyscache:00002817:  errOmitLocation(true))); 
laaj: lsyscache:00002969:  elog(ERROR, "stavalues is null"); 
laaj: lsyscache:00002989:  elog(ERROR, "cache lookup failed for type %u", atttype); 
laaj: lsyscache:00003036:  elog(ERROR, "stanumbers is null"); 
laaj: lsyscache:00003053:  elog(ERROR, "stanumbers is not a 1-D float4 array"); 
laaj: lsyscache:00003202:  ereport(ERROR, 
laaj: lsyscache:00003203:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
laaj: lsyscache:00003204:  errmsg("role \"%s\" does not exist", rolname), 
laaj: lsyscache:00003205:  errOmitLocation(true))); 
laaj: lsyscache:00003808:  elog(ERROR, "cache lookup failed for relation %u", relationId); 
aaaaa GP_IGNORE: raai: relcache - ./backend/utils/cache/relcache.c
raai: relcache:00000169:  elog(WARNING, "trying to delete a rd_id reldesc that does not exist"); \ 
raai: relcache:00000170: } while(0) 
raai: relcache:00000171:  
raai: relcache:00000172:  
raai: relcache:00000173: /* 
raai: relcache:00000174:  * Special cache for opclass-related information 
raai: relcache:00000175:  * 
raai: relcache:00000176:  * Note: only default operators and support procs get cached, ie, those with 
raai: relcache:00000177:  * lefttype = righttype = opcintype. 
raai: relcache:00000178:  */ 
raai: relcache:00000179: typedef struct opclasscacheent 
raai: relcache:00000180: { 
raai: relcache:00000181:  Oid opclassoid; /* lookup key: OID of opclass */ 
raai: relcache:00000182:  bool valid; /* set TRUE after successful fill-in */ 
raai: relcache:00000183:  StrategyNumber numStrats; /* max # of strategies (from pg_am) */ 
raai: relcache:00000184:  StrategyNumber numSupport; /* max # of support procs (from pg_am) */ 
raai: relcache:00000185:  Oid *operatorOids; /* strategy operators' OIDs */ 
raai: relcache:00000186:  RegProcedure *supportProcs; /* support procs */ 
raai: relcache:00000187: } OpClassCacheEnt; 
raai: relcache:00000249:  elog(FATAL, "cannot read pg_class without having selected a database"); 
raai: relcache:00000386:  elog(FATAL, "Mismatch in node tuple for gp_relation_node for relation %u, relfilenode %u, relation node %u", 
raai: relcache:00000387:  gpRelationNodeScan->relationId, 
raai: relcache:00000388:  gpRelationNodeScan->relfilenode, 
raai: relcache:00000389:  actualRelationNode); 
raai: relcache:00000597:  elog(ERROR, "Did not find gp_relation_node entry for relation name %s, relation id %u, relfilenode %u contentid %d", 
raai: relcache:00000598:  relation->rd_rel->relname.data, 
raai: relcache:00000599:  relation->rd_id, 
raai: relcache:00000600:  relation->rd_node.relNode, 
raai: relcache:00000601:  contentid); 
raai: relcache:00000608:  elog(ERROR, 
raai: relcache:00000609:  "RelationFetchSegFile0GpRelationNode has invalid TID (0,0) into relation %u/%u/%u '%s' conentid %d, serial number " INT64_FORMAT, 
raai: relcache:00000610:  relation->rd_node.spcNode, 
raai: relcache:00000611:  relation->rd_node.dbNode, 
raai: relcache:00000612:  relation->rd_node.relNode, 
raai: relcache:00000613:  NameStr(relation->rd_rel->relname), 
raai: relcache:00000614:  contentid, 
raai: relcache:00000615:  relation->rd_segfile0_relationnodeinfos[contentid + 1].persistentSerialNum); 
raai: relcache:00000643:  elog(WARNING, "RelationFetchGpRelationNodeForXLog_Index [%d] for non-heap %u/%u/%u (deep %d) -- waiting for debug attach...", 
raai: relcache:00000644:  countInThisBackend, 
raai: relcache:00000645:  relation->rd_node.spcNode, 
raai: relcache:00000646:  relation->rd_node.dbNode, 
raai: relcache:00000647:  relation->rd_node.relNode, 
raai: relcache:00000648:  deep); 
raai: relcache:00000662:  elog(ERROR, "RelationFetchGpRelationNodeForXLog_Index [%d] for non-heap %u/%u/%u (deep %d)", 
raai: relcache:00000663:  countInThisBackend, 
raai: relcache:00000664:  relation->rd_node.spcNode, 
raai: relcache:00000665:  relation->rd_node.dbNode, 
raai: relcache:00000666:  relation->rd_node.relNode, 
raai: relcache:00000667:  saveDeep); 
raai: relcache:00000899:  elog(ERROR, "invalid attribute number %d for %s", 
raai: relcache:00000900:  attp->attnum, RelationGetRelationName(relation)); 
raai: relcache:00000933:  elog(ERROR, "catalog is missing %d attribute(s) for relid %u", 
raai: relcache:00000934:  need, RelationGetRelid(relation)); 
raai: relcache:00001394:  elog(ERROR, "cache lookup failed for index %u", 
raai: relcache:00001395:  RelationGetRelid(relation)); 
raai: relcache:00001421:  elog(ERROR, "cache lookup failed for access method %u", 
raai: relcache:00001422:  relation->rd_rel->relam); 
raai: relcache:00001430:  elog(ERROR, "relnatts disagrees with indnatts for index %u", 
raai: relcache:00001431:  RelationGetRelid(relation)); 
raai: relcache:00001527:  elog(ERROR, "bogus pg_index tuple"); 
raai: relcache:00001660:  elog(ERROR, "invalid amopstrategy number %d for opclass %u", 
raai: relcache:00001661:  amopform->amopstrategy, operatorClassOid); 
raai: relcache:00001695:  elog(ERROR, "invalid amproc number %d for opclass %u", 
raai: relcache:00001696:  amprocform->amprocnum, operatorClassOid); 
raai: relcache:00001982:  elog(ERROR, 
raai: relcache:00001983:  "Relation decrement reference count found relation %u/%u/%u with bad count (reference count %d)", 
raai: relcache:00001984:  rel->rd_node.spcNode, 
raai: relcache:00001985:  rel->rd_node.dbNode, 
raai: relcache:00001986:  rel->rd_node.relNode, 
raai: relcache:00001987:  rel->rd_refcnt); 
raai: relcache:00002062:  elog(ERROR, "could not find pg_class tuple for index %u", 
raai: relcache:00002063:  RelationGetRelid(relation)); 
raai: relcache:00002267:  elog(ERROR, "relation %u deleted while still in use", save_relid); 
raai: relcache:00002383:  elog(ERROR, "relation %u is still open", rid); 
raai: relcache:00002761:  elog(ERROR, "shared_relation flag for \"%s\" does not match IsSharedRelation(%u)", 
raai: relcache:00002762:  relname, relid); 
raai: relcache:00003095:  elog(FATAL, "cache lookup failed for relation %u", 
raai: relcache:00003096:  RelationGetRelid(relation)); 
raai: relcache:00003125:  elog(ERROR, "invalid relowner in pg_class entry for \"%s\"", 
raai: relcache:00003126:  RelationGetRelationName(relation)); 
raai: relcache:00003315:  elog(WARNING, "multiple attrdef records found for attr %s of rel %s", 
raai: relcache:00003316:  NameStr(relation->rd_att->attrs[adform->adnum - 1]->attname), 
raai: relcache:00003317:  RelationGetRelationName(relation)); 
raai: relcache:00003325:  elog(WARNING, "null adbin for attr %s of rel %s", 
raai: relcache:00003326:  NameStr(relation->rd_att->attrs[adform->adnum - 1]->attname), 
raai: relcache:00003327:  RelationGetRelationName(relation)); 
raai: relcache:00003335:  elog(WARNING, "unexpected attrdef record found for attr %d of rel %s", 
raai: relcache:00003336:  adform->adnum, RelationGetRelationName(relation)); 
raai: relcache:00003343:  elog(WARNING, "%d attrdef record(s) missing for rel %s", 
raai: relcache:00003344:  ndef - found, RelationGetRelationName(relation)); 
raai: relcache:00003383:  elog(ERROR, "unexpected constraint record found for rel %s", 
raai: relcache:00003384:  RelationGetRelationName(relation)); 
raai: relcache:00003394:  elog(ERROR, "null conbin for rel %s", 
raai: relcache:00003395:  RelationGetRelationName(relation)); 
raai: relcache:00003406:  elog(ERROR, "%d constraint record(s) missing for rel %s", 
raai: relcache:00003407:  ncheck - found, RelationGetRelationName(relation)); 
raai: relcache:00004165:  ereport(WARNING, 
raai: relcache:00004166:  (errcode_for_file_access(), 
raai: relcache:00004167:  errmsg("could not create relation-cache initialization file \"%s\": %m", 
raai: relcache:00004168:  tempfilename), 
raai: relcache:00004169:  errdetail("Continuing anyway, but there's something wrong."))); 
raai: relcache:00004179:  elog(FATAL, "could not write init file"); 
raai: relcache:00004243:  elog(FATAL, "could not write init file"); 
raai: relcache:00004293:  elog(FATAL, "could not write init file"); 
raai: relcache:00004295:  elog(FATAL, "could not write init file"); 
aaaaa GP_IGNORE: saai: syscache - ./backend/utils/cache/syscache.c
saai: syscache:00000602:  elog(ERROR, "could not initialize cache %u (%d)", 
saai: syscache:00000603:  cacheinfo[cacheId].reloid, cacheId); 
saai: syscache:00000676:  elog(ERROR, "invalid cache id: %d", cacheId); 
saai: syscache:00000898:  elog(ERROR, "invalid cache id: %d", cacheId); 
saai: syscache:00000948:  elog(ERROR, "invalid cache id: %d", cacheId); 
aaaaa GP_IGNORE: taai: typcache - ./backend/utils/cache/typcache.c
taai: typcache:00000147:  elog(ERROR, "cache lookup failed for type %u", type_id); 
taai: typcache:00000150:  ereport(ERROR, 
taai: typcache:00000151:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
taai: typcache:00000152:  errmsg("type \"%s\" is only a shell", 
taai: typcache:00000153:  NameStr(typtup->typname)))); 
taai: typcache:00000272:  elog(ERROR, "invalid typrelid for composite type %u", 
taai: typcache:00000273:  typentry->type_id); 
taai: typcache:00000312:  ereport(ERROR, 
taai: typcache:00000313:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taai: typcache:00000314:  errmsg("type %s is not composite", 
taai: typcache:00000315:  format_type_be(type_id)))); 
taai: typcache:00000326:  ereport(ERROR, 
taai: typcache:00000327:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
taai: typcache:00000328:  errmsg("record type has not been registered"), 
taai: typcache:00000329:  errOmitLocation(true))); 
aaaaa GP_IGNORE: dabb: datumstream - ./backend/utils/datumstream/datumstream.c
dabb: datumstream:00000050:  elog(ERROR, "Large varlena header too small. Found %d, expected at least %d", 
dabb: datumstream:00000051:  contentLen, 
dabb: datumstream:00000052:  VARHDRSZ); 
dabb: datumstream:00000057:  elog(ERROR, "Large varlena has a toast reference but Append-Only Column Store tables do not use toast"); 
dabb: datumstream:00000165:  ereport(ERROR, 
dabb: datumstream:00000166:  (errmsg("Advance not called on large datum stream object"))); 
dabb: datumstream:00000207:  ereport(ERROR, 
dabb: datumstream:00000208:  (errmsg("Get called after large datum stream object already consumed"))); 
dabb: datumstream:00000212:  ereport(FATAL, 
dabb: datumstream:00000213:  (errmsg("Unexpected large datum stream state %d", 
dabb: datumstream:00000214:  acc->largeObjectState))); 
dabb: datumstream:00000245:  ereport(ERROR, 
dabb: datumstream:00000246:  (errmsg("Advance called after large datum stream object already consumed"))); 
dabb: datumstream:00000250:  ereport(FATAL, 
dabb: datumstream:00000251:  (errmsg("Unexpected large datum stream state %d", 
dabb: datumstream:00000252:  acc->largeObjectState))); 
dabb: datumstream:00000262:  ereport(ERROR, 
dabb: datumstream:00000263:  (errmsg("Advance not called on large datum stream object"))); 
dabb: datumstream:00000271:  ereport(ERROR, 
dabb: datumstream:00000272:  (errmsg("Nth called after large datum stream object already consumed"))); 
dabb: datumstream:00000276:  ereport(FATAL, 
dabb: datumstream:00000277:  (errmsg("Unexpected large datum stream state %d", 
dabb: datumstream:00000278:  acc->largeObjectState))); 
dabb: datumstream:00000396:  ereport(ERROR, 
dabb: datumstream:00000397:  (errmsg("Unexpected compresslevel %d", 
dabb: datumstream:00000398:  compLevel))); 
dabb: datumstream:00000551:  ereport(ERROR, 
dabb: datumstream:00000552:  (errmsg("Unexpected datum stream version %d", 
dabb: datumstream:00000553:  acc->datumStreamVersion))); 
dabb: datumstream:00000763:  elog(ERROR, "Did not find gp_relation_node entry for relfilenode %u, segment file #%d, logical eof " INT64_FORMAT, 
dabb: datumstream:00000764:  relFileNode.relNode, 
dabb: datumstream:00000765:  segmentFileNum, 
dabb: datumstream:00000766:  eof); 
dabb: datumstream:00000928:  elog(ERROR, "Unexpected datum stream version %d", 
dabb: datumstream:00000929:  acc->datumStreamVersion); 
dabb: datumstream:00000954:  elog(ERROR, "Large object must be variable length objects (varlena)"); 
dabb: datumstream:00000961:  elog(ERROR, "Expected large object / variable length objects (varlena) to be de-toasted and/or de-compressed at this point"); 
dabb: datumstream:00001069:  elog(ERROR, 
dabb: datumstream:00001070:  "Unexpected Append-Only Column Store executor kind %d", 
dabb: datumstream:00001071:  acc->getBlockInfo.execBlockKind); 
dabb: datumstream:00001149:  elog(ERROR, "Large object must be variable length objects (varlena)"); 
dabb: datumstream:00001186:  elog(ERROR, 
dabb: datumstream:00001187:  "Unexpected Append-Only Column Store executor kind %d", 
dabb: datumstream:00001188:  acc->getBlockInfo.execBlockKind); 
dabb: datumstream:00001298:  ereport(ERROR, (errcode(ERRCODE_INTERNAL_ERROR), 
dabb: datumstream:00001299:  errmsg("Unexpected internal error," 
dabb: datumstream:00001300:  " could not find the right row in block." 
dabb: datumstream:00001301:  " rowCnt is %d" 
dabb: datumstream:00001302:  " largeObjectState is %d" 
dabb: datumstream:00001303:  " rowNumInBlock is %d" 
dabb: datumstream:00001304:  " DatumStreamBlockRead_Nth is %d", 
dabb: datumstream:00001305:  datumStream->blockRead.logical_row_count, 
dabb: datumstream:00001306:  datumStream->largeObjectState, 
dabb: datumstream:00001307:  rowNumInBlock, 
dabb: datumstream:00001308:  DatumStreamBlockRead_Nth(&datumStream->blockRead)))); 
dabb: datumstream:00001437:  ereport(ERROR, 
dabb: datumstream:00001438:  (errmsg("Unexpected internal error," 
dabb: datumstream:00001439:  " block content was already read." 
dabb: datumstream:00001440:  " datumstream_find_block filePathName %s" 
dabb: datumstream:00001441:  " fileOffset " INT64_FORMAT 
dabb: datumstream:00001442:  " firstRowNum " INT64_FORMAT 
dabb: datumstream:00001443:  " rowCnt %u lastRowNum " INT64_FORMAT 
dabb: datumstream:00001444:  " ndatum %u contentLen %d gotContents true", 
dabb: datumstream:00001445:  datumStream->ao_read.bufferedRead.filePathName, 
dabb: datumstream:00001446:  datumStreamFetchDesc->currentBlock.fileOffset, 
dabb: datumstream:00001447:  datumStream->getBlockInfo.firstRow, 
dabb: datumstream:00001448:  datumStream->getBlockInfo.rowCnt, 
dabb: datumstream:00001449:  datumStreamFetchDesc->currentBlock.lastRowNum, 
dabb: datumstream:00001450:  datumStream->blockRead.logical_row_count, 
dabb: datumstream:00001451:  datumStream->getBlockInfo.contentLen 
dabb: datumstream:00001452:  ))); 
aaaaa GP_IGNORE: dabg: datumstreamblock - ./backend/utils/datumstream/datumstreamblock.c
dabg: datumstreamblock:00000067:  elog(FATAL, "DatumStreamBlockRead data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00000086:  elog(FATAL, "DatumStreamBlockRead data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00000096:  elog(FATAL, "DatumStreamBlockRead data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00000143:  elog(FATAL, "DatumStreamBlockRead data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00000172:  ereport(ERROR, 
dabg: datumstreamblock:00000173:  (errmsg("Bad datum stream Original block header size. Found %d and expected the size to be at least %d", 
dabg: datumstreamblock:00000174:  bufferSize, 
dabg: datumstreamblock:00000175:  minHeaderSize), 
dabg: datumstreamblock:00000176:  errOmitLocation(false), 
dabg: datumstreamblock:00000177:  errdetail_datumstreamblockread(dsr), 
dabg: datumstreamblock:00000178:  errcontext_datumstreamblockread(dsr))); 
dabg: datumstreamblock:00000184:  ereport(ERROR, 
dabg: datumstreamblock:00000185:  (errmsg("Bad datum stream Original block version. Found %d and expected %d", 
dabg: datumstreamblock:00000186:  blockOrig->version, 
dabg: datumstreamblock:00000187:  DatumStreamVersion_Original), 
dabg: datumstreamblock:00000188:  errOmitLocation(false), 
dabg: datumstreamblock:00000189:  errdetail_datumstreamblockread(dsr), 
dabg: datumstreamblock:00000190:  errcontext_datumstreamblockread(dsr))); 
dabg: datumstreamblock:00000379:  ereport(ERROR, 
dabg: datumstreamblock:00000380:  (errmsg("Nth position %d expected to match physical datum index %d when Dense block does not have RLE_TYPE compression and does not have NULLs " 
dabg: datumstreamblock:00000381:  "(logical row count %d, physical datum count %d)", 
dabg: datumstreamblock:00000382:  dsr->nth, 
dabg: datumstreamblock:00000383:  dsr->physical_datum_index, 
dabg: datumstreamblock:00000384:  dsr->logical_row_count, 
dabg: datumstreamblock:00000385:  dsr->physical_datum_count), 
dabg: datumstreamblock:00000386:  errOmitLocation(false), 
dabg: datumstreamblock:00000387:  errdetail_datumstreamblockread(dsr), 
dabg: datumstreamblock:00000388:  errcontext_datumstreamblockread(dsr))); 
dabg: datumstreamblock:00000404:  ereport(ERROR, 
dabg: datumstreamblock:00000405:  (errmsg("NULL bit-map ON count does not match when Dense block does not have RLE_TYPE compression. Found %d, expected %d", 
dabg: datumstreamblock:00000406:  currentNullOnCount, 
dabg: datumstreamblock:00000407:  expectedNullOnCount), 
dabg: datumstreamblock:00000408:  errOmitLocation(false), 
dabg: datumstreamblock:00000409:  errdetail_datumstreamblockread(dsr), 
dabg: datumstreamblock:00000410:  errcontext_datumstreamblockread(dsr))); 
dabg: datumstreamblock:00000423:  ereport(ERROR, 
dabg: datumstreamblock:00000424:  (errmsg("COMPRESS bit-map position %d expected to match physical datum index %d when Dense block does not have RLE_TYPE compression and does not have NULLs " 
dabg: datumstreamblock:00000425:  "(logical row count %d, physical datum count %d)", 
dabg: datumstreamblock:00000426:  currentCompressBitMapPosition, 
dabg: datumstreamblock:00000427:  dsr->physical_datum_index, 
dabg: datumstreamblock:00000428:  dsr->logical_row_count, 
dabg: datumstreamblock:00000429:  dsr->physical_datum_count), 
dabg: datumstreamblock:00000430:  errOmitLocation(false), 
dabg: datumstreamblock:00000431:  errdetail_datumstreamblockread(dsr), 
dabg: datumstreamblock:00000432:  errcontext_datumstreamblockread(dsr))); 
dabg: datumstreamblock:00000446:  ereport(ERROR, 
dabg: datumstreamblock:00000447:  (errmsg("Nth position %d expected to match " 
dabg: datumstreamblock:00000448:  "current COMPRESS bit-map OFF count %d + total repeat items read %d - 1 " 
dabg: datumstreamblock:00000449:  "when Dense block does not have RLE_TYPE compression and does not have NULLs " 
dabg: datumstreamblock:00000450:  "(logical row count %d, physical datum count %d)", 
dabg: datumstreamblock:00000451:  dsr->nth, 
dabg: datumstreamblock:00000452:  currentCompressBitMapOffCount, 
dabg: datumstreamblock:00000453:  dsr->rle_total_repeat_items_read, 
dabg: datumstreamblock:00000454:  dsr->logical_row_count, 
dabg: datumstreamblock:00000455:  dsr->physical_datum_count), 
dabg: datumstreamblock:00000456:  errOmitLocation(false), 
dabg: datumstreamblock:00000457:  errdetail_datumstreamblockread(dsr), 
dabg: datumstreamblock:00000458:  errcontext_datumstreamblockread(dsr))); 
dabg: datumstreamblock:00000471:  ereport(ERROR, 
dabg: datumstreamblock:00000472:  (errmsg("Nth position %d expected to match current NULL bit-map ON count %d + " 
dabg: datumstreamblock:00000473:  "current COMPRESS bit-map OFF count %d + total repeat items read %d - 1 " 
dabg: datumstreamblock:00000474:  "when Dense block does not have RLE_TYPE compression and does not have NULLs " 
dabg: datumstreamblock:00000475:  "(logical row count %d, physical datum count %d)", 
dabg: datumstreamblock:00000476:  dsr->nth, 
dabg: datumstreamblock:00000477:  currentNullBitMapOnCount, 
dabg: datumstreamblock:00000478:  currentCompressBitMapOffCount, 
dabg: datumstreamblock:00000479:  dsr->rle_total_repeat_items_read, 
dabg: datumstreamblock:00000480:  dsr->logical_row_count, 
dabg: datumstreamblock:00000481:  dsr->physical_datum_count), 
dabg: datumstreamblock:00000482:  errOmitLocation(false), 
dabg: datumstreamblock:00000483:  errdetail_datumstreamblockread(dsr), 
dabg: datumstreamblock:00000484:  errcontext_datumstreamblockread(dsr))); 
dabg: datumstreamblock:00000496:  elog(FATAL, "DatumStreamBlockRead data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00000553:  elog(FATAL, "DatumStreamBlockRead data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00000800:  elog(FATAL, "DatumStreamBlockWrite data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00000819:  elog(FATAL, "DatumStreamBlockWrite data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00000837:  ereport(ERROR, 
dabg: datumstreamblock:00000838:  (errmsg("Nth position %d expected to match physical datum count %d - 1 when Dense block does not have RLE_TYPE compression and does not have NULLs", 
dabg: datumstreamblock:00000839:  dsw->nth, 
dabg: datumstreamblock:00000840:  dsw->physical_datum_count), 
dabg: datumstreamblock:00000841:  errOmitLocation(false), 
dabg: datumstreamblock:00000842:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00000843:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00000857:  ereport(ERROR, 
dabg: datumstreamblock:00000858:  (errmsg("NULL bit-map ON count does not match when Dense block does not have RLE_TYPE compression. Found %d, expected %d", 
dabg: datumstreamblock:00000859:  currentNullOnCount, 
dabg: datumstreamblock:00000860:  expectedNullOnCount), 
dabg: datumstreamblock:00000861:  errOmitLocation(false), 
dabg: datumstreamblock:00000862:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00000863:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00000877:  ereport(ERROR, 
dabg: datumstreamblock:00000878:  (errmsg("COMPRESS bit-map position %d expected to match physical datum count %d - 1 when Dense block does not have RLE_TYPE compression and does not have NULLs " 
dabg: datumstreamblock:00000879:  "(Nth %d)", 
dabg: datumstreamblock:00000880:  currentCompressBitMapPosition, 
dabg: datumstreamblock:00000881:  dsw->physical_datum_count, 
dabg: datumstreamblock:00000882:  dsw->nth), 
dabg: datumstreamblock:00000883:  errOmitLocation(false), 
dabg: datumstreamblock:00000884:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00000885:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00000897:  ereport(ERROR, 
dabg: datumstreamblock:00000898:  (errmsg("Nth position %d expected to match " 
dabg: datumstreamblock:00000899:  "current COMPRESS bit-map OFF count %d + total repeat items written %d " 
dabg: datumstreamblock:00000900:  "when Dense block does not have RLE_TYPE compression and does not have NULLs " 
dabg: datumstreamblock:00000901:  "(physical datum count %d)", 
dabg: datumstreamblock:00000902:  dsw->nth, 
dabg: datumstreamblock:00000903:  currentCompressBitMapOffCount, 
dabg: datumstreamblock:00000904:  dsw->rle_total_repeat_items_written, 
dabg: datumstreamblock:00000905:  dsw->physical_datum_count), 
dabg: datumstreamblock:00000906:  errOmitLocation(false), 
dabg: datumstreamblock:00000907:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00000908:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00000921:  ereport(ERROR, 
dabg: datumstreamblock:00000922:  (errmsg("Nth position %d expected to match current NULL bit-map ON count %d + " 
dabg: datumstreamblock:00000923:  "current COMPRESS bit-map OFF count %d + total repeat items written %d " 
dabg: datumstreamblock:00000924:  "when Dense block does not have RLE_TYPE compression and does not have NULLs " 
dabg: datumstreamblock:00000925:  "(physical datum count %d)", 
dabg: datumstreamblock:00000926:  dsw->nth, 
dabg: datumstreamblock:00000927:  currentNullBitMapOnCount, 
dabg: datumstreamblock:00000928:  currentCompressBitMapOffCount, 
dabg: datumstreamblock:00000929:  dsw->rle_total_repeat_items_written, 
dabg: datumstreamblock:00000930:  dsw->physical_datum_count), 
dabg: datumstreamblock:00000931:  errOmitLocation(false), 
dabg: datumstreamblock:00000932:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00000933:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00000939:  ereport(ERROR, 
dabg: datumstreamblock:00000940:  (errmsg("Current NULL bit-map count %d expected to match current NULL bit-map ON count %d + " 
dabg: datumstreamblock:00000941:  "current COMPRESS bit-map count %d " 
dabg: datumstreamblock:00000942:  "when Dense block does not have RLE_TYPE compression and does not have NULLs " 
dabg: datumstreamblock:00000943:  "(total repeat items written %d, physical datum count %d)", 
dabg: datumstreamblock:00000944:  currentNullBitMapCount, 
dabg: datumstreamblock:00000945:  currentNullBitMapOnCount, 
dabg: datumstreamblock:00000946:  currentCompressBitMapCount, 
dabg: datumstreamblock:00000947:  dsw->rle_total_repeat_items_written, 
dabg: datumstreamblock:00000948:  dsw->physical_datum_count), 
dabg: datumstreamblock:00000949:  errOmitLocation(false), 
dabg: datumstreamblock:00000950:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00000951:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00001025:  ereport(FATAL, 
dabg: datumstreamblock:00001026:  (errmsg("fixed length type has unexpected length %d", 
dabg: datumstreamblock:00001027:  dsw->typeInfo->datumlen), 
dabg: datumstreamblock:00001028:  errOmitLocation(false), 
dabg: datumstreamblock:00001029:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00001030:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00001084:  ereport(FATAL, 
dabg: datumstreamblock:00001085:  (errmsg("fixed length type has unexpected length %d", 
dabg: datumstreamblock:00001086:  dsw->typeInfo->datumlen), 
dabg: datumstreamblock:00001087:  errOmitLocation(false), 
dabg: datumstreamblock:00001088:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00001089:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00001110:  ereport(ERROR, 
dabg: datumstreamblock:00001111:  (errmsg("Datum stream write %s block problem growing NULL bit-map buffer " 
dabg: datumstreamblock:00001112:  "(current logical row count %d, physical datum count %d, " 
dabg: datumstreamblock:00001113:  "null bit-map count %d, old NULL bit-map count %d)", 
dabg: datumstreamblock:00001114:  DatumStreamVersion_String(dsw->datumStreamVersion), 
dabg: datumstreamblock:00001115:  dsw->nth + 1, 
dabg: datumstreamblock:00001116:  dsw->physical_datum_count, 
dabg: datumstreamblock:00001117:  DatumStreamBitMapWrite_Count(&dsw->null_bitmap), 
dabg: datumstreamblock:00001118:  dsw->always_null_bitmap_count), 
dabg: datumstreamblock:00001119:  errOmitLocation(true), 
dabg: datumstreamblock:00001120:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00001121:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00002514:  elog(ERROR, "Last data item size %d doesn't match type datum length %d", 
dabg: datumstreamblock:00002515:  dsw->rle_last_item_size, 
dabg: datumstreamblock:00002516:  dsw->typeInfo->datumlen); 
dabg: datumstreamblock:00002547:  ereport(FATAL, 
dabg: datumstreamblock:00002548:  (errmsg("fixed length type has strange length %d", 
dabg: datumstreamblock:00002549:  dsw->typeInfo->datumlen), 
dabg: datumstreamblock:00002550:  errOmitLocation(false), 
dabg: datumstreamblock:00002551:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00002552:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00002632:  elog(FATAL, "DatumStreamBlockWrite data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00002655:  ereport(FATAL, 
dabg: datumstreamblock:00002656:  (errmsg("Unexpected datum stream version %d", 
dabg: datumstreamblock:00002657:  dsw->datumStreamVersion), 
dabg: datumstreamblock:00002658:  errOmitLocation(false), 
dabg: datumstreamblock:00002659:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00002660:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00002668:  elog(FATAL, "DatumStreamBlockWrite data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00002677:  elog(FATAL, "DatumStreamBlockWrite data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00002724:  ereport(FATAL, 
dabg: datumstreamblock:00002725:  (errmsg("Unexpected datum stream version %d", 
dabg: datumstreamblock:00002726:  dsw->datumStreamVersion), 
dabg: datumstreamblock:00002727:  errOmitLocation(false), 
dabg: datumstreamblock:00002728:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00002729:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00003016:  ereport(ERROR, 
dabg: datumstreamblock:00003017:  (errmsg("Formatted datum stream write metasize size different (expected %d, found " INT64_FORMAT ")", 
dabg: datumstreamblock:00003018:  metadataSize, 
dabg: datumstreamblock:00003019:  formattedMetadataSize), 
dabg: datumstreamblock:00003020:  errOmitLocation(false), 
dabg: datumstreamblock:00003021:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00003022:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00003037:  ereport(ERROR, 
dabg: datumstreamblock:00003038:  (errmsg("Formatted datum stream MAXALIGN metadata size %d + physical datum size %d " 
dabg: datumstreamblock:00003039:  "(total %d, metadata size %d, header size %d, null size %d, RLE_TYPE size %d) would exceed maximum data blocksize %d)", 
dabg: datumstreamblock:00003040:  metadataMaxAlignSize, 
dabg: datumstreamblock:00003041:  dense.physical_data_size, 
dabg: datumstreamblock:00003042:  metadataMaxAlignSize + dense.physical_data_size, 
dabg: datumstreamblock:00003043:  metadataSize, 
dabg: datumstreamblock:00003044:  headerSize, 
dabg: datumstreamblock:00003045:  nullSize, 
dabg: datumstreamblock:00003046:  rleSize, 
dabg: datumstreamblock:00003047:  dsw->maxDataBlockSize), 
dabg: datumstreamblock:00003048:  errOmitLocation(false), 
dabg: datumstreamblock:00003049:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00003050:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00003205:  elog(FATAL, "DatumStreamBlockWrite data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00003216:  ereport(FATAL, 
dabg: datumstreamblock:00003217:  (errmsg("Unexpected datum stream version %d", 
dabg: datumstreamblock:00003218:  dsw->datumStreamVersion), 
dabg: datumstreamblock:00003219:  errOmitLocation(false), 
dabg: datumstreamblock:00003220:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00003221:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00003370:  ereport(FATAL, 
dabg: datumstreamblock:00003371:  (errmsg("Unexpected datum stream version %d", 
dabg: datumstreamblock:00003372:  dsw->datumStreamVersion), 
dabg: datumstreamblock:00003373:  errOmitLocation(false), 
dabg: datumstreamblock:00003374:  errdetail_datumstreamblockwrite(dsw), 
dabg: datumstreamblock:00003375:  errcontext_datumstreamblockwrite(dsw))); 
dabg: datumstreamblock:00003389:  elog(FATAL, "DatumStreamBlockWrite data structure not valid (eyecatcher)"); 
dabg: datumstreamblock:00003461:  ereport(ERROR, 
dabg: datumstreamblock:00003462:  (errmsg("Bad datum stream %s variable-length item zero padding byte at offset %d is not zero (begin offset %d, physical item index #%d)", 
dabg: datumstreamblock:00003463:  DatumStreamVersion_String(datumStreamVersion), 
dabg: datumstreamblock:00003464:  currentOffset, 
dabg: datumstreamblock:00003465:  saveBeginOffset, 
dabg: datumstreamblock:00003466:  count), 
dabg: datumstreamblock:00003467:  errOmitLocation(false), 
dabg: datumstreamblock:00003468:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003469:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003491:  ereport(ERROR, 
dabg: datumstreamblock:00003492:  (errmsg("Bad datum stream %s variable-length item at physical offset %d is corrupt (varlena is EXTERNAL, physical item index #%d)", 
dabg: datumstreamblock:00003493:  DatumStreamVersion_String(datumStreamVersion), 
dabg: datumstreamblock:00003494:  currentOffset, 
dabg: datumstreamblock:00003495:  count), 
dabg: datumstreamblock:00003496:  errOmitLocation(false), 
dabg: datumstreamblock:00003497:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003498:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003512:  ereport(ERROR, 
dabg: datumstreamblock:00003513:  (errmsg("Bad datum stream %s variable-length item at physical offset %d. SHORT varlena VARSIZE too short (size %d, remaining size %d, physical size %d, physical item index #%d, varlena: %s)", 
dabg: datumstreamblock:00003514:  DatumStreamVersion_String(datumStreamVersion), 
dabg: datumstreamblock:00003515:  currentOffset, 
dabg: datumstreamblock:00003516:  varLen, 
dabg: datumstreamblock:00003517:  remainingSize, 
dabg: datumstreamblock:00003518:  physicalDataSize, 
dabg: datumstreamblock:00003519:  count, 
dabg: datumstreamblock:00003520:  VarlenaInfoToString(p)), 
dabg: datumstreamblock:00003521:  errOmitLocation(false), 
dabg: datumstreamblock:00003522:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003523:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003527:  ereport(ERROR, 
dabg: datumstreamblock:00003528:  (errmsg("Bad datum stream %s variable-length item at physical offset %d. SHORT varlena size bad (size %d, remaining size %d, physical size %d, physical item index #%d, varlena: %s)", 
dabg: datumstreamblock:00003529:  DatumStreamVersion_String(datumStreamVersion), 
dabg: datumstreamblock:00003530:  currentOffset, 
dabg: datumstreamblock:00003531:  varLen, 
dabg: datumstreamblock:00003532:  remainingSize, 
dabg: datumstreamblock:00003533:  physicalDataSize, 
dabg: datumstreamblock:00003534:  count, 
dabg: datumstreamblock:00003535:  VarlenaInfoToString(p)), 
dabg: datumstreamblock:00003536:  errOmitLocation(false), 
dabg: datumstreamblock:00003537:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003538:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003545:  ereport(ERROR, 
dabg: datumstreamblock:00003546:  (errmsg("Bad datum stream %s variable-length item at physical offset %d. Remaining length %d too short for regular varlena 4 byte header (physical item index #%d)", 
dabg: datumstreamblock:00003547:  DatumStreamVersion_String(datumStreamVersion), 
dabg: datumstreamblock:00003548:  currentOffset, 
dabg: datumstreamblock:00003549:  remainingSize, 
dabg: datumstreamblock:00003550:  count), 
dabg: datumstreamblock:00003551:  errOmitLocation(false), 
dabg: datumstreamblock:00003552:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003553:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003558:  ereport(ERROR, 
dabg: datumstreamblock:00003559:  (errmsg("Bad datum stream %s variable-length item at physical offset %d. Not aligned on at least a 2 byte boundary for regular varlena header (physical item index #%d)", 
dabg: datumstreamblock:00003560:  DatumStreamVersion_String(datumStreamVersion), 
dabg: datumstreamblock:00003561:  currentOffset, 
dabg: datumstreamblock:00003562:  count), 
dabg: datumstreamblock:00003563:  errOmitLocation(false), 
dabg: datumstreamblock:00003564:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003565:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003572:  ereport(ERROR, 
dabg: datumstreamblock:00003573:  (errmsg("Bad datum stream %s variable-length item at physical offset %d. Regular varlena VARSIZE too short (length %d, remaining size %d, physical size %d, physical item index #%d, varlena: %s)", 
dabg: datumstreamblock:00003574:  DatumStreamVersion_String(datumStreamVersion), 
dabg: datumstreamblock:00003575:  currentOffset, 
dabg: datumstreamblock:00003576:  varLen, 
dabg: datumstreamblock:00003577:  remainingSize, 
dabg: datumstreamblock:00003578:  physicalDataSize, 
dabg: datumstreamblock:00003579:  count, 
dabg: datumstreamblock:00003580:  VarlenaInfoToString(p)), 
dabg: datumstreamblock:00003581:  errOmitLocation(false), 
dabg: datumstreamblock:00003582:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003583:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003587:  ereport(ERROR, 
dabg: datumstreamblock:00003588:  (errmsg("Bad datum stream %s variable-length item at physical offset %d. Regular varlena length bad (length %d, remaining size %d, physical size %d, physical item index #%d, varlena: %s)", 
dabg: datumstreamblock:00003589:  DatumStreamVersion_String(datumStreamVersion), 
dabg: datumstreamblock:00003590:  currentOffset, 
dabg: datumstreamblock:00003591:  varLen, 
dabg: datumstreamblock:00003592:  remainingSize, 
dabg: datumstreamblock:00003593:  physicalDataSize, 
dabg: datumstreamblock:00003594:  count, 
dabg: datumstreamblock:00003595:  VarlenaInfoToString(p)), 
dabg: datumstreamblock:00003596:  errOmitLocation(false), 
dabg: datumstreamblock:00003597:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003598:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003639:  ereport(ERROR, 
dabg: datumstreamblock:00003640:  (errmsg("Bad datum stream Original block header size. Found %d and expected the size to be at least %d", 
dabg: datumstreamblock:00003641:  bufferSize, 
dabg: datumstreamblock:00003642:  minHeaderSize), 
dabg: datumstreamblock:00003643:  errOmitLocation(false), 
dabg: datumstreamblock:00003644:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003645:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003654:  ereport(ERROR, 
dabg: datumstreamblock:00003655:  (errmsg("Bad datum stream Original block version. Found %d and expected %d", 
dabg: datumstreamblock:00003656:  blockOrig->version, 
dabg: datumstreamblock:00003657:  DatumStreamVersion_Original), 
dabg: datumstreamblock:00003658:  errOmitLocation(false), 
dabg: datumstreamblock:00003659:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003660:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003724:  ereport(ERROR, 
dabg: datumstreamblock:00003725:  (errmsg("Bad datum stream Dense block header size. Found %d and expected the size to be at least %d", 
dabg: datumstreamblock:00003726:  bufferSize, 
dabg: datumstreamblock:00003727:  minHeaderSize), 
dabg: datumstreamblock:00003728:  errOmitLocation(false), 
dabg: datumstreamblock:00003729:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003730:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003739:  ereport(ERROR, 
dabg: datumstreamblock:00003740:  (errmsg("Bad datum stream Dense block version. Found %d and expected %d", 
dabg: datumstreamblock:00003741:  blockDense->orig_4_bytes.version, 
dabg: datumstreamblock:00003742:  DatumStreamVersion_Dense), 
dabg: datumstreamblock:00003743:  errOmitLocation(false), 
dabg: datumstreamblock:00003744:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003745:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003763:  ereport(ERROR, 
dabg: datumstreamblock:00003764:  (errmsg("Logical row count is negative and is expected to be greater than 0. (%d)", 
dabg: datumstreamblock:00003765:  blockDense->logical_row_count), 
dabg: datumstreamblock:00003766:  errOmitLocation(false), 
dabg: datumstreamblock:00003767:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003768:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003772:  ereport(ERROR, 
dabg: datumstreamblock:00003773:  (errmsg("Logical row count is zero and is expected to be at greater than 0"), 
dabg: datumstreamblock:00003774:  errOmitLocation(false), 
dabg: datumstreamblock:00003775:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003776:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003780:  ereport(ERROR, 
dabg: datumstreamblock:00003781:  (errmsg("Logical row count does not match expected value (found %d, expected %d)", 
dabg: datumstreamblock:00003782:  blockDense->logical_row_count, 
dabg: datumstreamblock:00003783:  expectedRowCount), 
dabg: datumstreamblock:00003784:  errOmitLocation(false), 
dabg: datumstreamblock:00003785:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003786:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003794:  ereport(ERROR, 
dabg: datumstreamblock:00003795:  (errmsg("Physical datum count is negative and is expected to be at least greater than or equal to 0. (%d)", 
dabg: datumstreamblock:00003796:  blockDense->physical_datum_count), 
dabg: datumstreamblock:00003797:  errOmitLocation(false), 
dabg: datumstreamblock:00003798:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003799:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003807:  ereport(ERROR, 
dabg: datumstreamblock:00003808:  (errmsg("Physical data size is negative and is expected to be at least greater than or equal to 0. (%d)", 
dabg: datumstreamblock:00003809:  blockDense->physical_data_size), 
dabg: datumstreamblock:00003810:  errOmitLocation(false), 
dabg: datumstreamblock:00003811:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003812:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003819:  ereport(ERROR, 
dabg: datumstreamblock:00003820:  (errmsg("Physical data size is zero and is expected to be at least greater than 0 since physical datum count is %d", 
dabg: datumstreamblock:00003821:  blockDense->physical_datum_count), 
dabg: datumstreamblock:00003822:  errOmitLocation(false), 
dabg: datumstreamblock:00003823:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003824:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003829:  ereport(ERROR, 
dabg: datumstreamblock:00003830:  (errmsg("Physical data size %d is greater than buffer size %d", 
dabg: datumstreamblock:00003831:  blockDense->physical_data_size, 
dabg: datumstreamblock:00003832:  bufferSize), 
dabg: datumstreamblock:00003833:  errOmitLocation(false), 
dabg: datumstreamblock:00003834:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003835:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003843:  ereport(ERROR, 
dabg: datumstreamblock:00003844:  (errmsg("More physical items %d than physical bytes %d", 
dabg: datumstreamblock:00003845:  blockDense->physical_datum_count, 
dabg: datumstreamblock:00003846:  blockDense->physical_data_size), 
dabg: datumstreamblock:00003847:  errOmitLocation(false), 
dabg: datumstreamblock:00003848:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003849:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003863:  ereport(ERROR, 
dabg: datumstreamblock:00003864:  (errmsg("Physical size doesn't match calculations for %d count of fixed-size %d items " 
dabg: datumstreamblock:00003865:  "(found " INT64_FORMAT ", expected %d)", 
dabg: datumstreamblock:00003866:  blockDense->physical_datum_count, 
dabg: datumstreamblock:00003867:  typeInfo->datumlen, 
dabg: datumstreamblock:00003868:  calculatedDataSize, 
dabg: datumstreamblock:00003869:  blockDense->physical_data_size), 
dabg: datumstreamblock:00003870:  errOmitLocation(false), 
dabg: datumstreamblock:00003871:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003872:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003881:  ereport(ERROR, 
dabg: datumstreamblock:00003882:  (errmsg("Physical data size %d is expected to be at 0 since physical datum count is 0", 
dabg: datumstreamblock:00003883:  blockDense->physical_data_size), 
dabg: datumstreamblock:00003884:  errOmitLocation(false), 
dabg: datumstreamblock:00003885:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003886:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003898:  ereport(ERROR, 
dabg: datumstreamblock:00003899:  (errmsg("Logical row count expected to match physical datum count when block does not have NULLs " 
dabg: datumstreamblock:00003900:  "(logical row count %d, physical datum count %d)", 
dabg: datumstreamblock:00003901:  blockDense->logical_row_count, 
dabg: datumstreamblock:00003902:  blockDense->physical_datum_count), 
dabg: datumstreamblock:00003903:  errOmitLocation(false), 
dabg: datumstreamblock:00003904:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003905:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003922:  ereport(ERROR, 
dabg: datumstreamblock:00003923:  (errmsg("Expected header size %d including NULL bit-map is larger than buffer size %d", 
dabg: datumstreamblock:00003924:  alignedHeaderSize, 
dabg: datumstreamblock:00003925:  bufferSize), 
dabg: datumstreamblock:00003926:  errOmitLocation(false), 
dabg: datumstreamblock:00003927:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003928:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003937:  ereport(ERROR, 
dabg: datumstreamblock:00003938:  (errmsg("NULL bit-map ON count does not match. Found %d, expected %d", 
dabg: datumstreamblock:00003939:  actualNullOnCount, 
dabg: datumstreamblock:00003940:  expectedNullOnCount), 
dabg: datumstreamblock:00003941:  errOmitLocation(false), 
dabg: datumstreamblock:00003942:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003943:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003972:  ereport(ERROR, 
dabg: datumstreamblock:00003973:  (errmsg("Bad datum stream RLE_TYPE block header extension size. Found %d and expected the size to be at least %d", 
dabg: datumstreamblock:00003974:  bufferSize, 
dabg: datumstreamblock:00003975:  headerSize), 
dabg: datumstreamblock:00003976:  errOmitLocation(false), 
dabg: datumstreamblock:00003977:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003978:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003987:  ereport(ERROR, 
dabg: datumstreamblock:00003988:  (errmsg("RLE_TYPE NULL bit-map count is expected to be 0 when there are no NULLs. (%d)", 
dabg: datumstreamblock:00003989:  rleExtension->norepeats_null_bitmap_count), 
dabg: datumstreamblock:00003990:  errOmitLocation(false), 
dabg: datumstreamblock:00003991:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00003992:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00003999:  ereport(ERROR, 
dabg: datumstreamblock:00004000:  (errmsg("RLE_TYPE NULL bit-map count is negative or 0 and is expected to be greater than 0 when there are NULLs. (%d)", 
dabg: datumstreamblock:00004001:  rleExtension->norepeats_null_bitmap_count), 
dabg: datumstreamblock:00004002:  errOmitLocation(false), 
dabg: datumstreamblock:00004003:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00004004:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00004010:  ereport(ERROR, 
dabg: datumstreamblock:00004011:  (errmsg("RLE_TYPE COMPRESS bit-map count is negative or 0 and is expected to be greater than 0. (%d)", 
dabg: datumstreamblock:00004012:  rleExtension->compress_bitmap_count), 
dabg: datumstreamblock:00004013:  errOmitLocation(false), 
dabg: datumstreamblock:00004014:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00004015:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00004020:  ereport(ERROR, 
dabg: datumstreamblock:00004021:  (errmsg("RLE_TYPE repeats count is negative or 0 and is expected to be greater than 0. (%d)", 
dabg: datumstreamblock:00004022:  rleExtension->repeatcounts_count), 
dabg: datumstreamblock:00004023:  errOmitLocation(false), 
dabg: datumstreamblock:00004024:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00004025:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00004030:  ereport(ERROR, 
dabg: datumstreamblock:00004031:  (errmsg("RLE_TYPE repeats size is negative or 0 and is expected to be greater than 0. (%d)", 
dabg: datumstreamblock:00004032:  rleExtension->repeatcounts_size), 
dabg: datumstreamblock:00004033:  errOmitLocation(false), 
dabg: datumstreamblock:00004034:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00004035:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00004053:  ereport(ERROR, 
dabg: datumstreamblock:00004054:  (errmsg("Bad NULL bit-map size %d with RLE_TYPE compression extension header is larger than buffer size %d", 
dabg: datumstreamblock:00004055:  headerSize, 
dabg: datumstreamblock:00004056:  bufferSize), 
dabg: datumstreamblock:00004057:  errOmitLocation(false), 
dabg: datumstreamblock:00004058:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00004059:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00004072:  ereport(ERROR, 
dabg: datumstreamblock:00004073:  (errmsg("Expected RLE_TYPE header size %d including NULL bit-map is larger than buffer size %d", 
dabg: datumstreamblock:00004074:  headerSize, 
dabg: datumstreamblock:00004075:  bufferSize), 
dabg: datumstreamblock:00004076:  errOmitLocation(false), 
dabg: datumstreamblock:00004077:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00004078:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00004085:  ereport(ERROR, 
dabg: datumstreamblock:00004086:  (errmsg("RLE_TYPE COMPRESS bit-map ON count does not match COMPRESS bit-map ON count. Found %d, expected %d", 
dabg: datumstreamblock:00004087:  actualCompressOnCount, 
dabg: datumstreamblock:00004088:  rleExtension->repeatcounts_count), 
dabg: datumstreamblock:00004089:  errOmitLocation(false), 
dabg: datumstreamblock:00004090:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00004091:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00004102:  ereport(ERROR, 
dabg: datumstreamblock:00004103:  (errmsg("Expected RLE_TYPE header size %d including repeat counts is larger than buffer size %d", 
dabg: datumstreamblock:00004104:  alignedHeaderSize, 
dabg: datumstreamblock:00004105:  bufferSize), 
dabg: datumstreamblock:00004106:  errOmitLocation(false), 
dabg: datumstreamblock:00004107:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00004108:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00004128:  ereport(ERROR, 
dabg: datumstreamblock:00004129:  (errmsg("Bad RLE_TYPE repeats count size. Found %d, expected %d", 
dabg: datumstreamblock:00004130:  totalRepeatCountsSize, 
dabg: datumstreamblock:00004131:  rleExtension->repeatcounts_size), 
dabg: datumstreamblock:00004132:  errOmitLocation(false), 
dabg: datumstreamblock:00004133:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00004134:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00004147:  ereport(ERROR, 
dabg: datumstreamblock:00004148:  (errmsg("Logical row count, COMPRESS bit-map count, and total repeat count for RLE_TYPE compression do not add up properly. Found %d, expected %d. " 
dabg: datumstreamblock:00004149:  "(logical row count %d, COMPRESS bit-map count %d, total repeat count %d)", 
dabg: datumstreamblock:00004150:  actualNullOnCount, 
dabg: datumstreamblock:00004151:  expectedNullOnCount, 
dabg: datumstreamblock:00004152:  blockDense->logical_row_count, 
dabg: datumstreamblock:00004153:  rleExtension->compress_bitmap_count, 
dabg: datumstreamblock:00004154:  totalRepeatCount), 
dabg: datumstreamblock:00004155:  errOmitLocation(false), 
dabg: datumstreamblock:00004156:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00004157:  errcontextCallback(errcontextArg))); 
dabg: datumstreamblock:00004164:  ereport(ERROR, 
dabg: datumstreamblock:00004165:  (errmsg("NULL bit-map ON count for RLE_TYPE compression does not match. Found %d, expected %d. " 
dabg: datumstreamblock:00004166:  "(logical row count %d, COMPRESS bit-map count %d, total repeat count %d)", 
dabg: datumstreamblock:00004167:  actualNullOnCount, 
dabg: datumstreamblock:00004168:  expectedNullOnCount, 
dabg: datumstreamblock:00004169:  blockDense->logical_row_count, 
dabg: datumstreamblock:00004170:  rleExtension->compress_bitmap_count, 
dabg: datumstreamblock:00004171:  totalRepeatCount), 
dabg: datumstreamblock:00004172:  errOmitLocation(false), 
dabg: datumstreamblock:00004173:  errdetailCallback(errdetailArg), 
dabg: datumstreamblock:00004174:  errcontextCallback(errcontextArg))); 
aaaaa GP_IGNORE: eaae: elog - ./backend/utils/error/elog.c
eaae: elog:00000192:  ereport(ERROR, (errmsg_internal("errstart was not called"))); \ 
eaae: elog:00000193:  } \ 
eaae: elog:00000194:  } while (0) 
eaae: elog:00000195:  
eaae: elog:00000196: bool SuppressPanic = false; /* GP */ 
eaae: elog:00000197:  
eaae: elog:00000198: static void cdb_tidy_message(ErrorData *edata); 
eaae: elog:00001839:  ereport(FATAL, 
eaae: elog:00001840:  (errcode_for_file_access(), 
eaae: elog:00001841:  errmsg("could not open file \"%s\": %m", OutputFileName))); 
eaae: elog:00001849:  ereport(FATAL, 
eaae: elog:00001850:  (errcode_for_file_access(), 
eaae: elog:00001851:  errmsg("could not reopen file \"%s\" as stderr: %m", 
eaae: elog:00001852:  OutputFileName))); 
eaae: elog:00001862:  ereport(FATAL, 
eaae: elog:00001863:  (errcode_for_file_access(), 
eaae: elog:00001864:  errmsg("could not reopen file \"%s\" as stdout: %m", 
eaae: elog:00001865:  OutputFileName))); 
eaae: elog:00004096:  ereport(ERROR, 
eaae: elog:00004097:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
eaae: elog:00004098:  errmsg("gp_elog(): called with %hd arguments", 
eaae: elog:00004099:  PG_NARGS()))); 
eaae: elog:00004101:  ereport(ERROR, 
eaae: elog:00004102:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
eaae: elog:00004103:  errmsg("gp_elog(): called with null arguments"))); 
eaae: elog:00004106:  ereport(ERROR, 
eaae: elog:00004107:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
eaae: elog:00004108:  errmsg("gp_elog(): called with null arguments"))); 
eaae: elog:00004112:  ereport(ERROR, 
eaae: elog:00004113:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
eaae: elog:00004114:  errmsg("permission denied"), 
eaae: elog:00004115:  errhint("gp_elog(): requires superuser privileges."))); 
eaae: elog:00004224:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
eaae: elog:00004225:  errmsg("Failed to get backtrace symbol: out of memory"))); 
eaae: elog:00004496:  ereport(FATAL, (errcode(ERRCODE_INTERNAL_ERROR), 
eaae: elog:00004497:  errFatalReturn(gp_reraise_signal), 
eaae: elog:00004498:  errOmitLocation(true), 
eaae: elog:00004499:  errmsg("Unexpected internal error: %s received signal %s", 
eaae: elog:00004500:  processName, SegvBusIllName(postgres_signal_arg)), 
eaae: elog:00004501:  errdetail("(interrupt holdoff count %d, critical section count %d)", 
eaae: elog:00004502:  InterruptHoldoffCount, CritSectionCount))); 
aaaaa GP_IGNORE: fabb: faultinject - ./backend/utils/error/faultinject.c
fabb: faultinject:00000127:  elog(ERROR, "User fault injection raised error"); 
fabb: faultinject:00000129:  elog(FATAL, "User fault injection raised fatal"); 
fabb: faultinject:00000232:  elog(ERROR, "Invalid user fault injection code"); 
aaaaa GP_IGNORE: daba: deprecated - ./backend/utils/fmgr/deprecated.c
daba: deprecated:00000029:  ereport(ERROR, 
daba: deprecated:00000030:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
daba: deprecated:00000031:  errmsg("function %s has been deprecated", procName))); 
aaaaa GP_IGNORE: daaf: dfmgr - ./backend/utils/fmgr/dfmgr.c
daaf: dfmgr:00000124:  ereport(ERROR, 
daaf: dfmgr:00000125:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
daaf: dfmgr:00000126:  errmsg("could not find function \"%s\" in file \"%s\"", 
daaf: dfmgr:00000127:  funcname, fullname), 
daaf: dfmgr:00000128:  errOmitLocation(true))); 
daaf: dfmgr:00000204:  ereport(ERROR, 
daaf: dfmgr:00000205:  (errcode_for_file_access(), 
daaf: dfmgr:00000206:  errmsg("could not access file \"%s\": %m", 
daaf: dfmgr:00000207:  libname), 
daaf: dfmgr:00000208:  errOmitLocation(true))); 
daaf: dfmgr:00000225:  ereport(ERROR, 
daaf: dfmgr:00000226:  (errcode(ERRCODE_OUT_OF_MEMORY), 
daaf: dfmgr:00000227:  errmsg("out of memory"))); 
daaf: dfmgr:00000243:  ereport(ERROR, 
daaf: dfmgr:00000244:  (errcode_for_file_access(), 
daaf: dfmgr:00000245:  errmsg("could not load library \"%s\": %s", 
daaf: dfmgr:00000246:  libname, load_error))); 
daaf: dfmgr:00000284:  ereport(ERROR, 
daaf: dfmgr:00000285:  (errmsg("incompatible library \"%s\": missing magic block", 
daaf: dfmgr:00000286:  libname), 
daaf: dfmgr:00000287:  errhint("Extension libraries are required to use the PG_MODULE_MAGIC macro."))); 
daaf: dfmgr:00000359:  ereport(ERROR, 
daaf: dfmgr:00000360:  (errmsg("incompatible library \"%s\": version mismatch", 
daaf: dfmgr:00000361:  libname), 
daaf: dfmgr:00000362:  errdetail("Server version is %s %d.%d, library is %s %d.%d.", 
daaf: dfmgr:00000363:  magic_product, 
daaf: dfmgr:00000364:  magic_data.version / 100, 
daaf: dfmgr:00000365:  magic_data.version % 100, 
daaf: dfmgr:00000366:  mod_magic_product, 
daaf: dfmgr:00000367:  module_magic_data->version / 100, 
daaf: dfmgr:00000368:  module_magic_data->version % 100))); 
daaf: dfmgr:00000427:  ereport(ERROR, 
daaf: dfmgr:00000428:  (errmsg("incompatible library \"%s\": magic block mismatch", 
daaf: dfmgr:00000429:  libname), 
daaf: dfmgr:00000430:  errdetail("%s", details.data))); 
daaf: dfmgr:00000460:  ereport(ERROR, 
daaf: dfmgr:00000461:  (errcode_for_file_access(), 
daaf: dfmgr:00000462:  errmsg("could not access file \"%s\": %m", libname))); 
daaf: dfmgr:00000508:  ereport(ERROR, 
daaf: dfmgr:00000509:  (errcode_for_file_access(), 
daaf: dfmgr:00000510:  errmsg("could not access file \"%s\": %m", name))); 
daaf: dfmgr:00000592:  ereport(ERROR, 
daaf: dfmgr:00000593:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
daaf: dfmgr:00000594:  errmsg("access to library \"%s\" is not allowed", 
daaf: dfmgr:00000595:  name))); 
daaf: dfmgr:00000619:  ereport(ERROR, 
daaf: dfmgr:00000620:  (errcode(ERRCODE_INVALID_NAME), 
daaf: dfmgr:00000621:  errmsg("invalid macro name in dynamic library path: %s", 
daaf: dfmgr:00000622:  name))); 
daaf: dfmgr:00000664:  ereport(ERROR, 
daaf: dfmgr:00000665:  (errcode(ERRCODE_INVALID_NAME), 
daaf: dfmgr:00000666:  errmsg("zero-length component in parameter \"dynamic_library_path\""))); 
daaf: dfmgr:00000683:  ereport(ERROR, 
daaf: dfmgr:00000684:  (errcode(ERRCODE_INVALID_NAME), 
daaf: dfmgr:00000685:  errmsg("component in parameter \"dynamic_library_path\" is not an absolute path"))); 
aaaaa GP_IGNORE: faae: fmgr - ./backend/utils/fmgr/fmgr.c
faae: fmgr:00000222:  elog(ERROR, "cache lookup failed for function %u", functionId); 
faae: fmgr:00000256:  elog(ERROR, "null prosrc"); 
faae: fmgr:00000260:  ereport(ERROR, 
faae: fmgr:00000261:  (errcode(ERRCODE_UNDEFINED_FUNCTION), 
faae: fmgr:00000262:  errmsg("internal function \"%s\" is not in internal lookup table", 
faae: fmgr:00000263:  prosrc))); 
faae: fmgr:00000333:  elog(ERROR, "null prosrc for C function %u", functionId); 
faae: fmgr:00000339:  elog(ERROR, "null probin for C function %u", functionId); 
faae: fmgr:00000378:  elog(ERROR, "unrecognized function API version: %d", 
faae: fmgr:00000379:  inforec->api_version); 
faae: fmgr:00000406:  elog(ERROR, "cache lookup failed for language %u", language); 
faae: fmgr:00000423:  elog(ERROR, "language %u has old-style handler", language); 
faae: fmgr:00000469:  elog(ERROR, "null result from info function \"%s\"", infofuncname); 
faae: fmgr:00000473:  ereport(ERROR, (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
faae: fmgr:00000474:  errmsg("Old style C function (API version 0) are no longer supported by Greenplum") 
faae: fmgr:00000475:  )); 
faae: fmgr:00000481:  ereport(ERROR, 
faae: fmgr:00000482:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
faae: fmgr:00000483:  errmsg("unrecognized API version %d reported by info function \"%s\"", 
faae: fmgr:00000484:  inforec->api_version, infofuncname))); 
faae: fmgr:00000639:  elog(ERROR, "fmgr_oldstyle received NULL pointer"); 
faae: fmgr:00000852:  ereport(ERROR, 
faae: fmgr:00000853:  (errcode(ERRCODE_TOO_MANY_ARGUMENTS), 
faae: fmgr:00000854:  errmsg("function %u has too many arguments (%d, maximum is %d)", 
faae: fmgr:00000855:  fcinfo->flinfo->fn_oid, n_arguments, 16))); 
faae: fmgr:00000915:  elog(ERROR, "cache lookup failed for function %u", 
faae: fmgr:00000916:  fcinfo->flinfo->fn_oid); 
faae: fmgr:00000995:  elog(ERROR, "function %p returned NULL", (void *) func); 
faae: fmgr:00001017:  elog(ERROR, "function %p returned NULL", (void *) func); 
faae: fmgr:00001042:  elog(ERROR, "function %p returned NULL", (void *) func); 
faae: fmgr:00001069:  elog(ERROR, "function %p returned NULL", (void *) func); 
faae: fmgr:00001098:  elog(ERROR, "function %p returned NULL", (void *) func); 
faae: fmgr:00001130:  elog(ERROR, "function %p returned NULL", (void *) func); 
faae: fmgr:00001164:  elog(ERROR, "function %p returned NULL", (void *) func); 
faae: fmgr:00001200:  elog(ERROR, "function %p returned NULL", (void *) func); 
faae: fmgr:00001239:  elog(ERROR, "function %p returned NULL", (void *) func); 
faae: fmgr:00001265:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
faae: fmgr:00001291:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
faae: fmgr:00001316:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
faae: fmgr:00001343:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
faae: fmgr:00001372:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
faae: fmgr:00001404:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
faae: fmgr:00001438:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
faae: fmgr:00001474:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
faae: fmgr:00001513:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
faae: fmgr:00001544:  elog(ERROR, "function %u returned NULL", flinfo.fn_oid); 
faae: fmgr:00001569:  elog(ERROR, "function %u returned NULL", flinfo.fn_oid); 
faae: fmgr:00001597:  elog(ERROR, "function %u returned NULL", flinfo.fn_oid); 
faae: fmgr:00001627:  elog(ERROR, "function %u returned NULL", flinfo.fn_oid); 
faae: fmgr:00001659:  elog(ERROR, "function %u returned NULL", flinfo.fn_oid); 
faae: fmgr:00001694:  elog(ERROR, "function %u returned NULL", flinfo.fn_oid); 
faae: fmgr:00001731:  elog(ERROR, "function %u returned NULL", flinfo.fn_oid); 
faae: fmgr:00001770:  elog(ERROR, "function %u returned NULL", flinfo.fn_oid); 
faae: fmgr:00001812:  elog(ERROR, "function %u returned NULL", flinfo.fn_oid); 
faae: fmgr:00001863:  elog(ERROR, "input function %u returned non-NULL", 
faae: fmgr:00001864:  fcinfo.flinfo->fn_oid); 
faae: fmgr:00001869:  elog(ERROR, "input function %u returned NULL", 
faae: fmgr:00001870:  fcinfo.flinfo->fn_oid); 
faae: fmgr:00001938:  elog(ERROR, "receive function %u returned non-NULL", 
faae: fmgr:00001939:  fcinfo.flinfo->fn_oid); 
faae: fmgr:00001944:  elog(ERROR, "receive function %u returned NULL", 
faae: fmgr:00001945:  fcinfo.flinfo->fn_oid); 
aaaaa GP_IGNORE: faah: funcapi - ./backend/utils/fmgr/funcapi.c
faah: funcapi:00000060:  ereport(ERROR, 
faah: funcapi:00000061:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
faah: funcapi:00000062:  errmsg("set-valued function called in context that cannot accept a set"))); 
faah: funcapi:00000115:  elog(ERROR, "init_MultiFuncCall cannot be called more than once"); 
faah: funcapi:00000315:  elog(ERROR, "cache lookup failed for function %u", funcid); 
faah: funcapi:00000363:  ereport(ERROR, 
faah: funcapi:00000364:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
faah: funcapi:00000365:  errmsg("could not determine actual result type for function \"%s\" declared to return type %s", 
faah: funcapi:00000366:  NameStr(procform->proname), 
faah: funcapi:00000367:  format_type_be(rettype)))); 
faah: funcapi:00000692:  elog(ERROR, "proallargtypes is not a 1-D Oid array"); 
faah: funcapi:00000720:  elog(ERROR, "proargnames must have the same number of elements as the function has arguments"); 
faah: funcapi:00000740:  elog(ERROR, "proargmodes is not a 1-D char array"); 
faah: funcapi:00000786:  elog(ERROR, "cache lookup failed for function %u", functionId); 
faah: funcapi:00000816:  elog(ERROR, "proargmodes is not a 1-D char array"); 
faah: funcapi:00000823:  elog(ERROR, "proargnames is not a 1-D text array"); 
faah: funcapi:00000952:  elog(ERROR, "proallargtypes is not a 1-D Oid array"); 
faah: funcapi:00000959:  elog(ERROR, "proargmodes is not a 1-D char array"); 
faah: funcapi:00000968:  elog(ERROR, "proargnames is not a 1-D text array"); 
faah: funcapi:00001100:  ereport(ERROR, 
faah: funcapi:00001101:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
faah: funcapi:00001102:  errmsg("number of aliases does not match number of columns"))); 
faah: funcapi:00001125:  ereport(ERROR, 
faah: funcapi:00001126:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
faah: funcapi:00001127:  errmsg("no column alias was provided"))); 
faah: funcapi:00001131:  ereport(ERROR, 
faah: funcapi:00001132:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
faah: funcapi:00001133:  errmsg("number of aliases does not match number of columns"))); 
faah: funcapi:00001149:  ereport(ERROR, 
faah: funcapi:00001150:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
faah: funcapi:00001151:  errmsg("could not determine row description for function returning record"))); 
faah: funcapi:00001156:  elog(ERROR, "function in FROM has unsupported return type"); 
aaaaa GP_IGNORE: pabe: persistentutil - ./backend/utils/gp/persistentutil.c
pabe: persistentutil:00000050: #define NYI elog(ERROR, "not yet implemented") 
pabe: persistentutil:00000051:  
pabe: persistentutil:00000052: Datum 
pabe: persistentutil:00000053: gp_add_persistent_filespace_node_entry(PG_FUNCTION_ARGS) 
pabe: persistentutil:00000054: { 
pabe: persistentutil:00000055:  NYI; 
pabe: persistentutil:00000083:  elog(ERROR, "permission denied"); 
pabe: persistentutil:00000096:  elog(ERROR, "function '%s' received unexpected number of arguments", 
pabe: persistentutil:00000097:  procName); 
pabe: persistentutil:00000105:  elog(ERROR, "direct tid assignment to %s is not yet supported", 
pabe: persistentutil:00000106:  "gp_persistent_relation_node"); 
pabe: persistentutil:00000118:  elog(ERROR, "null arguments not supported"); 
pabe: persistentutil:00000138:  elog(NOTICE, 
pabe: persistentutil:00000139:  "inserted 1 row (TID %s, persistent_serial_num " INT64_FORMAT ")", 
pabe: persistentutil:00000140:  ItemPointerToString(&persistentTid), 
pabe: persistentutil:00000141:  persistentSerialNum); 
pabe: persistentutil:00000207:  elog(ERROR, "permission denied"); 
pabe: persistentutil:00000211:  elog(ERROR, "null input parameter"); 
pabe: persistentutil:00000218:  elog(ERROR, "unexpected block number in tid"); 
pabe: persistentutil:00000229:  elog(ERROR, "unexpected offset number in tid"); 
pabe: persistentutil:00000234:  elog(ERROR, "sequence number too low"); 
pabe: persistentutil:00000258:  elog(ERROR, "permission denied"); 
pabe: persistentutil:00000262:  elog(ERROR, "null input parameter"); 
pabe: persistentutil:00000290:  elog(ERROR, "permission denied"); 
pabe: persistentutil:00000294:  elog(ERROR, "null input parameter"); 
pabe: persistentutil:00000322:  elog(ERROR, "permission denied"); 
pabe: persistentutil:00000326:  elog(ERROR, "null input parameter"); 
pabe: persistentutil:00000354:  elog(ERROR, "permission denied"); 
pabe: persistentutil:00000358:  elog(ERROR, "null input parameter"); 
pabe: persistentutil:00000559:  ereport(ERROR, 
pabe: persistentutil:00000560:  (errcode_for_file_access(), 
pabe: persistentutil:00000561:  errmsg("could not open directory \"%s\": %m", 
pabe: persistentutil:00000562:  fdata->databaseDirName))); 
pabe: persistentutil:00000601:  ereport(ERROR, 
pabe: persistentutil:00000602:  (errcode_for_file_access(), 
pabe: persistentutil:00000603:  errmsg("could not open directory \"%s\": %m", 
pabe: persistentutil:00000604:  fdata->tablespaceDirName))); 
aaaaa GP_IGNORE: saai: segadmin - ./backend/utils/gp/segadmin.c
saai: segadmin:00000168:  elog(ERROR, "unable to find available dbid"); 
saai: segadmin:00000221:  elog(ERROR, "filespace map must be a two dimensional array"); 
saai: segadmin:00000224:  elog(ERROR, "filespace map must be an array of two element arrays"); 
saai: segadmin:00000243:  elog(ERROR, "system contains %i filespaces but filespace map contains " 
saai: segadmin:00000244:  "only %i filespaces", n, an); 
saai: segadmin:00000256:  elog(ERROR, "%s requires valid GpIdentity dbid", func); 
saai: segadmin:00000259:  elog(ERROR, "%s must be run on the master", func); 
saai: segadmin:00000265:  elog(ERROR, "%s must be run in utility mode", func); 
saai: segadmin:00000271:  elog(ERROR, "%s must be run in single-user mode", func); 
saai: segadmin:00000277:  elog(ERROR, "%s can only be run by a superuser", func); 
saai: segadmin:00000283:  elog(ERROR, "%s can only be run if the system is in read only mode", 
saai: segadmin:00000284:  func); 
saai: segadmin:00000290:  elog(ERROR, "%s requires valid GpIdentity dbid", func); 
saai: segadmin:00000293:  elog(ERROR, "%s cannot be run on the master", func); 
saai: segadmin:00000299:  elog(ERROR, "%s requires valid GpIdentity dbid", func); 
saai: segadmin:00000303:  elog(ERROR, "%s can only be run on the standby master", func); 
saai: segadmin:00000344:  elog(ERROR, "filespace \"%s\" does not exist", fsname); 
saai: segadmin:00000381:  elog(ERROR, "filespace \"%s\" does not exist", fsname); 
saai: segadmin:00000730:  elog(ERROR, "hostname cannot be NULL"); 
saai: segadmin:00000734:  elog(ERROR, "address cannot be NULL"); 
saai: segadmin:00000738:  elog(ERROR, "port cannot be NULL"); 
saai: segadmin:00000742:  elog(ERROR, "filespace_map cannot be NULL"); 
saai: segadmin:00000805:  elog(ERROR, "dbid cannot be NULL"); 
saai: segadmin:00000836:  elog(ERROR, "contentid cannot be NULL"); 
saai: segadmin:00000840:  elog(ERROR, "hostname cannot be NULL"); 
saai: segadmin:00000844:  elog(ERROR, "address cannot be NULL"); 
saai: segadmin:00000848:  elog(ERROR, "port cannot be NULL"); 
saai: segadmin:00000852:  elog(ERROR, "replication_port cannot be NULL"); 
saai: segadmin:00000856:  elog(ERROR, "filespace_map cannot be NULL"); 
saai: segadmin:00000866:  elog(ERROR, "contentid %i does not point to an existing segment", 
saai: segadmin:00000867:  contentid); 
saai: segadmin:00000871:  elog(ERROR, "segment already has a mirror defined"); 
saai: segadmin:00000915:  elog(ERROR, "dbid cannot be NULL"); 
saai: segadmin:00000926:  elog(ERROR, "no dbid for contentid %i", contentid); 
saai: segadmin:00000929:  elog(ERROR, "segment does not have a mirror"); 
saai: segadmin:00000933:  elog(ERROR, "no mirror dbid for contentid %i", contentid); 
saai: segadmin:00000965:  elog(ERROR, "host name cannot be NULL"); 
saai: segadmin:00000967:  elog(ERROR, "address cannot be NULL"); 
saai: segadmin:00000969:  elog(ERROR, "filespace map cannot be NULL"); 
saai: segadmin:00000982:  elog(ERROR, "only a single master standby may be defined"); 
saai: segadmin:00001025:  elog(ERROR, "cannot connect via SPI"); 
saai: segadmin:00001034:  elog(ERROR, "cannot update gp_master_mirroring"); 
saai: segadmin:00001069:  elog(ERROR, "no master standby defined"); 
saai: segadmin:00001098:  elog(ERROR, "filespace_map cannot be NULL"); 
saai: segadmin:00001119:  elog(ERROR, "gp_prep_new_segment requires the database to be started " 
saai: segadmin:00001120:  "with gp_before_filespace_setup=true"); 
saai: segadmin:00001184:  elog(ERROR, "cannot find old master, dbid %i", newdbid); 
saai: segadmin:00001197:  elog(ERROR, "cannot find standby, dbid %i", standbydbid); 
saai: segadmin:00001297:  elog(ERROR, "%s must be run on the standby master", 
saai: segadmin:00001298:  PG_FUNCNAME_MACRO); 
saai: segadmin:00001338:  elog(ERROR, "dbid cannot be NULL"); 
saai: segadmin:00001340:  elog(ERROR, "mirror_dbid cannot be NULL"); 
saai: segadmin:00001342:  elog(ERROR, "filespace_map cannot be NULL"); 
saai: segadmin:00001380:  elog(ERROR, "dbid cannot be NULL"); 
saai: segadmin:00001382:  elog(ERROR, "mirdbid cannot be NULL"); 
aaaaa GP_IGNORE: gaaf: gpmon - ./backend/utils/gpmon/gpmon.c
gaaf: gpmon:00000066:  elog(WARNING, "gpmon: unable to set signal handler for SIGVTALRM (%m)"); 
gaaf: gpmon:00000082:  elog(WARNING, "gpmon: unable to start timer (%m)"); 
gaaf: gpmon:00000088:  elog(WARNING, "gpmon: cannot create socket (%m)"); 
gaaf: gpmon:00000092:  elog(WARNING, "fcntl(F_SETFL, O_NONBLOCK) failed"); 
gaaf: gpmon:00000095:  elog(WARNING, "fcntl(F_SETFD) failed"); 
gaaf: gpmon:00000172:  elog(WARNING, "gpmon - bad magic %x", p->magic); 
gaaf: gpmon:00000196:  elog(WARNING, "gpmon: cannot send (%m socket %d)", gpmon.gxsock); 
aaaaa GP_IGNORE: daai: dynahash - ./backend/utils/hash/dynahash.c
daai: dynahash:00000361:  ereport(ERROR, 
daai: dynahash:00000362:  (errcode(ERRCODE_OUT_OF_MEMORY), 
daai: dynahash:00000363:  errmsg("out of memory"))); 
daai: dynahash:00000419:  elog(ERROR, "failed to initialize hash table \"%s\"", hashp->tabname); 
daai: dynahash:00000433:  ereport(ERROR, 
daai: dynahash:00000434:  (errcode(ERRCODE_OUT_OF_MEMORY), 
daai: dynahash:00000435:  errmsg("out of memory"))); 
daai: dynahash:00000912:  elog(ERROR, "cannot insert into frozen hashtable \"%s\"", 
daai: dynahash:00000913:  hashp->tabname); 
daai: dynahash:00000923:  ereport(ERROR, 
daai: dynahash:00000924:  (errcode(ERRCODE_OUT_OF_MEMORY), 
daai: dynahash:00000925:  errmsg("out of shared memory"))); 
daai: dynahash:00000927:  ereport(ERROR, 
daai: dynahash:00000928:  (errcode(ERRCODE_OUT_OF_MEMORY), 
daai: dynahash:00000929:  errmsg("out of memory"))); 
daai: dynahash:00000962:  elog(ERROR, "unrecognized hash action code: %d", (int) action); 
daai: dynahash:00001162:  elog(ERROR, "cannot freeze shared hashtable \"%s\"", hashp->tabname); 
daai: dynahash:00001164:  elog(ERROR, "cannot freeze hashtable \"%s\" because it has active scans", 
daai: dynahash:00001165:  hashp->tabname); 
daai: dynahash:00001385:  elog(FATAL, "hash table \"%s\" corrupted", hashp->tabname); 
daai: dynahash:00001441:  elog(ERROR, "too many active hash_seq_search scans, cannot start one on \"%s\"", 
daai: dynahash:00001442:  hashp->tabname); 
daai: dynahash:00001465:  elog(ERROR, "no hash_seq_search scan for hash table \"%s\"", 
daai: dynahash:00001466:  hashp->tabname); 
daai: dynahash:00001502:  elog(WARNING, "leaked hash_seq_search scan for hash table %p", 
daai: dynahash:00001503:  seq_scan_tables[i]); 
daai: dynahash:00001525:  elog(WARNING, "leaked hash_seq_search scan for hash table %p", 
daai: dynahash:00001526:  seq_scan_tables[i]); 
aaaaa GP_IGNORE: faaj: flatfiles - ./backend/utils/init/flatfiles.c
faaj: flatfiles:00000870:  ereport(WARNING, 
faaj: flatfiles:00000871:  (errmsg("time constraints are being added against superuser"))); 
faaj: flatfiles:00000994:  ereport(ERROR, 
faaj: flatfiles:00000995:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
faaj: flatfiles:00000996:  errmsg("filesystem \"%s\" has no libfile specified", fsysname))); 
faaj: flatfiles:00001011:  ereport(ERROR, 
faaj: flatfiles:00001012:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
faaj: flatfiles:00001013:  errmsg("filesystem \"%s\" has no %s function defined", fsysname, 
faaj: flatfiles:00001014:  fsys_func_type_to_name(i)))); 
faaj: flatfiles:00001367:  elog(ERROR, 
faaj: flatfiles:00001368:  "flatfile_update_trigger was not called by trigger manager"); 
faaj: flatfiles:00001371:  elog(ERROR, "flatfile_update_trigger was called for wrong table"); 
faaj: flatfiles:00001389:  elog(ERROR, "flatfile_update_trigger was called for wrong table"); 
aaaaa GP_IGNORE: maai: miscinit - ./backend/utils/init/miscinit.c
maai: miscinit:00000110:  elog(ERROR, "cannot reindex while reindexing"); 
maai: miscinit:00000144:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
maai: miscinit:00000145:  errmsg("Set database path failed: out of memory"))); 
maai: miscinit:00000181:  ereport(FATAL, 
maai: miscinit:00000182:  (errcode_for_file_access(), 
maai: miscinit:00000183:  errmsg("could not change directory to \"%s\": %m", 
maai: miscinit:00000184:  DataDir))); 
maai: miscinit:00000216:  ereport(FATAL, 
maai: miscinit:00000217:  (errcode(ERRCODE_OUT_OF_MEMORY), 
maai: miscinit:00000218:  errmsg("out of memory"))); 
maai: miscinit:00000231:  elog(FATAL, "could not get current working directory: %m"); 
maai: miscinit:00000237:  ereport(FATAL, 
maai: miscinit:00000238:  (errcode(ERRCODE_OUT_OF_MEMORY), 
maai: miscinit:00000239:  errmsg("out of memory"))); 
maai: miscinit:00000247:  ereport(FATAL, 
maai: miscinit:00000248:  (errcode(ERRCODE_OUT_OF_MEMORY), 
maai: miscinit:00000249:  errmsg("out of memory"))); 
maai: miscinit:00000446:  ereport(FATAL, 
maai: miscinit:00000447:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
maai: miscinit:00000448:  errmsg("role \"%s\" does not exist", rolename), 
maai: miscinit:00000449:  errOmitLocation(true), errSendAlert(false))); 
maai: miscinit:00000477:  ereport(FATAL, 
maai: miscinit:00000478:  (errcode(ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION), 
maai: miscinit:00000479:  errmsg("role \"%s\" is not permitted to log in", 
maai: miscinit:00000480:  rolename), 
maai: miscinit:00000481:  errOmitLocation(true))); 
maai: miscinit:00000491:  ereport(FATAL, 
maai: miscinit:00000492:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
maai: miscinit:00000493:  errmsg("Upgrade in progress, connection refused"), 
maai: miscinit:00000494:  errOmitLocation(true), 
maai: miscinit:00000495:  errSendAlert(false))); 
maai: miscinit:00000505:  ereport(FATAL, 
maai: miscinit:00000506:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
maai: miscinit:00000507:  errmsg("Maintenance mode: connected by superuser only"), 
maai: miscinit:00000508:  errOmitLocation(true), 
maai: miscinit:00000509:  errSendAlert(false))); 
maai: miscinit:00000529:  ereport(FATAL, 
maai: miscinit:00000530:  (errcode(ERRCODE_TOO_MANY_CONNECTIONS), 
maai: miscinit:00000531:  errmsg("too many connections for role \"%s\"", 
maai: miscinit:00000532:  rolename), 
maai: miscinit:00000533:  errOmitLocation(true))); 
maai: miscinit:00000608:  ereport(ERROR, 
maai: miscinit:00000609:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
maai: miscinit:00000610:  errmsg("permission denied to set session authorization"), 
maai: miscinit:00000611:  errOmitLocation(true))); 
maai: miscinit:00000704:  ereport(ERROR, 
maai: miscinit:00000705:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
maai: miscinit:00000706:  errmsg("invalid role OID: %u", roleid))); 
maai: miscinit:00000793:  ereport(FATAL, 
maai: miscinit:00000794:  (errcode_for_file_access(), 
maai: miscinit:00000795:  errmsg("could not create lock file \"%s\": %m", 
maai: miscinit:00000796:  filename))); 
maai: miscinit:00000807:  ereport(FATAL, 
maai: miscinit:00000808:  (errcode_for_file_access(), 
maai: miscinit:00000809:  errmsg("could not open lock file \"%s\": %m", 
maai: miscinit:00000810:  filename))); 
maai: miscinit:00000813:  ereport(FATAL, 
maai: miscinit:00000814:  (errcode_for_file_access(), 
maai: miscinit:00000815:  errmsg("could not read lock file \"%s\": %m", 
maai: miscinit:00000816:  filename))); 
maai: miscinit:00000826:  elog(FATAL, "bogus data in lock file \"%s\": \"%s\"", 
maai: miscinit:00000827:  filename, buffer); 
maai: miscinit:00000876:  ereport(FATAL, 
maai: miscinit:00000877:  (errcode(ERRCODE_LOCK_FILE_EXISTS), 
maai: miscinit:00000878:  errmsg("lock file \"%s\" already exists", 
maai: miscinit:00000879:  filename), 
maai: miscinit:00000880:  isDDLock ? 
maai: miscinit:00000881:  (encoded_pid < 0 ? 
maai: miscinit:00000882:  errhint("Is another postgres (PID %d) running in data directory \"%s\"?", 
maai: miscinit:00000883:  (int) other_pid, refName) : 
maai: miscinit:00000884:  errhint("Is another postmaster (PID %d) running in data directory \"%s\"?", 
maai: miscinit:00000885:  (int) other_pid, refName)) : 
maai: miscinit:00000886:  (encoded_pid < 0 ? 
maai: miscinit:00000887:  errhint("Is another postgres (PID %d) using socket file \"%s\"?", 
maai: miscinit:00000888:  (int) other_pid, refName) : 
maai: miscinit:00000889:  errhint("Is another postmaster (PID %d) using socket file \"%s\"?", 
maai: miscinit:00000890:  (int) other_pid, refName)), 
maai: miscinit:00000891:  errOmitLocation(true))); 
maai: miscinit:00000916:  ereport(FATAL, 
maai: miscinit:00000917:  (errcode(ERRCODE_LOCK_FILE_EXISTS), 
maai: miscinit:00000918:  errmsg("pre-existing shared memory block " 
maai: miscinit:00000919:  "(key %lu, ID %lu) is still in use", 
maai: miscinit:00000920:  id1, id2), 
maai: miscinit:00000921:  errhint("If you're sure there are no old " 
maai: miscinit:00000922:  "server processes still running, remove " 
maai: miscinit:00000923:  "the shared memory block with " 
maai: miscinit:00000924:  "the command \"ipcclean\", \"ipcrm\", " 
maai: miscinit:00000925:  "or just delete the file \"%s\".", 
maai: miscinit:00000926:  filename))); 
maai: miscinit:00000937:  ereport(FATAL, 
maai: miscinit:00000938:  (errcode_for_file_access(), 
maai: miscinit:00000939:  errmsg("could not remove old lock file \"%s\": %m", 
maai: miscinit:00000940:  filename), 
maai: miscinit:00000941:  errhint("The file seems accidentally left over, but " 
maai: miscinit:00000942:  "it could not be removed. Please remove the file " 
maai: miscinit:00000943:  "by hand and try again."))); 
maai: miscinit:00000961:  ereport(FATAL, 
maai: miscinit:00000962:  (errcode_for_file_access(), 
maai: miscinit:00000963:  errmsg("could not write lock file \"%s\": %m", filename))); 
maai: miscinit:00000971:  ereport(FATAL, 
maai: miscinit:00000972:  (errcode_for_file_access(), 
maai: miscinit:00000973:  errmsg("could not write lock file \"%s\": %m", filename))); 
maai: miscinit:00000982:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
maai: miscinit:00000983:  errmsg("Create lock file failed: out of memory"))); 
maai: miscinit:00001176:  ereport(FATAL, 
maai: miscinit:00001177:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maai: miscinit:00001178:  errmsg("\"%s\" is not a valid data directory", 
maai: miscinit:00001179:  path), 
maai: miscinit:00001180:  errdetail("File \"%s\" is missing.", full_path))); 
maai: miscinit:00001182:  ereport(FATAL, 
maai: miscinit:00001183:  (errcode_for_file_access(), 
maai: miscinit:00001184:  errmsg("could not open file \"%s\": %m", full_path))); 
maai: miscinit:00001189:  ereport(FATAL, 
maai: miscinit:00001190:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maai: miscinit:00001191:  errmsg("\"%s\" is not a valid data directory", 
maai: miscinit:00001192:  path), 
maai: miscinit:00001193:  errdetail("File \"%s\" does not contain valid data.", 
maai: miscinit:00001194:  full_path), 
maai: miscinit:00001195:  errhint("You may need to run gprecoversegment.sh"))); 
maai: miscinit:00001200:  ereport(FATAL, 
maai: miscinit:00001201:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maai: miscinit:00001202:  errmsg("database files are incompatible with server"), 
maai: miscinit:00001203:  errdetail("The data directory was initialized by PostgreSQL version %ld.%ld, " 
maai: miscinit:00001204:  "which is not compatible with this version %s.", 
maai: miscinit:00001205:  file_major, file_minor, version_string))); 
aaaaa GP_IGNORE: paai: postinit - ./backend/utils/init/postinit.c
paai: postinit:00000092:  ereport(FATAL, 
paai: postinit:00000093:  (errcode_for_file_access(), 
paai: postinit:00000094:  errmsg("could not open file \"%s\": %m", filename))); 
paai: postinit:00000132:  ereport(FATAL, 
paai: postinit:00000133:  (errcode_for_file_access(), 
paai: postinit:00000134:  errmsg("could not open file \"%s\": %m", filename))); 
paai: postinit:00000168:  elog(ERROR, "cache lookup failed for database %u", MyDatabaseId); 
paai: postinit:00000173:  ereport(FATAL, 
paai: postinit:00000174:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
paai: postinit:00000175:  errmsg("database \"%s\" has disappeared from pg_database", 
paai: postinit:00000176:  name), 
paai: postinit:00000177:  errdetail("Database OID %u now seems to belong to \"%s\".", 
paai: postinit:00000178:  MyDatabaseId, NameStr(dbform->datname)))); 
paai: postinit:00000199:  ereport(FATAL, 
paai: postinit:00000200:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paai: postinit:00000201:  errmsg("database \"%s\" is not currently accepting connections", 
paai: postinit:00000202:  name), 
paai: postinit:00000203:  errOmitLocation(true), 
paai: postinit:00000204:  errSendAlert(false))); 
paai: postinit:00000214:  ereport(FATAL, 
paai: postinit:00000215:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
paai: postinit:00000216:  errmsg("permission denied for database \"%s\"", name), 
paai: postinit:00000217:  errdetail("User does not have CONNECT privilege."), 
paai: postinit:00000218:  errOmitLocation(true), 
paai: postinit:00000219:  errSendAlert(false))); 
paai: postinit:00000234:  ereport(FATAL, 
paai: postinit:00000235:  (errcode(ERRCODE_TOO_MANY_CONNECTIONS), 
paai: postinit:00000236:  errmsg("too many connections for database \"%s\"", 
paai: postinit:00000237:  name), 
paai: postinit:00000238:  errOmitLocation(true), 
paai: postinit:00000239:  errSendAlert(false))); 
paai: postinit:00000394:  ereport(FATAL, 
paai: postinit:00000395:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
paai: postinit:00000396:  errmsg("database %u does not exist", dboid), 
paai: postinit:00000397:  errSendAlert(false))); 
paai: postinit:00000405:  ereport(FATAL, 
paai: postinit:00000406:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
paai: postinit:00000407:  errmsg("database \"%s\" does not exist", 
paai: postinit:00000408:  in_dbname), 
paai: postinit:00000409:  errOmitLocation(true), 
paai: postinit:00000410:  errSendAlert(false))); 
paai: postinit:00000440:  elog(FATAL, "bad backend id: %d", MyBackendId); 
paai: postinit:00000531:  ereport(FATAL, 
paai: postinit:00000532:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
paai: postinit:00000533:  errmsg("database \"%s\" does not exist", 
paai: postinit:00000534:  dbname), 
paai: postinit:00000535:  errdetail("It seems to have just been dropped or renamed."))); 
paai: postinit:00000547:  ereport(FATAL, 
paai: postinit:00000548:  (errcode(ERRCODE_UNDEFINED_DATABASE), 
paai: postinit:00000549:  errmsg("database \"%s\" does not exist", 
paai: postinit:00000550:  dbname), 
paai: postinit:00000551:  errdetail("The database subdirectory \"%s\" is missing.", 
paai: postinit:00000552:  fullpath))); 
paai: postinit:00000554:  ereport(FATAL, 
paai: postinit:00000555:  (errcode_for_file_access(), 
paai: postinit:00000556:  errmsg("could not access directory \"%s\": %m", 
paai: postinit:00000557:  fullpath))); 
paai: postinit:00000587:  ereport(WARNING, 
paai: postinit:00000588:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paai: postinit:00000589:  errmsg("no roles are defined in this database system"), 
paai: postinit:00000590:  errhint("You should immediately run CREATE USER \"%s\" CREATEUSER;.", 
paai: postinit:00000591:  username))); 
paai: postinit:00000618:  ereport(FATAL, 
paai: postinit:00000619:  (errcode(ERRCODE_TOO_MANY_CONNECTIONS), 
paai: postinit:00000620:  errmsg("connection limit exceeded for non-superusers"), 
paai: postinit:00000621:  errOmitLocation(true), 
paai: postinit:00000622:  errSendAlert(true))); 
aaaaa GP_IGNORE: caae: conv - ./backend/utils/mb/conv.c
caae: conv:00000507:  ereport(ERROR, 
caae: conv:00000508:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
caae: conv:00000509:  errmsg("invalid encoding number: %d", encoding))); 
aaaaa GP_IGNORE: uade: utfeightxandxisoeighteightfivenine - ./backend/utils/mb/conversion_procs/utf8_and_iso8859/utf8_and_iso8859.c
uade: utfeightxandxisoeighteightfivenine:00000134:  ereport(ERROR, 
uade: utfeightxandxisoeighteightfivenine:00000135:  (errcode(ERRCODE_INTERNAL_ERROR), 
uade: utfeightxandxisoeighteightfivenine:00000136:  errmsg("unexpected encoding ID %d for ISO 8859 character sets", encoding))); 
uade: utfeightxandxisoeighteightfivenine:00000161:  ereport(ERROR, 
uade: utfeightxandxisoeighteightfivenine:00000162:  (errcode(ERRCODE_INTERNAL_ERROR), 
uade: utfeightxandxisoeighteightfivenine:00000163:  errmsg("unexpected encoding ID %d for ISO 8859 character sets", encoding))); 
aaaaa GP_IGNORE: uabg: utfeightxandxwin - ./backend/utils/mb/conversion_procs/utf8_and_win/utf8_and_win.c
uabg: utfeightxandxwin:00000124:  ereport(ERROR, 
uabg: utfeightxandxwin:00000125:  (errcode(ERRCODE_INTERNAL_ERROR), 
uabg: utfeightxandxwin:00000126:  errmsg("unexpected encoding ID %d for WIN character sets", encoding))); 
uabg: utfeightxandxwin:00000151:  ereport(ERROR, 
uabg: utfeightxandxwin:00000152:  (errcode(ERRCODE_INTERNAL_ERROR), 
uabg: utfeightxandxwin:00000153:  errmsg("unexpected encoding ID %d for WIN character sets", encoding))); 
aaaaa GP_IGNORE: eaai: encnames - ./backend/utils/mb/encnames.c
eaai: encnames:00000483:  ereport(ERROR, 
eaai: encnames:00000484:  (errcode(ERRCODE_NAME_TOO_LONG), 
eaai: encnames:00000485:  errmsg("encoding name too long"))); 
aaaaa GP_IGNORE: maah: mbutils - ./backend/utils/mb/mbutils.c
maah: mbutils:00000193:  ereport(FATAL, 
maah: mbutils:00000194:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
maah: mbutils:00000195:  errmsg("conversion between %s and %s is not supported", 
maah: mbutils:00000196:  pg_enc2name_tbl[pending_client_encoding].name, 
maah: mbutils:00000197:  GetDatabaseEncodingName()))); 
maah: mbutils:00000291:  ereport(ERROR, 
maah: mbutils:00000292:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
maah: mbutils:00000293:  errmsg("out of memory"), 
maah: mbutils:00000294:  errdetail("String of %d bytes is too long for encoding conversion.", 
maah: mbutils:00000295:  len))); 
maah: mbutils:00000379:  ereport(ERROR, 
maah: mbutils:00000380:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maah: mbutils:00000381:  errmsg("invalid source encoding name \"%s\"", 
maah: mbutils:00000382:  src_encoding_name))); 
maah: mbutils:00000384:  ereport(ERROR, 
maah: mbutils:00000385:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maah: mbutils:00000386:  errmsg("invalid destination encoding name \"%s\"", 
maah: mbutils:00000387:  dest_encoding_name))); 
maah: mbutils:00000433:  ereport(ERROR, 
maah: mbutils:00000434:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maah: mbutils:00000435:  errmsg("invalid encoding name \"%s\"", 
maah: mbutils:00000436:  src_encoding_name))); 
maah: mbutils:00000462:  ereport(ERROR, 
maah: mbutils:00000463:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maah: mbutils:00000464:  errmsg("invalid source encoding name \"%s\"", 
maah: mbutils:00000465:  src_encoding_name))); 
maah: mbutils:00000467:  ereport(ERROR, 
maah: mbutils:00000468:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
maah: mbutils:00000469:  errmsg("invalid destination encoding name \"%s\"", 
maah: mbutils:00000470:  dest_encoding_name))); 
maah: mbutils:00000480:  elog(ERROR, "encoding conversion failed"); 
maah: mbutils:00000543:  ereport(ERROR, 
maah: mbutils:00000544:  (errcode(ERRCODE_CHARACTER_NOT_IN_REPERTOIRE), 
maah: mbutils:00000545:  errmsg("invalid byte value for encoding \"%s\": 0x%02x", 
maah: mbutils:00000546:  pg_enc2name_tbl[PG_SQL_ASCII].name, 
maah: mbutils:00000547:  (unsigned char) s[i]))); 
maah: mbutils:00000640:  ereport(ERROR, 
maah: mbutils:00000641:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
maah: mbutils:00000642:  errmsg("out of memory"), 
maah: mbutils:00000643:  errdetail("String of %d bytes is too long for encoding conversion.", 
maah: mbutils:00000644:  len))); 
maah: mbutils:00000769:  ereport(ERROR, 
maah: mbutils:00000770:  (errcode(ERRCODE_CHARACTER_NOT_IN_REPERTOIRE), 
maah: mbutils:00000771:  errmsg("invalid multibyte character for locale"), 
maah: mbutils:00000772:  errhint("The server's LC_CTYPE locale is probably incompatible with the database encoding."))); 
maah: mbutils:00000838:  ereport(ERROR, 
maah: mbutils:00000839:  (errcode(ERRCODE_CHARACTER_NOT_IN_REPERTOIRE), 
maah: mbutils:00000840:  errmsg("invalid byte value for encoding \"%s\": 0x%02x", 
maah: mbutils:00000841:  pg_enc2name_tbl[PG_SQL_ASCII].name, 
maah: mbutils:00000842:  (unsigned char) s[i]))); 
maah: mbutils:00001081:  elog(ERROR, "invalid database encoding: %d", encoding); 
aaaaa GP_IGNORE: waaf: wchar - ./backend/utils/mb/wchar.c
waaf: wchar:00001571:  elog(ERROR, "invalid source encoding ID: %d", src_encoding); 
waaf: wchar:00001573:  elog(ERROR, "expected source encoding \"%s\", but got \"%s\"", 
waaf: wchar:00001574:  pg_enc2name_tbl[expected_src_encoding].name, 
waaf: wchar:00001575:  pg_enc2name_tbl[src_encoding].name); 
waaf: wchar:00001577:  elog(ERROR, "invalid destination encoding ID: %d", dest_encoding); 
waaf: wchar:00001579:  elog(ERROR, "expected destination encoding \"%s\", but got \"%s\"", 
waaf: wchar:00001580:  pg_enc2name_tbl[expected_dest_encoding].name, 
waaf: wchar:00001581:  pg_enc2name_tbl[dest_encoding].name); 
waaf: wchar:00001583:  elog(ERROR, "encoding conversion length must not be negative"); 
waaf: wchar:00001607:  ereport(ERROR, 
waaf: wchar:00001608:  (errcode(ERRCODE_CHARACTER_NOT_IN_REPERTOIRE), 
waaf: wchar:00001609:  errmsg("invalid byte sequence for encoding \"%s\": 0x%s", 
waaf: wchar:00001610:  pg_enc2name_tbl[encoding].name, 
waaf: wchar:00001611:  buf), 
waaf: wchar:00001612:  errhint("This error can also happen if the byte sequence does not " 
waaf: wchar:00001613:  "match the encoding expected by the server, which is controlled " 
waaf: wchar:00001614:  "by \"client_encoding\"."))); 
waaf: wchar:00001639:  ereport(ERROR, 
waaf: wchar:00001640:  (errcode(ERRCODE_UNTRANSLATABLE_CHARACTER), 
waaf: wchar:00001641:  errmsg("character 0x%s of encoding \"%s\" has no equivalent in \"%s\"", 
waaf: wchar:00001642:  buf, 
waaf: wchar:00001643:  pg_enc2name_tbl[src_encoding].name, 
waaf: wchar:00001644:  pg_enc2name_tbl[dest_encoding].name))); 
aaaaa GP_IGNORE: fabd: faultinjector - ./backend/utils/misc/faultinjector.c
fabd: faultinjector:00000407:  ereport(ERROR, 
fabd: faultinjector:00000408:  (errcode(ERRCODE_OUT_OF_MEMORY), 
fabd: faultinjector:00000409:  (errmsg("not enough shared memory for fault injector")))); 
fabd: faultinjector:00000433:  ereport(ERROR, 
fabd: faultinjector:00000434:  (errcode(ERRCODE_OUT_OF_MEMORY), 
fabd: faultinjector:00000435:  (errmsg("not enough shared memory for fault injector")))); 
fabd: faultinjector:00000564:  ereport(FATAL, 
fabd: faultinjector:00000565:  (errmsg("fault triggered, fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00000566:  FaultInjectorIdentifierEnumToString[entryLocal->faultInjectorIdentifier], 
fabd: faultinjector:00000567:  FaultInjectorTypeEnumToString[entryLocal->faultInjectorType]))); 
fabd: faultinjector:00000586:  ereport(ERROR, 
fabd: faultinjector:00000587:  (errmsg("fault triggered, fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00000588:  FaultInjectorIdentifierEnumToString[entryLocal->faultInjectorIdentifier], 
fabd: faultinjector:00000589:  FaultInjectorTypeEnumToString[entryLocal->faultInjectorType]))); 
fabd: faultinjector:00000693:  ereport(FATAL, 
fabd: faultinjector:00000694:  (errmsg("fault triggered, fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00000695:  FaultInjectorIdentifierEnumToString[entryLocal->faultInjectorIdentifier], 
fabd: faultinjector:00000696:  FaultInjectorTypeEnumToString[entryLocal->faultInjectorType]))); 
fabd: faultinjector:00000857:  ereport(WARNING, 
fabd: faultinjector:00000858:  (errmsg("could not insert fault injection, no slots available" 
fabd: faultinjector:00000859:  "fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00000860:  FaultInjectorIdentifierEnumToString[entry->faultInjectorIdentifier], 
fabd: faultinjector:00000861:  FaultInjectorTypeEnumToString[entry->faultInjectorType]))); 
fabd: faultinjector:00000900:  ereport(WARNING, 
fabd: faultinjector:00000901:  (errmsg("could not insert fault injection, fault type not supported" 
fabd: faultinjector:00000902:  "fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00000903:  FaultInjectorIdentifierEnumToString[entry->faultInjectorIdentifier], 
fabd: faultinjector:00000904:  FaultInjectorTypeEnumToString[entry->faultInjectorType]))); 
fabd: faultinjector:00000971:  ereport(WARNING, 
fabd: faultinjector:00000972:  (errmsg("could not insert fault injection entry into table, segment not in primary role" 
fabd: faultinjector:00000973:  "fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00000974:  FaultInjectorIdentifierEnumToString[entry->faultInjectorIdentifier], 
fabd: faultinjector:00000975:  FaultInjectorTypeEnumToString[entry->faultInjectorType]))); 
fabd: faultinjector:00001001:  ereport(WARNING, 
fabd: faultinjector:00001002:  (errmsg("could not insert fault injection entry into table, " 
fabd: faultinjector:00001003:  "segment not in primary or mirror role, " 
fabd: faultinjector:00001004:  "fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00001005:  FaultInjectorIdentifierEnumToString[entry->faultInjectorIdentifier], 
fabd: faultinjector:00001006:  FaultInjectorTypeEnumToString[entry->faultInjectorType]))); 
fabd: faultinjector:00001024:  ereport(WARNING, 
fabd: faultinjector:00001025:  (errmsg("could not insert fault injection entry into table, " 
fabd: faultinjector:00001026:  "segment not in master role, " 
fabd: faultinjector:00001027:  "fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00001028:  FaultInjectorIdentifierEnumToString[entry->faultInjectorIdentifier], 
fabd: faultinjector:00001029:  FaultInjectorTypeEnumToString[entry->faultInjectorType]))); 
fabd: faultinjector:00001046:  ereport(WARNING, 
fabd: faultinjector:00001047:  (errmsg("could not insert fault injection entry into table, " 
fabd: faultinjector:00001048:  "segment not in primary or master role, " 
fabd: faultinjector:00001049:  "fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00001050:  FaultInjectorIdentifierEnumToString[entry->faultInjectorIdentifier], 
fabd: faultinjector:00001051:  FaultInjectorTypeEnumToString[entry->faultInjectorType]))); 
fabd: faultinjector:00001067:  ereport(WARNING, 
fabd: faultinjector:00001068:  (errmsg("could not insert fault injection entry into table, no memory, " 
fabd: faultinjector:00001069:  "fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00001070:  FaultInjectorIdentifierEnumToString[entry->faultInjectorIdentifier], 
fabd: faultinjector:00001071:  FaultInjectorTypeEnumToString[entry->faultInjectorType]))); 
fabd: faultinjector:00001081:  ereport(WARNING, 
fabd: faultinjector:00001082:  (errmsg("could not insert fault injection entry into table, " 
fabd: faultinjector:00001083:  "entry already exists, " 
fabd: faultinjector:00001084:  "fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00001085:  FaultInjectorIdentifierEnumToString[entry->faultInjectorIdentifier], 
fabd: faultinjector:00001086:  FaultInjectorTypeEnumToString[entry->faultInjectorType]))); 
fabd: faultinjector:00001145:  ereport(WARNING, 
fabd: faultinjector:00001146:  (errmsg("could not update fault injection hash entry with fault injection status, " 
fabd: faultinjector:00001147:  "no entry found, " 
fabd: faultinjector:00001148:  "fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00001149:  FaultInjectorIdentifierEnumToString[entry->faultInjectorIdentifier], 
fabd: faultinjector:00001150:  FaultInjectorTypeEnumToString[entry->faultInjectorType]))); 
fabd: faultinjector:00001376:  ereport(WARNING, 
fabd: faultinjector:00001377:  (errmsg("could not complete fault injection, fault name:'%s' fault type:'%s' ", 
fabd: faultinjector:00001378:  FaultInjectorIdentifierEnumToString[identifier], 
fabd: faultinjector:00001379:  FaultInjectorTypeEnumToString[entry->faultInjectorType]))); 
aaaaa GP_IGNORE: gaai: gucxfile - ./backend/utils/misc/guc-file.c
gaai: gucxfile:00000557: #define fprintf(file, fmt, msg) ereport(ERROR, (errmsg_internal("%s", msg))) 
gaai: gucxfile:00000558:  
gaai: gucxfile:00000559: enum { 
gaai: gucxfile:00000560:  GUC_ID = 1, 
gaai: gucxfile:00000561:  GUC_STRING = 2, 
gaai: gucxfile:00000562:  GUC_INTEGER = 3, 
gaai: gucxfile:00000563:  GUC_REAL = 4, 
gaai: gucxfile:00000564:  GUC_EQUALS = 5, 
gaai: gucxfile:00000565:  GUC_UNQUOTED_STRING = 6, 
gaai: gucxfile:00000566:  GUC_QUALIFIED_ID = 7, 
gaai: gucxfile:00000567:  GUC_EOL = 99, 
gaai: gucxfile:00000568:  GUC_ERROR = 100 
gaai: gucxfile:00000569: }; 
aaaaa GP_IGNORE: gaad: guc - ./backend/utils/misc/guc.c
gaad: guc:00007403:  elog(FATAL, "failed to initialize %s to %d", 
gaad: guc:00007404:  conf->gen.name, (int) conf->reset_val); 
gaad: guc:00007417:  elog(FATAL, "failed to initialize %s to %d", 
gaad: guc:00007418:  conf->gen.name, conf->reset_val); 
gaad: guc:00007431:  elog(FATAL, "failed to initialize %s to %g", 
gaad: guc:00007432:  conf->gen.name, conf->reset_val); 
gaad: guc:00007462:  elog(FATAL, "failed to initialize %s to \"%s\"", 
gaad: guc:00007463:  conf->gen.name, str); 
gaad: guc:00007720:  elog(ERROR, "failed to reset %s", conf->gen.name); 
gaad: guc:00007737:  elog(ERROR, "failed to reset %s", conf->gen.name); 
gaad: guc:00007754:  elog(ERROR, "failed to reset %s", conf->gen.name); 
gaad: guc:00007785:  elog(ERROR, "failed to reset %s", conf->gen.name); 
gaad: guc:00008641:  elog(WARNING, "\"%s\": can not be set by the user and will be ignored.", name); 
gaad: guc:00008751:  elog(WARNING, "\"%s\": setting is deprecated, and may be removed" 
gaad: guc:00008752:  " in a future release.", name); 
gaad: guc:00008760:  elog(WARNING, "\"%s\": setting is ignored because it is defunct", 
gaad: guc:00008761:  name); 
gaad: guc:00009235:  ereport(ERROR, 
gaad: guc:00009236:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
gaad: guc:00009237:  errmsg("unrecognized configuration parameter \"%s\"", name))); 
gaad: guc:00009239:  ereport(ERROR, 
gaad: guc:00009240:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
gaad: guc:00009241:  errmsg("must be superuser to examine \"%s\"", name))); 
gaad: guc:00009275:  ereport(ERROR, 
gaad: guc:00009276:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
gaad: guc:00009277:  errmsg("unrecognized configuration parameter \"%s\"", name))); 
gaad: guc:00009279:  ereport(ERROR, 
gaad: guc:00009280:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
gaad: guc:00009281:  errmsg("must be superuser to examine \"%s\"", name))); 
gaad: guc:00009350:  ereport(ERROR, 
gaad: guc:00009351:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
gaad: guc:00009352:  errmsg("unrecognized configuration parameter \"%s\"", name))); 
gaad: guc:00009359:  ereport(ERROR, 
gaad: guc:00009360:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaad: guc:00009361:  errmsg("SET %s takes only one argument", name))); 
gaad: guc:00009374:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(arg)); 
gaad: guc:00009421:  elog(ERROR, "unrecognized node type: %d", 
gaad: guc:00009422:  (int) nodeTag(&arg->val)); 
gaad: guc:00009479:  elog(ERROR, "unrecognized node type: %d", (int) nodeTag(arg)); 
gaad: guc:00009505:  elog(ERROR, "unrecognized node type: %d", 
gaad: guc:00009506:  (int) nodeTag(&arg->val)); 
gaad: guc:00009532:  ereport(ERROR, 
gaad: guc:00009533:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
gaad: guc:00009534:  errmsg("SET requires parameter name"))); 
gaad: guc:00009596:  ereport(ERROR, 
gaad: guc:00009597:  (errcode(ERRCODE_INTERNAL_ERROR), 
gaad: guc:00009598:  errmsg("attempt to redefine parameter \"%s\"", name))); 
gaad: guc:00009917:  ereport(ERROR, 
gaad: guc:00009918:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
gaad: guc:00009919:  errmsg("unrecognized configuration parameter \"%s\"", name))); 
gaad: guc:00009921:  ereport(ERROR, 
gaad: guc:00009922:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
gaad: guc:00009923:  errmsg("must be superuser to examine \"%s\"", name))); 
gaad: guc:00010698:  elog(FATAL, "invalid format of exec config params file"); 
gaad: guc:00010731:  ereport(FATAL, 
gaad: guc:00010732:  (errcode_for_file_access(), 
gaad: guc:00010733:  errmsg("could not read from file \"%s\": %m", 
gaad: guc:00010734:  CONFIG_EXEC_PARAMS))); 
gaad: guc:00010746:  elog(FATAL, "failed to locate variable %s in exec config params file", varname); 
gaad: guc:00010748:  elog(FATAL, "invalid format of exec config params file"); 
gaad: guc:00010750:  elog(FATAL, "invalid format of exec config params file"); 
gaad: guc:00010841:  ereport(WARNING, 
gaad: guc:00010842:  (errcode(ERRCODE_SYNTAX_ERROR), 
gaad: guc:00010843:  errmsg("could not parse setting for parameter \"%s\"", name))); 
gaad: guc:00011124:  ereport(ERROR, 
gaad: guc:00011125:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaad: guc:00011126:  errmsg("invalid list syntax for parameter \"log_destination\""))); 
gaad: guc:00011147:  ereport(ERROR, 
gaad: guc:00011148:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaad: guc:00011149:  errmsg("unrecognized \"log_destination\" key word: \"%s\"", 
gaad: guc:00011150:  tok))); 
gaad: guc:00011176:  ereport(ERROR, 
gaad: guc:00011177:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaad: guc:00011178:  errmsg("unrecognized \"gp_log_format\" key word: \"%s\"", 
gaad: guc:00011179:  value))); 
gaad: guc:00011666:  ereport(ERROR, 
gaad: guc:00011667:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaad: guc:00011668:  errmsg("SET AUTOCOMMIT TO OFF is no longer supported"))); 
gaad: guc:00011742:  ereport(ERROR, 
gaad: guc:00011743:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaad: guc:00011744:  errmsg("assertion checking is not supported by this build"))); 
gaad: guc:00011753:  elog(WARNING, "Autovacuum is not supported in GPDB."); 
gaad: guc:00011763:  ereport(ERROR, 
gaad: guc:00011764:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaad: guc:00011765:  errmsg("SSL is not supported by this build"))); 
gaad: guc:00011776:  ereport(ERROR, 
gaad: guc:00011777:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaad: guc:00011778:  errmsg("cannot enable parameter when \"log_statement_stats\" is true"))); 
gaad: guc:00011793:  ereport(ERROR, 
gaad: guc:00011794:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaad: guc:00011795:  errmsg("cannot enable \"log_statement_stats\" when " 
gaad: guc:00011796:  "\"log_parser_stats\", \"log_planner_stats\", " 
gaad: guc:00011797:  "\"log_dispatch_stats\", " 
gaad: guc:00011798:  "or \"log_executor_stats\" is true"))); 
gaad: guc:00011813:  ereport(ERROR, 
gaad: guc:00011814:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaad: guc:00011815:  errmsg("cannot enable \"log_dispatch_stats\" when " 
gaad: guc:00011816:  "\"log_statement_stats\", " 
gaad: guc:00011817:  "\"log_parser_stats\", \"log_planner_stats\", " 
gaad: guc:00011818:  "or \"log_executor_stats\" is true"))); 
gaad: guc:00011833:  ereport(ERROR, 
gaad: guc:00011834:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaad: guc:00011835:  errmsg("cannot set transaction read-write mode inside a read-only transaction"))); 
gaad: guc:00012232:  elog(ERROR, 
gaad: guc:00012233:  "Unknown system table modification policy. (Current policy: '%s')", 
gaad: guc:00012234:  show_allow_system_table_mods()); 
aaaaa GP_IGNORE: sabd: syncbitvector - ./backend/utils/misc/syncbitvector.c
sabd: syncbitvector:00000067:  ereport(ERROR, 
sabd: syncbitvector:00000068:  (errcode(ERRCODE_OUT_OF_MEMORY), 
sabd: syncbitvector:00000069:  (errmsg("Not enough shared memory for SyncBitVector.")))); 
aaaaa GP_IGNORE: taaj: testutils - ./backend/utils/misc/testutils.c
taaj: testutils:00000046:  elog(ERROR, "Time slicer: Failed to retrieve user time"); 
taaj: testutils:00000075:  elog(ERROR, "Time slicer: Failed to retrieve user time"); 
aaaaa GP_IGNORE: uaaj: uriparser - ./backend/utils/misc/uriparser.c
uaaj: uriparser:00000072:  ereport(ERROR, 
uaaj: uriparser:00000073:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaaj: uriparser:00000074:  errmsg("invalid URI \'%s\' : undefined structure", uri_str), 
uaaj: uriparser:00000075:  errOmitLocation(true))); 
uaaj: uriparser:00000090:  ereport(ERROR, 
uaaj: uriparser:00000091:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaaj: uriparser:00000092:  errmsg("invalid URI \'%s\' : undefined protocol", uri_str), 
uaaj: uriparser:00000093:  errOmitLocation(true))); 
uaaj: uriparser:00000098:  ereport(ERROR, 
uaaj: uriparser:00000099:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaaj: uriparser:00000100:  errmsg("invalid URI \'%s\' : missing host name and path", uri_str), 
uaaj: uriparser:00000101:  errOmitLocation(true))); 
uaaj: uriparser:00000127:  ereport(ERROR, 
uaaj: uriparser:00000128:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaaj: uriparser:00000129:  errmsg("invalid URI \'%s\' : missing host name or path", uri_str), 
uaaj: uriparser:00000130:  errOmitLocation(true))); 
uaaj: uriparser:00000204:  ereport(ERROR, 
uaaj: uriparser:00000205:  (errcode(ERRCODE_SYNTAX_ERROR), 
uaaj: uriparser:00000206:  errmsg("invalid URI \'%s\' : missing path", uri_str), 
uaaj: uriparser:00000207:  errOmitLocation(true))); 
aaaaa GP_IGNORE: aaae: aset - ./backend/utils/mmgr/aset.c
aaae: aset:00000642:  elog(ERROR,"palloc called from thread (OS-X pthread_sigmask is broken: MPP-4923)"); 
aaae: aset:00000644:  elog(ERROR,"palloc called from thread"); 
aaae: aset:00000913:  elog(ERROR,"pfree called from thread"); 
aaae: aset:00000925:  elog(WARNING, "detected write past chunk end in %s %p (%s:%d)", 
aaae: aset:00000926:  set->header.name, chunk, CDB_MCXT_WHERE(&set->header)); 
aaae: aset:00001004:  elog(ERROR,"prealloc called from thread (OS-X pthread_sigmask is broken: MPP-4923)"); 
aaae: aset:00001006:  elog(ERROR,"prealloc called from thread"); 
aaae: aset:00001017:  elog(WARNING, "detected write past chunk end in %s %p (%s:%d)", 
aaae: aset:00001018:  set->header.name, chunk, CDB_MCXT_WHERE(&set->header)); 
aaae: aset:00001314:  elog(WARNING, "problem in alloc set %s: empty block %p (%s:%d)", 
aaae: aset:00001315:  name, block, CDB_MCXT_WHERE(&set->header)); 
aaae: aset:00001339:  elog(WARNING, "problem in alloc set %s: req size > alloc size for chunk %p in block %p (%s:%d)", 
aaae: aset:00001340:  name, chunk, block, CDB_MCXT_WHERE(&set->header)); 
aaae: aset:00001346:  elog(WARNING, "problem in alloc set %s: bad size %lu for chunk %p in block %p (%s:%d)", 
aaae: aset:00001347:  name, (unsigned long) chsize, chunk, block, CDB_MCXT_WHERE(&set->header)); 
aaae: aset:00001354:  elog(WARNING, "problem in alloc set %s: bad single-chunk %p in block %p (%s:%d)", 
aaae: aset:00001355:  name, chunk, block, CDB_MCXT_WHERE(&set->header)); 
aaae: aset:00001366:  elog(WARNING, "problem in alloc set %s: bogus aset link in block %p, chunk %p (%s:%d)", 
aaae: aset:00001367:  name, block, chunk, CDB_MCXT_WHERE(&set->header)); 
aaae: aset:00001377:  elog(ERROR, "problem in alloc set %s: detected write past chunk end in block %p, chunk %p (%s:%d)", 
aaae: aset:00001378:  name, block, chunk, CDB_MCXT_WHERE(&set->header)); 
aaae: aset:00001390:  elog(WARNING, "problem in alloc set %s: found inconsistent memory block %p (%s:%d)", 
aaae: aset:00001391:  name, block, CDB_MCXT_WHERE(&set->header)); 
aaaaa GP_IGNORE: aaba: asetdirect - ./backend/utils/mmgr/asetDirect.c
aaba: asetdirect:00000346:  elog(WARNING, "problem in alloc set %s: type=%d", 
aaba: asetdirect:00000347:  name, set->header.type); 
aaba: asetdirect:00000350:  elog(WARNING, "problem in alloc set %s: CdbPtrBuf error", 
aaba: asetdirect:00000351:  name); 
aaba: asetdirect:00000355:  elog(WARNING, "problem in alloc set %s: narea=%d", 
aaba: asetdirect:00000356:  name, set->narea_total); 
aaaaa GP_IGNORE: maae: mcxt - ./backend/utils/mmgr/mcxt.c
maae: mcxt:00000441:  ereport(ERROR, (errcode(errorcode), 
maae: mcxt:00000442:  errmsg("%s (context '%s') (%s:%d)", 
maae: mcxt:00000443:  buf, 
maae: mcxt:00000444:  context->name, 
maae: mcxt:00000445:  sfile ? sfile : "", 
maae: mcxt:00000446:  sline) 
maae: mcxt:00000447:  )); 
maae: mcxt:00000736:  ereport(ERROR, (errcode(ERRCODE_OUT_OF_MEMORY), 
maae: mcxt:00000737:  errmsg("Failed to create memory context: out of memory") 
maae: mcxt:00000738:  )); 
aaaaa GP_IGNORE: maah: memprot - ./backend/utils/mmgr/memprot.c
maah: memprot:00000250:  ereport(ERROR, (errcode(ERRCODE_GP_MEMPROT_KILL), 
maah: memprot:00000251:  errmsg("Out of memory"), 
maah: memprot:00000252:  errdetail("VM Protect failed to allocate %d bytes, %d MB available", 
maah: memprot:00000253:  sz, availmb 
maah: memprot:00000254:  ) 
maah: memprot:00000255:  )); 
maah: memprot:00000267:  ereport(ERROR, (errcode(ERRCODE_GP_MEMPROT_KILL), 
maah: memprot:00000268:  errmsg("Out of memory"), 
maah: memprot:00000269:  errdetail("VM protect failed to allocate %d bytes from system, VM Protect %d MB available", 
maah: memprot:00000270:  sz, availmb 
maah: memprot:00000271:  ) 
maah: memprot:00000272:  )); 
maah: memprot:00000284:  ereport(ERROR, (errcode(ERRCODE_GP_MEMPROT_KILL), 
maah: memprot:00000285:  errmsg("Failed to allocate memory under virtual memory protection"), 
maah: memprot:00000286:  errdetail("Error %d, errno %d, %s", ec, en, strerror(en)) 
maah: memprot:00000287:  )); 
maah: memprot:00000582:  elog(ERROR, "Greenplum memory protection failed to get memory counter: %m"); 
maah: memprot:00000635:  elog(ERROR, "GP MP Fault failed to change vmem limit: invalid value"); 
maah: memprot:00000642:  elog(ERROR, "GP MP Fault failed to change vmem limit, cannot update vmem"); 
maah: memprot:00000646:  elog(ERROR, "GP MP Fault failed to change vmem limit, cannot do bookkeeping."); 
maah: memprot:00000652:  elog(ERROR, "GP MP Fault Invalid fault code"); 
aaaaa GP_IGNORE: paaj: portalmem - ./backend/utils/mmgr/portalmem.c
paaj: portalmem:00000084:  elog(ERROR, "duplicate portal name"); \ 
paaj: portalmem:00000085:  hentry->portal = PORTAL; \ 
paaj: portalmem:00000086:  /* To avoid duplicate storage, make PORTAL->name point to htab entry */ \ 
paaj: portalmem:00000087:  PORTAL->name = hentry->portalname; \ 
paaj: portalmem:00000088: } while(0) 
paaj: portalmem:00000089:  
paaj: portalmem:00000090: #define PortalHashTableDelete(PORTAL) \ 
paaj: portalmem:00000091: do { \ 
paaj: portalmem:00000092:  PortalHashEnt *hentry; \ 
paaj: portalmem:00000093:  \ 
paaj: portalmem:00000094:  hentry = (PortalHashEnt *) hash_search(PortalHashTable, \ 
paaj: portalmem:00000095:  PORTAL->name, HASH_REMOVE, NULL); \ 
paaj: portalmem:00000096:  if (hentry == NULL) \ 
paaj: portalmem:00000097:  elog(WARNING, "trying to delete portal name that does not exist"); \ 
paaj: portalmem:00000098: } while(0) 
paaj: portalmem:00000099:  
paaj: portalmem:00000100: static MemoryContext PortalMemory = NULL; 
paaj: portalmem:00000217:  ereport(ERROR, 
paaj: portalmem:00000218:  (errcode(ERRCODE_DUPLICATE_CURSOR), 
paaj: portalmem:00000219:  errmsg("cursor \"%s\" already exists", name))); 
paaj: portalmem:00000222:  ereport(WARNING, 
paaj: portalmem:00000223:  (errcode(ERRCODE_DUPLICATE_CURSOR), 
paaj: portalmem:00000224:  errmsg("closing existing cursor \"%s\"", 
paaj: portalmem:00000225:  name))); 
paaj: portalmem:00000378:  elog(ERROR, "cannot drop active or queued portal"); 
paaj: portalmem:00000582:  ereport(ERROR, 
paaj: portalmem:00000583:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paaj: portalmem:00000584:  errmsg("cannot PREPARE a transaction that has created a cursor WITH HOLD"))); 
paaj: portalmem:00000954:  ereport(ERROR, 
paaj: portalmem:00000955:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paaj: portalmem:00000956:  errmsg("set-valued function called in context that cannot accept a set"))); 
paaj: portalmem:00000958:  ereport(ERROR, 
paaj: portalmem:00000959:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paaj: portalmem:00000960:  errmsg("materialize mode required, but it is not " \ 
paaj: portalmem:00000961:  "allowed in this context"))); 
aaaaa GP_IGNORE: raai: resowner - ./backend/utils/resowner/resowner.c
raai: resowner:00000552:  elog(ERROR, "buffer %d is not owned by resource owner %s", 
raai: resowner:00000553:  buffer, owner->name); 
raai: resowner:00000624:  elog(ERROR, "catcache reference %p is not owned by resource owner %s", 
raai: resowner:00000625:  tuple, owner->name); 
raai: resowner:00000695:  elog(ERROR, "catcache list reference %p is not owned by resource owner %s", 
raai: resowner:00000696:  list, owner->name); 
raai: resowner:00000769:  elog(ERROR, "relcache reference %s is not owned by resource owner %s", 
raai: resowner:00000770:  RelationGetRelationName(rel), owner->name); 
raai: resowner:00000780:  elog(WARNING, "relcache reference leak: relation \"%s\" not closed", 
raai: resowner:00000781:  RelationGetRelationName(rel)); 
raai: resowner:00000851:  elog(ERROR, "tupdesc reference %p is not owned by resource owner %s", 
raai: resowner:00000852:  tupdesc, owner->name); 
raai: resowner:00000861:  elog(WARNING, 
raai: resowner:00000862:  "TupleDesc reference leak: TupleDesc %p (%u,%d) still referenced", 
raai: resowner:00000863:  tupdesc, tupdesc->tdtypeid, tupdesc->tdtypmod); 
aaaaa GP_IGNORE: maai: memquota - ./backend/utils/resscheduler/memquota.c
maai: memquota:00000365:  elog(ERROR, ERRMSG_GP_INSUFFICIENT_STATEMENT_MEMORY); 
maai: memquota:00000706:  ereport(ERROR, 
maai: memquota:00000707:  (errcode(ERRCODE_INSUFFICIENT_RESOURCES), 
maai: memquota:00000708:  errmsg("insufficient memory reserved for statement"))); 
aaaaa GP_IGNORE: raai: resqueue - ./backend/utils/resscheduler/resqueue.c
raai: resqueue:00000185:  ereport(ERROR, 
raai: resqueue:00000186:  (errcode(ERRCODE_OUT_OF_MEMORY), 
raai: resqueue:00000187:  errmsg("out of shared memory"), 
raai: resqueue:00000188:  errhint("You may need to increase max_resource_qeueues."))); 
raai: resqueue:00000250:  ereport(ERROR, 
raai: resqueue:00000251:  (errcode(ERRCODE_OUT_OF_MEMORY), 
raai: resqueue:00000252:  errmsg("out of shared memory"), 
raai: resqueue:00000253:  errhint("You may need to increase max_resource_qeueues."))); 
raai: resqueue:00000324:  ereport(ERROR, 
raai: resqueue:00000325:  (errcode(ERRCODE_OUT_OF_MEMORY), 
raai: resqueue:00000326:  errmsg("out of shared memory adding portal increments"), 
raai: resqueue:00000327:  errhint("You may need to increase max_resource_portals_per_transaction."))); 
raai: resqueue:00000364:  ereport(ERROR, 
raai: resqueue:00000365:  (errcode(ERRCODE_INSUFFICIENT_RESOURCES), 
raai: resqueue:00000366:  errmsg("statement requires more resources than resource queue allows"))); 
raai: resqueue:00000428:  elog(ERROR, "ResLockAcquire failed"); 
raai: resqueue:00000589:  elog(ERROR, "no increment to remove for portal id %u and pid %d", resPortalId, MyProc->pid); 
raai: resqueue:00000846:  elog(ERROR, "cannot find queue id %d", GET_RESOURCE_QUEUEID_FOR_LOCK(lock)); 
raai: resqueue:00001114:  elog(ERROR, "no increment data for portal id %u and pid %d", proc->waitPortalId, proc->pid); 
raai: resqueue:00001449:  elog(WARNING, "duplicate portal id %u for proc %d", incSet->portalId, incSet->pid); 
aaaaa GP_IGNORE: rabc: resscheduler - ./backend/utils/resscheduler/resscheduler.c
rabc: resscheduler:00000135:  ereport(FATAL, 
rabc: resscheduler:00000136:  (errcode(ERRCODE_OUT_OF_MEMORY), 
rabc: resscheduler:00000137:  errmsg("not enough shared memory for resource scheduler"))); 
rabc: resscheduler:00000161:  elog(FATAL, "could not initialize portal increment hash"); 
rabc: resscheduler:00000335:  elog(ERROR, "unknown resource limit type %d", i); 
rabc: resscheduler:00000643:  elog(NOTICE, "query requested %.0fKB", (double) queryMemory / 1024.0); 
rabc: resscheduler:00000909:  ereport(ERROR, 
rabc: resscheduler:00000910:  (errcode(ERRCODE_INSUFFICIENT_RESOURCES), 
rabc: resscheduler:00000911:  errmsg("insufficient portal ids available"), 
rabc: resscheduler:00000912:  errhint("Increase max_resource_portals_per_transaction."))); 
aaaaa GP_IGNORE: laah: logtape - ./backend/utils/sort/logtape.c
laah: logtape:00000141:  elog(ERROR, "Load logicaltapeset failed to read nFileBlocks"); 
laah: logtape:00000155:  elog(ERROR, "Load logicaltapeset failed to read tape firstBlkNum"); 
laah: logtape:00000180:  ereport(ERROR, 
laah: logtape:00000181:  /* XXX is it okay to assume errno is correct? */ 
laah: logtape:00000182:  (errcode_for_file_access(), 
laah: logtape:00000183:  errmsg("could not write block %ld of temporary file: %m", 
laah: logtape:00000184:  blocknum), 
laah: logtape:00000185:  errhint("Perhaps out of disk space?"))); 
laah: logtape:00000199:  ereport(ERROR, 
laah: logtape:00000200:  /* XXX is it okay to assume errno is correct? */ 
laah: logtape:00000201:  (errcode_for_file_access(), 
laah: logtape:00000202:  errmsg("could not read block %ld of temporary file: %m", 
laah: logtape:00000203:  blocknum))); 
aaaaa GP_IGNORE: taaj: tuplesort - ./backend/utils/sort/tuplesort.c
taaj: tuplesort:00000582:  elog(ERROR, "insufficient memory allowed for sort"); 
taaj: tuplesort:00000991:  elog(ERROR, "unexpected out-of-memory situation during sort"); 
taaj: tuplesort:00001192:  elog(ERROR, "invalid tuplesort state"); 
taaj: tuplesort:00001271:  elog(ERROR, "invalid tuplesort state"); 
taaj: tuplesort:00001411:  elog(ERROR, "bogus tuple length in backward scan"); 
taaj: tuplesort:00001426:  elog(ERROR, "bogus tuple length in backward scan"); 
taaj: tuplesort:00001487:  elog(ERROR, "invalid tuplesort state"); 
taaj: tuplesort:00002274:  elog(ERROR, "invalid tuplesort state"); 
taaj: tuplesort:00002314:  elog(ERROR, "invalid tuplesort state"); 
taaj: tuplesort:00002350:  elog(ERROR, "tuplesort_restorepos failed"); 
taaj: tuplesort:00002355:  elog(ERROR, "invalid tuplesort state"); 
taaj: tuplesort:00002664:  elog(ERROR, "unexpected end of tape"); 
taaj: tuplesort:00002668:  elog(ERROR, "unexpected end of data"); 
taaj: tuplesort:00002759:  elog(ERROR, "operator %s cannot sort", get_opname(sortOperator)); 
taaj: tuplesort:00002782:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
taaj: tuplesort:00002855:  elog(ERROR, "unrecognized SortFunctionKind: %d", (int) kind); 
taaj: tuplesort:00002984:  elog(ERROR, "unexpected end of data"); 
taaj: tuplesort:00002991:  elog(ERROR, "unexpected end of data"); 
taaj: tuplesort:00003092:  ereport(ERROR, 
taaj: tuplesort:00003093:  (errcode(ERRCODE_UNIQUE_VIOLATION), 
taaj: tuplesort:00003094:  errmsg("could not create unique index"), 
taaj: tuplesort:00003095:  errdetail("Table contains duplicated values."))); 
taaj: tuplesort:00003172:  elog(ERROR, "unexpected end of data"); 
taaj: tuplesort:00003179:  elog(ERROR, "unexpected end of data"); 
taaj: tuplesort:00003210:  elog(ERROR, "copytup_datum() should not be called"); 
taaj: tuplesort:00003274:  elog(ERROR, "unexpected end of data"); 
taaj: tuplesort:00003285:  elog(ERROR, "unexpected end of data"); 
taaj: tuplesort:00003298:  elog(ERROR, "unexpected end of data"); 
aaaaa GP_IGNORE: tabc: tuplesortxmk - ./backend/utils/sort/tuplesort_mk.c
tabc: tuplesortxmk:00000566:  elog(ERROR, "insufficient memory allowed for sort"); 
tabc: tuplesortxmk:00001198:  elog(ERROR, "invalid tuplesort state"); 
tabc: tuplesortxmk:00001260:  elog(ERROR, "Invalid tuplesort state"); 
tabc: tuplesortxmk:00001421:  elog(ERROR, "bogus tuple length in backward scan"); 
tabc: tuplesortxmk:00001436:  elog(ERROR, "bogus tuple length in backward scan"); 
tabc: tuplesortxmk:00001450:  elog(ERROR, "invalid tuplesort state"); 
tabc: tuplesortxmk:00002276:  elog(ERROR, "invalid tuplesort state"); 
tabc: tuplesortxmk:00002316:  elog(ERROR, "invalid tuplesort state"); 
tabc: tuplesortxmk:00002353:  elog(ERROR, "tuplesort_restorepos failed"); 
tabc: tuplesortxmk:00002358:  elog(ERROR, "invalid tuplesort state"); 
tabc: tuplesortxmk:00002386:  elog(ERROR, "unexpected end of tape"); 
tabc: tuplesortxmk:00002390:  elog(ERROR, "unexpected end of data"); 
tabc: tuplesortxmk:00002424:  elog(ERROR, "function %u returned NULL", fcinfo.flinfo->fn_oid); 
tabc: tuplesortxmk:00002497:  elog(ERROR, "unrecognized SortFunctionKind: %d", (int) kind); 
tabc: tuplesortxmk:00002580:  elog(ERROR, "unexpected end of data"); 
tabc: tuplesortxmk:00002587:  elog(ERROR, "unexpected end of data"); 
tabc: tuplesortxmk:00002651:  elog(ERROR, "unexpected end of data"); 
tabc: tuplesortxmk:00002658:  elog(ERROR, "unexpected end of data"); 
tabc: tuplesortxmk:00002668:  elog(ERROR, "copytup_datum() should not be called"); 
tabc: tuplesortxmk:00002760:  elog(ERROR, "unexpected end of data"); 
tabc: tuplesortxmk:00002769:  elog(ERROR, "unexpected end of data"); 
tabc: tuplesortxmk:00002780:  elog(ERROR, "unexpected end of data"); 
aaaaa GP_IGNORE: taba: tuplestore - ./backend/utils/sort/tuplestore.c
taba: tuplestore:00000575:  elog(ERROR, "seek to EOF failed"); 
taba: tuplestore:00000580:  elog(ERROR, "invalid tuplestore state"); 
taba: tuplestore:00000650:  elog(ERROR, "seek failed"); 
taba: tuplestore:00000719:  elog(ERROR, "bogus tuple length in backward scan"); 
taba: tuplestore:00000733:  elog(ERROR, "bogus tuple length in backward scan"); 
taba: tuplestore:00000738:  elog(ERROR, "invalid tuplestore state"); 
taba: tuplestore:00000861:  elog(ERROR, "seek to start failed"); 
taba: tuplestore:00000864:  elog(ERROR, "invalid tuplestore state"); 
taba: tuplestore:00000905:  elog(ERROR, "invalid tuplestore state"); 
taba: tuplestore:00000939:  elog(ERROR, "tuplestore_restorepos failed"); 
taba: tuplestore:00000942:  elog(ERROR, "invalid tuplestore state"); 
taba: tuplestore:00000966:  elog(ERROR, "unexpected end of tape"); 
taba: tuplestore:00000968:  elog(ERROR, "unexpected end of data"); 
taba: tuplestore:00001007:  elog(ERROR, "write failed"); 
taba: tuplestore:00001011:  elog(ERROR, "write failed"); 
taba: tuplestore:00001043:  elog(ERROR, "unexpected end of data"); 
taba: tuplestore:00001053:  elog(ERROR, "unexepcted end of data"); 
taba: tuplestore:00001060:  elog(ERROR, "unexpected end of data"); 
aaaaa GP_IGNORE: tabd: tuplestorenew - ./backend/utils/sort/tuplestorenew.c
tabd: tuplestorenew:00000357:  ereport(ERROR, 
tabd: tuplestorenew:00000358:  (errcode(ERRCODE_OUT_OF_MEMORY), 
tabd: tuplestorenew:00000359:  errmsg("NTupleStore failed to malloc: out of memory"))); 
tabd: tuplestorenew:00000412:  elog(ERROR, "NTupleStore shrink write page failed"); 
tabd: tuplestorenew:00000519:  ereport(ERROR, 
tabd: tuplestorenew:00000520:  (errcode(ERRCODE_OUT_OF_MEMORY), 
tabd: tuplestorenew:00000521:  errmsg("Can not allocate a new page in the tuplestore."))); 
tabd: tuplestorenew:00000916:  elog(ERROR, "NTuplestore out of page"); 
tabd: tuplestorenew:00001001:  elog(ERROR, "NTuplestore out of page"); 
aaaaa GP_IGNORE: baaf: bayes - ./backend/utils/stat/bayes.c
baaf: bayes:00000056:  ereport(ERROR, 
baaf: bayes:00000057:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000058:  errmsg("nb_classify_accum called with %d arguments", 
baaf: bayes:00000059:  PG_NARGS()))); 
baaf: bayes:00000078:  ereport(ERROR, 
baaf: bayes:00000079:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000080:  errmsg("nb_classify cannot accumulate multidimensional arrays"))); 
baaf: bayes:00000088:  ereport(ERROR, 
baaf: bayes:00000089:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000090:  errmsg("nb_classify: non-conformable arrays"))); 
baaf: bayes:00000100:  ereport(ERROR, 
baaf: bayes:00000101:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000102:  errmsg("nb_classify: attr_count value must be >= 0"))); 
baaf: bayes:00000110:  ereport(ERROR, 
baaf: bayes:00000111:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000112:  errmsg("nb_classify: class_data values must be >= 0"))); 
baaf: bayes:00000116:  ereport(ERROR, 
baaf: bayes:00000117:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000118:  errmsg("nb_classify: total_data values must be >= 0"))); 
baaf: bayes:00000122:  ereport(ERROR, 
baaf: bayes:00000123:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000124:  errmsg("nb_classify: class_data values must be <= total_data"))); 
baaf: bayes:00000270:  ereport(ERROR, 
baaf: bayes:00000271:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000272:  errmsg("nb_classify_final called with %d arguments", 
baaf: bayes:00000273:  PG_NARGS()))); 
baaf: bayes:00000325:  ereport(ERROR, 
baaf: bayes:00000326:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000327:  errmsg("nb_classify_final called with %d arguments", 
baaf: bayes:00000328:  PG_NARGS()))); 
baaf: bayes:00000379:  ereport(ERROR, 
baaf: bayes:00000380:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000381:  errmsg("nb_classify_probabilities called with %d arguments", 
baaf: bayes:00000382:  PG_NARGS()))); 
baaf: bayes:00000439:  ereport(ERROR, 
baaf: bayes:00000440:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000441:  errmsg("nb_classify: invalid accumulation state"))); 
baaf: bayes:00000454:  ereport(ERROR, 
baaf: bayes:00000455:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000456:  errmsg("nb_classify: invalid accumulation state"))); 
baaf: bayes:00000462:  ereport(ERROR, 
baaf: bayes:00000463:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
baaf: bayes:00000464:  errmsg("nb_classify: mismatched inter-row input lengths"))); 
aaaaa GP_IGNORE: paae: pinv - ./backend/utils/stat/pinv.c
paae: pinv:00000054:  elog(ERROR, "could not open libgpla: %s", dlerror()); 
paae: pinv:00000106:  ereport(ERROR, 
paae: pinv:00000107:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paae: pinv:00000108:  errmsg("pseudoinverse called with %d arguments", 
paae: pinv:00000109:  PG_NARGS()))); 
paae: pinv:00000117:  ereport(ERROR, 
paae: pinv:00000118:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paae: pinv:00000119:  errmsg("pseudoinverse only defined over float8[]"))); 
paae: pinv:00000121:  ereport(ERROR, 
paae: pinv:00000122:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paae: pinv:00000123:  errmsg("pseudoinverse only defined over 2 dimensional arrays")) 
paae: pinv:00000124:  ); 
paae: pinv:00000126:  ereport(ERROR, 
paae: pinv:00000127:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
paae: pinv:00000128:  errmsg("null array element not allowed in this context"))); 
paae: pinv:00000207:  ereport(ERROR, 
paae: pinv:00000208:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paae: pinv:00000209:  errmsg("pseudoinverse: matrix dimensions too large"))); 
paae: pinv:00000263:  elog(ERROR,"pseudoinverse: lapack routine dgesdd not available on WIN32"); 
paae: pinv:00000269:  ereport(ERROR, 
paae: pinv:00000270:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paae: pinv:00000271:  errmsg("pseudoinverse: lapack routine dgesdd returned error")) 
paae: pinv:00000272:  ); 
paae: pinv:00000275:  ereport(ERROR, 
paae: pinv:00000276:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
paae: pinv:00000277:  errmsg("pseudoinverse: matrix dimensions too large")) 
paae: pinv:00000278:  ); 
aaaaa GP_IGNORE: raah: regress - ./backend/utils/stat/regress.c
raah: regress:00000114:  elog(ERROR, "cannot load function: %s", dlerror()); 
raah: regress:00000121:  elog(ERROR, "cannot load function: %s", dlerror()); 
raah: regress:00000150:  ereport(ERROR, 
raah: regress:00000151:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000152:  errmsg("transition function \"%s\" called with invalid parameters", 
raah: regress:00000153:  format_procedure(fcinfo->flinfo->fn_oid)))); 
raah: regress:00000157:  ereport(ERROR, 
raah: regress:00000158:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000159:  errmsg("transition function \"%s\" not called from aggregate", 
raah: regress:00000160:  format_procedure(fcinfo->flinfo->fn_oid)))); 
raah: regress:00000168:  ereport(ERROR, 
raah: regress:00000169:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000170:  errmsg("number of independent variables cannot exceed %lu", 
raah: regress:00000171:  (unsigned long) UINT32_MAX))); 
raah: regress:00000181:  ereport(ERROR, 
raah: regress:00000182:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000183:  errmsg("design matrix is not finite"))); 
raah: regress:00000185:  ereport(ERROR, 
raah: regress:00000186:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000187:  errmsg("dependent variables are not finite"))); 
raah: regress:00000204:  ereport(ERROR, 
raah: regress:00000205:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000206:  errmsg("number of independent variables is too large"))); 
raah: regress:00000252:  ereport(ERROR, 
raah: regress:00000253:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000254:  errmsg("transition function \"%s\" called with invalid parameters", 
raah: regress:00000255:  format_procedure(fcinfo->flinfo->fn_oid)), 
raah: regress:00000256:  errdetail("The independent-variable array is not of constant width."))); 
raah: regress:00000262:  ereport(ERROR, 
raah: regress:00000263:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000264:  errmsg("transition function \"%s\" called with invalid parameters", 
raah: regress:00000265:  format_procedure(fcinfo->flinfo->fn_oid)))); 
raah: regress:00000340:  ereport(ERROR, 
raah: regress:00000341:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000342:  errmsg("preliminary segment-level calculation function \"%s\" called with invalid parameters", 
raah: regress:00000343:  format_procedure(fcinfo->flinfo->fn_oid)))); 
raah: regress:00000361:  ereport(ERROR, 
raah: regress:00000362:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000363:  errmsg("preliminary segment-level calculation function \"%s\" called with invalid parameters", 
raah: regress:00000364:  format_procedure(fcinfo->flinfo->fn_oid)), 
raah: regress:00000365:  errdetail("The independent-variable array is not of constant width."))); 
raah: regress:00000377:  ereport(ERROR, 
raah: regress:00000378:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000379:  errmsg("preliminary segment-level calculation function \"%s\" called with invalid parameters", 
raah: regress:00000380:  format_procedure(fcinfo->flinfo->fn_oid)))); 
raah: regress:00000431:  ereport(ERROR, 
raah: regress:00000432:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000433:  errmsg("final calculation function \"%s\" called with invalid parameters", 
raah: regress:00000434:  format_procedure(fcinfo->flinfo->fn_oid)))); 
raah: regress:00000442:  ereport(ERROR, 
raah: regress:00000443:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000444:  errmsg("final calculation function \"%s\" called with invalid parameters", 
raah: regress:00000445:  format_procedure(fcinfo->flinfo->fn_oid)))); 
raah: regress:00000454:  ereport(ERROR, 
raah: regress:00000455:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
raah: regress:00000456:  errmsg("final calculation function \"%s\" called with invalid parameters", 
raah: regress:00000457:  format_procedure(fcinfo->flinfo->fn_oid)))); 
aaaaa GP_IGNORE: saah: student - ./backend/utils/stat/student.c
saah: student:00000225:  ereport(ERROR, 
saah: student:00000226:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
saah: student:00000227:  errmsg("student_t_cdf called with %d arguments", 
saah: student:00000228:  PG_NARGS()))); 
aaaaa GP_IGNORE: caai: combocid - ./backend/utils/time/combocid.c
caai: combocid:00000244:  elog(ERROR, "EntryReader qExec tried to allocate a Combo Command Id"); 
caai: combocid:00000246:  elog(ERROR, "Reader qExec tried to allocate a Combo Command Id"); 
caai: combocid:00000350:  elog(ERROR, "getSharedComboCidEntry: NO LOCK HOLDER POINTER."); 
caai: combocid:00000476:  elog(ERROR, "Combocid map I/O error!"); 
caai: combocid:00000501:  elog(ERROR, "loadSharedComboCommandId: NO LOCK HOLDER POINTER."); 
caai: combocid:00000518:  elog(ERROR, "loadSharedComboCommandId: seek to beginning failed."); 
caai: combocid:00000531:  elog(ERROR, "loadSharedComboCommandId: read failed I/O error."); 
caai: combocid:00000569:  elog(ERROR, "loadSharedComboCommandId: no combocid entry found for %u/%u", xmin, combocid); 
aaaaa GP_IGNORE: taaf: tqual - ./backend/utils/time/tqual.c
taaf: tqual:00000322:  elog(ERROR, "Shared Local Snapshots Array appears corrupted: %s", SharedSnapshotDump()); 
taaf: tqual:00000357:  ereport(FATAL, 
taaf: tqual:00000358:  (errcode(ERRCODE_TOO_MANY_CONNECTIONS), 
taaf: tqual:00000359:  errmsg("sorry, too many clients already."), 
taaf: tqual:00000360:  errdetail("There are no more available slots in the sharedSnapshotArray."), 
taaf: tqual:00000361:  errhint("Another piece of code should have detected that we have too many clients." 
taaf: tqual:00000362:  " this probably means that someone isn't releasing their slot properly."))); 
taaf: tqual:00000445:  elog(ERROR, "Shared Local Snapshots Array appears corrupted: %s", SharedSnapshotDump()); 
taaf: tqual:00000497:  elog(ERROR, "Shared Local Snapshots slot has a bogus slotindex: %d. slot array dump: %s", 
taaf: tqual:00000498:  slot->slotindex, SharedSnapshotDump()); 
taaf: tqual:00000531:  ereport(ERROR, 
taaf: tqual:00000532:  (errmsg("%s could not set the Shared Local Snapshot!", 
taaf: tqual:00000533:  creatorDescription), 
taaf: tqual:00000534:  errdetail("Tried to set the shared local snapshot slot with id: %d " 
taaf: tqual:00000535:  "and failed. Shared Local Snapshots dump: %s", id, 
taaf: tqual:00000536:  SharedSnapshotDump()))); 
taaf: tqual:00000553:  ereport(ERROR, 
taaf: tqual:00000554:  (errmsg("%s could not find Shared Local Snapshot!", 
taaf: tqual:00000555:  lookerDescription), 
taaf: tqual:00000556:  errdetail("Tried to find a shared snapshot slot with id: %d " 
taaf: tqual:00000557:  "and found none. Shared Local Snapshots dump: %s", id, 
taaf: tqual:00000558:  SharedSnapshotDump()), 
taaf: tqual:00000559:  errhint("Either this %s was created before the %s or the %s died.", 
taaf: tqual:00000560:  lookerDescription, creatorDescription, creatorDescription))); 
taaf: tqual:00000583:  elog(ERROR, "NO LOCK HOLDER POINTER."); 
taaf: tqual:00000692:  elog(ERROR, 
taaf: tqual:00000693:  "Error in reading subtransaction file."); 
taaf: tqual:00000741:  elog(ERROR, "Failed to write shared snapshot to temp-file"); 
taaf: tqual:00000787:  elog(ERROR, "Cursor snapshot: failed to read size"); 
taaf: tqual:00000800:  elog(ERROR, "Cursor snapshot: failed to seek."); 
taaf: tqual:00000803:  elog(ERROR, "Cursor snapshot: failed to read content"); 
taaf: tqual:00000811:  elog(ERROR, "cursor snapshot failed sanity %u != %u", 
taaf: tqual:00000812:  (unsigned int)sanity, (unsigned int)count); 
taaf: tqual:00000891:  elog(ERROR, "Error in Reading Subtransaction file."); 
taaf: tqual:00002470:  elog(ERROR, "no snapshot has been set"); 
taaf: tqual:00002792:  elog(FATAL, "Unrecognized distributed committed test result: %d", 
taaf: tqual:00002793:  (int) distributedSnapshotCommitted); 
taaf: tqual:00003462:  elog(ERROR, "Unrecognized tuple transaction status: %d", 
taaf: tqual:00003463:  (int) tupleVisibilitySummary->xmaxStatus); 
taaf: tqual:00003471:  elog(ERROR, "Unrecognized tuple transaction status: %d", 
taaf: tqual:00003472:  (int) tupleVisibilitySummary->xminStatus); 
taaf: tqual:00003516:  elog(ERROR, "Unrecognized tuple transaction status: %d", 
taaf: tqual:00003517:  (int) status); 
aaaaa GP_IGNORE: gaai: gpfshdfs - ./bin/gpfilesystem/hdfs/gpfshdfs.c
gaai: gpfshdfs:00000085:  elog(WARNING, "cannot execute gpfs_hdfs_connect outside filesystem manager"); 
gaai: gpfshdfs:00000094:  elog(WARNING, "get host invalid in gpfs_hdfs_connect"); 
gaai: gpfshdfs:00000100:  elog(WARNING, "get port invalid in gpfs_hdfs_connect: %d", port); 
gaai: gpfshdfs:00000126:  elog(WARNING, "cannot execute gpfs_hdfs_openfile outside filesystem manager"); 
gaai: gpfshdfs:00000135:  elog(WARNING, "get hdfs invalid in gpfs_hdfs_openfile"); 
gaai: gpfshdfs:00000163:  elog(WARNING, "cannot execute gpfs_hdfs_openfile outside filesystem manager"); 
gaai: gpfshdfs:00000177:  elog(WARNING, "get hdfs invalid in gpfs_hdfs_openfile"); 
gaai: gpfshdfs:00000183:  elog(WARNING, "get path invalid in gpfs_hdfs_openfile"); 
gaai: gpfshdfs:00000189:  elog(WARNING, "get param error in gpfs_hdfs_openfile: bufferSize[%d], rep[%d], blocksize["INT64_FORMAT"]", 
gaai: gpfshdfs:00000190:  bufferSize, rep, blocksize); 
gaai: gpfshdfs:00000217:  elog(WARNING, "cannot execute gpfs_hdfs_sync outside filesystem manager"); 
gaai: gpfshdfs:00000226:  elog(WARNING, "get hdfsFS invalid in gpfs_hdfs_sync"); 
gaai: gpfshdfs:00000232:  elog(WARNING, "get hdfsFile invalid in gpfs_hdfs_sync"); 
gaai: gpfshdfs:00000255:  elog(WARNING, "cannot execute gpfs_hdfs_closefile outside filesystem manager"); 
gaai: gpfshdfs:00000264:  elog(WARNING, "get hdfsFS invalid in gpfs_hdfs_closefile"); 
gaai: gpfshdfs:00000270:  elog(WARNING, "get hdfsFile invalid in gpfs_hdfs_closefile"); 
gaai: gpfshdfs:00000293:  elog(WARNING, "cannot execute gpfs_hdfs_createdirectory outside filesystem manager"); 
gaai: gpfshdfs:00000302:  elog(WARNING, "get hdfsFS invalid in gpfs_hdfs_createdirectory"); 
gaai: gpfshdfs:00000308:  elog(WARNING, "get path invalid in gpfs_hdfs_createdirectory"); 
gaai: gpfshdfs:00000332:  elog(WARNING, "cannot execute gpfs_hdfs_delete outside filesystem manager"); 
gaai: gpfshdfs:00000342:  elog(WARNING, "get hdfsFS invalid in gpfs_hdfs_delete"); 
gaai: gpfshdfs:00000348:  elog(WARNING, "get path invalid in gpfs_hdfs_delete"); 
gaai: gpfshdfs:00000372:  elog(WARNING, "cannot execute gpfs_hdfs_chmod outside filesystem manager"); 
gaai: gpfshdfs:00000382:  elog(WARNING, "get hdfsFS invalid in gpfs_hdfs_chmod"); 
gaai: gpfshdfs:00000388:  elog(WARNING, "get path invalid in gpfs_hdfs_chmod"); 
gaai: gpfshdfs:00000413:  elog(WARNING, "cannot execute gpfs_hdfs_read outside filesystem manager"); 
gaai: gpfshdfs:00000424:  elog(WARNING, "get hdfsFS invalid in gpfs_hdfs_read"); 
gaai: gpfshdfs:00000430:  elog(WARNING, "get hdfsFile invalid in gpfs_hdfs_read"); 
gaai: gpfshdfs:00000436:  elog(WARNING, "get buffer invalid in gpfs_hdfs_read"); 
gaai: gpfshdfs:00000442:  elog(WARNING, "get length[%d] invalid in gpfs_hdfs_read", length); 
gaai: gpfshdfs:00000467:  elog(WARNING, "cannot execute gpfs_hdfs_write outside filesystem manager"); 
gaai: gpfshdfs:00000478:  elog(WARNING, "get hdfsFS invalid in gpfs_hdfs_write"); 
gaai: gpfshdfs:00000484:  elog(WARNING, "get hdfsFile invalid in gpfs_hdfs_write"); 
gaai: gpfshdfs:00000490:  elog(WARNING, "get buffer invalid in gpfs_hdfs_write"); 
gaai: gpfshdfs:00000496:  elog(WARNING, "get length[%d] invalid in gpfs_hdfs_write", length); 
gaai: gpfshdfs:00000520:  elog(WARNING, "cannot execute gpfs_hdfs_seek outside filesystem manager"); 
gaai: gpfshdfs:00000530:  elog(WARNING, "get hdfsFS invalid in gpfs_hdfs_seek"); 
gaai: gpfshdfs:00000536:  elog(WARNING, "get hdfsFile invalid in gpfs_hdfs_seek"); 
gaai: gpfshdfs:00000542:  elog(WARNING, "get pos["INT64_FORMAT"] invalid in gpfs_hdfs_seek", pos); 
gaai: gpfshdfs:00000565:  elog(WARNING, "cannot execute gpfs_hdfs_tell outside filesystem manager"); 
gaai: gpfshdfs:00000574:  elog(WARNING, "get hdfsFS invalid in gpfs_hdfs_tell"); 
gaai: gpfshdfs:00000580:  elog(WARNING, "get hdfsFile invalid in gpfs_hdfs_tell"); 
gaai: gpfshdfs:00000604:  elog(WARNING, "cannot execute gpfs_hdfs_tell outside filesystem manager"); 
gaai: gpfshdfs:00000614:  elog(WARNING, "get hdfsFS invalid in gpfs_hdfs_truncate"); 
gaai: gpfshdfs:00000620:  elog(WARNING, "get hdfsFile invalid in gpfs_hdfs_truncate"); 
gaai: gpfshdfs:00000626:  elog(WARNING, "get pos["INT64_FORMAT"] invalid in gpfs_hdfs_truncate", pos); 
gaai: gpfshdfs:00000659:  elog(WARNING, "cannot execute gpfs_hdfs_tell outside filesystem manager"); 
gaai: gpfshdfs:00000668:  elog(WARNING, "get hdfsFS invalid in gpfs_hdfs_getpathinfo"); 
gaai: gpfshdfs:00000674:  elog(WARNING, "get file path invalid in gpfs_hdfs_getpathinfo"); 
gaai: gpfshdfs:00000699:  elog(WARNING, "cannot execute gpfs_hdfs_tell outside filesystem manager"); 
gaai: gpfshdfs:00000708:  elog(WARNING, "get HdfsFileInfo invalid in gpfs_hdfs_freefileinfo"); 
gaai: gpfshdfs:00000714:  elog(WARNING, "get HdfsFileInfo numEntries invalid in gpfs_hdfs_freefileinfo"); 
aaaaa GP_IGNORE: gabb: gpbridgeapi - ./bin/gpfusion/gpbridgeapi.c
gabb: gpbridgeapi:00000055:  elog(ERROR, "cannot execute gpbridge_import outside protocol manager"); 
aaaaa GP_IGNORE: gacb: gpdbwritableformatter - ./bin/gpfusion/gpdbwritableformatter.c
gacb: gpdbwritableformatter:00000206:  default: ereport(ERROR, (errcode(ERRCODE_DATA_EXCEPTION), 
gacb: gpdbwritableformatter:00000207:  errmsg("Ill-formatted record: unknown Java Enum Ordinal (%d)", enumType), 
gacb: gpdbwritableformatter:00000208:  errOmitLocation(true))); 
gacb: gpdbwritableformatter:00000285:  ereport(ERROR, (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
gacb: gpdbwritableformatter:00000286:  errmsg("cannot execute gpdbwritableformatter_export outside format manager"), 
gacb: gpdbwritableformatter:00000287:  errOmitLocation(true))); 
gacb: gpdbwritableformatter:00000301:  ereport(ERROR, (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
gacb: gpdbwritableformatter:00000302:  errmsg("gpdbwritable formatter can only export UTF8 formatted data. Define the external table with ENCODING UTF8"), 
gacb: gpdbwritableformatter:00000303:  errOmitLocation(true))); 
gacb: gpdbwritableformatter:00000323:  ereport(ERROR, (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
gacb: gpdbwritableformatter:00000324:  errmsg("cannot handle external table with dropped columns"), 
gacb: gpdbwritableformatter:00000325:  errOmitLocation(true))); 
gacb: gpdbwritableformatter:00000503:  ereport(ERROR, (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
gacb: gpdbwritableformatter:00000504:  errmsg("cannot execute gpdbwritableformatter_import outside format manager"), 
gacb: gpdbwritableformatter:00000505:  errOmitLocation(true))); 
gacb: gpdbwritableformatter:00000519:  ereport(ERROR, (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
gacb: gpdbwritableformatter:00000520:  errmsg("gpdbwritable formatter can only import UTF8 formatted data. Define the external table with ENCODING UTF8"), 
gacb: gpdbwritableformatter:00000521:  errOmitLocation(true))); 
gacb: gpdbwritableformatter:00000537:  ereport(ERROR, (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
gacb: gpdbwritableformatter:00000538:  errmsg("cannot handle external table with dropped columns"), 
gacb: gpdbwritableformatter:00000539:  errOmitLocation(true))); 
gacb: gpdbwritableformatter:00000583:  ereport(ERROR, (errcode(ERRCODE_DATA_EXCEPTION), 
gacb: gpdbwritableformatter:00000584:  errmsg("unexpected end of file"), 
gacb: gpdbwritableformatter:00000585:  errOmitLocation(true))); 
gacb: gpdbwritableformatter:00000598:  ereport(ERROR, (errcode(ERRCODE_DATA_EXCEPTION), 
gacb: gpdbwritableformatter:00000599:  errmsg("unexpected end of file"), 
gacb: gpdbwritableformatter:00000600:  errOmitLocation(true))); 
gacb: gpdbwritableformatter:00000619:  ereport(ERROR, (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gacb: gpdbwritableformatter:00000620:  errmsg("cannot import data version %d", version), 
gacb: gpdbwritableformatter:00000621:  errOmitLocation(true))); 
gacb: gpdbwritableformatter:00000627:  ereport(ERROR, (errcode(ERRCODE_DATA_EXCEPTION), 
gacb: gpdbwritableformatter:00000628:  errmsg("Reporting a badly formatted data record which was detected by the java reader. See GPBridge log for more details"))); 
gacb: gpdbwritableformatter:00000633:  ereport(ERROR, (errcode(ERRCODE_DATA_EXCEPTION), 
gacb: gpdbwritableformatter:00000634:  errmsg("input data column count (%d) did not match the external table definition", 
gacb: gpdbwritableformatter:00000635:  colcnt), 
gacb: gpdbwritableformatter:00000636:  errOmitLocation(true))); 
gacb: gpdbwritableformatter:00000652:  ereport(ERROR, (errcode(ERRCODE_DATA_EXCEPTION), 
gacb: gpdbwritableformatter:00000653:  errmsg("input data column %d of type \"%s\" did not match the external table definition", 
gacb: gpdbwritableformatter:00000654:  i+1, intype), 
gacb: gpdbwritableformatter:00000655:  errOmitLocation(true))); 
gacb: gpdbwritableformatter:00000718:  ereport(ERROR, (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
gacb: gpdbwritableformatter:00000719:  errmsg("Tuplelen != bufidx: %d:%d:%d", tuplelen, bufidx, data_cur), 
gacb: gpdbwritableformatter:00000720:  errOmitLocation(true))); 
aaaaa GP_IGNORE: gabb: gphdfilters - ./bin/gpfusion/gphdfilters.c
gabb: gphdfilters:00000208:  ereport(ERROR, 
gabb: gphdfilters:00000209:  (errcode(ERRCODE_INTERNAL_ERROR), 
gabb: gphdfilters:00000210:  errmsg("internal error in gphdfilters.c:SerializeGphd" 
gabb: gphdfilters:00000211:  "FilterList. Found a non const+attr filter"))); 
gabb: gphdfilters:00000359:  ereport(ERROR, 
gabb: gphdfilters:00000360:  (errcode(ERRCODE_INTERNAL_ERROR), 
gabb: gphdfilters:00000361:  errmsg("internal error in gphdfilters.c:const_to_str. " 
gabb: gphdfilters:00000362:  "Using unsupported data type"))); 
aaaaa GP_IGNORE: paad: pxf - ./bin/gpfusion/pxf.c
paad: pxf:00000015:  ereport(ERROR, 
paad: pxf:00000016:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
paad: pxf:00000017:  errmsg("pxf does not yet support writable external tables"))); 
paad: pxf:00000037:  elog(ERROR, "cannot execute pxfprotocol_validate_urls outside protocol manager"); 
paad: pxf:00000043:  ereport(ERROR, 
paad: pxf:00000044:  (errcode(ERRCODE_PROTOCOL_VIOLATION), 
paad: pxf:00000045:  errmsg("number of URLs must be one"))); 
paad: pxf:00000051:  ereport(ERROR, 
paad: pxf:00000052:  (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
paad: pxf:00000053:  errmsg("pxf does not yet support writable external tables"))); 
aaaaa GP_IGNORE: gaai: gpmrdemo - ./bin/gpmapreduce/test/lib/gpmrdemo.c
gaai: gpmrdemo:00000072:  ereport(ERROR, 
gaai: gpmrdemo:00000073:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaai: gpmrdemo:00000074:  errmsg("function returning record called in context " 
gaai: gpmrdemo:00000075:  "that cannot accept type record"))); 
gaai: gpmrdemo:00000177:  elog(ERROR, "%s defined with %d arguments, expected 2", 
gaai: gpmrdemo:00000178:  accum_str, PG_NARGS() ); 
gaai: gpmrdemo:00000183:  elog(ERROR, "%s defined with invalid types, expected (int8, int4)", 
gaai: gpmrdemo:00000184:  accum_str ); 
gaai: gpmrdemo:00000188:  elog(ERROR, "%s defined with invalid return type, expected int8", 
gaai: gpmrdemo:00000189:  accum_str ); 
gaai: gpmrdemo:00000221:  elog(ERROR, "%s defined with %d arguments, expected 2", 
gaai: gpmrdemo:00000222:  add_str, PG_NARGS() ); 
gaai: gpmrdemo:00000227:  elog(ERROR, "%s defined with invalid types, expected (int8, int8)", 
gaai: gpmrdemo:00000228:  add_str ); 
gaai: gpmrdemo:00000232:  elog(ERROR, "%s defined with invalid return type, expected int8", 
gaai: gpmrdemo:00000233:  add_str ); 
gaai: gpmrdemo:00000294:  ereport(ERROR, 
gaai: gpmrdemo:00000295:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
gaai: gpmrdemo:00000296:  errmsg("function returning record called in context " 
gaai: gpmrdemo:00000297:  "that cannot accept type record"))); 
aaaaa GP_IGNORE: gaai: gpviewcp - ./bin/gpupgrade/gpviewcp.c
gaai: gpviewcp:00000070:  ereport(ERROR, 
gaai: gpviewcp:00000071:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000072:  errmsg("gpviewcopy(): called with %hd arguments", 
gaai: gpviewcp:00000073:  PG_NARGS()))); 
gaai: gpviewcp:00000075:  ereport(ERROR, 
gaai: gpviewcp:00000076:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000077:  errmsg("gpviewcopy(): called with null arguments"))); 
gaai: gpviewcp:00000081:  ereport(ERROR, 
gaai: gpviewcp:00000082:  (errcode(ERRCODE_INSUFFICIENT_PRIVILEGE), 
gaai: gpviewcp:00000083:  errmsg("permission denied"), 
gaai: gpviewcp:00000084:  errhint("gpviewcopy(): requires superuser privileges."))); 
gaai: gpviewcp:00000098:  ereport(ERROR, 
gaai: gpviewcp:00000099:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000100:  errmsg("gpviewcopy(): oid %d not found", source_oid))); 
gaai: gpviewcp:00000104:  ereport(ERROR, 
gaai: gpviewcp:00000105:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000106:  errmsg("gpviewcopy(): \"%s\" is not a view", source_name))); 
gaai: gpviewcp:00000110:  ereport(ERROR, 
gaai: gpviewcp:00000111:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000112:  errmsg("gpviewcopy(): oid %d not found", target_oid))); 
gaai: gpviewcp:00000116:  ereport(ERROR, 
gaai: gpviewcp:00000117:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000118:  errmsg("gpviewcopy(): \"%s\" is not a view", target_name))); 
gaai: gpviewcp:00000122:  ereport(ERROR, 
gaai: gpviewcp:00000123:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000124:  errmsg("gpviewcopy(): views are not compatible"), 
gaai: gpviewcp:00000125:  errhint("\"%s\" has %d columns, \"%s\" has %d columns", 
gaai: gpviewcp:00000126:  source_name, source_class->relnatts, 
gaai: gpviewcp:00000127:  target_name, target_class->relnatts))); 
gaai: gpviewcp:00000146:  elog(ERROR, "cache lookup failed for attribute %d of relation %u", 
gaai: gpviewcp:00000147:  attnum, source_oid); 
gaai: gpviewcp:00000155:  elog(ERROR, "cache lookup failed for attribute %d of relation %u", 
gaai: gpviewcp:00000156:  attnum, target_oid); 
gaai: gpviewcp:00000164:  ereport(ERROR, 
gaai: gpviewcp:00000165:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000166:  errmsg("gpviewcopy(): views are not compatible"), 
gaai: gpviewcp:00000167:  errhint("attnum %d: attname mismatch \"%s\" != \"%s\"", 
gaai: gpviewcp:00000168:  attnum, source_attname, target_attname))); 
gaai: gpviewcp:00000171:  ereport(ERROR, 
gaai: gpviewcp:00000172:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000173:  errmsg("gpviewcopy(): views are not compatible"), 
gaai: gpviewcp:00000174:  errhint("attnum %d: typid mismatch %d != %d", attnum, 
gaai: gpviewcp:00000175:  source_att->atttypid, target_att->atttypid))); 
gaai: gpviewcp:00000177:  ereport(ERROR, 
gaai: gpviewcp:00000178:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000179:  errmsg("gpviewcopy(): views are not compatible"), 
gaai: gpviewcp:00000180:  errhint("attnum %d: attlen mismatch %d != %d", attnum, 
gaai: gpviewcp:00000181:  source_att->attlen, target_att->attlen))); 
gaai: gpviewcp:00000183:  ereport(ERROR, 
gaai: gpviewcp:00000184:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000185:  errmsg("gpviewcopy(): views are not compatible"), 
gaai: gpviewcp:00000186:  errhint("attnum %d: attnum mismatch %d != %d", attnum, 
gaai: gpviewcp:00000187:  source_att->attnum, target_att->attnum))); 
gaai: gpviewcp:00000189:  ereport(ERROR, 
gaai: gpviewcp:00000190:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000191:  errmsg("gpviewcopy(): views are not compatible"), 
gaai: gpviewcp:00000192:  errhint("attnum %d: attndims mismatch %d != %d", attnum, 
gaai: gpviewcp:00000193:  source_att->attndims, target_att->attndims))); 
gaai: gpviewcp:00000195:  ereport(ERROR, 
gaai: gpviewcp:00000196:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000197:  errmsg("gpviewcopy(): views are not compatible"), 
gaai: gpviewcp:00000198:  errhint("attnum %d: typmod mismatch %d != %d", attnum, 
gaai: gpviewcp:00000199:  source_att->atttypmod, target_att->atttypmod))); 
gaai: gpviewcp:00000201:  ereport(ERROR, 
gaai: gpviewcp:00000202:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000203:  errmsg("gpviewcopy(): views are not compatible"), 
gaai: gpviewcp:00000204:  errhint("attnum %d: attbyval mismatch %d != %d", attnum, 
gaai: gpviewcp:00000205:  source_att->attbyval, target_att->attbyval))); 
gaai: gpviewcp:00000207:  ereport(ERROR, 
gaai: gpviewcp:00000208:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000209:  errmsg("gpviewcopy(): views are not compatible"), 
gaai: gpviewcp:00000210:  errhint("attnum %d: storage mismatch %c != %c", attnum, 
gaai: gpviewcp:00000211:  source_att->attstorage, target_att->attstorage))); 
gaai: gpviewcp:00000213:  ereport(ERROR, 
gaai: gpviewcp:00000214:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000215:  errmsg("gpviewcopy(): views are not compatible"), 
gaai: gpviewcp:00000216:  errhint("attnum %d: alignent mismatch %c != %c", attnum, 
gaai: gpviewcp:00000217:  source_att->attalign, target_att->attalign))); 
gaai: gpviewcp:00000233:  elog(ERROR, "gpviewcopy(): \"%s\" not found in pg_rewrite", source_name); 
gaai: gpviewcp:00000240:  elog(ERROR, "gpviewcopy(): pg_rewrite entry is invalid for \"%s\"", 
gaai: gpviewcp:00000241:  source_name); 
gaai: gpviewcp:00000248:  elog(ERROR, "gpviewcopy(): ev_action is null for \"%s\"", source_name); 
gaai: gpviewcp:00000257:  elog(ERROR, "gpviewcopy(): \"%s\" not found in pg_rewrite", target_name); 
gaai: gpviewcp:00000264:  elog(ERROR, "gpviewcopy(): pg_rewrite entry is invalid for \"%s\"", 
gaai: gpviewcp:00000265:  target_name); 
gaai: gpviewcp:00000280:  elog(ERROR, "gpviewcopy(): ev_action is invalid for \"%s\"", source_name); 
gaai: gpviewcp:00000283:  elog(ERROR, "gpviewcopy(): ev_action is invalid for \"%s\"", source_name); 
gaai: gpviewcp:00000286:  elog(ERROR, "gpviewcopy(): ev_action is invalid for \"%s\"", source_name); 
gaai: gpviewcp:00000337:  ereport(ERROR, 
gaai: gpviewcp:00000338:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
gaai: gpviewcp:00000339:  errmsg("gpviewreparse(): called with %hd arguments", 
gaai: gpviewcp:00000340:  PG_NARGS()))); 
aaaaa GP_IGNORE: eaai: encnames - ./bin/initdb/encnames.c
eaai: encnames:00000483:  ereport(ERROR, 
eaai: encnames:00000484:  (errcode(ERRCODE_NAME_TOO_LONG), 
eaai: encnames:00000485:  errmsg("encoding name too long"))); 
aaaaa GP_IGNORE: eaai: encnames - ./interfaces/libpq/encnames.c
eaai: encnames:00000483:  ereport(ERROR, 
eaai: encnames:00000484:  (errcode(ERRCODE_NAME_TOO_LONG), 
eaai: encnames:00000485:  errmsg("encoding name too long"))); 
aaaaa GP_IGNORE: waaf: wchar - ./interfaces/libpq/wchar.c
waaf: wchar:00001571:  elog(ERROR, "invalid source encoding ID: %d", src_encoding); 
waaf: wchar:00001573:  elog(ERROR, "expected source encoding \"%s\", but got \"%s\"", 
waaf: wchar:00001574:  pg_enc2name_tbl[expected_src_encoding].name, 
waaf: wchar:00001575:  pg_enc2name_tbl[src_encoding].name); 
waaf: wchar:00001577:  elog(ERROR, "invalid destination encoding ID: %d", dest_encoding); 
waaf: wchar:00001579:  elog(ERROR, "expected destination encoding \"%s\", but got \"%s\"", 
waaf: wchar:00001580:  pg_enc2name_tbl[expected_dest_encoding].name, 
waaf: wchar:00001581:  pg_enc2name_tbl[dest_encoding].name); 
waaf: wchar:00001583:  elog(ERROR, "encoding conversion length must not be negative"); 
waaf: wchar:00001607:  ereport(ERROR, 
waaf: wchar:00001608:  (errcode(ERRCODE_CHARACTER_NOT_IN_REPERTOIRE), 
waaf: wchar:00001609:  errmsg("invalid byte sequence for encoding \"%s\": 0x%s", 
waaf: wchar:00001610:  pg_enc2name_tbl[encoding].name, 
waaf: wchar:00001611:  buf), 
waaf: wchar:00001612:  errhint("This error can also happen if the byte sequence does not " 
waaf: wchar:00001613:  "match the encoding expected by the server, which is controlled " 
waaf: wchar:00001614:  "by \"client_encoding\"."))); 
waaf: wchar:00001639:  ereport(ERROR, 
waaf: wchar:00001640:  (errcode(ERRCODE_UNTRANSLATABLE_CHARACTER), 
waaf: wchar:00001641:  errmsg("character 0x%s of encoding \"%s\" has no equivalent in \"%s\"", 
waaf: wchar:00001642:  buf, 
waaf: wchar:00001643:  pg_enc2name_tbl[src_encoding].name, 
waaf: wchar:00001644:  pg_enc2name_tbl[dest_encoding].name))); 
aaaaa GP_IGNORE: baah: backend - ./pl/pljava/src/C/pljava/Backend.c
baah: backend:00000167:  ereport(ERROR, ( 
baah: backend:00000168:  errcode(ERRCODE_INTERNAL_ERROR), 
baah: backend:00000169:  errmsg("Unable to initialize java security"))); 
baah: backend:00000250:  ereport(ERROR, ( 
baah: backend:00000251:  errcode(ERRCODE_INVALID_NAME), 
baah: backend:00000252:  errmsg("invalid macro name '%*s' in dynamic library path", (int)len, path))); 
baah: backend:00000557:  ereport(ERROR, ( 
baah: backend:00000558:  errcode(ERRCODE_INTERNAL_ERROR), 
baah: backend:00000559:  errmsg("Unable to initialize java session"))); 
baah: backend:00000640:  ereport(ERROR, (errmsg("Failed to create Java VM"))); 
aaaaa GP_IGNORE: eaaj: exception - ./pl/pljava/src/C/pljava/Exception.c
eaaj: exception:00000064:  ereport(WARNING, 
eaaj: exception:00000065:  (errcode(ERRCODE_INTERNAL_ERROR), 
eaaj: exception:00000066:  errmsg("Exception while generating exception: %s", buf.data))); 
eaaj: exception:00000108:  ereport(WARNING, (errcode(errCode), errmsg("Exception while generating exception: %s", buf))); 
eaaj: exception:00000136:  ereport(WARNING, (errcode(ERRCODE_INTERNAL_ERROR), errmsg("Exception while generating exception: %s", buf))); 
eaaj: exception:00000168:  elog(WARNING, "Exception while generating exception"); 
aaaaa GP_IGNORE: faai: function - ./pl/pljava/src/C/pljava/Function.c
faai: function:00000185:  ereport(ERROR, ( 
faai: function:00000186:  errcode(ERRCODE_SYNTAX_ERROR), 
faai: function:00000187:  errmsg("To many parameters - expected %d ", top))); 
faai: function:00000228:  ereport(ERROR, ( 
faai: function:00000229:  errcode(ERRCODE_SYNTAX_ERROR), 
faai: function:00000230:  errmsg("To few parameters - expected %d ", top))); 
faai: function:00000256:  ereport(ERROR, ( 
faai: function:00000257:  errcode(ERRCODE_SYNTAX_ERROR), 
faai: function:00000258:  errmsg("'AS' clause of Java function cannot be NULL"))); 
faai: function:00000305:  ereport(ERROR, ( 
faai: function:00000306:  errcode(ERRCODE_SYNTAX_ERROR), 
faai: function:00000307:  errmsg("Missing ending ']' in UDT declaration"))); 
faai: function:00000355:  ereport(ERROR, ( 
faai: function:00000356:  errcode(ERRCODE_SYNTAX_ERROR), 
faai: function:00000357:  errmsg("Unbalanced parenthesis"))); 
faai: function:00000371:  ereport(ERROR, ( 
faai: function:00000372:  errcode(ERRCODE_SYNTAX_ERROR), 
faai: function:00000373:  errmsg("Did not find <fully qualified class>.<method name>"))); 
faai: function:00000414:  ereport(ERROR, ( 
faai: function:00000415:  errcode(ERRCODE_SYNTAX_ERROR), 
faai: function:00000416:  errmsg("Triggers can not have a java parameter declaration"))); 
faai: function:00000455:  ereport(ERROR, ( 
faai: function:00000456:  errcode(ERRCODE_SYNTAX_ERROR), 
faai: function:00000457:  errmsg("Unknown UDT function %s", info->methodName))); 
aaaaa GP_IGNORE: iaba: invocation - ./pl/pljava/src/C/pljava/Invocation.c
iaba: invocation:00000170:  elog(FATAL, "Failed to reinstate untrusted security after a trusted call or vice versa"); 
aaaaa GP_IGNORE: jaai: jnicalls - ./pl/pljava/src/C/pljava/JNICalls.c
jaai: jnicalls:00000029:  elog(ERROR, "Java exit monitor failure"); 
jaai: jnicalls:00000090:  elog(ERROR, "Java enter monitor failure"); 
jaai: jnicalls:00001084:  elog(ERROR, "Java enter monitor failure (initial)"); 
aaaaa GP_IGNORE: paai: pgobject - ./pl/pljava/src/C/pljava/PgObject.c
paai: pgobject:00000067:  ereport(ERROR, (errmsg("Pure virtual method called"))); 
paai: pgobject:00000095:  ereport(ERROR, ( 
paai: pgobject:00000096:  errmsg("Unable to find%s %s %s.%s with signature %s", 
paai: pgobject:00000097:  (isStatic ? " static" : ""), 
paai: pgobject:00000098:  (isMethod ? "method" : "field"), 
paai: pgobject:00000099:  PgObject_getClassName(cls), 
paai: pgobject:00000100:  memberName, 
paai: pgobject:00000101:  signature))); 
paai: pgobject:00000114:  ereport(ERROR, ( 
paai: pgobject:00000115:  errmsg("Unable to load class %s using CLASSPATH '%s'", 
paai: pgobject:00000116:  className, effectiveClassPath == 0 ? "null" : effectiveClassPath))); 
paai: pgobject:00000143:  ereport(ERROR, ( 
paai: pgobject:00000144:  errmsg("Unable to register native methods"))); 
paai: pgobject:00000185:  ereport(ERROR, (errmsg("cache lookup failed for %s %u", tupleType, tupleId))); 
aaaaa GP_IGNORE: saad: spi - ./pl/pljava/src/C/pljava/SPI.c
saad: spi:00000154:  ereport(ERROR, ( 
saad: spi:00000155:  errcode(ERRCODE_INVALID_TRANSACTION_TERMINATION), 
saad: spi:00000156:  errmsg("Subtransaction mismatch at txlevel %d", 
saad: spi:00000157:  GetCurrentTransactionNestLevel()))); 
aaaaa GP_IGNORE: aaaf: aclid - ./pl/pljava/src/C/pljava/type/AclId.c
aaaf: aclid:00000144:  ereport(ERROR, 
aaaf: aclid:00000145:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
aaaf: aclid:00000146:  errmsg("role \"%s\" does not exist", roleName))); 
aaaaa GP_IGNORE: caaj: composite - ./pl/pljava/src/C/pljava/type/Composite.c
caaj: composite:00000128:  ereport(ERROR, (errmsg("Unable to find tuple descriptor"))); 
caaj: composite:00000212:  ereport(ERROR, 
caaj: composite:00000213:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
caaj: composite:00000214:  errmsg("function returning record called in context " 
caaj: composite:00000215:  "that cannot accept type record"))); 
aaaaa GP_IGNORE: taae: type - ./pl/pljava/src/C/pljava/type/Type.c
taae: type:00000114:  elog(ERROR, "no conversion function from %s to %s", 
taae: type:00000115:  format_type_be(fromOid), 
taae: type:00000116:  format_type_be(toOid)); 
taae: type:00000155:  elog(ERROR, "no conversion function from %s to %s", 
taae: type:00000156:  format_type_be(fromOid), 
taae: type:00000157:  format_type_be(toOid)); 
taae: type:00000221:  ereport(ERROR, ( 
taae: type:00000222:  errmsg("Type '%s' has no corresponding java class", 
taae: type:00000223:  PgObjectClass_getName((PgObjectClass)typeClass)))); 
taae: type:00000441:  ereport(ERROR, ( 
taae: type:00000442:  errcode(ERRCODE_CANNOT_COERCE), 
taae: type:00000443:  errmsg("No java type mapping installed for \"%s\"", javaTypeName))); 
taae: type:00000647:  ereport(ERROR, 
taae: type:00000648:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
taae: type:00000649:  errmsg("Type is not associated with a record"))); 
aaaaa GP_IGNORE: uaad: udt - ./pl/pljava/src/C/pljava/type/UDT.c
uaad: udt:00000113:  ereport(ERROR, ( 
uaad: udt:00000114:  errcode(ERRCODE_CANNOT_COERCE), 
uaad: udt:00000115:  errmsg("UDT for Oid %d produced image with incorrect size. Expected %d, was %d", 
uaad: udt:00000116:  Type_getOid((Type)self), dataLen, buffer.len))); 
uaad: udt:00000167:  ereport(ERROR, ( 
uaad: udt:00000168:  errcode(ERRCODE_CANNOT_COERCE), 
uaad: udt:00000169:  errmsg("UDT with Oid %d is not scalar", Type_getOid((Type)udt)))); 
uaad: udt:00000191:  ereport(ERROR, ( 
uaad: udt:00000192:  errcode(ERRCODE_CANNOT_COERCE), 
uaad: udt:00000193:  errmsg("UDT with Oid %d is not scalar", Type_getOid((Type)udt)))); 
uaad: udt:00000219:  ereport(ERROR, ( 
uaad: udt:00000220:  errcode(ERRCODE_CANNOT_COERCE), 
uaad: udt:00000221:  errmsg("UDT with Oid %d is not scalar", Type_getOid((Type)udt)))); 
uaad: udt:00000241:  ereport(ERROR, ( 
uaad: udt:00000242:  errcode(ERRCODE_CANNOT_COERCE), 
uaad: udt:00000243:  errmsg("UDT with Oid %d is not scalar", Type_getOid((Type)udt)))); 
uaad: udt:00000285:  ereport(ERROR, ( 
uaad: udt:00000286:  errcode(ERRCODE_CANNOT_COERCE), 
uaad: udt:00000287:  errmsg("Attempt to register UDT with Oid %d failed. Oid appoints a non UDT type", typeId))); 
aaaaa GP_IGNORE: paag: plperl - ./pl/plperl/plperl.c
paag: plperl:00000604:  elog(ERROR, 
paag: plperl:00000605:  "cannot allocate multiple Perl interpreters on this platform"); 
paag: plperl:00000623:  ereport(ERROR, 
paag: plperl:00000624:  (errmsg("%s", strip_trailing_ws(sv2cstr(ERRSV))), 
paag: plperl:00000625:  errcontext("while executing PostgreSQL::InServer::SPI::bootstrap"))); 
paag: plperl:00000751:  elog(ERROR, "could not allocate Perl interpreter"); 
paag: plperl:00000785:  ereport(ERROR, 
paag: plperl:00000786:  (errmsg("%s", strip_trailing_ws(sv2cstr(ERRSV))), 
paag: plperl:00000787:  errcontext("while parsing Perl initialization"))); 
paag: plperl:00000790:  ereport(ERROR, 
paag: plperl:00000791:  (errmsg("%s", strip_trailing_ws(sv2cstr(ERRSV))), 
paag: plperl:00000792:  errcontext("while running Perl initialization"))); 
paag: plperl:00000894:  ereport(ERROR, 
paag: plperl:00000895:  (errmsg("%s", strip_trailing_ws(sv2cstr(ERRSV))), 
paag: plperl:00000896:  errcontext("while executing PLC_TRUSTED"))); 
paag: plperl:00000905:  ereport(ERROR, 
paag: plperl:00000906:  (errmsg("%s", strip_trailing_ws(sv2cstr(ERRSV))), 
paag: plperl:00000907:  errcontext("while executing utf8fix"))); 
paag: plperl:00000946:  ereport(ERROR, 
paag: plperl:00000947:  (errmsg("%s", strip_trailing_ws(sv2cstr(ERRSV))), 
paag: plperl:00000948:  errcontext("while executing plperl.on_plperl_init"))); 
paag: plperl:00000967:  ereport(ERROR, 
paag: plperl:00000968:  (errmsg("%s", strip_trailing_ws(sv2cstr(ERRSV))), 
paag: plperl:00000969:  errcontext("while executing plperl.on_plperlu_init"))); 
paag: plperl:00001013:  ereport(ERROR, 
paag: plperl:00001014:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paag: plperl:00001015:  errmsg("Perl hash contains nonexistent column \"%s\"", 
paag: plperl:00001016:  key))); 
paag: plperl:00001066:  elog(ERROR, "could not get array reference from PostgreSQL::InServer::ARRAY object"); 
paag: plperl:00001095:  ereport(ERROR, 
paag: plperl:00001096:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
paag: plperl:00001097:  errmsg("number of array dimensions (%d) exceeds the maximum allowed (%d)", 
paag: plperl:00001098:  cur_depth + 1, MAXDIM))); 
paag: plperl:00001109:  ereport(ERROR, 
paag: plperl:00001110:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
paag: plperl:00001111:  errmsg("multidimensional arrays must have array expressions with matching dimensions"))); 
paag: plperl:00001214:  ereport(ERROR, 
paag: plperl:00001215:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paag: plperl:00001216:  errmsg("PL/Perl function must return reference to hash or array"))); 
paag: plperl:00001249:  elog(ERROR, "lookup failed for type %s", fqtypename); 
paag: plperl:00001507:  ereport(ERROR, 
paag: plperl:00001508:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paag: plperl:00001509:  errmsg("$_TD->{new} does not exist"))); 
paag: plperl:00001511:  ereport(ERROR, 
paag: plperl:00001512:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paag: plperl:00001513:  errmsg("$_TD->{new} is not a hash reference"))); 
paag: plperl:00001530:  ereport(ERROR, 
paag: plperl:00001531:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paag: plperl:00001532:  errmsg("Perl hash contains nonexistent column \"%s\"", 
paag: plperl:00001533:  key))); 
paag: plperl:00001558:  elog(ERROR, "SPI_modifytuple failed: %s", 
paag: plperl:00001559:  SPI_result_code_string(SPI_result)); 
paag: plperl:00001666:  elog(ERROR, "could not connect to SPI manager"); 
paag: plperl:00001673:  elog(ERROR, "could not create internal procedure for anonymous code block"); 
paag: plperl:00001680:  elog(ERROR, "SPI_finish() failed"); 
paag: plperl:00001728:  elog(ERROR, "cache lookup failed for function %u", funcoid); 
paag: plperl:00001743:  ereport(ERROR, 
paag: plperl:00001744:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paag: plperl:00001745:  errmsg("PL/Perl functions cannot return type %s", 
paag: plperl:00001746:  format_type_be(proc->prorettype)))); 
paag: plperl:00001756:  ereport(ERROR, 
paag: plperl:00001757:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paag: plperl:00001758:  errmsg("PL/Perl functions cannot accept type %s", 
paag: plperl:00001759:  format_type_be(argtypes[i])))); 
paag: plperl:00001868:  ereport(ERROR, 
paag: plperl:00001869:  (errcode(ERRCODE_SYNTAX_ERROR), 
paag: plperl:00001870:  errmsg("creation of Perl function failed"), 
paag: plperl:00001871:  errdetail("%s", strip_trailing_ws(SvPV(ERRSV, PL_na))), 
paag: plperl:00001872:  errOmitLocation(true))); 
paag: plperl:00001875:  ereport(ERROR, 
paag: plperl:00001876:  (errmsg("didn't get a CODE reference from compiling function \"%s\"", 
paag: plperl:00001877:  prodesc->proname))); 
paag: plperl:00001956:  elog(ERROR, "didn't get a return item from function"); 
paag: plperl:00001966:  ereport(ERROR, 
paag: plperl:00001967:  (errmsg("Perl function \"%s\" failed", desc->proname), 
paag: plperl:00001968:  errdetail("%s", strip_trailing_ws(SvPV(ERRSV, PL_na))))); 
paag: plperl:00002016:  elog(ERROR, "didn't get a return item from trigger function"); 
paag: plperl:00002026:  ereport(ERROR, 
paag: plperl:00002027:  (errmsg("Perl trigger function \"%s\" failed", desc->proname), 
paag: plperl:00002028:  errdetail("%s", strip_trailing_ws(SvPV(ERRSV, PL_na))))); 
paag: plperl:00002059:  elog(ERROR, "could not connect to SPI manager"); 
paag: plperl:00002077:  ereport(ERROR, 
paag: plperl:00002078:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paag: plperl:00002079:  errmsg("Unsupported Perl function \"%s\"", 
paag: plperl:00002080:  prodesc->proname), 
paag: plperl:00002081:  errdetail("set-valued function called in context that " 
paag: plperl:00002082:  "cannot accept a set"))); 
paag: plperl:00002084:  ereport(ERROR, 
paag: plperl:00002085:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paag: plperl:00002086:  errmsg("Unsupported Perl function \"%s\"", 
paag: plperl:00002087:  prodesc->proname), 
paag: plperl:00002088:  errdetail("function returning record called in context " 
paag: plperl:00002089:  "that cannot accept type record"))); 
paag: plperl:00002115:  elog(ERROR, "SPI_finish() failed"); 
paag: plperl:00002142:  ereport(ERROR, 
paag: plperl:00002143:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paag: plperl:00002144:  errmsg("set-returning PL/Perl function must return " 
paag: plperl:00002145:  "reference to array or use return_next"))); 
paag: plperl:00002171:  ereport(ERROR, 
paag: plperl:00002172:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paag: plperl:00002173:  errmsg("composite-returning PL/Perl function " 
paag: plperl:00002174:  "must return reference to hash"), 
paag: plperl:00002175:  errOmitLocation(true))); 
paag: plperl:00002181:  ereport(ERROR, 
paag: plperl:00002182:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paag: plperl:00002183:  errmsg("function returning record called in context " 
paag: plperl:00002184:  "that cannot accept type record"), 
paag: plperl:00002185:  errOmitLocation(true))); 
paag: plperl:00002232:  elog(ERROR, "could not connect to SPI manager"); 
paag: plperl:00002257:  elog(ERROR, "SPI_finish() failed"); 
paag: plperl:00002296:  ereport(WARNING, 
paag: plperl:00002297:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
paag: plperl:00002298:  errmsg("ignoring modified row in DELETE trigger"))); 
paag: plperl:00002304:  ereport(ERROR, 
paag: plperl:00002305:  (errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED), 
paag: plperl:00002306:  errmsg("result of PL/Perl trigger function must be undef, " 
paag: plperl:00002307:  "\"SKIP\", or \"MODIFY\""))); 
paag: plperl:00002378:  elog(ERROR, "cache lookup failed for function %u", fn_oid); 
paag: plperl:00002430:  ereport(ERROR, 
paag: plperl:00002431:  (errcode(ERRCODE_OUT_OF_MEMORY), 
paag: plperl:00002432:  errmsg("out of memory"))); 
paag: plperl:00002436:  ereport(ERROR, 
paag: plperl:00002437:  (errcode(ERRCODE_OUT_OF_MEMORY), 
paag: plperl:00002438:  errmsg("out of memory"))); 
paag: plperl:00002455:  elog(ERROR, "cache lookup failed for language %u", 
paag: plperl:00002456:  procStruct->prolang); 
paag: plperl:00002475:  elog(ERROR, "cache lookup failed for type %u", 
paag: plperl:00002476:  procStruct->prorettype); 
paag: plperl:00002490:  ereport(ERROR, 
paag: plperl:00002491:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paag: plperl:00002492:  errmsg("trigger functions can only be called " 
paag: plperl:00002493:  "as triggers"))); 
paag: plperl:00002499:  ereport(ERROR, 
paag: plperl:00002500:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paag: plperl:00002501:  errmsg("PL/Perl functions cannot return type %s", 
paag: plperl:00002502:  format_type_be(procStruct->prorettype)))); 
paag: plperl:00002535:  elog(ERROR, "cache lookup failed for type %u", 
paag: plperl:00002536:  procStruct->proargtypes.values[i]); 
paag: plperl:00002546:  ereport(ERROR, 
paag: plperl:00002547:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paag: plperl:00002548:  errmsg("PL/Perl functions cannot accept type %s", 
paag: plperl:00002549:  format_type_be(procStruct->proargtypes.values[i])))); 
paag: plperl:00002580:  elog(ERROR, "null prosrc"); 
paag: plperl:00002600:  elog(ERROR, "could not create PL/Perl internal procedure"); 
paag: plperl:00002861:  ereport(ERROR, 
paag: plperl:00002862:  (errcode(ERRCODE_SYNTAX_ERROR), 
paag: plperl:00002863:  errmsg("cannot use return_next in a non-SETOF function"))); 
paag: plperl:00002867:  ereport(ERROR, 
paag: plperl:00002868:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paag: plperl:00002869:  errmsg("SETOF-composite-returning PL/Perl function " 
paag: plperl:00002870:  "must call return_next with reference to hash"))); 
paag: plperl:00002989:  elog(ERROR, "SPI_prepare() failed:%s", 
paag: plperl:00002990:  SPI_result_code_string(SPI_result)); 
paag: plperl:00002995:  elog(ERROR, "SPI_cursor_open() failed:%s", 
paag: plperl:00002996:  SPI_result_code_string(SPI_result)); 
paag: plperl:00003165:  ereport(ERROR, 
paag: plperl:00003166:  (errcode(ERRCODE_OUT_OF_MEMORY), 
paag: plperl:00003167:  errmsg("out of memory"))); 
paag: plperl:00003179:  ereport(ERROR, 
paag: plperl:00003180:  (errcode(ERRCODE_OUT_OF_MEMORY), 
paag: plperl:00003181:  errmsg("out of memory"))); 
paag: plperl:00003216:  elog(ERROR, "SPI_prepare() failed:%s", 
paag: plperl:00003217:  SPI_result_code_string(SPI_result)); 
paag: plperl:00003225:  elog(ERROR, "SPI_saveplan() failed: %s", 
paag: plperl:00003226:  SPI_result_code_string(SPI_result)); 
paag: plperl:00003327:  elog(ERROR, "spi_exec_prepared: Invalid prepared query passed"); 
paag: plperl:00003332:  elog(ERROR, "spi_exec_prepared: panic - plperl query_hash value vanished"); 
paag: plperl:00003335:  elog(ERROR, "spi_exec_prepared: expected %d argument(s), %d passed", 
paag: plperl:00003336:  qdesc->nargs, argc); 
paag: plperl:00003462:  elog(ERROR, "spi_exec_prepared: Invalid prepared query passed"); 
paag: plperl:00003467:  elog(ERROR, "spi_query_prepared: panic - plperl query_hash value vanished"); 
paag: plperl:00003470:  elog(ERROR, "spi_query_prepared: expected %d argument(s), %d passed", 
paag: plperl:00003471:  qdesc->nargs, argc); 
paag: plperl:00003510:  elog(ERROR, "SPI_cursor_open() failed:%s", 
paag: plperl:00003511:  SPI_result_code_string(SPI_result)); 
paag: plperl:00003570:  elog(ERROR, "spi_exec_prepared: Invalid prepared query passed"); 
paag: plperl:00003575:  elog(ERROR, "spi_exec_freeplan: panic - plperl query_hash value vanished"); 
aaaaa GP_IGNORE: paah: plxcomp - ./pl/plpgsql/src/pl_comp.c
paah: plxcomp:00000144:  elog(ERROR, "cache lookup failed for function %u", funcOid); 
paah: plxcomp:00000293:  elog(ERROR, "null prosrc"); 
paah: plxcomp:00000413:  ereport(ERROR, 
paah: plxcomp:00000414:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxcomp:00000415:  errmsg("plpgsql functions cannot take type %s", 
paah: plxcomp:00000416:  format_type_be(argtypeid)))); 
paah: plxcomp:00000457:  ereport(ERROR, 
paah: plxcomp:00000458:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxcomp:00000459:  errmsg("plpgsql functions do not support argmode '%c'", 
paah: plxcomp:00000460:  argmode))); 
paah: plxcomp:00000513:  ereport(ERROR, 
paah: plxcomp:00000514:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxcomp:00000515:  errmsg("could not determine actual return type " 
paah: plxcomp:00000516:  "for polymorphic function \"%s\"", 
paah: plxcomp:00000517:  plpgsql_error_funcname))); 
paah: plxcomp:00000534:  elog(ERROR, "cache lookup failed for type %u", rettypeid); 
paah: plxcomp:00000545:  ereport(ERROR, 
paah: plxcomp:00000546:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxcomp:00000547:  errmsg("trigger functions may only be called as triggers"))); 
paah: plxcomp:00000549:  ereport(ERROR, 
paah: plxcomp:00000550:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxcomp:00000551:  errmsg("plpgsql functions cannot return type %s", 
paah: plxcomp:00000552:  format_type_be(rettypeid)))); 
paah: plxcomp:00000591:  ereport(ERROR, 
paah: plxcomp:00000592:  (errcode(ERRCODE_INVALID_FUNCTION_DEFINITION), 
paah: plxcomp:00000593:  errmsg("trigger functions cannot have declared arguments"), 
paah: plxcomp:00000594:  errhint("You probably want to use TG_NARGS and TG_ARGV instead."))); 
paah: plxcomp:00000677:  elog(ERROR, "unrecognized function typecode: %u", functype); 
paah: plxcomp:00000697:  elog(ERROR, "plpgsql parser returned %d", parse_rc); 
paah: plxcomp:00000985:  ereport(ERROR, 
paah: plxcomp:00000986:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paah: plxcomp:00000987:  errmsg("row \"%s\" has no field \"%s\"", 
paah: plxcomp:00000988:  cp[0], cp[1]))); 
paah: plxcomp:00001096:  ereport(ERROR, 
paah: plxcomp:00001097:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paah: plxcomp:00001098:  errmsg("row \"%s.%s\" has no field \"%s\"", 
paah: plxcomp:00001099:  cp[0], cp[1], cp[2]))); 
paah: plxcomp:00001295:  elog(ERROR, "cache lookup failed for type %u", attrStruct->atttypid); 
paah: plxcomp:00001401:  elog(ERROR, "cache lookup failed for type %u", attrStruct->atttypid); 
paah: plxcomp:00001447:  ereport(ERROR, 
paah: plxcomp:00001448:  (errcode(ERRCODE_UNDEFINED_TABLE), 
paah: plxcomp:00001449:  errmsg("relation \"%s\" does not exist", cp[0]), 
paah: plxcomp:00001450:  errOmitLocation(true))); 
paah: plxcomp:00001495:  ereport(ERROR, 
paah: plxcomp:00001496:  (errcode(ERRCODE_UNDEFINED_TABLE), 
paah: plxcomp:00001497:  errmsg("relation \"%s\" does not exist", cp), 
paah: plxcomp:00001498:  errOmitLocation(true))); 
paah: plxcomp:00001590:  ereport(ERROR, 
paah: plxcomp:00001591:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxcomp:00001592:  errmsg("variable \"%s\" has pseudo-type %s", 
paah: plxcomp:00001593:  refname, format_type_be(dtype->typoid)))); 
paah: plxcomp:00001597:  elog(ERROR, "unrecognized ttype: %d", dtype->ttype); 
paah: plxcomp:00001629:  ereport(ERROR, 
paah: plxcomp:00001630:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paah: plxcomp:00001631:  errmsg("relation \"%s\" is not a table", relname))); 
paah: plxcomp:00001735:  elog(ERROR, "unrecognized dtype: %d", var->dtype); 
paah: plxcomp:00001783:  elog(ERROR, "cache lookup failed for type %u", typeOid); 
paah: plxcomp:00001802:  ereport(ERROR, 
paah: plxcomp:00001803:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paah: plxcomp:00001804:  errmsg("type \"%s\" is only a shell", 
paah: plxcomp:00001805:  NameStr(typeStruct->typname)))); 
paah: plxcomp:00001828:  elog(ERROR, "unrecognized typtype: %d", 
paah: plxcomp:00001829:  (int) typeStruct->typtype); 
paah: plxcomp:00001888:  ereport(ERROR, 
paah: plxcomp:00001889:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paah: plxcomp:00001890:  errmsg("unrecognized exception condition \"%s\"", 
paah: plxcomp:00001891:  condname))); 
paah: plxcomp:00002043:  ereport(ERROR, 
paah: plxcomp:00002044:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxcomp:00002045:  errmsg("could not determine actual argument " 
paah: plxcomp:00002046:  "type for polymorphic function \"%s\"", 
paah: plxcomp:00002047:  proname))); 
paah: plxcomp:00002143:  elog(WARNING, "trying to insert a function that already exists"); 
paah: plxcomp:00002164:  elog(WARNING, "trying to delete function that does not exist"); 
aaaaa GP_IGNORE: paah: plxexec - ./pl/plpgsql/src/pl_exec.c
paah: plxexec:00000269:  elog(ERROR, "unrecognized dtype: %d", func->datums[i]->dtype); 
paah: plxexec:00000302:  ereport(ERROR, 
paah: plxexec:00000303:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00000304:  errmsg("CONTINUE cannot be used outside a loop"))); 
paah: plxexec:00000306:  ereport(ERROR, 
paah: plxexec:00000307:  (errcode(ERRCODE_S_R_E_FUNCTION_EXECUTED_NO_RETURN_STATEMENT), 
paah: plxexec:00000308:  errmsg("control reached end of function without RETURN"))); 
paah: plxexec:00000326:  ereport(ERROR, 
paah: plxexec:00000327:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxexec:00000328:  errmsg("set-valued function called in context that cannot accept a set"))); 
paah: plxexec:00000364:  ereport(ERROR, 
paah: plxexec:00000365:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00000366:  errmsg("returned record type does not match expected record type"))); 
paah: plxexec:00000379:  elog(ERROR, "return type must be a row type"); 
paah: plxexec:00000383:  elog(ERROR, "return type must be a row type"); 
paah: plxexec:00000527:  elog(ERROR, "unrecognized trigger action: not INSERT, DELETE, or UPDATE"); 
paah: plxexec:00000541:  elog(ERROR, "unrecognized trigger action: not INSERT, DELETE, or UPDATE"); 
paah: plxexec:00000557:  elog(ERROR, "unrecognized trigger execution time: not BEFORE or AFTER"); 
paah: plxexec:00000567:  elog(ERROR, "unrecognized trigger event type: not ROW or STATEMENT"); 
paah: plxexec:00000647:  ereport(ERROR, 
paah: plxexec:00000648:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00000649:  errmsg("CONTINUE cannot be used outside a loop"))); 
paah: plxexec:00000651:  ereport(ERROR, 
paah: plxexec:00000652:  (errcode(ERRCODE_S_R_E_FUNCTION_EXECUTED_NO_RETURN_STATEMENT), 
paah: plxexec:00000653:  errmsg("control reached end of trigger procedure without RETURN"))); 
paah: plxexec:00000660:  ereport(ERROR, 
paah: plxexec:00000661:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00000662:  errmsg("trigger procedure cannot return a set"))); 
paah: plxexec:00000680:  ereport(ERROR, 
paah: plxexec:00000681:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00000682:  errmsg("returned tuple structure does not match table of trigger event"))); 
paah: plxexec:00000828:  elog(ERROR, "unrecognized dtype: %d", datum->dtype); 
paah: plxexec:00000919:  ereport(ERROR, 
paah: plxexec:00000920:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
paah: plxexec:00000921:  errmsg("variable \"%s\" declared NOT NULL cannot default to NULL", 
paah: plxexec:00000922:  var->refname))); 
paah: plxexec:00000953:  elog(ERROR, "unrecognized dtype: %d", 
paah: plxexec:00000954:  estate->datums[n]->dtype); 
paah: plxexec:00001139:  elog(ERROR, "unrecognized rc: %d", rc); 
paah: plxexec:00001280:  elog(ERROR, "unrecognized cmdtype: %d", stmt->cmd_type); 
paah: plxexec:00001367:  elog(ERROR, "unrecognized attribute request: %d", 
paah: plxexec:00001368:  diag_item->kind); 
paah: plxexec:00001449:  elog(ERROR, "unrecognized rc: %d", rc); 
paah: plxexec:00001512:  elog(ERROR, "unrecognized rc: %d", rc); 
paah: plxexec:00001549:  ereport(ERROR, 
paah: plxexec:00001550:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
paah: plxexec:00001551:  errmsg("lower bound of FOR loop cannot be NULL"))); 
paah: plxexec:00001565:  ereport(ERROR, 
paah: plxexec:00001566:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
paah: plxexec:00001567:  errmsg("upper bound of FOR loop cannot be NULL"))); 
paah: plxexec:00001580:  ereport(ERROR, 
paah: plxexec:00001581:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
paah: plxexec:00001582:  errmsg("by value of FOR loop cannot be NULL"))); 
paah: plxexec:00001705:  elog(ERROR, "unsupported target"); 
paah: plxexec:00001921:  elog(ERROR, "row not compatible with its own tupdesc"); 
paah: plxexec:00001928:  elog(ERROR, "unrecognized dtype: %d", retvar->dtype); 
paah: plxexec:00001989:  ereport(ERROR, 
paah: plxexec:00001990:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00001991:  errmsg("cannot use RETURN NEXT in a non-SETOF function"))); 
paah: plxexec:00002015:  ereport(ERROR, 
paah: plxexec:00002016:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00002017:  errmsg("wrong result type supplied in RETURN NEXT"))); 
paah: plxexec:00002037:  ereport(ERROR, 
paah: plxexec:00002038:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paah: plxexec:00002039:  errmsg("record \"%s\" is not assigned yet", 
paah: plxexec:00002040:  rec->refname), 
paah: plxexec:00002041:  errdetail("The tuple structure of a not-yet-assigned record is indeterminate."))); 
paah: plxexec:00002043:  ereport(ERROR, 
paah: plxexec:00002044:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00002045:  errmsg("wrong record type supplied in RETURN NEXT"))); 
paah: plxexec:00002056:  ereport(ERROR, 
paah: plxexec:00002057:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00002058:  errmsg("wrong record type supplied in RETURN NEXT"))); 
paah: plxexec:00002064:  elog(ERROR, "unrecognized dtype: %d", retvar->dtype); 
paah: plxexec:00002076:  ereport(ERROR, 
paah: plxexec:00002077:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00002078:  errmsg("wrong result type supplied in RETURN NEXT"))); 
paah: plxexec:00002100:  ereport(ERROR, 
paah: plxexec:00002101:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00002102:  errmsg("RETURN NEXT must have a parameter"))); 
paah: plxexec:00002133:  ereport(ERROR, 
paah: plxexec:00002134:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxexec:00002135:  errmsg("set-valued function called in context that cannot accept a set"))); 
paah: plxexec:00002181:  ereport(ERROR, 
paah: plxexec:00002182:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00002183:  errmsg("too few parameters specified for RAISE"))); 
paah: plxexec:00002208:  ereport(ERROR, 
paah: plxexec:00002209:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00002210:  errmsg("too many parameters specified for RAISE"))); 
paah: plxexec:00002352:  ereport(ERROR, 
paah: plxexec:00002353:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxexec:00002354:  errmsg("cannot COPY to/from client in PL/pgSQL"))); 
paah: plxexec:00002356:  ereport(ERROR, 
paah: plxexec:00002357:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxexec:00002358:  errmsg("cannot manipulate cursors directly in PL/pgSQL"), 
paah: plxexec:00002359:  errhint("Use PL/pgSQL's cursor features instead."))); 
paah: plxexec:00002361:  ereport(ERROR, 
paah: plxexec:00002362:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxexec:00002363:  errmsg("cannot begin/end transactions in PL/pgSQL"), 
paah: plxexec:00002364:  errhint("Use a BEGIN block with an EXCEPTION clause instead."))); 
paah: plxexec:00002366:  elog(ERROR, "SPI_prepare failed for \"%s\": %s", 
paah: plxexec:00002367:  expr->query, SPI_result_code_string(SPI_result)); 
paah: plxexec:00002531:  ereport(ERROR, 
paah: plxexec:00002532:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxexec:00002533:  errmsg("cannot COPY to/from client in PL/pgSQL"))); 
paah: plxexec:00002537:  ereport(ERROR, 
paah: plxexec:00002538:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxexec:00002539:  errmsg("cannot begin/end transactions in PL/pgSQL"), 
paah: plxexec:00002540:  errhint("Use a BEGIN block with an EXCEPTION clause instead."))); 
paah: plxexec:00002544:  elog(ERROR, "SPI_execute_plan failed executing query \"%s\": %s", 
paah: plxexec:00002545:  expr->query, SPI_result_code_string(rc)); 
paah: plxexec:00002562:  ereport(ERROR, 
paah: plxexec:00002563:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00002564:  errmsg("INTO used with a command that cannot return data"))); 
paah: plxexec:00002572:  elog(ERROR, "unsupported target"); 
paah: plxexec:00002582:  ereport(ERROR, 
paah: plxexec:00002583:  (errcode(ERRCODE_NO_DATA_FOUND), 
paah: plxexec:00002584:  errmsg("query returned no rows"))); 
paah: plxexec:00002591:  ereport(ERROR, 
paah: plxexec:00002592:  (errcode(ERRCODE_TOO_MANY_ROWS), 
paah: plxexec:00002593:  errmsg("query returned more than one row"))); 
paah: plxexec:00002605:  ereport(ERROR, 
paah: plxexec:00002606:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00002607:  errmsg("query has no destination for result data"), 
paah: plxexec:00002608:  (rc == SPI_OK_SELECT) ? errhint("If you want to discard the results of a SELECT, use PERFORM instead.") : 0)); 
paah: plxexec:00002639:  ereport(ERROR, 
paah: plxexec:00002640:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
paah: plxexec:00002641:  errmsg("cannot EXECUTE a null querystring"))); 
paah: plxexec:00002691:  ereport(ERROR, 
paah: plxexec:00002692:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxexec:00002693:  errmsg("EXECUTE of SELECT ... INTO is not implemented yet"))); 
paah: plxexec:00002699:  ereport(ERROR, 
paah: plxexec:00002700:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxexec:00002701:  errmsg("cannot COPY to/from client in PL/pgSQL"))); 
paah: plxexec:00002703:  ereport(ERROR, 
paah: plxexec:00002704:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxexec:00002705:  errmsg("cannot manipulate cursors directly in PL/pgSQL"), 
paah: plxexec:00002706:  errhint("Use PL/pgSQL's cursor features instead."))); 
paah: plxexec:00002708:  ereport(ERROR, 
paah: plxexec:00002709:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxexec:00002710:  errmsg("cannot begin/end transactions in PL/pgSQL"), 
paah: plxexec:00002711:  errhint("Use a BEGIN block with an EXCEPTION clause instead."))); 
paah: plxexec:00002714:  elog(ERROR, "SPI_execute failed executing query \"%s\": %s", 
paah: plxexec:00002715:  querystr, SPI_result_code_string(exec_res)); 
paah: plxexec:00002733:  ereport(ERROR, 
paah: plxexec:00002734:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00002735:  errmsg("INTO used with a command that cannot return data"))); 
paah: plxexec:00002743:  elog(ERROR, "unsupported target"); 
paah: plxexec:00002753:  ereport(ERROR, 
paah: plxexec:00002754:  (errcode(ERRCODE_NO_DATA_FOUND), 
paah: plxexec:00002755:  errmsg("query returned no rows"))); 
paah: plxexec:00002762:  ereport(ERROR, 
paah: plxexec:00002763:  (errcode(ERRCODE_TOO_MANY_ROWS), 
paah: plxexec:00002764:  errmsg("query returned more than one row"))); 
paah: plxexec:00002816:  elog(ERROR, "unsupported target"); 
paah: plxexec:00002824:  ereport(ERROR, 
paah: plxexec:00002825:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
paah: plxexec:00002826:  errmsg("cannot EXECUTE a null querystring"))); 
paah: plxexec:00002838:  elog(ERROR, "SPI_prepare failed for \"%s\": %s", 
paah: plxexec:00002839:  querystr, SPI_result_code_string(SPI_result)); 
paah: plxexec:00002843:  elog(ERROR, "could not open implicit cursor for query \"%s\": %s", 
paah: plxexec:00002844:  querystr, SPI_result_code_string(SPI_result)); 
paah: plxexec:00002997:  ereport(ERROR, 
paah: plxexec:00002998:  (errcode(ERRCODE_DUPLICATE_CURSOR), 
paah: plxexec:00002999:  errmsg("cursor \"%s\" already in use", curname))); 
paah: plxexec:00003045:  ereport(ERROR, 
paah: plxexec:00003046:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
paah: plxexec:00003047:  errmsg("cannot EXECUTE a null querystring"))); 
paah: plxexec:00003060:  elog(ERROR, "SPI_prepare failed for \"%s\": %s", 
paah: plxexec:00003061:  querystr, SPI_result_code_string(SPI_result)); 
paah: plxexec:00003065:  elog(ERROR, "could not open cursor for query \"%s\": %s", 
paah: plxexec:00003066:  querystr, SPI_result_code_string(SPI_result)); 
paah: plxexec:00003101:  ereport(ERROR, 
paah: plxexec:00003102:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00003103:  errmsg("arguments given for cursor without arguments"))); 
paah: plxexec:00003115:  elog(ERROR, "open cursor failed during argument processing"); 
paah: plxexec:00003120:  ereport(ERROR, 
paah: plxexec:00003121:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00003122:  errmsg("arguments required for cursor"))); 
paah: plxexec:00003166:  elog(ERROR, "could not open cursor: %s", 
paah: plxexec:00003167:  SPI_result_code_string(SPI_result)); 
paah: plxexec:00003208:  ereport(ERROR, 
paah: plxexec:00003209:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
paah: plxexec:00003210:  errmsg("cursor variable \"%s\" is NULL", curvar->refname))); 
paah: plxexec:00003215:  ereport(ERROR, 
paah: plxexec:00003216:  (errcode(ERRCODE_UNDEFINED_CURSOR), 
paah: plxexec:00003217:  errmsg("cursor \"%s\" does not exist", curname))); 
paah: plxexec:00003229:  elog(ERROR, "unsupported target"); 
paah: plxexec:00003277:  ereport(ERROR, 
paah: plxexec:00003278:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
paah: plxexec:00003279:  errmsg("cursor variable \"%s\" is NULL", curvar->refname))); 
paah: plxexec:00003284:  ereport(ERROR, 
paah: plxexec:00003285:  (errcode(ERRCODE_UNDEFINED_CURSOR), 
paah: plxexec:00003286:  errmsg("cursor \"%s\" does not exist", curname))); 
paah: plxexec:00003344:  ereport(ERROR, 
paah: plxexec:00003345:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
paah: plxexec:00003346:  errmsg("null value cannot be assigned to variable \"%s\" declared NOT NULL", 
paah: plxexec:00003347:  var->refname))); 
paah: plxexec:00003390:  ereport(ERROR, 
paah: plxexec:00003391:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00003392:  errmsg("cannot assign non-composite value to a row variable"))); 
paah: plxexec:00003432:  ereport(ERROR, 
paah: plxexec:00003433:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00003434:  errmsg("cannot assign non-composite value to a record variable"))); 
paah: plxexec:00003490:  ereport(ERROR, 
paah: plxexec:00003491:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paah: plxexec:00003492:  errmsg("record \"%s\" is not assigned yet", 
paah: plxexec:00003493:  rec->refname), 
paah: plxexec:00003494:  errdetail("The tuple structure of a not-yet-assigned record is indeterminate."))); 
paah: plxexec:00003502:  ereport(ERROR, 
paah: plxexec:00003503:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paah: plxexec:00003504:  errmsg("record \"%s\" has no field \"%s\"", 
paah: plxexec:00003505:  rec->refname, recfield->fieldname))); 
paah: plxexec:00003603:  ereport(ERROR, 
paah: plxexec:00003604:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
paah: plxexec:00003605:  errmsg("number of array dimensions exceeds the maximum allowed, %d", 
paah: plxexec:00003606:  MAXDIM))); 
paah: plxexec:00003617:  ereport(ERROR, 
paah: plxexec:00003618:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00003619:  errmsg("subscripted object is not an array"))); 
paah: plxexec:00003654:  ereport(ERROR, 
paah: plxexec:00003655:  (errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED), 
paah: plxexec:00003656:  errmsg("array subscript in assignment must not be NULL"))); 
paah: plxexec:00003726:  elog(ERROR, "unrecognized dtype: %d", target->dtype); 
paah: plxexec:00003764:  ereport(ERROR, 
paah: plxexec:00003765:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00003766:  errmsg("type of \"%s\" does not match that when preparing the plan", 
paah: plxexec:00003767:  var->refname))); 
paah: plxexec:00003777:  elog(ERROR, "row variable has no tupdesc"); 
paah: plxexec:00003783:  elog(ERROR, "row not compatible with its own tupdesc"); 
paah: plxexec:00003789:  ereport(ERROR, 
paah: plxexec:00003790:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00003791:  errmsg("type of \"%s\" does not match that when preparing the plan", 
paah: plxexec:00003792:  row->refname))); 
paah: plxexec:00003802:  ereport(ERROR, 
paah: plxexec:00003803:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paah: plxexec:00003804:  errmsg("record \"%s\" is not assigned yet", 
paah: plxexec:00003805:  rec->refname), 
paah: plxexec:00003806:  errdetail("The tuple structure of a not-yet-assigned record is indeterminate."))); 
paah: plxexec:00003826:  ereport(ERROR, 
paah: plxexec:00003827:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00003828:  errmsg("type of \"%s\" does not match that when preparing the plan", 
paah: plxexec:00003829:  rec->refname))); 
paah: plxexec:00003841:  ereport(ERROR, 
paah: plxexec:00003842:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paah: plxexec:00003843:  errmsg("record \"%s\" is not assigned yet", 
paah: plxexec:00003844:  rec->refname), 
paah: plxexec:00003845:  errdetail("The tuple structure of a not-yet-assigned record is indeterminate."))); 
paah: plxexec:00003848:  ereport(ERROR, 
paah: plxexec:00003849:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paah: plxexec:00003850:  errmsg("record \"%s\" has no field \"%s\"", 
paah: plxexec:00003851:  rec->refname, recfield->fieldname))); 
paah: plxexec:00003855:  ereport(ERROR, 
paah: plxexec:00003856:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00003857:  errmsg("type of \"%s.%s\" does not match that when preparing the plan", 
paah: plxexec:00003858:  rec->refname, recfield->fieldname))); 
paah: plxexec:00003880:  ereport(ERROR, 
paah: plxexec:00003881:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxexec:00003882:  errmsg("type of tgargv[%d] does not match that when preparing the plan", 
paah: plxexec:00003883:  tgargno))); 
paah: plxexec:00003888:  elog(ERROR, "unrecognized dtype: %d", datum->dtype); 
paah: plxexec:00003970:  ereport(ERROR, 
paah: plxexec:00003971:  (errcode(ERRCODE_WRONG_OBJECT_TYPE), 
paah: plxexec:00003972:  errmsg("query \"%s\" did not return data", expr->query))); 
paah: plxexec:00003987:  ereport(ERROR, 
paah: plxexec:00003988:  (errcode(ERRCODE_CARDINALITY_VIOLATION), 
paah: plxexec:00003989:  errmsg("query \"%s\" returned more than one row", 
paah: plxexec:00003990:  expr->query))); 
paah: plxexec:00003992:  ereport(ERROR, 
paah: plxexec:00003993:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00003994:  errmsg("query \"%s\" returned %d columns", expr->query, 
paah: plxexec:00003995:  estate->eval_tuptable->tupdesc->natts))); 
paah: plxexec:00004059:  elog(ERROR, "could not open implicit cursor for query \"%s\": %s", 
paah: plxexec:00004060:  expr->query, SPI_result_code_string(SPI_result)); 
paah: plxexec:00004072:  ereport(ERROR, 
paah: plxexec:00004073:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxexec:00004074:  errmsg("query \"%s\" is not a SELECT", expr->query))); 
paah: plxexec:00004347:  elog(ERROR, "unsupported target"); 
paah: plxexec:00004383:  elog(ERROR, "dropped rowtype entry for non-dropped column"); 
aaaaa GP_IGNORE: paai: plxfuncs - ./pl/plpgsql/src/pl_funcs.c
paai: plxfuncs:00000320:  ereport(ERROR, 
paai: plxfuncs:00000321:  (errcode(ERRCODE_UNDEFINED_OBJECT), 
paai: plxfuncs:00000322:  errmsg("there is no variable \"%s\" in the current block", 
paai: plxfuncs:00000323:  oldname))); 
paai: plxfuncs:00000376:  ereport(ERROR, 
paai: plxfuncs:00000377:  (errcode(ERRCODE_SYNTAX_ERROR), 
paai: plxfuncs:00000378:  errmsg("unterminated \" in name: %s", sstart))); 
paai: plxfuncs:00000400:  ereport(ERROR, 
paai: plxfuncs:00000401:  (errcode(ERRCODE_SYNTAX_ERROR), 
paai: plxfuncs:00000402:  errmsg("qualified identifier cannot be used here: %s", 
paai: plxfuncs:00000403:  sstart))); 
paai: plxfuncs:00000411:  elog(ERROR, "expected dot between identifiers: %s", sstart); 
paai: plxfuncs:00000415:  elog(ERROR, "expected another identifier: %s", sstart); 
paai: plxfuncs:00000420:  elog(ERROR, "improperly qualified identifier: %s", 
paai: plxfuncs:00000421:  sstart); 
paai: plxfuncs:00000579:  elog(ERROR, "unrecognized cmd_type: %d", stmt->cmd_type); 
aaaaa GP_IGNORE: paah: plxgram - ./pl/plpgsql/src/pl_gram.c
paah: plxgram:00001933:  ereport(ERROR, 
paah: plxgram:00001934:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxgram:00001935:  errmsg("row or record variable cannot be CONSTANT"))); 
paah: plxgram:00001942:  ereport(ERROR, 
paah: plxgram:00001943:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxgram:00001944:  errmsg("row or record variable cannot be NOT NULL"))); 
paah: plxgram:00001951:  ereport(ERROR, 
paah: plxgram:00001952:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paah: plxgram:00001953:  errmsg("default value for row or record variable is not supported"))); 
paah: plxgram:00002114:  ereport(ERROR, 
paah: plxgram:00002115:  (errcode(ERRCODE_UNDEFINED_PARAMETER), 
paah: plxgram:00002116:  errmsg("function has no parameter \"%s\"", 
paah: plxgram:00002117:  name))); 
paah: plxgram:00002702:  ereport(ERROR, 
paah: plxgram:00002703:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00002704:  errmsg("integer FOR loop must have just one target variable"))); 
paah: plxgram:00002812:  ereport(ERROR, 
paah: plxgram:00002813:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00002814:  errmsg("\"%s\" is not a scalar variable", 
paah: plxgram:00002815:  (yyval.forvariable).name))); 
paah: plxgram:00003063:  ereport(ERROR, 
paah: plxgram:00003064:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00003065:  errmsg("syntax error at \"%s\"", 
paah: plxgram:00003066:  yytext), 
paah: plxgram:00003067:  errdetail("Expected FOR to open a reference cursor."))); 
paah: plxgram:00003091:  ereport(ERROR, 
paah: plxgram:00003092:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00003093:  errmsg("cursor \"%s\" has arguments", 
paah: plxgram:00003094:  (yyvsp[(3) - (3)].var)->refname))); 
paah: plxgram:00003116:  elog(ERROR, "expected \"SELECT (\", got \"%s\"", 
paah: plxgram:00003117:  new->argquery->query); 
paah: plxgram:00003126:  elog(ERROR, "expected \"SELECT (\", got \"%s\"", 
paah: plxgram:00003127:  new->argquery->query); 
paah: plxgram:00003143:  ereport(ERROR, 
paah: plxgram:00003144:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00003145:  errmsg("cursor \"%s\" has no arguments", 
paah: plxgram:00003146:  (yyvsp[(3) - (3)].var)->refname))); 
paah: plxgram:00003152:  ereport(ERROR, 
paah: plxgram:00003153:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00003154:  errmsg("syntax error at \"%s\"", 
paah: plxgram:00003155:  yytext))); 
paah: plxgram:00003202:  ereport(ERROR, 
paah: plxgram:00003203:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxgram:00003204:  errmsg("\"%s\" must be of type cursor or refcursor", 
paah: plxgram:00003205:  ((PLpgSQL_var *) yylval.scalar)->refname))); 
paah: plxgram:00003220:  ereport(ERROR, 
paah: plxgram:00003221:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxgram:00003222:  errmsg("\"%s\" must be of type refcursor", 
paah: plxgram:00003223:  ((PLpgSQL_var *) yylval.scalar)->refname))); 
paah: plxgram:00003653:  ereport(ERROR, 
paah: plxgram:00003654:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
paah: plxgram:00003655:  errmsg("too many variables specified in SQL statement"))); 
paah: plxgram:00003723:  ereport(ERROR, 
paah: plxgram:00003724:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00003725:  errmsg("mismatched parentheses"))); 
paah: plxgram:00003736:  ereport(ERROR, 
paah: plxgram:00003737:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00003738:  errmsg("mismatched parentheses"))); 
paah: plxgram:00003740:  ereport(ERROR, 
paah: plxgram:00003741:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00003742:  errmsg("missing \"%s\" at end of SQL expression", 
paah: plxgram:00003743:  expected))); 
paah: plxgram:00003745:  ereport(ERROR, 
paah: plxgram:00003746:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00003747:  errmsg("missing \"%s\" at end of SQL statement", 
paah: plxgram:00003748:  expected))); 
paah: plxgram:00003830:  ereport(ERROR, 
paah: plxgram:00003831:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00003832:  errmsg("mismatched parentheses"))); 
paah: plxgram:00003833:  ereport(ERROR, 
paah: plxgram:00003834:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00003835:  errmsg("incomplete datatype declaration"))); 
paah: plxgram:00003907:  ereport(ERROR, 
paah: plxgram:00003908:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00003909:  errmsg("unexpected end of function definition"))); 
paah: plxgram:00003917:  ereport(ERROR, 
paah: plxgram:00003918:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00003919:  errmsg("INTO specified more than once"))); 
paah: plxgram:00004126:  ereport(ERROR, 
paah: plxgram:00004127:  (errcode(ERRCODE_ERROR_IN_ASSIGNMENT), 
paah: plxgram:00004128:  errmsg("\"%s\" is declared CONSTANT", 
paah: plxgram:00004129:  ((PLpgSQL_var *) datum)->refname))); 
paah: plxgram:00004148:  elog(ERROR, "unrecognized dtype: %d", datum->dtype); 
paah: plxgram:00004193:  ereport(ERROR, 
paah: plxgram:00004194:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00004195:  errmsg("syntax error at \"%s\"", yytext), 
paah: plxgram:00004196:  errdetail("Expected record variable, row variable, " 
paah: plxgram:00004197:  "or list of scalar variables following INTO."))); 
paah: plxgram:00004228:  ereport(ERROR, 
paah: plxgram:00004229:  (errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED), 
paah: plxgram:00004230:  errmsg("too many INTO variables specified"))); 
paah: plxgram:00004244:  ereport(ERROR, 
paah: plxgram:00004245:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00004246:  errmsg("\"%s\" is not a scalar variable", 
paah: plxgram:00004247:  yytext))); 
paah: plxgram:00004379:  ereport(ERROR, 
paah: plxgram:00004380:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00004381:  errmsg("end label \"%s\" specified for unlabelled block", 
paah: plxgram:00004382:  end_label))); 
paah: plxgram:00004388:  ereport(ERROR, 
paah: plxgram:00004389:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxgram:00004390:  errmsg("end label \"%s\" differs from block's label \"%s\"", 
paah: plxgram:00004391:  end_label, start_label))); 
aaaaa GP_IGNORE: paba: plxhandler - ./pl/plpgsql/src/pl_handler.c
paba: plxhandler:00000077:  elog(ERROR, "SPI_connect failed: %s", SPI_result_code_string(rc)); 
paba: plxhandler:00000111:  elog(ERROR, "SPI_finish failed: %s", SPI_result_code_string(rc)); 
paba: plxhandler:00000144:  elog(ERROR, "cache lookup failed for function %u", funcoid); 
paba: plxhandler:00000161:  ereport(ERROR, 
paba: plxhandler:00000162:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paba: plxhandler:00000163:  errmsg("PL/pgSQL functions cannot return type %s", 
paba: plxhandler:00000164:  format_type_be(proc->prorettype)))); 
paba: plxhandler:00000177:  ereport(ERROR, 
paba: plxhandler:00000178:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paba: plxhandler:00000179:  errmsg("PL/pgSQL functions cannot accept type %s", 
paba: plxhandler:00000180:  format_type_be(argtypes[i])))); 
paba: plxhandler:00000196:  elog(ERROR, "SPI_connect failed: %s", SPI_result_code_string(rc)); 
paba: plxhandler:00000221:  elog(ERROR, "SPI_finish failed: %s", SPI_result_code_string(rc)); 
aaaaa GP_IGNORE: paah: plxscan - ./pl/plpgsql/src/pl_scan.c
paah: plxscan:00001161: #define fprintf(file, fmt, msg) ereport(ERROR, (errmsg_internal("%s", msg))) 
paah: plxscan:00001162:  
paah: plxscan:00001163: #define unify_version(a,b,c) ((a<<16)+(b<<8)+c) 
paah: plxscan:00001164: #if unify_version(YY_FLEX_MAJOR_VERSION,YY_FLEX_MINOR_VERSION,YY_FLEX_SUBMINOR_VERSION) < unify_version(2,5,35) 
paah: plxscan:00001165: int plpgsql_base_yyget_lineno (void); 
paah: plxscan:00001919:  ereport(ERROR, 
paah: plxscan:00001920:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxscan:00001921:  errmsg("unterminated quoted identifier"))); 
paah: plxscan:00001970:  ereport(ERROR, 
paah: plxscan:00001971:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxscan:00001972:  errmsg("unterminated comment"))); 
paah: plxscan:00002040:  ereport(ERROR, 
paah: plxscan:00002041:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxscan:00002042:  errmsg("unterminated string"))); 
paah: plxscan:00002096:  ereport(ERROR, 
paah: plxscan:00002097:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paah: plxscan:00002098:  errmsg("unterminated dollar-quoted string"))); 
paah: plxscan:00003107:  elog(ERROR, "cannot push back multiple tokens"); 
paah: plxscan:00003128:  ereport(ERROR, 
paah: plxscan:00003129:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxscan:00003130:  /* translator: %s is typically "syntax error" */ 
paah: plxscan:00003131:  errmsg("%s at end of input", message), 
paah: plxscan:00003132:  internalerrposition(cursorpos), 
paah: plxscan:00003133:  internalerrquery(scanstr))); 
paah: plxscan:00003137:  ereport(ERROR, 
paah: plxscan:00003138:  (errcode(ERRCODE_SYNTAX_ERROR), 
paah: plxscan:00003139:  /* translator: first %s is typically "syntax error" */ 
paah: plxscan:00003140:  errmsg("%s at or near \"%s\"", message, loc), 
paah: plxscan:00003141:  internalerrposition(cursorpos), 
paah: plxscan:00003142:  internalerrquery(scanstr))); 
aaaaa GP_IGNORE: paai: plpython - ./pl/plpython/plpython.c
paai: plpython:00000518:  elog(ERROR, "cache lookup failed for function %u", funcoid); 
paai: plpython:00000538:  elog(ERROR, "SPI_connect failed"); 
paai: plpython:00000637:  elog(ERROR, "SPI_finish failed"); 
paai: plpython:00000652:  ereport(ERROR, 
paai: plpython:00000653:  (errcode(ERRCODE_DATA_EXCEPTION), 
paai: plpython:00000654:  errmsg("unexpected return value from trigger procedure"), 
paai: plpython:00000655:  errdetail("Expected None or a string."))); 
paai: plpython:00000669:  ereport(WARNING, 
paai: plpython:00000670:  (errmsg("PL/Python trigger function returned \"MODIFY\" in a DELETE trigger -- ignored"))); 
paai: plpython:00000678:  ereport(ERROR, 
paai: plpython:00000679:  (errcode(ERRCODE_DATA_EXCEPTION), 
paai: plpython:00000680:  errmsg("unexpected return value from trigger procedure"), 
paai: plpython:00000681:  errdetail("Expected None, \"OK\", \"SKIP\", or \"MODIFY\"."))); 
paai: plpython:00000732:  ereport(ERROR, 
paai: plpython:00000733:  (errmsg("TD[\"new\"] deleted, cannot modify row"))); 
paai: plpython:00000735:  ereport(ERROR, 
paai: plpython:00000736:  (errmsg("TD[\"new\"] is not a dictionary"))); 
paai: plpython:00000759:  ereport(ERROR, 
paai: plpython:00000760:  (errmsg("TD[\"new\"] dictionary key at ordinal position %d is not a string", i))); 
paai: plpython:00000765:  ereport(ERROR, 
paai: plpython:00000766:  (errmsg("key \"%s\" found in TD[\"new\"] does not exist as a column in the triggering row", 
paai: plpython:00000767:  plattstr))); 
paai: plpython:00000772:  elog(FATAL, "Python interpreter is probably corrupted"); 
paai: plpython:00000809:  elog(ERROR, "SPI_modifytuple failed: error %d", SPI_result); 
paai: plpython:00000862:  PLy_elog(ERROR, "could not create new dictionary while building trigger arguments"); 
paai: plpython:00000893:  elog(ERROR, "unrecognized WHEN tg_event: %u", tdata->tg_event); 
paai: plpython:00000943:  elog(ERROR, "unrecognized OP tg_event: %u", tdata->tg_event); 
paai: plpython:00000968:  elog(ERROR, "unrecognized OP tg_event: %u", tdata->tg_event); 
paai: plpython:00000976:  elog(ERROR, "unrecognized LEVEL tg_event: %u", tdata->tg_event); 
paai: plpython:00001096:  ereport(ERROR, 
paai: plpython:00001097:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paai: plpython:00001098:  errmsg("unsupported set function return mode"), 
paai: plpython:00001099:  errdetail("PL/Python set-returning functions only support returning only value per call."))); 
paai: plpython:00001110:  ereport(ERROR, 
paai: plpython:00001111:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paai: plpython:00001112:  errmsg("returned object cannot be iterated"), 
paai: plpython:00001113:  errdetail("PL/Python set-returning functions must return an iterable object."))); 
paai: plpython:00001170:  PLy_elog(ERROR, "function \"%s\" error fetching next item from iterator", proc->proname); 
paai: plpython:00001174:  elog(ERROR, "SPI_finish failed"); 
paai: plpython:00001187:  elog(ERROR, "SPI_finish failed"); 
paai: plpython:00001202:  ereport(ERROR, 
paai: plpython:00001203:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paai: plpython:00001204:  errmsg("PL/Python function with return type \"void\" did not return None"))); 
paai: plpython:00001300:  ereport(WARNING, 
paai: plpython:00001301:  (errmsg("forcibly aborting a subtransaction that has not been exited"))); 
paai: plpython:00001352:  PLy_elog(ERROR, NULL); 
paai: plpython:00001417:  PLy_elog(ERROR, "PyList_SetItem() failed, while setting up arguments"); 
paai: plpython:00001421:  PLy_elog(ERROR, "PyDict_SetItemString() failed, while setting up arguments"); 
paai: plpython:00001431:  ereport(ERROR, 
paai: plpython:00001432:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paai: plpython:00001433:  errmsg("function returning record called in context " 
paai: plpython:00001434:  "that cannot accept type record"))); 
paai: plpython:00001505:  elog(ERROR, "cache lookup failed for relation %u", relid); 
paai: plpython:00001537:  elog(ERROR, "cache lookup failed for function %u", fn_oid); 
paai: plpython:00001602:  elog(ERROR, "procedure name would overrun buffer"); 
paai: plpython:00001635:  elog(ERROR, "cache lookup failed for type %u", 
paai: plpython:00001636:  procStruct->prorettype); 
paai: plpython:00001643:  ereport(ERROR, 
paai: plpython:00001644:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paai: plpython:00001645:  errmsg("trigger functions can only be called as triggers"))); 
paai: plpython:00001648:  ereport(ERROR, 
paai: plpython:00001649:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paai: plpython:00001650:  errmsg("PL/Python functions cannot return type %s", 
paai: plpython:00001651:  format_type_be(procStruct->prorettype)))); 
paai: plpython:00001720:  elog(ERROR, "cache lookup failed for type %u", types[i]); 
paai: plpython:00001728:  ereport(ERROR, 
paai: plpython:00001729:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paai: plpython:00001730:  errmsg("PL/Python functions cannot accept type %s", 
paai: plpython:00001731:  format_type_be(types[i])))); 
paai: plpython:00001759:  elog(ERROR, "null prosrc"); 
paai: plpython:00001824:  elog(ERROR, "string would overflow buffer"); 
paai: plpython:00001831:  PLy_elog(ERROR, "could not compile PL/Python function \"%s\"", 
paai: plpython:00001832:  proc->proname); 
paai: plpython:00001834:  PLy_elog(ERROR, "could not compile anonymous PL/Python code block"); 
paai: plpython:00001853:  elog(FATAL, "buffer overrun in PLy_munge_source"); \ 
paai: plpython:00001854: } \ 
paai: plpython:00001855: while(0); 
paai: plpython:00002097:  elog(ERROR, "PLyTypeInfo struct is initialized for a Datum"); 
paai: plpython:00002114:  //elog(ERROR, "received unnamed record type as input"); 
paai: plpython:00002133:  elog(ERROR, "cache lookup failed for relation %u", arg->typ_relid); 
paai: plpython:00002155:  elog(ERROR, "cache lookup failed for type %u", 
paai: plpython:00002156:  desc->attrs[i]->atttypid); 
paai: plpython:00002198:  elog(ERROR, "PLyTypeInfo struct is initialized for a Datum"); 
paai: plpython:00002222:  elog(ERROR, "cache lookup failed for type %u", 
paai: plpython:00002223:  desc->attrs[i]->atttypid); 
paai: plpython:00002235:  elog(ERROR, "PLyTypeInfo struct is initialized for a Tuple"); 
paai: plpython:00002283:  ereport(ERROR, 
paai: plpython:00002284:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paai: plpython:00002285:  errmsg("PL/Python functions cannot return type %s", 
paai: plpython:00002286:  format_type_be(arg->typoid)), 
paai: plpython:00002287:  errdetail("PL/Python does not support conversion to arrays of row types."))); 
paai: plpython:00002306:  elog(ERROR, "PLyTypeInfo struct is initialized for Tuple"); 
paai: plpython:00002494:  ereport(ERROR, 
paai: plpython:00002495:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paai: plpython:00002496:  errmsg("cannot convert multidimensional array to Python list"), 
paai: plpython:00002497:  errdetail("PL/Python only supports one-dimensional arrays."))); 
paai: plpython:00002532:  elog(ERROR, "PLyTypeInfo structure describes a datum"); 
paai: plpython:00002536:  PLy_elog(ERROR, "could not create new dictionary"); 
paai: plpython:00002633:  PLy_elog(ERROR, "could not create bytes representation of Python object"); 
paai: plpython:00002676:  elog(ERROR, "received unnamed record type as input"); 
paai: plpython:00002731:  PLy_elog(ERROR, "could not create string representation of Python object"); 
paai: plpython:00002740:  ereport(ERROR, 
paai: plpython:00002741:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paai: plpython:00002742:  errmsg("could not convert Python object into cstring: Python string representation appears to contain null bytes"))); 
paai: plpython:00002744:  elog(ERROR, "could not convert Python object into cstring: Python string longer than reported length"); 
paai: plpython:00002776:  PLy_elog(ERROR, "return value of function with array return type is not a Python sequence"); 
paai: plpython:00002850:  ereport(ERROR, 
paai: plpython:00002851:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paai: plpython:00002852:  errmsg("key \"%s\" not found in mapping", key), 
paai: plpython:00002853:  errhint("To return null in a column, " 
paai: plpython:00002854:  "add the value None to the mapping with the key named after the column."))); 
paai: plpython:00002899:  ereport(ERROR, 
paai: plpython:00002900:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
paai: plpython:00002901:  errmsg("length of returned sequence did not match number of columns in row"))); 
paai: plpython:00002999:  ereport(ERROR, 
paai: plpython:00003000:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
paai: plpython:00003001:  errmsg("attribute \"%s\" does not exist in Python object", key), 
paai: plpython:00003002:  errhint("To return null in a column, " 
paai: plpython:00003003:  "let the returned object have an attribute named " 
paai: plpython:00003004:  "after column with value None."))); 
paai: plpython:00003499:  ereport(ERROR, 
paai: plpython:00003500:  (errmsg("plpy.prepare: type name at ordinal position %d is not a string", i))); 
paai: plpython:00003515:  elog(ERROR, "cache lookup failed for type %u", typeId); 
paai: plpython:00003530:  ereport(ERROR, 
paai: plpython:00003531:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paai: plpython:00003532:  errmsg("plpy.prepare does not support composite types"))); 
paai: plpython:00003539:  elog(ERROR, "SPI_prepare failed: %s", 
paai: plpython:00003540:  SPI_result_code_string(SPI_result)); 
paai: plpython:00003547:  elog(ERROR, "SPI_saveplan failed: %s", 
paai: plpython:00003548:  SPI_result_code_string(SPI_result)); 
paai: plpython:00003657:  PLy_elog(ERROR, "could not execute plan"); 
paai: plpython:00004146:  PLy_elog(ERROR, "failed to add the spiexceptions module"); 
paai: plpython:00004222:  ereport(FATAL, 
paai: plpython:00004223:  (errmsg("Python major version mismatch in session"), 
paai: plpython:00004224:  errdetail("This session has previously used Python major version %d, and it is now attempting to use Python major version %d.", 
paai: plpython:00004225:  **version_ptr, plpython_python_version), 
paai: plpython:00004226:  errhint("Start a new session to use a different Python major version."))); 
paai: plpython:00004241:  PLy_elog(FATAL, "untrapped error in initialization"); 
paai: plpython:00004269:  PLy_elog(ERROR, "could not import \"__main__\" module"); 
paai: plpython:00004276:  PLy_elog(ERROR, "could not initialize globals"); 
paai: plpython:00004291:  elog(ERROR, "could not initialize PLy_PlanType"); 
paai: plpython:00004293:  elog(ERROR, "could not initialize PLy_ResultType"); 
paai: plpython:00004295:  elog(ERROR, "could not initialize PLy_SubtransactionType"); 
paai: plpython:00004315:  elog(ERROR, "could not initialize plpy"); 
paai: plpython:00004572:  elog(ERROR, "could not convert SPI error to Python exception"); 
paai: plpython:00004829:  elog(ERROR, "could not get line number from Python traceback"); 
paai: plpython:00004833:  elog(ERROR, "could not get frame from Python traceback"); 
paai: plpython:00004837:  elog(ERROR, "could not get code object from Python frame"); 
paai: plpython:00004841:  elog(ERROR, "could not get function name from Python code object"); 
paai: plpython:00004845:  elog(ERROR, "could not get file name from Python code object"); 
paai: plpython:00004923:  elog(ERROR, "could not traverse Python traceback"); 
paai: plpython:00004997:  PLy_elog(ERROR, "could not convert Python Unicode object to PostgreSQL server encoding"); 
aaaaa GP_IGNORE: pabi: pgxbackendxsupport - ./pl/plr/pg_backend_support.c
pabi: pgxbackendxsupport:00000101:  ereport(ERROR, 
pabi: pgxbackendxsupport:00000102:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabi: pgxbackendxsupport:00000103:  errmsg("could not determine actual argument " 
pabi: pgxbackendxsupport:00000104:  "type for polymorphic function \"%s\"", 
pabi: pgxbackendxsupport:00000105:  NameStr(procStruct->proname)))); 
pabi: pgxbackendxsupport:00000154:  ereport(ERROR, 
pabi: pgxbackendxsupport:00000155:  (errcode(ERRCODE_OUT_OF_MEMORY), 
pabi: pgxbackendxsupport:00000156:  errmsg("out of memory"))); 
pabi: pgxbackendxsupport:00000158:  elog(WARNING, "trying to insert a function that exists"); 
pabi: pgxbackendxsupport:00000175:  elog(WARNING, "trying to delete function that does not exist"); 
pabi: pgxbackendxsupport:00000198:  elog(ERROR, "cache lookup failed for function %u", funcid); 
pabi: pgxbackendxsupport:00000210:  elog(ERROR, "cache lookup failed for language %u", language); 
pabi: pgxbackendxsupport:00000221:  elog(ERROR, "cache lookup failed for function %u", lang_funcid); 
pabi: pgxbackendxsupport:00000264:  ereport(ERROR, 
pabi: pgxbackendxsupport:00000265:  (errcode_for_file_access(), 
pabi: pgxbackendxsupport:00000266:  errmsg("could not find path to PL/R shared library"))); 
pabi: pgxbackendxsupport:00000288:  ereport(ERROR, 
pabi: pgxbackendxsupport:00000289:  (errcode_for_file_access(), 
pabi: pgxbackendxsupport:00000290:  errmsg("could not access file \"%s\": %m", name))); 
pabi: pgxbackendxsupport:00000378:  ereport(ERROR, 
pabi: pgxbackendxsupport:00000379:  (errcode(ERRCODE_INVALID_NAME), 
pabi: pgxbackendxsupport:00000380:  errmsg("invalid macro name in dynamic library path: %s", name))); 
pabi: pgxbackendxsupport:00000423:  ereport(ERROR, 
pabi: pgxbackendxsupport:00000424:  (errcode(ERRCODE_INVALID_NAME), 
pabi: pgxbackendxsupport:00000425:  errmsg("zero-length component in DYNAMIC_LIBRARY_PATH"))); 
pabi: pgxbackendxsupport:00000436:  ereport(ERROR, 
pabi: pgxbackendxsupport:00000437:  (errcode(ERRCODE_INVALID_NAME), 
pabi: pgxbackendxsupport:00000438:  errmsg("DYNAMIC_LIBRARY_PATH component is not absolute"))); 
aaaaa GP_IGNORE: pabd: pgxconversion - ./pl/plr/pg_conversion.c
pabd: pgxconversion:00000118:  ereport(ERROR, 
pabd: pgxconversion:00000119:  (errcode(ERRCODE_DATA_EXCEPTION), 
pabd: pgxconversion:00000120:  errmsg("R interpreter expression evaluation error"), 
pabd: pgxconversion:00000121:  errdetail("%s", last_R_error_msg))); 
pabd: pgxconversion:00000123:  ereport(ERROR, 
pabd: pgxconversion:00000124:  (errcode(ERRCODE_DATA_EXCEPTION), 
pabd: pgxconversion:00000125:  errmsg("R interpreter expression evaluation error"), 
pabd: pgxconversion:00000126:  errdetail("R expression evaluation error caught in \"unserialize\"."))); 
pabd: pgxconversion:00000212:  ereport(ERROR, 
pabd: pgxconversion:00000213:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabd: pgxconversion:00000214:  errmsg("direct array passthrough attempted for unsupported type"))); 
pabd: pgxconversion:00000261:  ereport(ERROR, 
pabd: pgxconversion:00000262:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabd: pgxconversion:00000263:  errmsg("greater than 3-dimensional arrays are not yet supported"))); 
pabd: pgxconversion:00000627:  ereport(ERROR, 
pabd: pgxconversion:00000628:  (errcode(ERRCODE_DATA_EXCEPTION), 
pabd: pgxconversion:00000629:  errmsg("incorrect function return type"), 
pabd: pgxconversion:00000630:  errdetail("function return value cannot have more " \ 
pabd: pgxconversion:00000631:  "than one row"))); 
pabd: pgxconversion:00000654:  ereport(ERROR, 
pabd: pgxconversion:00000655:  (errcode(ERRCODE_DATATYPE_MISMATCH), 
pabd: pgxconversion:00000656:  errmsg("returned tuple structure does not match table " \ 
pabd: pgxconversion:00000657:  "of trigger event"))); 
pabd: pgxconversion:00000775:  ereport(ERROR, 
pabd: pgxconversion:00000776:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabd: pgxconversion:00000777:  errmsg("materialize mode required, but it is not " 
pabd: pgxconversion:00000778:  "allowed in this context"))); 
pabd: pgxconversion:00000804:  ereport(ERROR, 
pabd: pgxconversion:00000805:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabd: pgxconversion:00000806:  errmsg("query-specified return tuple and " 
pabd: pgxconversion:00000807:  "function returned data.frame are not compatible"))); 
pabd: pgxconversion:00000898:  ereport(ERROR, 
pabd: pgxconversion:00000899:  (errcode(ERRCODE_DATA_EXCEPTION), 
pabd: pgxconversion:00000900:  errmsg("R interpreter expression evaluation error"), 
pabd: pgxconversion:00000901:  errdetail("%s", last_R_error_msg))); 
pabd: pgxconversion:00000903:  ereport(ERROR, 
pabd: pgxconversion:00000904:  (errcode(ERRCODE_DATA_EXCEPTION), 
pabd: pgxconversion:00000905:  errmsg("R interpreter expression evaluation error"), 
pabd: pgxconversion:00000906:  errdetail("R expression evaluation error caught in \"serialize\"."))); 
pabd: pgxconversion:00000986:  elog(ERROR, "plr: bad internal representation of data.frame"); 
pabd: pgxconversion:00001016:  elog(ERROR, "plr: bad internal representation of data.frame"); 
pabd: pgxconversion:00001142:  ereport(ERROR, 
pabd: pgxconversion:00001143:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabd: pgxconversion:00001144:  errmsg("greater than 3-dimensional arrays are " \ 
pabd: pgxconversion:00001145:  "not yet supported"))); 
pabd: pgxconversion:00001301:  elog(ERROR, "attempted to passthrough invalid R datatype to Postgresql"); 
pabd: pgxconversion:00001373:  ereport(ERROR, 
pabd: pgxconversion:00001374:  (errcode(ERRCODE_DATA_EXCEPTION), 
pabd: pgxconversion:00001375:  errmsg("actual and requested return type mismatch"), 
pabd: pgxconversion:00001376:  errdetail("Actual return type has %d columns, but " \ 
pabd: pgxconversion:00001377:  "requested return type has %d", nc, tupdesc_nc))); 
aaaaa GP_IGNORE: pabb: pgxrsupport - ./pl/plr/pg_rsupport.c
pabb: pgxrsupport:00000061:  elog(NOTICE, "%s", *msg); 
pabb: pgxrsupport:00000063:  elog(NOTICE, "%s", ""); 
aaaaa GP_IGNORE: pabc: pgxuserfuncs - ./pl/plr/pg_userfuncs.c
pabc: pgxuserfuncs:00000056:  elog(ERROR, "SPI_connect failed"); 
pabc: pgxuserfuncs:00000063:  elog(ERROR, "SPI_finish failed"); 
pabc: pgxuserfuncs:00000133:  ereport(ERROR, 
pabc: pgxuserfuncs:00000134:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabc: pgxuserfuncs:00000135:  errmsg("input must be one-dimensional array"))); 
pabc: pgxuserfuncs:00000146:  elog(ERROR, "invalid array element type"); 
pabc: pgxuserfuncs:00000223:  ereport(ERROR, 
pabc: pgxuserfuncs:00000224:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
pabc: pgxuserfuncs:00000225:  errmsg("at least one value required to construct an array"))); 
pabc: pgxuserfuncs:00000235:  elog(ERROR, "function OID %u does not exist", funcid); 
pabc: pgxuserfuncs:00000251:  ereport(ERROR, 
pabc: pgxuserfuncs:00000252:  (errcode(ERRCODE_INVALID_PARAMETER_VALUE), 
pabc: pgxuserfuncs:00000253:  errmsg("argument %d datatype not " \ 
pabc: pgxuserfuncs:00000254:  "compatible with return data type", i + 1))); 
pabc: pgxuserfuncs:00000298:  ereport(ERROR, 
pabc: pgxuserfuncs:00000299:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: pgxuserfuncs:00000300:  errmsg("materialize mode required, but it is not " 
pabc: pgxuserfuncs:00000301:  "allowed in this context"))); 
pabc: pgxuserfuncs:00000315:  ereport(ERROR, 
pabc: pgxuserfuncs:00000316:  (errcode(ERRCODE_SYNTAX_ERROR), 
pabc: pgxuserfuncs:00000317:  errmsg("query-specified return tuple and " 
pabc: pgxuserfuncs:00000318:  "function return type are not compatible"))); 
pabc: pgxuserfuncs:00000528:  ereport(ERROR, 
pabc: pgxuserfuncs:00000529:  (errcode(ERRCODE_DATA_EXCEPTION), 
pabc: pgxuserfuncs:00000530:  errmsg("R interpreter expression evaluation error"), 
pabc: pgxuserfuncs:00000531:  errdetail("%s", last_R_error_msg))); 
pabc: pgxuserfuncs:00000533:  ereport(ERROR, 
pabc: pgxuserfuncs:00000534:  (errcode(ERRCODE_DATA_EXCEPTION), 
pabc: pgxuserfuncs:00000535:  errmsg("R interpreter expression evaluation error"), 
pabc: pgxuserfuncs:00000536:  errdetail("R expression evaluation error caught in \"unserialize\"."))); 
aaaaa GP_IGNORE: paad: plr - ./pl/plr/plr.c
paad: plr:00000208:  elog(ERROR, "SPI_connect failed"); 
paad: plr:00000249:  ereport(ERROR, 
paad: plr:00000250:  (errcode(ERRCODE_DATA_EXCEPTION), 
paad: plr:00000251:  errmsg("R interpreter parse error"), 
paad: plr:00000252:  errdetail("%s", last_R_error_msg))); 
paad: plr:00000254:  ereport(ERROR, 
paad: plr:00000255:  (errcode(ERRCODE_DATA_EXCEPTION), 
paad: plr:00000256:  errmsg("R interpreter parse error"), 
paad: plr:00000257:  errdetail("R parse error caught in \"%s\".", cmd))); 
paad: plr:00000267:  ereport(ERROR, 
paad: plr:00000268:  (errcode(ERRCODE_DATA_EXCEPTION), 
paad: plr:00000269:  errmsg("R interpreter expression evaluation error"), 
paad: plr:00000270:  errdetail("%s", last_R_error_msg))); 
paad: plr:00000272:  ereport(ERROR, 
paad: plr:00000273:  (errcode(ERRCODE_DATA_EXCEPTION), 
paad: plr:00000274:  errmsg("R interpreter expression evaluation error"), 
paad: plr:00000275:  errdetail("R expression evaluation error caught " \ 
paad: plr:00000276:  "in \"%s\".", cmd))); 
paad: plr:00000322:  ereport(ERROR, 
paad: plr:00000323:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paad: plr:00000324:  errmsg("the R interpreter did not initialize"), 
paad: plr:00000325:  errhint("R_HOME must be correct in the environment " \ 
paad: plr:00000326:  "of the user that starts the postmaster process."))); 
paad: plr:00000367:  ereport(ERROR, 
paad: plr:00000368:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paad: plr:00000369:  errmsg("environment variable R_HOME not defined"), 
paad: plr:00000370:  errhint("R_HOME must be defined in the environment " \ 
paad: plr:00000371:  "of the user that starts the postmaster process."))); 
paad: plr:00000387:  ereport(ERROR, 
paad: plr:00000388:  (errcode(ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE), 
paad: plr:00000389:  errmsg("the R interpreter did not initialize"), 
paad: plr:00000390:  errhint("R_HOME must be correct in the environment " \ 
paad: plr:00000391:  "of the user that starts the postmaster process."))); 
paad: plr:00000521:  elog(ERROR, "plr_init_load_modules: select from plr_modules failed"); 
paad: plr:00000650:  elog(ERROR, "unrecognized tg_event"); 
paad: plr:00000671:  elog(ERROR, "unrecognized tg_event"); 
paad: plr:00000692:  elog(ERROR, "unrecognized tg_event"); 
paad: plr:00000696:  elog(ERROR, "unrecognized tg_event"); 
paad: plr:00000734:  elog(ERROR, "SPI_finish failed"); 
paad: plr:00000772:  elog(ERROR, "SPI_finish failed"); 
paad: plr:00000808:  elog(ERROR, "cache lookup failed for proc %u", funcOid); 
paad: plr:00000950:  ereport(ERROR, 
paad: plr:00000951:  (errcode(ERRCODE_OUT_OF_MEMORY), 
paad: plr:00000952:  errmsg("out of memory"))); 
paad: plr:00000969:  elog(ERROR, "cache lookup failed for language %u", 
paad: plr:00000970:  procStruct->prolang); 
paad: plr:00001002:  elog(ERROR, "cache lookup failed for return type %u", 
paad: plr:00001003:  procStruct->prorettype); 
paad: plr:00001018:  ereport(ERROR, 
paad: plr:00001019:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paad: plr:00001020:  errmsg("trigger functions may only be called as triggers"))); 
paad: plr:00001026:  ereport(ERROR, 
paad: plr:00001027:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paad: plr:00001028:  errmsg("plr functions cannot return type %s", 
paad: plr:00001029:  format_type_be(procStruct->prorettype)))); 
paad: plr:00001054:  ereport(ERROR, 
paad: plr:00001055:  (errcode(ERRCODE_SYNTAX_ERROR), 
paad: plr:00001056:  errmsg("materialize mode required, but it is not " 
paad: plr:00001057:  "allowed in this context"))); 
paad: plr:00001165:  elog(ERROR, "cache lookup failed for argument type %u", arg_typid); 
paad: plr:00001178:  ereport(ERROR, 
paad: plr:00001179:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paad: plr:00001180:  errmsg("plr functions cannot take type %s", 
paad: plr:00001181:  format_type_be(arg_typid)))); 
paad: plr:00001320:  elog(ERROR, "null prosrc"); 
paad: plr:00001363:  elog(ERROR, "cannot create internal procedure %s", 
paad: plr:00001364:  internal_proname); 
paad: plr:00001399:  ereport(ERROR, 
paad: plr:00001400:  (errcode(ERRCODE_DATA_EXCEPTION), 
paad: plr:00001401:  errmsg("R interpreter parse error"), 
paad: plr:00001402:  errdetail("%s", last_R_error_msg))); 
paad: plr:00001404:  ereport(ERROR, 
paad: plr:00001405:  (errcode(ERRCODE_DATA_EXCEPTION), 
paad: plr:00001406:  errmsg("R interpreter parse error"), 
paad: plr:00001407:  errdetail("R parse error caught " \ 
paad: plr:00001408:  "in \"%s\".", body))); 
paad: plr:00001454:  ereport(ERROR, 
paad: plr:00001455:  (errcode(ERRCODE_DATA_EXCEPTION), 
paad: plr:00001456:  errmsg("R interpreter expression evaluation error"), 
paad: plr:00001457:  errdetail("%s", last_R_error_msg))); 
paad: plr:00001459:  ereport(ERROR, 
paad: plr:00001460:  (errcode(ERRCODE_DATA_EXCEPTION), 
paad: plr:00001461:  errmsg("R interpreter expression evaluation error"))); 
paad: plr:00001564:  elog(ERROR, "proargnames must have the same number of elements as the function has arguments"); 
paad: plr:00001595:  elog(ERROR, "cache lookup failed for function %u", fnOid); 
paad: plr:00001605:  elog(ERROR, "cache lookup failed for language %u", langOid); 
paad: plr:00001616:  elog(ERROR, "cache lookup failed for function %u", hfnOid); 
paad: plr:00001645:  elog(ERROR, "haveModulesTable: select from pg_class failed"); 
paad: plr:00001676:  elog(NOTICE, "\tPROTECT\t1\t%s\t%d", fn, ln); 
paad: plr:00001683:  elog(NOTICE, "\tUNPROTECT\t%d\t%s\t%d", n, fn, ln); 
aaaaa GP_IGNORE: paaf: pltcl - ./pl/tcl/pltcl.c
paaf: pltcl:00000215:  elog(ERROR, "could not create \"hold\" interpreter"); 
paaf: pltcl:00000222:  elog(ERROR, "could not create \"normal\" interpreter"); 
paaf: pltcl:00000227:  elog(ERROR, "could not create \"safe\" interpreter"); 
paaf: pltcl:00000258:  elog(ERROR, "SPI_connect failed"); 
paaf: pltcl:00000262:  elog(ERROR, "SPI_finish failed"); 
paaf: pltcl:00000319:  elog(ERROR, "select from pg_class failed"); 
paaf: pltcl:00000334:  elog(ERROR, "select from pltcl_modules failed"); 
paaf: pltcl:00000343:  elog(WARNING, "module \"unknown\" not found in pltcl_modules"); 
paaf: pltcl:00000460:  elog(ERROR, "could not connect to SPI manager"); 
paaf: pltcl:00000573:  elog(ERROR, "SPI_finish() failed"); 
paaf: pltcl:00000620:  elog(ERROR, "could not connect to SPI manager"); 
paaf: pltcl:00000686:  elog(ERROR, "unrecognized WHEN tg_event: %u", trigdata->tg_event); 
paaf: pltcl:00000732:  elog(ERROR, "unrecognized OP tg_event: %u", trigdata->tg_event); 
paaf: pltcl:00000745:  elog(ERROR, "unrecognized OP tg_event: %u", trigdata->tg_event); 
paaf: pltcl:00000753:  elog(ERROR, "unrecognized LEVEL tg_event: %u", trigdata->tg_event); 
paaf: pltcl:00000791:  elog(ERROR, "SPI_finish() failed"); 
paaf: pltcl:00000808:  elog(ERROR, "could not split return value from trigger: %s", 
paaf: pltcl:00000809:  UTF_U2E(Tcl_GetStringResult(interp))); 
paaf: pltcl:00000817:  elog(ERROR, "invalid return list from trigger - must have even # of elements"); 
paaf: pltcl:00000851:  elog(ERROR, "invalid attribute \"%s\"", ret_name); 
paaf: pltcl:00000853:  elog(ERROR, "cannot set system attribute \"%s\"", ret_name); 
paaf: pltcl:00000869:  elog(ERROR, "cache lookup failed for type %u", 
paaf: pltcl:00000870:  tupdesc->attrs[attnum - 1]->atttypid); 
paaf: pltcl:00000896:  elog(ERROR, "SPI_modifytuple() failed - RC = %d", SPI_result); 
paaf: pltcl:00000933:  ereport(ERROR, 
paaf: pltcl:00000934:  (errmsg("%s", emsg), 
paaf: pltcl:00000935:  errcontext("%s", econtext))); 
paaf: pltcl:00000965:  elog(ERROR, "cache lookup failed for function %u", fn_oid); 
paaf: pltcl:00001031:  ereport(ERROR, 
paaf: pltcl:00001032:  (errcode(ERRCODE_OUT_OF_MEMORY), 
paaf: pltcl:00001033:  errmsg("out of memory"))); 
paaf: pltcl:00001053:  elog(ERROR, "cache lookup failed for language %u", 
paaf: pltcl:00001054:  procStruct->prolang); 
paaf: pltcl:00001078:  elog(ERROR, "cache lookup failed for type %u", 
paaf: pltcl:00001079:  procStruct->prorettype); 
paaf: pltcl:00001092:  ereport(ERROR, 
paaf: pltcl:00001093:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paaf: pltcl:00001094:  errmsg("trigger functions may only be called as triggers"))); 
paaf: pltcl:00001100:  ereport(ERROR, 
paaf: pltcl:00001101:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paaf: pltcl:00001102:  errmsg("pltcl functions cannot return type %s", 
paaf: pltcl:00001103:  format_type_be(procStruct->prorettype)))); 
paaf: pltcl:00001111:  ereport(ERROR, 
paaf: pltcl:00001112:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paaf: pltcl:00001113:  errmsg("pltcl functions cannot return tuples yet"))); 
paaf: pltcl:00001139:  elog(ERROR, "cache lookup failed for type %u", 
paaf: pltcl:00001140:  procStruct->proargtypes.values[i]); 
paaf: pltcl:00001149:  ereport(ERROR, 
paaf: pltcl:00001150:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
paaf: pltcl:00001151:  errmsg("pltcl functions cannot take type %s", 
paaf: pltcl:00001152:  format_type_be(procStruct->proargtypes.values[i])))); 
paaf: pltcl:00001236:  elog(ERROR, "null prosrc"); 
paaf: pltcl:00001258:  elog(ERROR, "could not create internal procedure \"%s\": %s", 
paaf: pltcl:00001259:  internal_proname, UTF_U2E(Tcl_GetStringResult(interp))); 
paaf: pltcl:00001889:  elog(ERROR, "SPI_prepare() failed"); 
paaf: pltcl:00001897:  elog(ERROR, "SPI_saveplan() failed"); 
paaf: pltcl:00002237:  elog(ERROR, "cache lookup failed for type %u", 
paaf: pltcl:00002238:  tupdesc->attrs[i]->atttypid); 
paaf: pltcl:00002306:  elog(ERROR, "cache lookup failed for type %u", 
paaf: pltcl:00002307:  tupdesc->attrs[i]->atttypid); 
aaaaa GP_IGNORE: caaj: chklocale - ./port/chklocale.c
caaj: chklocale:00000327:  ereport(WARNING, 
caaj: chklocale:00000328:  (errmsg("could not determine encoding for locale \"%s\": codeset is \"%s\"", 
caaj: chklocale:00000329:  ctype, sys), 
caaj: chklocale:00000330:  errdetail("Please report this to <pgsql-bugs@postgresql.org>."))); 
aaaaa GP_IGNORE: caah: copydir - ./port/copydir.c
caah: copydir:00000057:  ereport(ERROR, 
caah: copydir:00000058:  (errcode_for_file_access(), 
caah: copydir:00000059:  errmsg("could not create directory \"%s\": %m", todir))); 
caah: copydir:00000063:  ereport(ERROR, 
caah: copydir:00000064:  (errcode_for_file_access(), 
caah: copydir:00000065:  errmsg("could not open directory \"%s\": %m", fromdir))); 
caah: copydir:00000079:  ereport(ERROR, 
caah: copydir:00000080:  (errcode_for_file_access(), 
caah: copydir:00000081:  errmsg("could not stat file \"%s\": %m", fromfile))); 
caah: copydir:00000117:  ereport(ERROR, 
caah: copydir:00000118:  (errcode_for_file_access(), 
caah: copydir:00000119:  errmsg("could not open file \"%s\": %m", fromfile))); 
caah: copydir:00000124:  ereport(ERROR, 
caah: copydir:00000125:  (errcode_for_file_access(), 
caah: copydir:00000126:  errmsg("could not create file \"%s\": %m", tofile))); 
caah: copydir:00000135:  ereport(ERROR, 
caah: copydir:00000136:  (errcode_for_file_access(), 
caah: copydir:00000137:  errmsg("could not read file \"%s\": %m", fromfile))); 
caah: copydir:00000146:  ereport(ERROR, 
caah: copydir:00000147:  (errcode_for_file_access(), 
caah: copydir:00000148:  errmsg("could not write to file \"%s\": %m", tofile))); 
caah: copydir:00000156:  ereport(ERROR, 
caah: copydir:00000157:  (errcode_for_file_access(), 
caah: copydir:00000158:  errmsg("could not fsync file \"%s\": %m", tofile))); 
caah: copydir:00000161:  ereport(ERROR, 
caah: copydir:00000162:  (errcode_for_file_access(), 
caah: copydir:00000163:  errmsg("could not close file \"%s\": %m", tofile))); 
aaaaa GP_IGNORE: daag: dirmod - ./port/dirmod.c
daag: dirmod:00000281:  ereport(ERROR, 
daag: dirmod:00000282:  (errcode_for_file_access(), 
daag: dirmod:00000283:  errmsg("could not set junction for \"%s\": %s", 
daag: dirmod:00000284:  nativeTarget, msg))); 
daag: dirmod:00000323:  elog(WARNING, "could not open directory \"%s\": %m", path); 
daag: dirmod:00000360:  elog(WARNING, "could not read directory \"%s\": %m", path); 
daag: dirmod:00000442:  elog(WARNING, "could not stat file or directory \"%s\": %m", 
daag: dirmod:00000443:  pathbuf); 
daag: dirmod:00000469:  elog(WARNING, "could not remove file or directory \"%s\": %m", 
daag: dirmod:00000470:  pathbuf); 
daag: dirmod:00000486:  elog(WARNING, "could not remove file or directory \"%s\": %m", 
daag: dirmod:00000487:  path); 
aaaaa GP_IGNORE: cabb: cdbexecplan - ./test/libcdbtest/cdbexecplan.c
cabb: cdbexecplan:00000082:  ereport(ERROR, 
cabb: cdbexecplan:00000083:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000084:  errmsg("SPI_connect failed in cdb_serialize_plan" ))); 
cabb: cdbexecplan:00000090:  ereport(ERROR, 
cabb: cdbexecplan:00000091:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000092:  errmsg("SPI_prepare failed for sql %s", pszSQL ))); 
cabb: cdbexecplan:00000097:  ereport(ERROR, 
cabb: cdbexecplan:00000098:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000099:  errmsg("cdb_serialize_plan can only handle 1 sql statement, but there were %d", list_length(thePlan->ptlist) ))); 
cabb: cdbexecplan:00000110:  ereport(ERROR, 
cabb: cdbexecplan:00000111:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000112:  errmsg("TestPlanSerialization failed for sql %s", pszSQL ))); 
cabb: cdbexecplan:00000129:  ereport(ERROR, 
cabb: cdbexecplan:00000130:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cabb: cdbexecplan:00000131:  errmsg("out of memory"))); 
cabb: cdbexecplan:00000174:  ereport(ERROR, 
cabb: cdbexecplan:00000175:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000176:  errmsg("SPI_connect failed in cdb_serialize_query" ))); 
cabb: cdbexecplan:00000182:  ereport(ERROR, 
cabb: cdbexecplan:00000183:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000184:  errmsg("SPI_prepare failed for sql %s", pszSQL ))); 
cabb: cdbexecplan:00000190:  ereport(ERROR, 
cabb: cdbexecplan:00000191:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000192:  errmsg("cdb_serialize_query can only handle 1 sql statement, but there were %d", list_length(query_list_list) ))); 
cabb: cdbexecplan:00000203:  ereport(ERROR, 
cabb: cdbexecplan:00000204:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000205:  errmsg("cdb_serialize_query can only handle 1 sql statement, but there were %d", list_length(query_list) ))); 
cabb: cdbexecplan:00000216:  ereport(ERROR, 
cabb: cdbexecplan:00000217:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000218:  errmsg("TestQuerySerialization failed for sql %s", pszSQL ))); 
cabb: cdbexecplan:00000239:  ereport(ERROR, 
cabb: cdbexecplan:00000240:  (errcode(ERRCODE_OUT_OF_MEMORY), 
cabb: cdbexecplan:00000241:  errmsg("out of memory"))); 
cabb: cdbexecplan:00000300:  ereport(ERROR, 
cabb: cdbexecplan:00000301:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000302:  errmsg("SPI_connect failed in cdb_exec_indirect" ))); 
cabb: cdbexecplan:00000312:  ereport(ERROR, 
cabb: cdbexecplan:00000313:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000314:  errmsg("SPI_prepare failed for sql %s", pszSQL ))); 
cabb: cdbexecplan:00000323:  ereport(ERROR, 
cabb: cdbexecplan:00000324:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000325:  errmsg("cdb_exec_indirect can only handle 1 sql statement, but there were %d", list_length(thePlan->ptlist) ))); 
cabb: cdbexecplan:00000337:  ereport(ERROR, 
cabb: cdbexecplan:00000338:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000339:  errmsg("serializeNode failed for sql %s", pszSQL ))); 
cabb: cdbexecplan:00000349:  ereport(ERROR, 
cabb: cdbexecplan:00000350:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000351:  errmsg("cdb_exec_indirect can only handle 1 sql statement, but there were %d", list_length(query_list_list) ))); 
cabb: cdbexecplan:00000362:  ereport(ERROR, 
cabb: cdbexecplan:00000363:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000364:  errmsg("cdb_exec_indirect can only handle 1 sql statement, but there were %d", list_length(query_list) ))); 
cabb: cdbexecplan:00000376:  ereport(ERROR, 
cabb: cdbexecplan:00000377:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000378:  errmsg("serializeNode failed for sql %s", pszSQL ))); 
cabb: cdbexecplan:00000395:  ereport(ERROR, 
cabb: cdbexecplan:00000396:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000397:  errmsg("Plan or Query XML deserialization failed in cdb_exec_indirect" ))); 
cabb: cdbexecplan:00000405:  ereport(ERROR, 
cabb: cdbexecplan:00000406:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000407:  errmsg("SPI_execute_cdb failed in cdb_exec_plan" ))); 
cabb: cdbexecplan:00000490:  ereport(ERROR, 
cabb: cdbexecplan:00000491:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000492:  errmsg("SPI_connect failed in cdb_test_mppexec" ))); 
cabb: cdbexecplan:00000501:  ereport(ERROR, 
cabb: cdbexecplan:00000502:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000503:  errmsg("SPI_prepare failed for sql %s", pszSQL ))); 
cabb: cdbexecplan:00000512:  ereport(ERROR, 
cabb: cdbexecplan:00000513:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000514:  errmsg("cdb_test_mppexec can only handle 1 sql statement, but there were %d", list_length(thePlan->ptlist) ))); 
cabb: cdbexecplan:00000526:  ereport(ERROR, 
cabb: cdbexecplan:00000527:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000528:  errmsg("serializeNode failed for sql %s", pszSQL ))); 
cabb: cdbexecplan:00000538:  ereport(ERROR, 
cabb: cdbexecplan:00000539:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000540:  errmsg("cdb_test_mppexec can only handle 1 sql statement, but there were %d", list_length(query_list_list) ))); 
cabb: cdbexecplan:00000551:  ereport(ERROR, 
cabb: cdbexecplan:00000552:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000553:  errmsg("cdb_test_mppexec can only handle 1 sql statement, but there were %d", list_length(query_list) ))); 
cabb: cdbexecplan:00000565:  ereport(ERROR, 
cabb: cdbexecplan:00000566:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000567:  errmsg("serializeNode failed for sql %s", pszSQL ))); 
cabb: cdbexecplan:00000583:  ereport(ERROR, 
cabb: cdbexecplan:00000584:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
cabb: cdbexecplan:00000585:  errmsg("SPI_execute failed in cdb_test_mppexec" ))); 
aaaaa GP_IGNORE: cabb: cdbheaptest - ./test/libcdbtest/cdbheaptest.c
cabb: cdbheaptest:00000178:  ereport(NOTICE, 
cabb: cdbheaptest:00000179:  (errcode(ERRCODE_MOST_SPECIFIC_TYPE_MISMATCH), 
cabb: cdbheaptest:00000180:  errmsg("Function cdb_heap_test() cannot proceed, because not all slots got values.")) 
cabb: cdbheaptest:00000181:  ); 
cabb: cdbheaptest:00000210:  ereport(NOTICE, 
cabb: cdbheaptest:00000211:  (errcode(ERRCODE_MOST_SPECIFIC_TYPE_MISMATCH), 
cabb: cdbheaptest:00000212:  errmsg("Function cdb_heap_test() failed. At index %d, value was NULL", 
cabb: cdbheaptest:00000213:  i )) 
cabb: cdbheaptest:00000214:  ); 
cabb: cdbheaptest:00000221:  ereport(NOTICE, 
cabb: cdbheaptest:00000222:  (errcode(ERRCODE_MOST_SPECIFIC_TYPE_MISMATCH), 
cabb: cdbheaptest:00000223:  errmsg("Function cdb_heap_test() failed. At index %d, value %d was smaller than previous value %d", 
cabb: cdbheaptest:00000224:  i, *phv->value, lastval )) 
cabb: cdbheaptest:00000225:  ); 
aaaaa GP_IGNORE: caag: cdboid - ./test/libcdbtest/cdboid.c
caag: cdboid:00000026:  ereport(ERROR, 
caag: cdboid:00000027:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caag: cdboid:00000028:  errmsg("SPI_connect failed in cdb_eget_oid" ))); 
caag: cdboid:00000033:  ereport(ERROR, 
caag: cdboid:00000034:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caag: cdboid:00000035:  errmsg("SPI_execute failed in cdb_get_oid" ))); 
caag: cdboid:00000040:  ereport(ERROR, 
caag: cdboid:00000041:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caag: cdboid:00000042:  errmsg("SPI_execute failed to insert a row into pgdump_oid in cdb_get_oid" ))); 
caag: cdboid:00000047:  ereport(ERROR, 
caag: cdboid:00000048:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caag: cdboid:00000049:  errmsg("SPI_execute failed in cdb_get_oid" ))); 
caag: cdboid:00000053:  ereport(ERROR, 
caag: cdboid:00000054:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caag: cdboid:00000055:  errmsg("No rows in pgdump_oid in cdb_get_oid" ))); 
caag: cdboid:00000063:  ereport(ERROR, 
caag: cdboid:00000064:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caag: cdboid:00000065:  errmsg("SPI_execute failed in cdb_get_oid" ))); 
caag: cdboid:00000084: /* elog(NOTICE, "tempFileName = %s", tempFileName ); */ 
caag: cdboid:00000085:  
caag: cdboid:00000086:  StringInfoData buffer; 
caag: cdboid:00000094:  ereport(ERROR, 
caag: cdboid:00000095:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caag: cdboid:00000096:  errmsg("SPI_execute failed in in temp file write in cdb_set_oid" ))); 
caag: cdboid:00000106:  ereport(ERROR, 
caag: cdboid:00000107:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caag: cdboid:00000108:  errmsg("SPI_connect failed in cdb_set_oid" ))); 
caag: cdboid:00000113:  ereport(ERROR, 
caag: cdboid:00000114:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caag: cdboid:00000115:  errmsg("SPI_execute failed in cdb_set_oid" ))); 
caag: cdboid:00000125:  ereport(ERROR, 
caag: cdboid:00000126:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caag: cdboid:00000127:  errmsg("SPI_execute failed in copy command in cdb_set_oid" ))); 
caag: cdboid:00000136:  ereport(ERROR, 
caag: cdboid:00000137:  (errcode(ERRCODE_EXTERNAL_ROUTINE_EXCEPTION), 
caag: cdboid:00000138:  errmsg("SPI_execute failed in cdb_set_oid" ))); 
aaaaa GP_IGNORE: cabc: cdbshowalias - ./test/libcdbtest/cdbshowalias.c
cabc: cdbshowalias:00000057:  ereport(ERROR, 
cabc: cdbshowalias:00000058:  (errcode(ERRCODE_MOST_SPECIFIC_TYPE_MISMATCH), 
cabc: cdbshowalias:00000059:  errmsg("Function cdb_show_alias() cannot process multiple statements.")) 
cabc: cdbshowalias:00000060:  ); 
cabc: cdbshowalias:00000074:  ereport(ERROR, 
cabc: cdbshowalias:00000075:  (errcode(ERRCODE_MOST_SPECIFIC_TYPE_MISMATCH), 
cabc: cdbshowalias:00000076:  errmsg("Function cdb_show_alias() cannot process multiple statements.")) 
cabc: cdbshowalias:00000077:  ); 
cabc: cdbshowalias:00000086:  ereport(ERROR, 
cabc: cdbshowalias:00000087:  (errcode(ERRCODE_MOST_SPECIFIC_TYPE_MISMATCH), 
cabc: cdbshowalias:00000088:  errmsg("Function cdb_show_alias() can only process SELECT statements.")) 
cabc: cdbshowalias:00000089:  ); 
aaaaa GP_IGNORE: caba: chunkfuncs - ./test/libcdbtest/chunkfuncs.c
caba: chunkfuncs:00000128:  elog(ERROR, "SPI_connect() reported error."); 
caba: chunkfuncs:00000133:  elog(ERROR, "This function requires a SELECT statement."); 
caba: chunkfuncs:00000291:  elog(ERROR, "SPI_connect() reported error."); 
caba: chunkfuncs:00000296:  elog(ERROR, "This function requires a SELECT statement."); 
caba: chunkfuncs:00000303:  elog(ERROR, "The SELECT statement result must have exactly one" 
caba: chunkfuncs:00000304:  " column of type BYTEA."); 
caba: chunkfuncs:00000418:  elog(ERROR, "SPI_connect() reported error."); 
caba: chunkfuncs:00000423:  elog(ERROR, "This function requires a SELECT statement."); 
caba: chunkfuncs:00000430:  elog(ERROR, "The SELECT statement result must have exactly one" 
caba: chunkfuncs:00000431:  " column of type BYTEA."); 
aaaaa GP_IGNORE: mabc: mlapixaccess - ./test/libcdbtest/mlapi_access.c
mabc: mlapixaccess:00000103:  elog(ERROR, "An incomplete send-tuple is in progress."); 
mabc: mlapixaccess:00000121:  elog(ERROR, "SPI_connect() reported error."); 
mabc: mlapixaccess:00000126:  elog(ERROR, "This function requires a SELECT statement."); 
mabc: mlapixaccess:00000176:  elog(ERROR, "No incomplete send-tuple in progress."); 
mabc: mlapixaccess:00000316:  elog(ERROR, "SPI_connect() reported error."); 
mabc: mlapixaccess:00000320:  elog(ERROR, "This function requires a SELECT statement."); 
mabc: mlapixaccess:00000323:  elog(ERROR, "The input SELECT statement produced zero rows."); 
mabc: mlapixaccess:00000325:  elog(NOTICE, "Performing Motion Layer API benchmark with %d rows.\n\t%s\n", 
mabc: mlapixaccess:00000326:  SPI_processed, (SPI_processed < 1000 ? 
mabc: mlapixaccess:00000327:  "(That's not very many. Are you scared or something?)" : 
mabc: mlapixaccess:00000328:  "Please wait patiently...")); 
mabc: mlapixaccess:00000374:  elog(ERROR, "Received unexpected end-of-stream!"); 
mabc: mlapixaccess:00000378:  elog(ERROR, "Unrecognized result-code from RecvTuple()."); 
mabc: mlapixaccess:00000418:  elog(ERROR, "Unrecognized result-code from SendTuple()."); 
mabc: mlapixaccess:00000452:  elog(ERROR, "gettimeofday() error!"); 
aaaaa GP_IGNORE: mabc: mlipcxaccess - ./test/libcdbtest/mlipc_access.c
mabc: mlipcxaccess:00000071:  ereport(ERROR, (errcode(ERRCODE_GP_FEATURE_NOT_YET), 
mabc: mlipcxaccess:00000072:  errmsg("Interconnect testing through libcdbtest is currently disabled") 
mabc: mlipcxaccess:00000073:  )); 
mabc: mlipcxaccess:00000174:  elog( NOTICE, "recvd: %d", msgsReceived ); 
aaaaa GP_IGNORE: raah: regress - ./test/regress/regress.c
raah: regress:00000397:  elog(ERROR, "funny_dup17: not fired by trigger manager"); 
raah: regress:00000449:  elog(ERROR, "funny_dup17 (fired %s) on level %3d: SPI_exec (insert ...) returned %d", 
raah: regress:00000450:  when, *level, ret); 
raah: regress:00000460:  elog(ERROR, "funny_dup17 (fired %s) on level %3d: SPI_exec (select ...) returned %d", 
raah: regress:00000461:  when, *level, ret); 
raah: regress:00000521:  elog(ERROR, "ttdummy: not fired by trigger manager"); 
raah: regress:00000523:  elog(ERROR, "ttdummy: cannot process STATEMENT events"); 
raah: regress:00000525:  elog(ERROR, "ttdummy: must be fired before event"); 
raah: regress:00000527:  elog(ERROR, "ttdummy: cannot process INSERT event"); 
raah: regress:00000546:  elog(ERROR, "ttdummy (%s): invalid (!= 2) number of arguments %d", 
raah: regress:00000547:  relname, trigger->tgnargs); 
raah: regress:00000557:  elog(ERROR, "ttdummy (%s): there is no attribute %s", relname, args[i]); 
raah: regress:00000559:  elog(ERROR, "ttdummy (%s): attributes %s and %s must be of abstime type", 
raah: regress:00000560:  relname, args[0], args[1]); 
raah: regress:00000565:  elog(ERROR, "ttdummy (%s): %s must be NOT NULL", relname, args[0]); 
raah: regress:00000569:  elog(ERROR, "ttdummy (%s): %s must be NOT NULL", relname, args[1]); 
raah: regress:00000575:  elog(ERROR, "ttdummy (%s): %s must be NOT NULL", relname, args[0]); 
raah: regress:00000578:  elog(ERROR, "ttdummy (%s): %s must be NOT NULL", relname, args[1]); 
raah: regress:00000581:  elog(ERROR, "ttdummy (%s): you cannot change %s and/or %s columns (use set_ttdummy)", 
raah: regress:00000582:  relname, args[0], args[1]); 
raah: regress:00000602:  elog(ERROR, "ttdummy (%s): SPI_connect returned %d", relname, ret); 
raah: regress:00000654:  elog(ERROR, "ttdummy (%s): SPI_prepare returned %d", relname, SPI_result); 
raah: regress:00000658:  elog(ERROR, "ttdummy (%s): SPI_saveplan returned %d", relname, SPI_result); 
raah: regress:00000666:  elog(ERROR, "ttdummy (%s): SPI_execp returned %d", relname, ret); 
raah: regress:00000835:  elog(ERROR, "check_primary_key: not fired by trigger manager"); 
raah: regress:00000840:  elog(ERROR, "check_primary_key: can't process STATEMENT events"); 
raah: regress:00000849:  elog(ERROR, "check_primary_key: can't process DELETE events"); 
raah: regress:00000861:  elog(ERROR, "check_primary_key: odd number of arguments should be specified"); 
raah: regress:00000871:  elog(ERROR, "check_primary_key: SPI_connect returned %d", ret); 
raah: regress:00000898:  ereport(ERROR, 
raah: regress:00000899:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
raah: regress:00000900:  errmsg("there is no attribute \"%s\" in relation \"%s\"", 
raah: regress:00000901:  args[i], SPI_getrelname(rel)))); 
raah: regress:00000944:  elog(ERROR, "check_primary_key: SPI_prepare returned %d", SPI_result); 
raah: regress:00000953:  elog(ERROR, "check_primary_key: SPI_saveplan returned %d", SPI_result); 
raah: regress:00000967:  elog(ERROR, "check_primary_key: SPI_execp returned %d", ret); 
raah: regress:00000973:  ereport(ERROR, 
raah: regress:00000974:  (errcode(ERRCODE_TRIGGERED_ACTION_EXCEPTION), 
raah: regress:00000975:  errmsg("tuple references non-existent key"), 
raah: regress:00000976:  errdetail("Trigger \"%s\" found tuple referencing non-existent key in \"%s\".", trigger->tgname, relname))); 
raah: regress:00001035:  elog(ERROR, "check_foreign_key: not fired by trigger manager"); 
raah: regress:00001040:  elog(ERROR, "check_foreign_key: can't process STATEMENT events"); 
raah: regress:00001045:  elog(ERROR, "check_foreign_key: can't process INSERT events"); 
raah: regress:00001067:  elog(ERROR, "check_foreign_key: too short %d (< 5) list of arguments", nargs); 
raah: regress:00001072:  elog(ERROR, "check_foreign_key: %d (< 1) number of references specified", nrefs); 
raah: regress:00001076:  elog(ERROR, "check_foreign_key: invalid action %s", args[1]); 
raah: regress:00001082:  elog(ERROR, "check_foreign_key: invalid number of arguments %d for %d references", 
raah: regress:00001083:  nargs + 2, nrefs); 
raah: regress:00001091:  elog(ERROR, "check_foreign_key: SPI_connect returned %d", ret); 
raah: regress:00001115:  elog(ERROR, "%s: check_foreign_key: # of plans changed in meantime", 
raah: regress:00001116:  trigger->tgname); 
raah: regress:00001126:  ereport(ERROR, 
raah: regress:00001127:  (errcode(ERRCODE_UNDEFINED_COLUMN), 
raah: regress:00001128:  errmsg("there is no attribute \"%s\" in relation \"%s\"", 
raah: regress:00001129:  args[i], SPI_getrelname(rel)))); 
raah: regress:00001158:  elog(ERROR, "check_foreign_key: SPI_getvalue returned %d", SPI_result); 
raah: regress:00001291:  elog(ERROR, "check_foreign_key: SPI_prepare returned %d", SPI_result); 
raah: regress:00001301:  elog(ERROR, "check_foreign_key: SPI_saveplan returned %d", SPI_result); 
raah: regress:00001341:  ereport(ERROR, 
raah: regress:00001342:  (errcode(ERRCODE_TRIGGERED_ACTION_EXCEPTION), 
raah: regress:00001343:  errmsg("SPI_execp returned %d", ret))); 
raah: regress:00001350:  ereport(ERROR, 
raah: regress:00001351:  (errcode(ERRCODE_TRIGGERED_ACTION_EXCEPTION), 
raah: regress:00001352:  errmsg("\"%s\": tuple is referenced in \"%s\"", 
raah: regress:00001353:  trigger->tgname, relname))); 
raah: regress:00001358:  elog(NOTICE, "%s: %d tuple(s) of %s are %s", 
raah: regress:00001359:  trigger->tgname, SPI_processed, relname, 
raah: regress:00001360:  (action == 'c') ? "deleted" : "set to null"); 
raah: regress:00001426:  elog(ERROR, "not fired by trigger manager"); 
raah: regress:00001429:  elog(ERROR, "can't process STATEMENT events"); 
raah: regress:00001432:  elog(ERROR, "must be fired before event"); 
raah: regress:00001440:  elog(ERROR, "can't process DELETE events"); 
raah: regress:00001450:  elog(ERROR, "autoinc (%s): even number gt 0 of arguments was expected", relname); 
raah: regress:00001465:  ereport(ERROR, 
raah: regress:00001466:  (errcode(ERRCODE_TRIGGERED_ACTION_EXCEPTION), 
raah: regress:00001467:  errmsg("\"%s\" has no attribute \"%s\"", 
raah: regress:00001468:  relname, args[i]))); 
raah: regress:00001471:  ereport(ERROR, 
raah: regress:00001472:  (errcode(ERRCODE_TRIGGERED_ACTION_EXCEPTION), 
raah: regress:00001473:  errmsg("attribute \"%s\" of \"%s\" must be type INT4", 
raah: regress:00001474:  args[i], relname))); 
raah: regress:00001506:  elog(ERROR, "autoinc (%s): %d returned by SPI_modifytuple", 
raah: regress:00001507:  relname, SPI_result); 
raah: regress:00001560:  elog(ERROR, "invalid invocation of multiset_example"); 
raah: regress:00001579:  ereport(ERROR, 
raah: regress:00001580:  (errcode(ERRCODE_CANNOT_COERCE), 
raah: regress:00001581:  errmsg("invalid input tuple for function multiset_example"), 
raah: regress:00001582:  errhint("expected (integer, text) "))); 
raah: regress:00001632:  ereport(ERROR, 
raah: regress:00001633:  (errcode(ERRCODE_CANNOT_COERCE), 
raah: regress:00001634:  errmsg("invalid output tupledesc for function multiset_scalar_tuple"), 
raah: regress:00001635:  errhint("Expected (integer, text)."))); 
raah: regress:00001718:  ereport(ERROR, 
raah: regress:00001719:  (errcode(ERRCODE_FEATURE_NOT_SUPPORTED), 
raah: regress:00001720:  errmsg("set-valued function called in context that " 
raah: regress:00001721:  "cannot accept a set"))); 
raah: regress:00001766:  elog(ERROR, "invalid invocation of multiset_example"); 
raah: regress:00001794:  ereport(ERROR, 
raah: regress:00001795:  (errcode(ERRCODE_CANNOT_COERCE), 
raah: regress:00001796:  errmsg("invalid input tuple for function multiset_example"), 
raah: regress:00001797:  errhint("expected (integer, text) "))); 
raah: regress:00001807:  ereport(ERROR, 
raah: regress:00001808:  (errcode(ERRCODE_CANNOT_COERCE), 
raah: regress:00001809:  errmsg("invalid output tuple for function multiset_example"), 
raah: regress:00001810:  errhint("expected (integer, text) "))); 
raah: regress:00001875:  elog(ERROR, "invalid invocation of sessionize"); 
raah: regress:00001915:  ereport(ERROR, 
raah: regress:00001916:  (errcode(ERRCODE_CANNOT_COERCE), 
raah: regress:00001917:  errmsg("invalid input tuple for function sessionize"), 
raah: regress:00001918:  errhint("expected (integer, timestamp) "))); 
raah: regress:00001930:  ereport(ERROR, 
raah: regress:00001931:  (errcode(ERRCODE_CANNOT_COERCE), 
raah: regress:00001932:  errmsg("invalid output tuple for function sessionize"), 
raah: regress:00001933:  errhint("expected (integer, timestamp, integer) "))); 
raah: regress:00002019:  elog(ERROR, "invalid invocation of describe"); 
raah: regress:00002056:  elog(ERROR, "invalid invocation of project"); 
raah: regress:00002127:  elog(ERROR, "invalid invocation of project_describe"); 
raah: regress:00002178:  elog(ERROR, "unable to resolve type for function"); 
raah: regress:00002181:  elog(ERROR, "invalid column position %d", avalue); 
raah: regress:00002218:  elog(ERROR, "invalid invocation of userdata_project"); 
raah: regress:00002266:  elog(ERROR, "invalid invocation of userdata_describe"); 
aaaaa GP_IGNORE: paae: pgtz - ./timezone/pgtz.c
paae: pgtz:00001019:  ereport(WARNING, 
paae: pgtz:00001020:  (errmsg_internal("could not determine current date/time: localtime failed"))); 
paae: pgtz:00001050:  ereport(WARNING, 
paae: pgtz:00001051:  (errmsg_internal("could not open registry key to identify Windows timezone: %i", (int) GetLastError()))); 
paae: pgtz:00001077:  ereport(WARNING, 
paae: pgtz:00001078:  (errmsg_internal("could not enumerate registry subkeys to identify Windows timezone: %i", (int) r))); 
paae: pgtz:00001084:  ereport(WARNING, 
paae: pgtz:00001085:  (errmsg_internal("could not open registry subkey to identify Windows timezone: %i", (int) r))); 
paae: pgtz:00001093:  ereport(WARNING, 
paae: pgtz:00001094:  (errmsg_internal("could not query value for 'std' to identify Windows timezone: %i", (int) r))); 
paae: pgtz:00001109:  ereport(WARNING, 
paae: pgtz:00001110:  (errmsg_internal("could not query value for 'dlt' to identify Windows timezone: %i", (int) r))); 
paae: pgtz:00001142:  ereport(WARNING, 
paae: pgtz:00001143:  (errmsg("could not find a match for Windows timezone \"%s\"", 
paae: pgtz:00001144:  tzname))); 
paae: pgtz:00001330:  ereport(FATAL, 
paae: pgtz:00001331:  (errmsg("could not select a suitable default timezone"), 
paae: pgtz:00001332:  errdetail("It appears that your GMT time zone uses leap seconds. PostgreSQL does not support leap seconds."))); 
paae: pgtz:00001355:  elog(FATAL, "could not initialize GMT timezone"); 
paae: pgtz:00001429:  ereport(ERROR, 
paae: pgtz:00001430:  (errcode_for_file_access(), 
paae: pgtz:00001431:  errmsg("could not open directory \"%s\": %m", startdir))); 
paae: pgtz:00001473:  ereport(ERROR, 
paae: pgtz:00001474:  (errcode_for_file_access(), 
paae: pgtz:00001475:  errmsg("could not stat \"%s\": %m", fullname))); 
paae: pgtz:00001481:  ereport(ERROR, 
paae: pgtz:00001482:  (errmsg("timezone directory stack overflow"))); 
paae: pgtz:00001487:  ereport(ERROR, 
paae: pgtz:00001488:  (errcode_for_file_access(), 
paae: pgtz:00001489:  errmsg("could not open directory \"%s\": %m", 
paae: pgtz:00001490:  fullname))); 
aaaaa GP_IGNORE: caah: complex - ./tutorial/complex.c
caah: complex:00000057:  ereport(ERROR, 
caah: complex:00000058:  (errcode(ERRCODE_INVALID_TEXT_REPRESENTATION), 
caah: complex:00000059:  errmsg("invalid input syntax for complex: \"%s\"", 
caah: complex:00000060:  str))); 
